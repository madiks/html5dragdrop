/**
 * Copyright (c) 2009-2014 Inkling Systems, Inc.
 *
 * Like looking around in code? Come work here! https://www.inkling.com/careers
 *
 *   ,g.               ,s.            ,g.   ,g.
 *   VEP               3EL            |E1   ?ED
 *                     3EL            |E1                             ,;zz.
 *    ,      ,,,,      3EL       ,,   |E1    ,,     ,,,,         ,,,,;EF```
 *   {E)  sEE5E5EEk    3EL     ,@EF   |E1   |EE  ;EE5E5EEk.   ,zEF***5EL
 *   {E)  `      ?E1   3EL   ,@EF     |E1   |EE  `      JEE  :E1      :E5
 *   {E)         :EE   3EL ,@EF`      |E1   |EE         :EE. !E1      :EE
 *   {E)         :EE   3ELgEREE.      |E1   |EE         :EE.  \Ee.,,,;E5'
 *   {E)         :EE   3EEF` 'QEL     |E1   |EE         :EE.    `****"`
 *   {E)         :EE   3EL     ?Ek.   |E1   |EE         :EE.    ,,,,,,
 *   {E)         :EE   3EL      "EE.  !E1   f@5         -EE.    55555EEEt.
 *                                                                    5EL
 *                                                                   ,3EL
 *                                                            EzzzzzEEF`
 *
 * Use of this file is subject to the Inkling Habitat Terms of Service
 * https://docs.inkling.com/legal/current/tos.html.
 */
var Handlebars = function() {
    var a = function() {
        function a(b) {
            this.string = b
        }
        a.prototype.toString = function() {
            return "" + this.string
        };
        return a
    } (),
    b = function(a) {
        function b(a) {
            return d[a] || "&amp;"
        }
        var c = {},
        d = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#x27;",
            "`": "&#x60;"
        },
        e = /[&<>"'`]/g,
        j = /[&<>"'`]/;
        c.extend = function(a, b) {
            for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c])
        };
        var o = Object.prototype.toString;
        c.toString = o;
        var q = function(a) {
            return typeof a === "function"
        };
        q(/x/) && (q = function(a) {
            return typeof a === "function" && o.call(a) === "[object Function]"
        });
        c.isFunction = q;
        var m = Array.isArray ||
        function(a) {
            return a && typeof a === "object" ? o.call(a) === "[object Array]": !1
        };
        c.isArray = m;
        c.escapeExpression = function(c) {
            if (c instanceof a) return c.toString();
            else if (!c && c !== 0) return "";
            c = "" + c;
            return ! j.test(c) ? c: c.replace(e, b)
        };
        c.isEmpty = function(a) {
            return ! a && a !== 0 ? !0 : m(a) && a.length === 0 ? !0 : !1
        };
        return c
    } (a),
    c = function() {
        function a() {
            for (var c = Error.prototype.constructor.apply(this, arguments), d = 0; d < b.length; d++) this[b[d]] = c[b[d]]
        }
        var b = "description,fileName,lineNumber,message,name,number,stack".split(",");
        a.prototype = Error();
        return a
    } (),
    d = function(a, b) {
        function c(a, b) {
            this.helpers = a || {};
            this.partials = b || {};
            d(this)
        }
        function d(a) {
            a.registerHelper("helperMissing",
            function(a) {
                if (arguments.length !== 2) throw Error("Missing helper: '" + a + "'");
            });
            a.registerHelper("blockHelperMissing",
            function(b, c) {
                var d = c.inverse ||
                function() {},
                e = c.fn;
                m(b) && (b = b.call(this));
                return b === !0 ? e(this) : b === !1 || b == null ? d(this) : q(b) ? b.length > 0 ? a.helpers.each(b, c) : d(this) : e(b)
            });
            a.registerHelper("each",
            function(a, b) {
                var c = b.fn,
                d = b.inverse,
                e = 0,
                f = "",
                g;
                m(a) && (a = a.call(this));
                b.data && (g = s(b.data));
                if (a && typeof a === "object") if (q(a)) for (var h = a.length; e < h; e++) {
                    if (g) g.index = e,
                    g.first = e === 0,
                    g.last = e === a.length - 1;
                    f += c(a[e], {
                        data: g
                    })
                } else for (h in a) if (a.hasOwnProperty(h)) {
                    if (g) g.key = h;
                    f += c(a[h], {
                        data: g
                    });
                    e++
                }
                e === 0 && (f = d(this));
                return f
            });
            a.registerHelper("if",
            function(a, b) {
                m(a) && (a = a.call(this));
                return ! b.hash.includeZero && !a || o.isEmpty(a) ? b.inverse(this) : b.fn(this)
            });
            a.registerHelper("unless",
            function(b, c) {
                return a.helpers["if"].call(this, b, {
                    fn: c.inverse,
                    inverse: c.fn,
                    hash: c.hash
                })
            });
            a.registerHelper("with",
            function(a, b) {
                m(a) && (a = a.call(this));
                if (!o.isEmpty(a)) return b.fn(a)
            });
            a.registerHelper("log",
            function(b, c) {
                var d = c.data && c.data.level != null ? parseInt(c.data.level, 10) : 1;
                a.log(d, b)
            })
        }
        function e(a, b) {
            r.log(a, b)
        }
        var j = {},
        o = a;
        j.VERSION = "1.1.2";
        j.COMPILER_REVISION = 4;
        j.REVISION_CHANGES = {
            1 : "<= 1.0.rc.2",
            2 : "== 1.0.0-rc.3",
            3 : "== 1.0.0-rc.4",
            4 : ">= 1.0.0"
        };
        var q = o.isArray,
        m = o.isFunction,
        p = o.toString;
        j.HandlebarsEnvironment = c;
        c.prototype = {
            constructor: c,
            logger: r,
            log: e,
            registerHelper: function(a, c, d) {
                if (p.call(a) === "[object Object]") {
                    if (d || c) throw new b("Arg not supported with multiple helpers");
                    o.extend(this.helpers, a)
                } else {
                    if (d) c.not = d;
                    this.helpers[a] = c
                }
            },
            registerPartial: function(a, b) {
                p.call(a) === "[object Object]" ? o.extend(this.partials, a) : this.partials[a] = b
            }
        };
        var r = {
            methodMap: {
                0 : "debug",
                1 : "info",
                2 : "warn",
                3 : "error"
            },
            DEBUG: 0,
            INFO: 1,
            WARN: 2,
            ERROR: 3,
            level: 3,
            log: function(a, b) {
                if (r.level <= a) {
                    var c = r.methodMap[a];
                    typeof console !== "undefined" && console[c] && console[c].call(console, b)
                }
            }
        };
        j.logger = r;
        j.log = e;
        var s = function(a) {
            var b = {};
            o.extend(b, a);
            return b
        };
        j.createFrame = s;
        return j
    } (b, c),
    e = function(a, b, c) {
        function d(a, b, c) {
            var e = Array.prototype.slice.call(arguments, 3),
            f = function(a, d) {
                d = d || {};
                return b.apply(this, [a, d.data || c].concat(e))
            };
            f.program = a;
            f.depth = e.length;
            return f
        }
        function e(a, b, c) {
            var d = function(a, d) {
                d = d || {};
                return b(a, d.data || c)
            };
            d.program = a;
            d.depth = 0;
            return d
        }
        function j(a, b, c, d, e, f) {
            d = {
                partial: !0,
                helpers: d,
                partials: e,
                data: f
            };
            if (a === void 0) throw new m("The partial " + b + " could not be found");
            else if (a instanceof Function) return a(c, d)
        }
        function o() {
            return ""
        }
        var q = {},
        m = b,
        p = c.COMPILER_REVISION,
        r = c.REVISION_CHANGES;
        q.template = function(b, c) {
            if (!c) throw Error("No environment passed to template");
            var g = {
                escapeExpression: a.escapeExpression,
                invokePartial: c.compile ?
                function(a, b, d, e, f, g) {
                    var h = j.apply(this, arguments);
                    if (h) return h;
                    h = {
                        helpers: e,
                        partials: f,
                        data: g
                    };
                    f[b] = c.compile(a, {
                        data: g !== void 0
                    },
                    c);
                    return f[b](d, h)
                }: function(a, b) {
                    var c = j.apply(this, arguments);
                    if (c) return c;
                    throw new m("The partial " + b + " could not be compiled when running in runtime-only mode");
                },
                programs: [],
                program: function(a, b, c) {
                    var d = this.programs[a];
                    c ? d = e(a, b, c) : d || (d = this.programs[a] = e(a, b));
                    return d
                },
                merge: function(b, c) {
                    var d = b || c;
                    b && c && b !== c && (d = {},
                    a.extend(d, c), a.extend(d, b));
                    return d
                },
                programWithDepth: d,
                noop: o,
                compilerInfo: null
            };
            return function(a, d) {
                var d = d || {},
                e = d.partial ? d: c,
                f,
                h;
                if (!d.partial) f = d.helpers,
                h = d.partials;
                e = b.call(g, e, a, f, h, d.data);
                if (!d.partial && (h = (f = g.compilerInfo) && f[0] || 1, h !== p)) if (h < p) throw Error("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + r[p] + ") or downgrade your runtime to an older version (" + r[h] + ").");
                else throw Error("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + f[1] + ").");
                return e
            }
        };
        q.programWithDepth = d;
        q.program = e;
        q.invokePartial = j;
        q.noop = o;
        return q
    } (b, c, d);
    return function(a, b, c, d, e) {
        var j = function() {
            var j = new a.HandlebarsEnvironment;
            d.extend(j, a);
            j.SafeString = b;
            j.Exception = c;
            j.Utils = d;
            j.VM = e;
            j.template = function(a) {
                return e.template(a, j)
            };
            return j
        },
        o = j();
        o.create = j;
        return o
    } (d, a, c, b, e)
} (),
Templates = {
    registerTemplate: function(a, b) {
        this[a] = function(a, d) {
            var a = a || {},
            d = d || {},
            e = d.raw || !1,
            f = b(a, d);
            return e ? f: (new Element("div", {
                html: f
            })).firstElementChild
        }
    }
};
Handlebars.registerHelper("firstLetters",
function(a, b) {
    return typeof a !== "string" ? "": typeof b !== "number" ? a: a.substring(0, b)
}); (function() {
    var a = this,
    b = a._,
    c = {},
    d = Array.prototype,
    e = Object.prototype,
    f = d.push,
    g = d.slice,
    h = d.concat,
    i = e.toString,
    l = e.hasOwnProperty,
    j = d.forEach,
    o = d.map,
    q = d.reduce,
    m = d.reduceRight,
    p = d.filter,
    r = d.every,
    s = d.some,
    v = d.indexOf,
    w = d.lastIndexOf,
    e = Array.isArray,
    x = Object.keys,
    y = Function.prototype.bind,
    k = function(a) {
        if (a instanceof k) return a;
        if (! (this instanceof k)) return new k(a);
        this._wrapped = a
    };
    if (typeof exports !== "undefined") {
        if (typeof module !== "undefined" && module.exports) exports = module.exports = k;
        exports._ = k
    } else a._ = k;
    k.VERSION = "1.4.4";
    var n = k.each = k.forEach = function(a, b, d) {
        if (a != null) if (j && a.forEach === j) a.forEach(b, d);
        else if (a.length === +a.length) for (var e = 0,
        f = a.length; e < f; e++) {
            if (b.call(d, a[e], e, a) === c) break
        } else for (e in a) if (k.has(a, e) && b.call(d, a[e], e, a) === c) break
    };
    k.map = k.collect = function(a, b, c) {
        var d = [];
        if (a == null) return d;
        if (o && a.map === o) return a.map(b, c);
        n(a,
        function(a, e, f) {
            d[d.length] = b.call(c, a, e, f)
        });
        return d
    };
    k.reduce = k.foldl = k.inject = function(a, b, c, d) {
        var e = arguments.length > 2;
        a == null && (a = []);
        if (q && a.reduce === q) return d && (b = k.bind(b, d)),
        e ? a.reduce(b, c) : a.reduce(b);
        n(a,
        function(a, f, g) {
            e ? c = b.call(d, c, a, f, g) : (c = a, e = !0)
        });
        if (!e) throw new TypeError("Reduce of empty array with no initial value");
        return c
    };
    k.reduceRight = k.foldr = function(a, b, c, d) {
        var e = arguments.length > 2;
        a == null && (a = []);
        if (m && a.reduceRight === m) return d && (b = k.bind(b, d)),
        e ? a.reduceRight(b, c) : a.reduceRight(b);
        var f = a.length;
        if (f !== +f) var g = k.keys(a),
        f = g.length;
        n(a,
        function(n, h, i) {
            h = g ? g[--f] : --f;
            e ? c = b.call(d, c, a[h], h, i) : (c = a[h], e = !0)
        });
        if (!e) throw new TypeError("Reduce of empty array with no initial value");
        return c
    };
    k.find = k.detect = function(a, b, c) {
        var d;
        t(a,
        function(a, e, f) {
            if (b.call(c, a, e, f)) return d = a,
            !0
        });
        return d
    };
    k.filter = k.select = function(a, b, c) {
        var d = [];
        if (a == null) return d;
        if (p && a.filter === p) return a.filter(b, c);
        n(a,
        function(a, e, f) {
            b.call(c, a, e, f) && (d[d.length] = a)
        });
        return d
    };
    k.reject = function(a, b, c) {
        return k.filter(a,
        function(a, d, e) {
            return ! b.call(c, a, d, e)
        },
        c)
    };
    k.every = k.all = function(a, b, d) {
        b || (b = k.identity);
        var e = !0;
        if (a == null) return e;
        if (r && a.every === r) return a.every(b, d);
        n(a,
        function(a, f, g) {
            if (! (e = e && b.call(d, a, f, g))) return c
        });
        return !! e
    };
    var t = k.some = k.any = function(a, b, d) {
        b || (b = k.identity);
        var e = !1;
        if (a == null) return e;
        if (s && a.some === s) return a.some(b, d);
        n(a,
        function(a, f, g) {
            if (e || (e = b.call(d, a, f, g))) return c
        });
        return !! e
    };
    k.contains = k.include = function(a, b) {
        return a == null ? !1 : v && a.indexOf === v ? a.indexOf(b) != -1 : t(a,
        function(a) {
            return a === b
        })
    };
    k.invoke = function(a, b) {
        var c = g.call(arguments, 2),
        d = k.isFunction(b);
        return k.map(a,
        function(a) {
            return (d ? b: a[b]).apply(a, c)
        })
    };
    k.pluck = function(a, b) {
        return k.map(a,
        function(a) {
            return a[b]
        })
    };
    k.where = function(a, b, c) {
        return k.isEmpty(b) ? c ? null: [] : k[c ? "find": "filter"](a,
        function(a) {
            for (var c in b) if (b[c] !== a[c]) return ! 1;
            return ! 0
        })
    };
    k.findWhere = function(a, b) {
        return k.where(a, b, !0)
    };
    k.max = function(a, b, c) {
        if (!b && k.isArray(a) && a[0] === +a[0] && a.length < 65535) return Math.max.apply(Math, a);
        if (!b && k.isEmpty(a)) return - Infinity;
        var d = {
            computed: -Infinity,
            value: -Infinity
        };
        n(a,
        function(a, e, f) {
            e = b ? b.call(c, a, e, f) : a;
            e >= d.computed && (d = {
                value: a,
                computed: e
            })
        });
        return d.value
    };
    k.min = function(a, b, c) {
        if (!b && k.isArray(a) && a[0] === +a[0] && a.length < 65535) return Math.min.apply(Math, a);
        if (!b && k.isEmpty(a)) return Infinity;
        var d = {
            computed: Infinity,
            value: Infinity
        };
        n(a,
        function(a, e, f) {
            e = b ? b.call(c, a, e, f) : a;
            e < d.computed && (d = {
                value: a,
                computed: e
            })
        });
        return d.value
    };
    k.shuffle = function(a) {
        var b, c = 0,
        d = [];
        n(a,
        function(a) {
            b = k.random(c++);
            d[c - 1] = d[b];
            d[b] = a
        });
        return d
    };
    var u = function(a) {
        return k.isFunction(a) ? a: function(b) {
            return b[a]
        }
    };
    k.sortBy = function(a, b, c) {
        var d = u(b);
        return k.pluck(k.map(a,
        function(a, b, e) {
            return {
                value: a,
                index: b,
                criteria: d.call(c, a, b, e)
            }
        }).sort(function(a, b) {
            var c = a.criteria,
            d = b.criteria;
            if (c !== d) {
                if (c > d || c === void 0) return 1;
                if (c < d || d === void 0) return - 1
            }
            return a.index < b.index ? -1 : 1
        }), "value")
    };
    var B = function(a, b, c, d) {
        var e = {},
        f = u(b || k.identity);
        n(a,
        function(b, g) {
            var h = f.call(c, b, g, a);
            d(e, h, b)
        });
        return e
    };
    k.groupBy = function(a, b, c) {
        return B(a, b, c,
        function(a, b, c) { (k.has(a, b) ? a[b] : a[b] = []).push(c)
        })
    };
    k.countBy = function(a, b, c) {
        return B(a, b, c,
        function(a, b) {
            k.has(a, b) || (a[b] = 0);
            a[b]++
        })
    };
    k.sortedIndex = function(a, b, c, d) {
        for (var c = c == null ? k.identity: u(c), b = c.call(d, b), e = 0, f = a.length; e < f;) {
            var g = e + f >>> 1;
            c.call(d, a[g]) < b ? e = g + 1 : f = g
        }
        return e
    };
    k.toArray = function(a) {
        return ! a ? [] : k.isArray(a) ? g.call(a) : a.length === +a.length ? k.map(a, k.identity) : k.values(a)
    };
    k.size = function(a) {
        return a == null ? 0 : a.length === +a.length ? a.length: k.keys(a).length
    };
    k.first = k.head = k.take = function(a, b, c) {
        return a == null ? void 0 : b != null && !c ? g.call(a, 0, b) : a[0]
    };
    k.initial = function(a, b, c) {
        return g.call(a, 0, a.length - (b == null || c ? 1 : b))
    };
    k.last = function(a, b, c) {
        return a == null ? void 0 : b != null && !c ? g.call(a, Math.max(a.length - b, 0)) : a[a.length - 1]
    };
    k.rest = k.tail = k.drop = function(a, b, c) {
        return g.call(a, b == null || c ? 1 : b)
    };
    k.compact = function(a) {
        return k.filter(a, k.identity)
    };
    var z = function(a, b, c) {
        n(a,
        function(a) {
            k.isArray(a) ? b ? f.apply(c, a) : z(a, b, c) : c.push(a)
        });
        return c
    };
    k.flatten = function(a, b) {
        return z(a, b, [])
    };
    k.without = function(a) {
        return k.difference(a, g.call(arguments, 1))
    };
    k.uniq = k.unique = function(a, b, c, d) {
        k.isFunction(b) && (d = c, c = b, b = !1);
        var c = c ? k.map(a, c, d) : a,
        e = [],
        f = [];
        n(c,
        function(c, d) {
            if (b ? !d || f[f.length - 1] !== c: !k.contains(f, c)) f.push(c),
            e.push(a[d])
        });
        return e
    };
    k.union = function() {
        return k.uniq(h.apply(d, arguments))
    };
    k.intersection = function(a) {
        var b = g.call(arguments, 1);
        return k.filter(k.uniq(a),
        function(a) {
            return k.every(b,
            function(b) {
                return k.indexOf(b, a) >= 0
            })
        })
    };
    k.difference = function(a) {
        var b = h.apply(d, g.call(arguments, 1));
        return k.filter(a,
        function(a) {
            return ! k.contains(b, a)
        })
    };
    k.zip = function() {
        for (var a = g.call(arguments), b = k.max(k.pluck(a, "length")), c = Array(b), d = 0; d < b; d++) c[d] = k.pluck(a, "" + d);
        return c
    };
    k.object = function(a, b) {
        if (a == null) return {};
        for (var c = {},
        d = 0,
        e = a.length; d < e; d++) b ? c[a[d]] = b[d] : c[a[d][0]] = a[d][1];
        return c
    };
    k.indexOf = function(a, b, c) {
        if (a == null) return - 1;
        var d = 0,
        e = a.length;
        if (c) if (typeof c == "number") d = c < 0 ? Math.max(0, e + c) : c;
        else return d = k.sortedIndex(a, b),
        a[d] === b ? d: -1;
        if (v && a.indexOf === v) return a.indexOf(b, c);
        for (; d < e; d++) if (a[d] === b) return d;
        return - 1
    };
    k.lastIndexOf = function(a, b, c) {
        if (a == null) return - 1;
        var d = c != null;
        if (w && a.lastIndexOf === w) return d ? a.lastIndexOf(b, c) : a.lastIndexOf(b);
        for (c = d ? c: a.length; c--;) if (a[c] === b) return c;
        return - 1
    };
    k.range = function(a, b, c) {
        arguments.length <= 1 && (b = a || 0, a = 0);
        for (var c = arguments[2] || 1, d = Math.max(Math.ceil((b - a) / c), 0), e = 0, f = Array(d); e < d;) f[e++] = a,
        a += c;
        return f
    };
    k.bind = function(a, b) {
        if (a.bind === y && y) return y.apply(a, g.call(arguments, 1));
        var c = g.call(arguments, 2);
        return function() {
            return a.apply(b, c.concat(g.call(arguments)))
        }
    };
    k.partial = function(a) {
        var b = g.call(arguments, 1);
        return function() {
            return a.apply(this, b.concat(g.call(arguments)))
        }
    };
    k.bindAll = function(a) {
        var b = g.call(arguments, 1);
        b.length === 0 && (b = k.functions(a));
        n(b,
        function(b) {
            a[b] = k.bind(a[b], a)
        });
        return a
    };
    k.memoize = function(a, b) {
        var c = {};
        b || (b = k.identity);
        return function() {
            var d = b.apply(this, arguments);
            return k.has(c, d) ? c[d] : c[d] = a.apply(this, arguments)
        }
    };
    k.delay = function(a, b) {
        var c = g.call(arguments, 2);
        return setTimeout(function() {
            return a.apply(null, c)
        },
        b)
    };
    k.defer = function(a) {
        return k.delay.apply(k, [a, 1].concat(g.call(arguments, 1)))
    };
    k.throttle = function(a, b) {
        var c, d, e, f, g = 0,
        h = function() {
            g = new Date;
            e = null;
            f = a.apply(c, d)
        };
        return function() {
            var n = new Date,
            i = b - (n - g);
            c = this;
            d = arguments;
            i <= 0 ? (clearTimeout(e), e = null, g = n, f = a.apply(c, d)) : e || (e = setTimeout(h, i));
            return f
        }
    };
    k.debounce = function(a, b, c) {
        var d, e;
        return function() {
            var f = this,
            g = arguments,
            h = c && !d;
            clearTimeout(d);
            d = setTimeout(function() {
                d = null;
                c || (e = a.apply(f, g))
            },
            b);
            h && (e = a.apply(f, g));
            return e
        }
    };
    k.once = function(a) {
        var b = !1,
        c;
        return function() {
            if (b) return c;
            b = !0;
            c = a.apply(this, arguments);
            a = null;
            return c
        }
    };
    k.wrap = function(a, b) {
        return function() {
            var c = [a];
            f.apply(c, arguments);
            return b.apply(this, c)
        }
    };
    k.compose = function() {
        var a = arguments;
        return function() {
            for (var b = arguments,
            c = a.length - 1; c >= 0; c--) b = [a[c].apply(this, b)];
            return b[0]
        }
    };
    k.after = function(a, b) {
        return a <= 0 ? b() : function() {
            if (--a < 1) return b.apply(this, arguments)
        }
    };
    k.keys = x ||
    function(a) {
        if (a !== Object(a)) throw new TypeError("Invalid object");
        var b = [],
        c;
        for (c in a) k.has(a, c) && (b[b.length] = c);
        return b
    };
    k.values = function(a) {
        var b = [],
        c;
        for (c in a) k.has(a, c) && b.push(a[c]);
        return b
    };
    k.pairs = function(a) {
        var b = [],
        c;
        for (c in a) k.has(a, c) && b.push([c, a[c]]);
        return b
    };
    k.invert = function(a) {
        var b = {},
        c;
        for (c in a) k.has(a, c) && (b[a[c]] = c);
        return b
    };
    k.functions = k.methods = function(a) {
        var b = [],
        c;
        for (c in a) k.isFunction(a[c]) && b.push(c);
        return b.sort()
    };
    k.extend = function(a) {
        n(g.call(arguments, 1),
        function(b) {
            if (b) for (var c in b) a[c] = b[c]
        });
        return a
    };
    k.pick = function(a) {
        var b = {},
        c = h.apply(d, g.call(arguments, 1));
        n(c,
        function(c) {
            c in a && (b[c] = a[c])
        });
        return b
    };
    k.omit = function(a) {
        var b = {},
        c = h.apply(d, g.call(arguments, 1)),
        e;
        for (e in a) k.contains(c, e) || (b[e] = a[e]);
        return b
    };
    k.defaults = function(a) {
        n(g.call(arguments, 1),
        function(b) {
            if (b) for (var c in b) a[c] == null && (a[c] = b[c])
        });
        return a
    };
    k.clone = function(a) {
        return ! k.isObject(a) ? a: k.isArray(a) ? a.slice() : k.extend({},
        a)
    };
    k.tap = function(a, b) {
        b(a);
        return a
    };
    var A = function(a, b, c, d) {
        if (a === b) return a !== 0 || 1 / a == 1 / b;
        if (a == null || b == null) return a === b;
        if (a instanceof k) a = a._wrapped;
        if (b instanceof k) b = b._wrapped;
        var e = i.call(a);
        if (e != i.call(b)) return ! 1;
        switch (e) {
        case "[object String]":
            return a == String(b);
        case "[object Number]":
            return a != +a ? b != +b: a == 0 ? 1 / a == 1 / b: a == +b;
        case "[object Date]":
        case "[object Boolean]":
            return + a == +b;
        case "[object RegExp]":
            return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
        case "[object HTMLDocument]":
        case "[object Document]":
        case "[object XMLDocument]":
            return a == b
        }
        if (typeof a != "object" || typeof b != "object") return ! 1;
        for (var f = c.length; f--;) if (c[f] == a) return d[f] == b;
        c.push(a);
        d.push(b);
        var f = 0,
        g = !0;
        if (e == "[object Array]") {
            if (f = a.length, g = f == b.length) for (; f--;) if (! (g = A(a[f], b[f], c, d))) break
        } else {
            var e = a.constructor,
            h = b.constructor;
            if (e !== h && (!k.isFunction(e) || !(e instanceof e && k.isFunction(h) && h instanceof h))) return ! 1;
            for (var n in a) if (k.has(a, n) && (f++, !(g = k.has(b, n) && A(a[n], b[n], c, d)))) break;
            if (g) {
                for (n in b) if (k.has(b, n) && !f--) break;
                g = !f
            }
        }
        c.pop();
        d.pop();
        return g
    };
    k.isEqual = function(a, b) {
        return A(a, b, [], [])
    };
    k.isEmpty = function(a) {
        if (a == null) return ! 0;
        if (k.isArray(a) || k.isString(a)) return a.length === 0;
        for (var b in a) if (k.has(a, b)) return ! 1;
        return ! 0
    };
    k.isElement = function(a) {
        return !! (a && a.nodeType === 1)
    };
    k.isArray = e ||
    function(a) {
        return i.call(a) == "[object Array]"
    };
    k.isObject = function(a) {
        return a === Object(a)
    };
    n("Arguments,Function,String,Number,Date,RegExp".split(","),
    function(a) {
        k["is" + a] = function(b) {
            return i.call(b) == "[object " + a + "]"
        }
    });
    if (!k.isArguments(arguments)) k.isArguments = function(a) {
        return ! (!a || !k.has(a, "callee"))
    };
    if (typeof / . / !=="function") k.isFunction = function(a) {
        return typeof a === "function"
    };
    k.isFinite = function(a) {
        return isFinite(a) && !isNaN(parseFloat(a))
    };
    k.isNaN = function(a) {
        return k.isNumber(a) && a != +a
    };
    k.isBoolean = function(a) {
        return a === !0 || a === !1 || i.call(a) == "[object Boolean]"
    };
    k.isNull = function(a) {
        return a === null
    };
    k.isUndefined = function(a) {
        return a === void 0
    };
    k.has = function(a, b) {
        return l.call(a, b)
    };
    k.noConflict = function() {
        a._ = b;
        return this
    };
    k.identity = function(a) {
        return a
    };
    k.times = function(a, b, c) {
        for (var d = Array(a), e = 0; e < a; e++) d[e] = b.call(c, e);
        return d
    };
    k.random = function(a, b) {
        b == null && (b = a, a = 0);
        return a + Math.floor(Math.random() * (b - a + 1))
    };
    var E = {
        escape: {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#x27;",
            "/": "&#x2F;"
        }
    };
    E.unescape = k.invert(E.escape);
    var G = {
        escape: RegExp("[" + k.keys(E.escape).join("") + "]", "g"),
        unescape: RegExp("(" + k.keys(E.unescape).join("|") + ")", "g")
    };
    k.each(["escape", "unescape"],
    function(a) {
        k[a] = function(b) {
            return b == null ? "": ("" + b).replace(G[a],
            function(b) {
                return E[a][b]
            })
        }
    });
    k.result = function(a, b) {
        if (a == null) return null;
        var c = a[b];
        return k.isFunction(c) ? c.call(a) : c
    };
    k.mixin = function(a) {
        n(k.functions(a),
        function(b) {
            var c = k[b] = a[b];
            k.prototype[b] = function() {
                var a = [this._wrapped];
                f.apply(a, arguments);
                a = c.apply(k, a);
                return this._chain ? k(a).chain() : a
            }
        })
    };
    var C = 0;
    k.uniqueId = function(a) {
        var b = ++C + "";
        return a ? a + b: b
    };
    k.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var D = /(.)^/,
    I = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "\t": "t",
        "\u2028": "u2028",
        "\u2029": "u2029"
    },
    M = /\\|'|\r|\n|\t|\u2028|\u2029/g;
    k.template = function(a, b, c) {
        var d, c = k.defaults({},
        c, k.templateSettings),
        e = RegExp([(c.escape || D).source, (c.interpolate || D).source, (c.evaluate || D).source].join("|") + "|$", "g"),
        f = 0,
        g = "__p+='";
        a.replace(e,
        function(b, c, d, e, h) {
            g += a.slice(f, h).replace(M,
            function(a) {
                return "\\" + I[a]
            });
            c && (g += "'+\n((__t=(" + c + "))==null?'':_.escape(__t))+\n'");
            d && (g += "'+\n((__t=(" + d + "))==null?'':__t)+\n'");
            e && (g += "';\n" + e + "\n__p+='");
            f = h + b.length;
            return b
        });
        g += "';\n";
        c.variable || (g = "with(obj||{}){\n" + g + "}\n");
        g = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + g + "return __p;\n";
        try {
            d = new Function(c.variable || "obj", "_", g)
        } catch(h) {
            throw h.source = g,
            h;
        }
        if (b) return d(b, k);
        b = function(a) {
            return d.call(this, a, k)
        };
        b.source = "function(" + (c.variable || "obj") + "){\n" + g + "}";
        return b
    };
    k.chain = function(a) {
        return k(a).chain()
    };
    k.mixin(k);
    n("pop,push,reverse,shift,sort,splice,unshift".split(","),
    function(a) {
        var b = d[a];
        k.prototype[a] = function() {
            var c = this._wrapped;
            b.apply(c, arguments); (a == "shift" || a == "splice") && c.length === 0 && delete c[0];
            return this._chain ? k(c).chain() : c
        }
    });
    n(["concat", "join", "slice"],
    function(a) {
        var b = d[a];
        k.prototype[a] = function() {
            var a = b.apply(this._wrapped, arguments);
            return this._chain ? k(a).chain() : a
        }
    });
    k.extend(k.prototype, {
        chain: function() {
            this._chain = !0;
            return this
        },
        value: function() {
            return this._wrapped
        }
    })
}).call(this); (function(a, b) {
    if (typeof define === "function" && define.amd) define(["underscore", "jquery", "exports"],
    function(c, e, f) {
        a.Backbone = b(a, f, c, e)
    });
    else if (typeof exports !== "undefined") {
        var c = require("underscore");
        b(a, exports, c)
    } else a.Backbone = b(a, {},
    a._, a.jQuery || a.Zepto || a.ender || a.$)
})(this,
function(a, b, c, d) {
    var e = a.Backbone,
    f = [].slice;
    b.VERSION = "1.1.2";
    b.$ = d;
    b.noConflict = function() {
        a.Backbone = e;
        return this
    };
    b.emulateHTTP = !1;
    b.emulateJSON = !1;
    var g = b.Events = {
        on: function(a, b, c) {
            if (!i(this, "on", a, [b, c]) || !b) return this;
            this._events || (this._events = {}); (this._events[a] || (this._events[a] = [])).push({
                callback: b,
                context: c,
                ctx: c || this
            });
            return this
        },
        once: function(a, b, d) {
            if (!i(this, "once", a, [b, d]) || !b) return this;
            var e = this,
            f = c.once(function() {
                e.off(a, f);
                b.apply(this, arguments)
            });
            f._callback = b;
            return this.on(a, f, d)
        },
        off: function(a, b, d) {
            var e, f, g, h, n, j, t, p;
            if (!this._events || !i(this, "off", a, [b, d])) return this;
            if (!a && !b && !d) return this._events = void 0,
            this;
            h = a ? [a] : c.keys(this._events);
            for (n = 0, j = h.length; n < j; n++) if (a = h[n], g = this._events[a]) {
                this._events[a] = e = [];
                if (b || d) for (t = 0, p = g.length; t < p; t++) f = g[t],
                (b && b !== f.callback && b !== f.callback._callback || d && d !== f.context) && e.push(f);
                e.length || delete this._events[a]
            }
            return this
        },
        trigger: function(a) {
            if (!this._events) return this;
            var b = f.call(arguments, 1);
            if (!i(this, "trigger", a, b)) return this;
            var c = this._events[a],
            d = this._events.all;
            c && l(c, b);
            d && l(d, arguments);
            return this
        },
        stopListening: function(a, b, d) {
            var e = this._listeningTo;
            if (!e) return this;
            var f = !b && !d; ! d && typeof b === "object" && (d = this);
            a && ((e = {})[a._listenId] = a);
            for (var g in e) a = e[g],
            a.off(b, d, this),
            (f || c.isEmpty(a._events)) && delete this._listeningTo[g];
            return this
        }
    },
    h = /\s+/,
    i = function(a, b, c, d) {
        if (!c) return ! 0;
        if (typeof c === "object") {
            for (var e in c) a[b].apply(a, [e, c[e]].concat(d));
            return ! 1
        }
        if (h.test(c)) {
            c = c.split(h);
            e = 0;
            for (var f = c.length; e < f; e++) a[b].apply(a, [c[e]].concat(d));
            return ! 1
        }
        return ! 0
    },
    l = function(a, b) {
        var c, d = -1,
        e = a.length,
        f = b[0],
        g = b[1],
        h = b[2];
        switch (b.length) {
        case 0:
            for (; ++d < e;)(c = a[d]).callback.call(c.ctx);
            break;
        case 1:
            for (; ++d < e;)(c = a[d]).callback.call(c.ctx, f);
            break;
        case 2:
            for (; ++d < e;)(c = a[d]).callback.call(c.ctx, f, g);
            break;
        case 3:
            for (; ++d < e;)(c = a[d]).callback.call(c.ctx, f, g, h);
            break;
        default:
            for (; ++d < e;)(c = a[d]).callback.apply(c.ctx, b)
        }
    };
    c.each({
        listenTo: "on",
        listenToOnce: "once"
    },
    function(a, b) {
        g[b] = function(b, d, e) {
            var f = this._listeningTo || (this._listeningTo = {}),
            g = b._listenId || (b._listenId = c.uniqueId("l"));
            f[g] = b; ! e && typeof d === "object" && (e = this);
            b[a](d, e, this);
            return this
        }
    });
    g.bind = g.on;
    g.unbind = g.off;
    c.extend(b, g);
    var j = b.Model = function(a, b) {
        var d = a || {};
        b || (b = {});
        this.cid = c.uniqueId("c");
        this.attributes = {};
        if (b.collection) this.collection = b.collection;
        b.parse && (d = this.parse(d, b) || {});
        d = c.defaults({},
        d, c.result(this, "defaults"));
        this.set(d, b);
        this.changed = {};
        this.initialize.apply(this, arguments)
    };
    c.extend(j.prototype, g, {
        changed: null,
        validationError: null,
        idAttribute: "id",
        initialize: function() {},
        toJSON: function() {
            return c.clone(this.attributes)
        },
        sync: function() {
            return b.sync.apply(this, arguments)
        },
        get: function(a) {
            return this.attributes[a]
        },
        escape: function(a) {
            return c.escape(this.get(a))
        },
        has: function(a) {
            return this.get(a) != null
        },
        set: function(a, b, d) {
            var e, f, g, h, n, i, j;
            if (a == null) return this;
            typeof a === "object" ? (f = a, d = b) : (f = {})[a] = b;
            d || (d = {});
            if (!this._validate(f, d)) return ! 1;
            g = d.unset;
            h = d.silent;
            a = [];
            n = this._changing;
            this._changing = !0;
            if (!n) this._previousAttributes = c.clone(this.attributes),
            this.changed = {};
            j = this.attributes;
            i = this._previousAttributes;
            if (this.idAttribute in f) this.id = f[this.idAttribute];
            for (e in f) b = f[e],
            c.isEqual(j[e], b) || a.push(e),
            c.isEqual(i[e], b) ? delete this.changed[e] : this.changed[e] = b,
            g ? delete j[e] : j[e] = b;
            if (!h) {
                if (a.length) this._pending = d;
                b = 0;
                for (e = a.length; b < e; b++) this.trigger("change:" + a[b], this, j[a[b]], d)
            }
            if (n) return this;
            if (!h) for (; this._pending;) d = this._pending,
            this._pending = !1,
            this.trigger("change", this, d);
            this._changing = this._pending = !1;
            return this
        },
        unset: function(a, b) {
            return this.set(a, void 0, c.extend({},
            b, {
                unset: !0
            }))
        },
        clear: function(a) {
            var b = {},
            d;
            for (d in this.attributes) b[d] = void 0;
            return this.set(b, c.extend({},
            a, {
                unset: !0
            }))
        },
        hasChanged: function(a) {
            return a == null ? !c.isEmpty(this.changed) : c.has(this.changed, a)
        },
        changedAttributes: function(a) {
            if (!a) return this.hasChanged() ? c.clone(this.changed) : !1;
            var b, d = !1,
            e = this._changing ? this._previousAttributes: this.attributes,
            f;
            for (f in a) if (!c.isEqual(e[f], b = a[f]))(d || (d = {}))[f] = b;
            return d
        },
        previous: function(a) {
            return a == null || !this._previousAttributes ? null: this._previousAttributes[a]
        },
        previousAttributes: function() {
            return c.clone(this._previousAttributes)
        },
        fetch: function(a) {
            a = a ? c.clone(a) : {};
            if (a.parse === void 0) a.parse = !0;
            var b = this,
            d = a.success;
            a.success = function(c) {
                if (!b.set(b.parse(c, a), a)) return ! 1;
                d && d(b, c, a);
                b.trigger("sync", b, c, a)
            };
            C(this, a);
            return this.sync("read", this, a)
        },
        save: function(a, b, d) {
            var e, f = this.attributes;
            a == null || typeof a === "object" ? (e = a, d = b) : (e = {})[a] = b;
            d = c.extend({
                validate: !0
            },
            d);
            if (e && !d.wait) {
                if (!this.set(e, d)) return ! 1
            } else if (!this._validate(e, d)) return ! 1;
            if (e && d.wait) this.attributes = c.extend({},
            f, e);
            if (d.parse === void 0) d.parse = !0;
            var g = this,
            h = d.success;
            d.success = function(a) {
                g.attributes = f;
                var b = g.parse(a, d);
                d.wait && (b = c.extend(e || {},
                b));
                if (c.isObject(b) && !g.set(b, d)) return ! 1;
                h && h(g, a, d);
                g.trigger("sync", g, a, d)
            };
            C(this, d);
            a = this.isNew() ? "create": d.patch ? "patch": "update";
            if (a === "patch") d.attrs = e;
            a = this.sync(a, this, d);
            if (e && d.wait) this.attributes = f;
            return a
        },
        destroy: function(a) {
            var a = a ? c.clone(a) : {},
            b = this,
            d = a.success,
            e = function() {
                b.trigger("destroy", b, b.collection, a)
            };
            a.success = function(c) { (a.wait || b.isNew()) && e();
                d && d(b, c, a);
                b.isNew() || b.trigger("sync", b, c, a)
            };
            if (this.isNew()) return a.success(),
            !1;
            C(this, a);
            var f = this.sync("delete", this, a);
            a.wait || e();
            return f
        },
        url: function() {
            var a = c.result(this, "urlRoot") || c.result(this.collection, "url") || G();
            return this.isNew() ? a: a.replace(/([^\/])$/, "$1/") + encodeURIComponent(this.id)
        },
        parse: function(a) {
            return a
        },
        clone: function() {
            return new this.constructor(this.attributes)
        },
        isNew: function() {
            return ! this.has(this.idAttribute)
        },
        isValid: function(a) {
            return this._validate({},
            c.extend(a || {},
            {
                validate: !0
            }))
        },
        _validate: function(a, b) {
            if (!b.validate || !this.validate) return ! 0;
            var a = c.extend({},
            this.attributes, a),
            d = this.validationError = this.validate(a, b) || null;
            if (!d) return ! 0;
            this.trigger("invalid", this, d, c.extend(b, {
                validationError: d
            }));
            return ! 1
        }
    });
    c.each("keys,values,pairs,invert,pick,omit".split(","),
    function(a) {
        j.prototype[a] = function() {
            var b = f.call(arguments);
            b.unshift(this.attributes);
            return c[a].apply(c, b)
        }
    });
    var o = b.Collection = function(a, b) {
        b || (b = {});
        if (b.model) this.model = b.model;
        if (b.comparator !== void 0) this.comparator = b.comparator;
        this._reset();
        this.initialize.apply(this, arguments);
        a && this.reset(a, c.extend({
            silent: !0
        },
        b))
    },
    q = {
        add: !0,
        remove: !0,
        merge: !0
    },
    m = {
        add: !0,
        remove: !1
    };
    c.extend(o.prototype, g, {
        model: j,
        initialize: function() {},
        toJSON: function(a) {
            return this.map(function(b) {
                return b.toJSON(a)
            })
        },
        sync: function() {
            return b.sync.apply(this, arguments)
        },
        add: function(a, b) {
            return this.set(a, c.extend({
                merge: !1
            },
            b, m))
        },
        remove: function(a, b) {
            var d = !c.isArray(a),
            a = d ? [a] : c.clone(a);
            b || (b = {});
            var e, f, g, h;
            for (e = 0, f = a.length; e < f; e++) if (h = a[e] = this.get(a[e])) {
                delete this._byId[h.id];
                delete this._byId[h.cid];
                g = this.indexOf(h);
                this.models.splice(g, 1);
                this.length--;
                if (!b.silent) b.index = g,
                h.trigger("remove", h, this, b);
                this._removeReference(h, b)
            }
            return d ? a[0] : a
        },
        set: function(a, b) {
            b = c.defaults({},
            b, q);
            b.parse && (a = this.parse(a, b));
            var d = !c.isArray(a),
            a = d ? a ? [a] : [] : c.clone(a),
            e,
            f,
            g,
            h,
            n,
            i,
            t = b.at,
            p = this.model,
            m = this.comparator && t == null && b.sort !== !1,
            u = c.isString(this.comparator) ? this.comparator: null,
            k = [],
            l = [],
            z = {},
            o = b.add,
            s = b.merge,
            E = b.remove,
            A = !m && o && E ? [] : !1;
            for (e = 0, f = a.length; e < f; e++) {
                n = a[e] || {};
                g = n instanceof j ? h = n: n[p.prototype.idAttribute || "id"];
                if (g = this.get(g)) E && (z[g.cid] = !0),
                s && (n = n === h ? h.attributes: n, b.parse && (n = g.parse(n, b)), g.set(n, b), m && !i && g.hasChanged(u) && (i = !0)),
                a[e] = g;
                else if (o) {
                    h = a[e] = this._prepareModel(n, b);
                    if (!h) continue;
                    k.push(h);
                    this._addReference(h, b)
                }
                h = g || h;
                A && (h.isNew() || !z[h.id]) && A.push(h);
                z[h.id] = !0
            }
            if (E) {
                for (e = 0, f = this.length; e < f; ++e) z[(h = this.models[e]).cid] || l.push(h);
                l.length && this.remove(l, b)
            }
            if (k.length || A && A.length) if (m && (i = !0), this.length += k.length, t != null) for (e = 0, f = k.length; e < f; e++) this.models.splice(t + e, 0, k[e]);
            else {
                if (A) this.models.length = 0;
                n = A || k;
                for (e = 0, f = n.length; e < f; e++) this.models.push(n[e])
            }
            i && this.sort({
                silent: !0
            });
            if (!b.silent) {
                for (e = 0, f = k.length; e < f; e++)(h = k[e]).trigger("add", h, this, b); (i || A && A.length) && this.trigger("sort", this, b)
            }
            return d ? a[0] : a
        },
        reset: function(a, b) {
            b || (b = {});
            for (var d = 0,
            e = this.models.length; d < e; d++) this._removeReference(this.models[d], b);
            b.previousModels = this.models;
            this._reset();
            a = this.add(a, c.extend({
                silent: !0
            },
            b));
            b.silent || this.trigger("reset", this, b);
            return a
        },
        push: function(a, b) {
            return this.add(a, c.extend({
                at: this.length
            },
            b))
        },
        pop: function(a) {
            var b = this.at(this.length - 1);
            this.remove(b, a);
            return b
        },
        unshift: function(a, b) {
            return this.add(a, c.extend({
                at: 0
            },
            b))
        },
        shift: function(a) {
            var b = this.at(0);
            this.remove(b, a);
            return b
        },
        slice: function() {
            return f.apply(this.models, arguments)
        },
        get: function(a) {
            return a == null ? void 0 : this._byId[a] || this._byId[a.id] || this._byId[a.cid]
        },
        at: function(a) {
            return this.models[a]
        },
        where: function(a, b) {
            return c.isEmpty(a) ? b ? void 0 : [] : this[b ? "find": "filter"](function(b) {
                for (var c in a) if (a[c] !== b.get(c)) return ! 1;
                return ! 0
            })
        },
        findWhere: function(a) {
            return this.where(a, !0)
        },
        sort: function(a) {
            if (!this.comparator) throw Error("Cannot sort a set without a comparator");
            a || (a = {});
            c.isString(this.comparator) || this.comparator.length === 1 ? this.models = this.sortBy(this.comparator, this) : this.models.sort(c.bind(this.comparator, this));
            a.silent || this.trigger("sort", this, a);
            return this
        },
        pluck: function(a) {
            return c.invoke(this.models, "get", a)
        },
        fetch: function(a) {
            a = a ? c.clone(a) : {};
            if (a.parse === void 0) a.parse = !0;
            var b = a.success,
            d = this;
            a.success = function(c) {
                d[a.reset ? "reset": "set"](c, a);
                b && b(d, c, a);
                d.trigger("sync", d, c, a)
            };
            C(this, a);
            return this.sync("read", this, a)
        },
        create: function(a, b) {
            b = b ? c.clone(b) : {};
            if (! (a = this._prepareModel(a, b))) return ! 1;
            b.wait || this.add(a, b);
            var d = this,
            e = b.success;
            b.success = function(a, c) {
                b.wait && d.add(a, b);
                e && e(a, c, b)
            };
            a.save(null, b);
            return a
        },
        parse: function(a) {
            return a
        },
        clone: function() {
            return new this.constructor(this.models)
        },
        _reset: function() {
            this.length = 0;
            this.models = [];
            this._byId = {}
        },
        _prepareModel: function(a, b) {
            if (a instanceof j) return a;
            b = b ? c.clone(b) : {};
            b.collection = this;
            var d = new this.model(a, b);
            if (!d.validationError) return d;
            this.trigger("invalid", this, d.validationError, b);
            return ! 1
        },
        _addReference: function(a) {
            this._byId[a.cid] = a;
            a.id != null && (this._byId[a.id] = a);
            if (!a.collection) a.collection = this;
            a.on("all", this._onModelEvent, this)
        },
        _removeReference: function(a) {
            this === a.collection && delete a.collection;
            a.off("all", this._onModelEvent, this)
        },
        _onModelEvent: function(a, b, c, d) { (a === "add" || a === "remove") && c !== this || (a === "destroy" && this.remove(b, d), b && a === "change:" + b.idAttribute && (delete this._byId[b.previous(b.idAttribute)], b.id != null && (this._byId[b.id] = b)), this.trigger.apply(this, arguments))
        }
    });
    c.each("forEach,each,map,collect,reduce,foldl,inject,reduceRight,foldr,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,toArray,size,first,head,take,initial,rest,tail,drop,last,without,difference,indexOf,shuffle,lastIndexOf,isEmpty,chain,sample".split(","),
    function(a) {
        o.prototype[a] = function() {
            var b = f.call(arguments);
            b.unshift(this.models);
            return c[a].apply(c, b)
        }
    });
    c.each(["groupBy", "countBy", "sortBy", "indexBy"],
    function(a) {
        o.prototype[a] = function(b, d) {
            var e = c.isFunction(b) ? b: function(a) {
                return a.get(b)
            };
            return c[a](this.models, e, d)
        }
    });
    var d = b.View = function(a) {
        this.cid = c.uniqueId("view");
        a || (a = {});
        c.extend(this, c.pick(a, r));
        this._ensureElement();
        this.initialize.apply(this, arguments);
        this.delegateEvents()
    },
    p = /^(\S+)\s*(.*)$/,
    r = "model,collection,el,id,attributes,className,tagName,events".split(",");
    c.extend(d.prototype, g, {
        tagName: "div",
        $: function(a) {
            return this.$el.find(a)
        },
        initialize: function() {},
        render: function() {
            return this
        },
        remove: function() {
            this.$el.remove();
            this.stopListening();
            return this
        },
        setElement: function(a, c) {
            this.$el && this.undelegateEvents();
            this.$el = a instanceof b.$ ? a: b.$(a);
            this.el = this.$el[0];
            c !== !1 && this.delegateEvents();
            return this
        },
        delegateEvents: function(a) {
            if (!a && !(a = c.result(this, "events"))) return this;
            this.undelegateEvents();
            for (var b in a) {
                var d = a[b];
                c.isFunction(d) || (d = this[a[b]]);
                if (d) {
                    var e = b.match(p),
                    f = e[1],
                    e = e[2],
                    d = c.bind(d, this);
                    f += ".delegateEvents" + this.cid;
                    if (e === "") this.$el.on(f, d);
                    else this.$el.on(f, e, d)
                }
            }
            return this
        },
        undelegateEvents: function() {
            this.$el.off(".delegateEvents" + this.cid);
            return this
        },
        _ensureElement: function() {
            if (this.el) this.setElement(c.result(this, "el"), !1);
            else {
                var a = c.extend({},
                c.result(this, "attributes"));
                if (this.id) a.id = c.result(this, "id");
                this.className && (a["class"] = c.result(this, "className"));
                this.setElement(b.$("<" + c.result(this, "tagName") + ">").attr(a), !1)
            }
        }
    });
    b.sync = function(a, d, e) {
        var f = v[a];
        c.defaults(e || (e = {}), {
            emulateHTTP: b.emulateHTTP,
            emulateJSON: b.emulateJSON
        });
        var g = {
            type: f,
            dataType: "json"
        };
        if (!e.url) g.url = c.result(d, "url") || G();
        if (e.data == null && d && (a === "create" || a === "update" || a === "patch")) g.contentType = "application/json",
        g.data = JSON.stringify(e.attrs || d.toJSON(e));
        if (e.emulateJSON) g.contentType = "application/x-www-form-urlencoded",
        g.data = g.data ? {
            model: g.data
        }: {};
        if (e.emulateHTTP && (f === "PUT" || f === "DELETE" || f === "PATCH")) {
            g.type = "POST";
            if (e.emulateJSON) g.data._method = f;
            var h = e.beforeSend;
            e.beforeSend = function(a) {
                a.setRequestHeader("X-HTTP-Method-Override", f);
                if (h) return h.apply(this, arguments)
            }
        }
        if (g.type !== "GET" && !e.emulateJSON) g.processData = !1;
        if (g.type === "PATCH" && s) g.xhr = function() {
            return new ActiveXObject("Microsoft.XMLHTTP")
        };
        a = e.xhr = b.ajax(c.extend(g, e));
        d.trigger("request", d, a, e);
        return a
    };
    var s = typeof window !== "undefined" && !!window.ActiveXObject && !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent),
    v = {
        create: "POST",
        update: "PUT",
        patch: "PATCH",
        "delete": "DELETE",
        read: "GET"
    };
    b.ajax = function() {
        return b.$.ajax.apply(b.$, arguments)
    };
    var w = b.Router = function(a) {
        a || (a = {});
        if (a.routes) this.routes = a.routes;
        this._bindRoutes();
        this.initialize.apply(this, arguments)
    },
    x = /\((.*?)\)/g,
    y = /(\(\?)?:\w+/g,
    k = /\*\w+/g,
    n = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    c.extend(w.prototype, g, {
        initialize: function() {},
        route: function(a, d, e) {
            c.isRegExp(a) || (a = this._routeToRegExp(a));
            c.isFunction(d) && (e = d, d = "");
            e || (e = this[d]);
            var f = this;
            b.history.route(a,
            function(c) {
                c = f._extractParameters(a, c);
                f.execute(e, c);
                f.trigger.apply(f, ["route:" + d].concat(c));
                f.trigger("route", d, c);
                b.history.trigger("route", f, d, c)
            });
            return this
        },
        execute: function(a, b) {
            a && a.apply(this, b)
        },
        navigate: function(a, c) {
            b.history.navigate(a, c);
            return this
        },
        _bindRoutes: function() {
            if (this.routes) {
                this.routes = c.result(this, "routes");
                for (var a, b = c.keys(this.routes); (a = b.pop()) != null;) this.route(a, this.routes[a])
            }
        },
        _routeToRegExp: function(a) {
            a = a.replace(n, "\\$&").replace(x, "(?:$1)?").replace(y,
            function(a, b) {
                return b ? a: "([^/?]+)"
            }).replace(k, "([^?]*?)");
            return RegExp("^" + a + "(?:\\?([\\s\\S]*))?$")
        },
        _extractParameters: function(a, b) {
            var d = a.exec(b).slice(1);
            return c.map(d,
            function(a, b) {
                return b === d.length - 1 ? a || null: a ? decodeURIComponent(a) : null
            })
        }
    });
    var t = b.History = function() {
        this.handlers = [];
        c.bindAll(this, "checkUrl");
        if (typeof window !== "undefined") this.location = window.location,
        this.history = window.history
    },
    u = /^[#\/]|\s+$/g,
    B = /^\/+|\/+$/g,
    z = /msie [\w.]+/,
    A = /\/$/,
    E = /#.*$/;
    t.started = !1;
    c.extend(t.prototype, g, {
        interval: 50,
        atRoot: function() {
            return this.location.pathname.replace(/[^\/]$/, "$&/") === this.root
        },
        getHash: function(a) {
            return (a = (a || this).location.href.match(/#(.*)$/)) ? a[1] : ""
        },
        getFragment: function(a, b) {
            if (a == null) if (this._hasPushState || !this._wantsHashChange || b) {
                var a = decodeURI(this.location.pathname + this.location.search),
                c = this.root.replace(A, "");
                a.indexOf(c) || (a = a.slice(c.length))
            } else a = this.getHash();
            return a.replace(u, "")
        },
        start: function(a) {
            if (t.started) throw Error("Backbone.history has already been started");
            t.started = !0;
            this.options = c.extend({
                root: "/"
            },
            this.options, a);
            this.root = this.options.root;
            this._wantsHashChange = this.options.hashChange !== !1;
            this._wantsPushState = !!this.options.pushState;
            this._hasPushState = !(!this.options.pushState || !this.history || !this.history.pushState);
            var a = this.getFragment(),
            d = document.documentMode,
            d = z.exec(navigator.userAgent.toLowerCase()) && (!d || d <= 7);
            this.root = ("/" + this.root + "/").replace(B, "/");
            if (d && this._wantsHashChange) this.iframe = b.$('<iframe src="javascript:0" tabindex="-1">').hide().appendTo("body")[0].contentWindow,
            this.navigate(a);
            if (this._hasPushState) b.$(window).on("popstate", this.checkUrl);
            else if (this._wantsHashChange && "onhashchange" in window && !d) b.$(window).on("hashchange", this.checkUrl);
            else if (this._wantsHashChange) this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
            this.fragment = a;
            a = this.location;
            if (this._wantsHashChange && this._wantsPushState) if (!this._hasPushState && !this.atRoot()) return this.fragment = this.getFragment(null, !0),
            this.location.replace(this.root + "#" + this.fragment),
            !0;
            else if (this._hasPushState && this.atRoot() && a.hash) this.fragment = this.getHash().replace(u, ""),
            this.history.replaceState({},
            document.title, this.root + this.fragment);
            if (!this.options.silent) return this.loadUrl()
        },
        stop: function() {
            b.$(window).off("popstate", this.checkUrl).off("hashchange", this.checkUrl);
            this._checkUrlInterval && clearInterval(this._checkUrlInterval);
            t.started = !1
        },
        route: function(a, b) {
            this.handlers.unshift({
                route: a,
                callback: b
            })
        },
        checkUrl: function() {
            var a = this.getFragment();
            a === this.fragment && this.iframe && (a = this.getFragment(this.getHash(this.iframe)));
            if (a === this.fragment) return ! 1;
            this.iframe && this.navigate(a);
            this.loadUrl()
        },
        loadUrl: function(a) {
            a = this.fragment = this.getFragment(a);
            return c.any(this.handlers,
            function(b) {
                if (b.route.test(a)) return b.callback(a),
                !0
            })
        },
        navigate: function(a, b) {
            if (!t.started) return ! 1;
            if (!b || b === !0) b = {
                trigger: !!b
            };
            var c = this.root + (a = this.getFragment(a || "")),
            a = a.replace(E, "");
            if (this.fragment !== a) {
                this.fragment = a;
                a === "" && c !== "/" && (c = c.slice(0, -1));
                if (this._hasPushState) this.history[b.replace ? "replaceState": "pushState"]({},
                document.title, c);
                else if (this._wantsHashChange) this._updateHash(this.location, a, b.replace),
                this.iframe && a !== this.getFragment(this.getHash(this.iframe)) && (b.replace || this.iframe.document.open().close(), this._updateHash(this.iframe.location, a, b.replace));
                else return this.location.assign(c);
                if (b.trigger) return this.loadUrl(a)
            }
        },
        _updateHash: function(a, b, c) {
            c ? (c = a.href.replace(/(javascript:|#).*$/, ""), a.replace(c + "#" + b)) : a.hash = "#" + b
        }
    });
    b.history = new t;
    j.extend = o.extend = w.extend = d.extend = t.extend = function(a, b) {
        var d = this,
        e;
        e = a && c.has(a, "constructor") ? a.constructor: function() {
            return d.apply(this, arguments)
        };
        c.extend(e, d, b);
        var f = function() {
            this.constructor = e
        };
        f.prototype = d.prototype;
        e.prototype = new f;
        a && c.extend(e.prototype, a);
        e.__super__ = d.prototype;
        return e
    };
    var G = function() {
        throw Error('A "url" property or function must be specified');
    },
    C = function(a, b) {
        var c = b.error;
        b.error = function(d) {
            c && c(a, d, b);
            a.trigger("error", a, d, b)
        }
    };
    return b
}); (function() {
    function a(a) {
        for (var b in a) b && a.hasOwnProperty(b) && a[b] && a[b].toJSON && (a[b] = a[b].toJSON(!0))
    }
    var b = Backbone.Model.prototype.toJSON,
    c = Backbone.Collection.prototype.toJSON;
    Backbone.Model.prototype.toJSON = function() {
        var c = b.call(this);
        c && a(c);
        return c
    };
    Backbone.Collection.prototype.toJSON = function() {
        var b = c.call(this);
        b && a(b);
        return b
    };
    Backbone.Model.prototype.clone = function() {
        var a = {},
        b;
        for (b in this.attributes) if (this.attributes.hasOwnProperty(b)) {
            var c = this.attributes[b];
            if (c && c.clone && typeof c.clone === "function") c = c.clone();
            else if (c instanceof XMLDocument) {
                var g = XMLUtilities.createDocument(XMLUtilities.getDocumentType(c));
                XMLUtilities.cloneDocumentChildren(c, g);
                c = g
            } else _.isObject(c) && (c = ObjectUtils.clone(c));
            a[b] = c
        }
        return new this.constructor(a)
    };
    Backbone.Collection.prototype.clone = function() {
        return new this.constructor(this.map(function(a) {
            return a.clone()
        }))
    }
})(); (function() {
    function a(a) {
        a[h] || (a[h] = j.length === 0 ? ++i: j.pop());
        a = a[h];
        return l[a] || (l[a] = [])
    }
    function b(a) {
        var b = a[h];
        l[b] && (l[b] = null, a[h] = null, j.push(b))
    }
    function c(b, c, d, e) {
        typeof d === "function" && (e = d, d = null);
        var h = f.exec(c),
        c = h[1] || null,
        h = h[2] || null;
        if (c) {
            var i = e,
            j = e,
            i = d ?
            function(a) {
                for (var c = a.target; c && c !== b; c = c.parentElement) if (g.call(c, d)) return c = j.call(c, a, c),
                c === !1 && (a.stopPropagation(), a.preventDefault()),
                c
            }: function(a) {
                var c = j.call(b, a, b);
                c === !1 && (a.stopPropagation(), a.preventDefault());
                return c
            };
            b.addEventListener(c, i, !1);
            a(b).push({
                eventName: c,
                callback: e,
                handler: i,
                namespace: h,
                selector: d
            })
        }
    }
    function d(c, d, e, g) {
        typeof e === "function" && (g = e, e = null);
        var h = f.exec(d || ""),
        d = h[1],
        i = h[2],
        j = a(c) || []; ! d && !i && !e && !g ? (j.forEach(function(a) {
            c.removeEventListener(a.eventName, a.handler, !1)
        }), b(c)) : (j.filter(function(a) {
            return (!i || a.namespace === i) && (!d || a.eventName === d) && (!g || a.callback === g) && (!e || a.selector === e)
        }).forEach(function(a) {
            c.removeEventListener(a.eventName, a.handler, !1);
            j.splice(j.indexOf(a), 1)
        }), j.length === 0 && b(c))
    }
    function e(a, b) {
        b = b || document;
        if (! (this instanceof e)) return new e(a, b);
        if (a) {
            if (typeof a === "string") if (/^\s*</.test(a)) {
                var c = document.createElement("div");
                c.innerHTML = a;
                this[0] = c.firstChild;
                c.removeChild(c.firstChild)
            } else this[0] = b.querySelector(a);
            else this[0] = a;
            this.length = 1
        } else this.length = 0
    }
    var f = /^([^.]+)?(?:\.([^.]+))?$/,
    g = Element.prototype.matchesSelector || null;
    g || ["webkit", "moz", "o", "ms"].forEach(function(a) { (a = Element.prototype[a + "MatchesSelector"]) && (g = a)
    });
    var h = "backboneNativeKey",
    i = 1,
    l = {},
    j = [];
    e.prototype = {
        hide: null,
        appendTo: null,
        find: null,
        attr: function(a) {
            Object.keys(a).forEach(function(b) {
                switch (b) {
                case "html":
                    this[0].innerHTML = a[b];
                    break;
                case "text":
                    this[0].textContent = a[b];
                case "class":
                    this[0].className = a[b];
                    break;
                default:
                    this[0].setAttribute(b, a[b])
                }
            },
            this);
            return this
        },
        html: function(a) {
            this[0].innerHTML = a;
            return this
        },
        remove: function() {
            var a = this[0];
            a.parentElement && a.parentElement.removeChild(a); (function s(a) {
                d(a);
                for (var b = 0,
                c = a.childNodes.length; b < c; b++) a.childNodes[b].nodeType !== Node.TEXT_NODE && s(a.childNodes[b])
            })(a);
            return this
        },
        on: function(a, b, d) {
            c(this[0], a, b, d)
        },
        off: function(a, b, c) {
            d(this[0], a, b, c)
        },
        bind: function(a, b) {
            this.on(a, b)
        },
        unbind: function(a, b) {
            this.off(a, b)
        },
        delegate: function(a, b, c) {
            this.on(b, a, c)
        },
        undelegate: function(a, b, c) {
            this.off(b, a, c)
        }
    };
    e.ajax = function(a) {
        var b = a.type || "GET",
        c = a.url,
        d = a.data;
        if ((a.processData === void 0 || a.processData) && typeof d === "object") d = Object.keys(d).map(function(a) {
            return encodeURIComponent(a) + "=" + encodeURIComponent(d[a])
        }).join("&");
        if (d && (b === "GET" || b === "HEAD")) c += (c.indexOf("?") === -1 ? "?": "&") + d,
        d = void 0;
        var e = new XMLHttpRequest;
        e.open(b, c, !0);
        a.contentType && e.setRequestHeader("Content-Type", a.contentType);
        a.beforeSend && a.beforeSend(e);
        e.onload = function() {
            var b = !1,
            c = e.responseText;
            if (a.dataType === "json") try {
                c = JSON.parse(c)
            } catch(d) {
                b = !0
            } ! b && e.status >= 200 && e.status < 300 ? a.success && a.success(c, e.statusText, e) : a.error && a.error(e)
        }.bind(this);
        e.send(d);
        return e
    };
    e.on = c;
    e.off = d;
    var o = this,
    q = o.BackboneNativeAdapter,
    m = o.$;
    o.BackboneNativeAdapter = e;
    o.$ = e;
    e.noConflict = function(a) {
        o.$ = m;
        if (a) o.BackboneNativeAdapter = q;
        return e
    };
    Backbone.setDomLibrary ? Backbone.setDomLibrary(e) : Backbone.$ = e
}).call(this); (function() {
    var a = {},
    b = 1;
    window.scroller || (scroller = {});
    scroller.Animate = {
        stop: function(b) {
            var d = a[b] != null;
            d && (a[b] = null);
            return d
        },
        isRunning: function(b) {
            return a[b] != null
        },
        start: function(c, d, e, f, g, h) {
            var i = Date.now(),
            l = i,
            j = 0,
            o = 0,
            q = b++;
            if (!h) h = document.body;
            if (q % 20 === 0) {
                var m = {},
                p;
                for (p in a) m[p] = !0;
                a = m
            }
            var r = function(b) {
                var b = b !== !0,
                m = Date.now();
                if (!a[q] || d && !d(q)) a[q] = null,
                e(60 - o / ((m - i) / 1E3), q, !1);
                else {
                    if (b) for (var p = Math.round((m - l) / (1E3 / 60)) - 1, x = 0; x < p; x++) r(!0),
                    o++;
                    f && (j = (m - i) / f, j > 1 && (j = 1));
                    p = g ? g(j) : j; (c(p, m, b) === !1 || j === 1) && b ? (a[q] = null, e(60 - o / ((m - i) / 1E3), q, j === 1 || f == null)) : b && (l = m, requestAnimationFrame(r, h))
                }
            };
            a[q] = !0;
            requestAnimationFrame(r, h);
            return q
        }
    }
})(this);
window.scroller || (scroller = {});
if (!scroller.common) scroller.common = {};
scroller.common.Engine = {
    NAME: function(a) {
        var b, c = a.document.documentElement.style;
        a.opera && Object.prototype.toString.call(opera) === "[object Opera]" ? b = "presto": "MozAppearance" in c ? b = "gecko": "WebkitAppearance" in c ? b = "webkit": typeof navigator.cpuClass === "string" && (b = "trident");
        return b
    } (this)
}; (function() {
    var a = {},
    b = document.createElement("div").style;
    window.scroller || (scroller = {});
    if (!scroller.common) scroller.common = {};
    var c = {
        trident: "ms",
        gecko: "Moz",
        webkit: "Webkit",
        presto: "O"
    } [scroller.common.Engine.NAME];
    scroller.common.Style = {
        names: a,
        get: function(c, e, f) {
            e = e in b && e || a[e] || this.property(e, !0);
            if (!f) return c.style[e];
            if (f = c.ownerDocument.defaultView) return f.getComputedStyle(c, null)[e];
            else if (c.currentStyle) return c.currentStyle[e]
        },
        set: function(c, e, f) {
            var c = c.style,
            g;
            if (typeof e === "string")(g = e in b && e || a[e] || this.property(e, !0)) && (c[g] = f === null ? "": f);
            else for (var h in e) f = e[h],
            (g = h in b && h || a[h] || this.property(h, !0)) && (c[g] = f === null ? "": f);
            return this
        },
        property: function(d) {
            if (d in b) return d;
            var e = a[d];
            if (e !== void 0) return e;
            e = c + d.charAt(0).toUpperCase() + d.slice(1);
            if (e in b) return a[d] = e
        }
    }
})();
window.scroller || (scroller = {});
if (!scroller.common) scroller.common = {};
scroller.common.Tiling = function() {};
scroller.common.Tiling.prototype.setup = function(a, b, c, d, e, f) {
    this.__clientWidth = a;
    this.__clientHeight = b;
    this.__contentWidth = c;
    this.__contentHeight = d;
    this.__tileWidth = e;
    this.__tileHeight = f
};
scroller.common.Tiling.prototype.render = function(a, b, c, d) {
    var e = this.__clientHeight,
    f = this.__clientWidth,
    g = this.__tileHeight * c,
    h = this.__tileWidth * c,
    i = Math.max(Math.floor(b / g), 0),
    l = Math.max(Math.floor(a / h), 0),
    j = this.__contentHeight * c / g,
    o = this.__contentWidth * c / h,
    q = b >= 0 ? -b % g: -b,
    m = a >= 0 ? -a % h: -a,
    p = Math.floor(e / g);
    b % g > 0 && (p += 1);
    q + p * g < e && (p += 1);
    b = Math.floor(f / h);
    a % h > 0 && (b += 1);
    m + b * h < f && (b += 1);
    p = Math.min(p, j - i);
    b = Math.min(b, o - l);
    a = q;
    f = m;
    for (j = i; j < p + i; j++) {
        for (o = l; o < b + l; o++) d(j, o, f, a, h, g, c),
        f += h;
        f = m;
        a += g
    }
};
var Scroller; (function() {
    Scroller = function(a, b) {
        this.__callback = a;
        this.options = {
            scrollingX: !0,
            scrollingY: !0,
            animating: !0,
            bouncing: !0,
            locking: !0,
            paging: !1,
            snapping: !1,
            zooming: !1,
            minZoom: 0.5,
            maxZoom: 3
        };
        for (var c in b) this.options[c] = b[c]
    };
    var a = function(a) {
        return Math.pow(a - 1, 3) + 1
    },
    b = function(a) {
        return (a /= 0.5) < 1 ? 0.5 * Math.pow(a, 3) : 0.5 * (Math.pow(a - 2, 3) + 2)
    },
    c = {
        __isSingleTouch: !1,
        __isTracking: !1,
        __isGesturing: !1,
        __isDragging: !1,
        __isDecelerating: !1,
        __isAnimating: !1,
        __clientLeft: 0,
        __clientTop: 0,
        __clientWidth: 0,
        __clientHeight: 0,
        __contentWidth: 0,
        __contentHeight: 0,
        __snapWidth: 100,
        __snapHeight: 100,
        __zoomLevel: 1,
        __scrollLeft: 0,
        __scrollTop: 0,
        __maxScrollLeft: 0,
        __maxScrollTop: 0,
        __scheduledLeft: 0,
        __scheduledTop: 0,
        __scheduledZoom: 0,
        __lastTouchLeft: null,
        __lastTouchTop: null,
        __lastTouchMove: null,
        __positions: null,
        __minDecelerationScrollLeft: null,
        __minDecelerationScrollTop: null,
        __maxDecelerationScrollLeft: null,
        __maxDecelerationScrollTop: null,
        __decelerationVelocityX: null,
        __decelerationVelocityY: null,
        setDimensions: function(a, b, c, d, i, l) {
            if (a) this.__clientWidth = a;
            if (b) this.__clientHeight = b;
            if (c) this.__contentWidth = c;
            if (d) this.__contentHeight = d;
            this.__computeScrollMax();
            i !== !1 && (i = !0);
            l || this.scrollTo(this.__scrollLeft, this.__scrollTop, i)
        },
        setPosition: function(a, b) {
            this.__clientLeft = a || 0;
            this.__clientTop = b || 0
        },
        setSnapSize: function(a, b) {
            this.__snapWidth = a;
            this.__snapHeight = b
        },
        getValues: function() {
            return {
                left: this.__scrollLeft,
                top: this.__scrollTop,
                zoom: this.__zoomLevel
            }
        },
        getScrollMax: function() {
            return {
                left: this.__maxScrollLeft,
                top: this.__maxScrollTop
            }
        },
        zoomTo: function(a, b, c, d) {
            if (!this.options.zooming) throw Error("Zooming is not enabled!");
            if (this.__isDecelerating) scroller.Animate.stop(this.__isDecelerating),
            this.__isDecelerating = !1;
            var i = this.__zoomLevel;
            c == null && (c = this.__clientWidth / 2);
            d == null && (d = this.__clientHeight / 2);
            a = Math.max(Math.min(a, this.options.maxZoom), this.options.minZoom);
            this.__computeScrollMax(a);
            c = (c + this.__scrollLeft) * a / i - c;
            d = (d + this.__scrollTop) * a / i - d;
            c > this.__maxScrollLeft ? c = this.__maxScrollLeft: c < 0 && (c = 0);
            d > this.__maxScrollTop ? d = this.__maxScrollTop: d < 0 && (d = 0);
            this.__publish(c, d, a, b)
        },
        zoomBy: function(a, b, c, d) {
            this.zoomTo(this.__zoomLevel * a, b, c, d)
        },
        scrollTo: function(a, b, c, d) {
            if (this.__isDecelerating) scroller.Animate.stop(this.__isDecelerating),
            this.__isDecelerating = !1;
            if (d != null && d !== this.__zoomLevel) {
                if (!this.options.zooming) throw Error("Zooming is not enabled!");
                a *= d;
                b *= d;
                this.__computeScrollMax(d)
            } else d = this.__zoomLevel;
            this.options.scrollingX ? this.options.paging ? a = Math.round(a / this.__clientWidth) * this.__clientWidth: this.options.snapping && (a = Math.round(a / this.__snapWidth) * this.__snapWidth) : a = this.__scrollLeft;
            this.options.scrollingY ? this.options.paging ? b = Math.round(b / this.__clientHeight) * this.__clientHeight: this.options.snapping && (b = Math.round(b / this.__snapHeight) * this.__snapHeight) : b = this.__scrollTop;
            a = Math.max(Math.min(this.__maxScrollLeft, a), 0);
            b = Math.max(Math.min(this.__maxScrollTop, b), 0);
            a === this.__scrollLeft && b === this.__scrollTop && (c = !1);
            this.__publish(a, b, d, c)
        },
        scrollBy: function(a, b, c) {
            this.scrollTo((this.__isAnimating ? this.__scheduledLeft: this.__scrollLeft) + (a || 0), (this.__isAnimating ? this.__scheduledTop: this.__scrollTop) + (b || 0), c)
        },
        doMouseZoom: function(a, b, c, d) {
            return this.zoomTo(this.__zoomLevel * (a > 0 ? 0.97 : 1.03), !1, c - this.__clientLeft, d - this.__clientTop)
        },
        doTouchStart: function(a, b) {
            if (a.length == null) throw Error("Invalid touch list: " + a);
            if (typeof b !== "number") throw Error("Invalid timestamp value: " + b);
            if (this.__isDecelerating) scroller.Animate.stop(this.__isDecelerating),
            this.__isDecelerating = !1;
            if (this.__isAnimating) scroller.Animate.stop(this.__isAnimating),
            this.__isAnimating = !1;
            var c, d, i = a.length === 1;
            i ? (c = a[0].pageX, d = a[0].pageY) : (c = Math.abs(a[0].pageX + a[1].pageX) / 2, d = Math.abs(a[0].pageY + a[1].pageY) / 2);
            this.__initialTouchLeft = c;
            this.__initialTouchTop = d;
            this.__zoomLevelStart = this.__zoomLevel;
            this.__lastTouchLeft = c;
            this.__lastTouchTop = d;
            this.__lastTouchMove = b;
            this.__lastScale = 1;
            this.__enableScrollX = !i && this.options.scrollingX;
            this.__enableScrollY = !i && this.options.scrollingY;
            this.__isTracking = !0;
            this.__isDragging = !i;
            this.__isSingleTouch = i;
            this.__positions = []
        },
        doTouchMove: function(a, b, c) {
            if (a.length == null) throw Error("Invalid touch list: " + a);
            if (typeof b !== "number") throw Error("Invalid timestamp value: " + b);
            if (this.__isTracking) {
                var d;
                a.length === 2 ? (d = Math.abs(a[0].pageX + a[1].pageX) / 2, a = Math.abs(a[0].pageY + a[1].pageY) / 2) : (d = a[0].pageX, a = a[0].pageY);
                var i = this.__positions;
                if (this.__isDragging) {
                    var l = d - this.__lastTouchLeft,
                    j = a - this.__lastTouchTop,
                    o = this.__scrollLeft,
                    q = this.__scrollTop,
                    m = this.__zoomLevel;
                    if (c != null && this.options.zooming) {
                        var p = m,
                        m = m / this.__lastScale * c,
                        m = Math.max(Math.min(m, this.options.maxZoom), this.options.minZoom);
                        if (p !== m) {
                            var r = d - this.__clientLeft,
                            s = a - this.__clientTop,
                            o = (r + o) * m / p - r,
                            q = (s + q) * m / p - s;
                            this.__computeScrollMax(m)
                        }
                    }
                    if (this.__enableScrollX && (o -= l, p = this.__maxScrollLeft, o > p || o < 0)) this.options.bouncing ? o += l / 2 : o = o > p ? p: 0;
                    if (this.__enableScrollY && (q -= j, l = this.__maxScrollTop, q > l || q < 0)) this.options.bouncing ? q += j / 2 : q = q > l ? l: 0;
                    i.length > 60 && i.splice(0, 30);
                    i.push(o, q, b);
                    this.__publish(o, q, m)
                } else j = this.options.locking ? 3 : 0,
                o = Math.abs(d - this.__initialTouchLeft),
                q = Math.abs(a - this.__initialTouchTop),
                this.__enableScrollX = this.options.scrollingX && o >= j,
                this.__enableScrollY = this.options.scrollingY && q >= j,
                i.push(this.__scrollLeft, this.__scrollTop, b),
                this.__isDragging = (this.__enableScrollX || this.__enableScrollY) && (o >= 5 || q >= 5);
                this.__lastTouchLeft = d;
                this.__lastTouchTop = a;
                this.__lastTouchMove = b;
                this.__lastScale = c
            }
        },
        doTouchEnd: function(a) {
            if (typeof a !== "number") throw Error("Invalid timestamp value: " + a);
            if (this.__isTracking) {
                this.__isTracking = !1;
                if (this.__isDragging && (this.__isDragging = !1, this.__isSingleTouch && this.options.animating && a - this.__lastTouchMove <= 100)) {
                    for (var b = this.__positions,
                    c = b.length - 1,
                    d = c,
                    i = c; i > 0 && b[i] > this.__lastTouchMove - 100; i -= 3) d = i;
                    if (d !== c) c = b[c] - b[d],
                    i = this.__scrollTop - b[d - 1],
                    this.__decelerationVelocityX = (this.__scrollLeft - b[d - 2]) / c * (1E3 / 60),
                    this.__decelerationVelocityY = i / c * (1E3 / 60),
                    b = this.options.paging || this.options.snapping ? 4 : 1,
                    (Math.abs(this.__decelerationVelocityX) > b || Math.abs(this.__decelerationVelocityY) > b) && this.__startDeceleration(a)
                }
                this.__isDecelerating || this.scrollTo(this.__scrollLeft, this.__scrollTop, !0, this.__zoomLevel);
                this.__positions.length = 0
            }
        },
        __publish: function(c, d, g, h) {
            var i = this,
            l = i.__isAnimating;
            if (l) scroller.Animate.stop(l),
            i.__isAnimating = !1;
            if (h && i.options.animating) {
                i.__scheduledLeft = c;
                i.__scheduledTop = d;
                i.__scheduledZoom = g;
                var j = i.__scrollLeft,
                o = i.__scrollTop,
                q = i.__zoomLevel,
                m = c - j,
                p = d - o,
                r = g - q;
                i.__isAnimating = scroller.Animate.start(function(a, b, c) {
                    if (c) i.__scrollLeft = j + m * a,
                    i.__scrollTop = o + p * a,
                    i.__zoomLevel = q + r * a,
                    i.__callback && i.__callback(i.__scrollLeft, i.__scrollTop, i.__zoomLevel)
                },
                function(a) {
                    return i.__isAnimating === a
                },
                function(a, b) {
                    if (b === i.__isAnimating) i.__isAnimating = !1;
                    i.options.zooming && i.__computeScrollMax()
                },
                250, l ? a: b)
            } else i.__scheduledLeft = i.__scrollLeft = c,
            i.__scheduledTop = i.__scrollTop = d,
            i.__scheduledZoom = i.__zoomLevel = g,
            i.__callback && i.__callback(c, d, g),
            i.options.zooming && i.__computeScrollMax()
        },
        __computeScrollMax: function(a) {
            if (a == null) a = this.__zoomLevel;
            this.__maxScrollLeft = Math.max(this.__contentWidth * a - this.__clientWidth, 0);
            this.__maxScrollTop = Math.max(this.__contentHeight * a - this.__clientHeight, 0)
        },
        __startDeceleration: function() {
            var a = this;
            if (a.options.paging) {
                var b = Math.max(Math.min(a.__scrollLeft, a.__maxScrollLeft), 0),
                c = Math.max(Math.min(a.__scrollTop, a.__maxScrollTop), 0),
                d = a.__clientWidth,
                i = a.__clientHeight;
                a.__minDecelerationScrollLeft = Math.floor(b / d) * d;
                a.__minDecelerationScrollTop = Math.floor(c / i) * i;
                a.__maxDecelerationScrollLeft = Math.ceil(b / d) * d;
                a.__maxDecelerationScrollTop = Math.ceil(c / i) * i
            } else a.__minDecelerationScrollLeft = 0,
            a.__minDecelerationScrollTop = 0,
            a.__maxDecelerationScrollLeft = a.__maxScrollLeft,
            a.__maxDecelerationScrollTop = a.__maxScrollTop;
            var l = a.options.snapping ? 4 : 0.1;
            a.__isDecelerating = scroller.Animate.start(function(b, c, d) {
                a.__stepThroughDeceleration(d)
            },
            function() {
                return Math.abs(a.__decelerationVelocityX) >= l || Math.abs(a.__decelerationVelocityY) >= l
            },
            function() {
                a.__isDecelerating = !1;
                a.scrollTo(a.__scrollLeft, a.__scrollTop, a.options.snapping)
            })
        },
        __stepThroughDeceleration: function(a) {
            var b = this.__scrollLeft + this.__decelerationVelocityX,
            c = this.__scrollTop + this.__decelerationVelocityY;
            if (!this.options.bouncing) {
                var d = Math.max(Math.min(this.__maxScrollLeft, b), 0);
                if (d !== b) b = d,
                this.__decelerationVelocityX = 0;
                d = Math.max(Math.min(this.__maxScrollTop, c), 0);
                if (d !== c) c = d,
                this.__decelerationVelocityY = 0
            }
            a ? this.__publish(b, c, this.__zoomLevel) : (this.__scrollLeft = b, this.__scrollTop = c);
            this.options.paging || (this.__decelerationVelocityX *= 0.95, this.__decelerationVelocityY *= 0.95);
            if (this.options.bouncing) {
                d = a = 0;
                b < this.__minDecelerationScrollLeft ? a = this.__minDecelerationScrollLeft - b: b > this.__maxDecelerationScrollLeft && (a = this.__maxDecelerationScrollLeft - b);
                c < this.__minDecelerationScrollTop ? d = this.__minDecelerationScrollTop - c: c > this.__maxDecelerationScrollTop && (d = this.__maxDecelerationScrollTop - c);
                if (a !== 0) a * this.__decelerationVelocityX <= 0 ? this.__decelerationVelocityX += a * 0.03 : this.__decelerationVelocityX = a * 0.08;
                if (d !== 0) d * this.__decelerationVelocityY <= 0 ? this.__decelerationVelocityY += d * 0.03 : this.__decelerationVelocityY = d * 0.08
            }
        }
    },
    d;
    for (d in c) Scroller.prototype[d] = c[d]
})();
var CryptoJS = CryptoJS ||
function(a, b) {
    var c = {},
    d = c.lib = {},
    e = d.Base = function() {
        function a() {}
        return {
            extend: function(b) {
                a.prototype = this;
                var c = new a;
                b && c.mixIn(b);
                c.$super = this;
                return c
            },
            create: function() {
                var a = this.extend();
                a.init.apply(a, arguments);
                return a
            },
            init: function() {},
            mixIn: function(a) {
                for (var b in a) a.hasOwnProperty(b) && (this[b] = a[b]);
                a.hasOwnProperty("toString") && (this.toString = a.toString)
            },
            clone: function() {
                return this.$super.extend(this)
            }
        }
    } (),
    f = d.WordArray = e.extend({
        init: function(a, c) {
            a = this.words = a || [];
            this.sigBytes = c != b ? c: 4 * a.length
        },
        toString: function(a) {
            return (a || h).stringify(this)
        },
        concat: function(a) {
            var b = this.words,
            c = a.words,
            d = this.sigBytes,
            a = a.sigBytes;
            this.clamp();
            if (d % 4) for (var e = 0; e < a; e++) b[d + e >>> 2] |= (c[e >>> 2] >>> 24 - 8 * (e % 4) & 255) << 24 - 8 * ((d + e) % 4);
            else if (65535 < c.length) for (e = 0; e < a; e += 4) b[d + e >>> 2] = c[e >>> 2];
            else b.push.apply(b, c);
            this.sigBytes += a;
            return this
        },
        clamp: function() {
            var b = this.words,
            c = this.sigBytes;
            b[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4);
            b.length = a.ceil(c / 4)
        },
        clone: function() {
            var a = e.clone.call(this);
            a.words = this.words.slice(0);
            return a
        },
        random: function(b) {
            for (var c = [], d = 0; d < b; d += 4) c.push(4294967296 * a.random() | 0);
            return f.create(c, b)
        }
    }),
    g = c.enc = {},
    h = g.Hex = {
        stringify: function(a) {
            for (var b = a.words,
            a = a.sigBytes,
            c = [], d = 0; d < a; d++) {
                var e = b[d >>> 2] >>> 24 - 8 * (d % 4) & 255;
                c.push((e >>> 4).toString(16));
                c.push((e & 15).toString(16))
            }
            return c.join("")
        },
        parse: function(a) {
            for (var b = a.length,
            c = [], d = 0; d < b; d += 2) c[d >>> 3] |= parseInt(a.substr(d, 2), 16) << 24 - 4 * (d % 8);
            return f.create(c, b / 2)
        }
    },
    i = g.Latin1 = {
        stringify: function(a) {
            for (var b = a.words,
            a = a.sigBytes,
            c = [], d = 0; d < a; d++) c.push(String.fromCharCode(b[d >>> 2] >>> 24 - 8 * (d % 4) & 255));
            return c.join("")
        },
        parse: function(a) {
            for (var b = a.length,
            c = [], d = 0; d < b; d++) c[d >>> 2] |= (a.charCodeAt(d) & 255) << 24 - 8 * (d % 4);
            return f.create(c, b)
        }
    },
    l = g.Utf8 = {
        stringify: function(a) {
            try {
                return decodeURIComponent(escape(i.stringify(a)))
            } catch(b) {
                throw Error("Malformed UTF-8 data");
            }
        },
        parse: function(a) {
            return i.parse(unescape(encodeURIComponent(a)))
        }
    },
    j = d.BufferedBlockAlgorithm = e.extend({
        reset: function() {
            this._data = f.create();
            this._nDataBytes = 0
        },
        _append: function(a) {
            "string" == typeof a && (a = l.parse(a));
            this._data.concat(a);
            this._nDataBytes += a.sigBytes
        },
        _process: function(b) {
            var c = this._data,
            d = c.words,
            e = c.sigBytes,
            g = this.blockSize,
            h = e / (4 * g),
            h = b ? a.ceil(h) : a.max((h | 0) - this._minBufferSize, 0),
            b = h * g,
            e = a.min(4 * b, e);
            if (b) {
                for (var i = 0; i < b; i += g) this._doProcessBlock(d, i);
                i = d.splice(0, b);
                c.sigBytes -= e
            }
            return f.create(i, e)
        },
        clone: function() {
            var a = e.clone.call(this);
            a._data = this._data.clone();
            return a
        },
        _minBufferSize: 0
    });
    d.Hasher = j.extend({
        init: function() {
            this.reset()
        },
        reset: function() {
            j.reset.call(this);
            this._doReset()
        },
        update: function(a) {
            this._append(a);
            this._process();
            return this
        },
        finalize: function(a) {
            a && this._append(a);
            this._doFinalize();
            return this._hash
        },
        clone: function() {
            var a = j.clone.call(this);
            a._hash = this._hash.clone();
            return a
        },
        blockSize: 16,
        _createHelper: function(a) {
            return function(b, c) {
                return a.create(c).finalize(b)
            }
        },
        _createHmacHelper: function(a) {
            return function(b, c) {
                return o.HMAC.create(a, c).finalize(b)
            }
        }
    });
    var o = c.algo = {};
    return c
} (Math); (function() {
    var a = CryptoJS,
    b = a.lib,
    c = b.WordArray,
    b = b.Hasher,
    d = [],
    e = a.algo.SHA1 = b.extend({
        _doReset: function() {
            this._hash = c.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
        },
        _doProcessBlock: function(a, b) {
            for (var c = this._hash.words,
            e = c[0], l = c[1], j = c[2], o = c[3], q = c[4], m = 0; 80 > m; m++) {
                if (16 > m) d[m] = a[b + m] | 0;
                else {
                    var p = d[m - 3] ^ d[m - 8] ^ d[m - 14] ^ d[m - 16];
                    d[m] = p << 1 | p >>> 31
                }
                p = (e << 5 | e >>> 27) + q + d[m];
                p = 20 > m ? p + ((l & j | ~l & o) + 1518500249) : 40 > m ? p + ((l ^ j ^ o) + 1859775393) : 60 > m ? p + ((l & j | l & o | j & o) - 1894007588) : p + ((l ^ j ^ o) - 899497514);
                q = o;
                o = j;
                j = l << 30 | l >>> 2;
                l = e;
                e = p
            }
            c[0] = c[0] + e | 0;
            c[1] = c[1] + l | 0;
            c[2] = c[2] + j | 0;
            c[3] = c[3] + o | 0;
            c[4] = c[4] + q | 0
        },
        _doFinalize: function() {
            var a = this._data,
            b = a.words,
            c = 8 * this._nDataBytes,
            d = 8 * a.sigBytes;
            b[d >>> 5] |= 128 << 24 - d % 32;
            b[(d + 64 >>> 9 << 4) + 15] = c;
            a.sigBytes = 4 * b.length;
            this._process()
        }
    });
    a.SHA1 = b._createHelper(e);
    a.HmacSHA1 = b._createHmacHelper(e)
})(); (function() {
    var a = CryptoJS,
    b = a.enc.Utf8;
    a.algo.HMAC = a.lib.Base.extend({
        init: function(a, d) {
            var c;
            c = this._hasher = a.create(),
            a = c;
            "string" == typeof d && (d = b.parse(d));
            var e = a.blockSize,
            f = 4 * e;
            d.sigBytes > f && (d = a.finalize(d));
            for (var g = this._oKey = d.clone(), h = this._iKey = d.clone(), i = g.words, l = h.words, j = 0; j < e; j++) i[j] ^= 1549556828,
            l[j] ^= 909522486;
            g.sigBytes = h.sigBytes = f;
            this.reset()
        },
        reset: function() {
            var a = this._hasher;
            a.reset();
            a.update(this._iKey)
        },
        update: function(a) {
            this._hasher.update(a);
            return this
        },
        finalize: function(a) {
            var b = this._hasher,
            a = b.finalize(a);
            b.reset();
            return b.finalize(this._oKey.clone().concat(a))
        }
    })
})(); (function() {
    var a = CryptoJS,
    b = a.lib.WordArray;
    a.enc.Base64 = {
        stringify: function(a) {
            var b = a.words,
            e = a.sigBytes,
            f = this._map;
            a.clamp();
            for (var a = [], g = 0; g < e; g += 3) for (var h = (b[g >>> 2] >>> 24 - 8 * (g % 4) & 255) << 16 | (b[g + 1 >>> 2] >>> 24 - 8 * ((g + 1) % 4) & 255) << 8 | b[g + 2 >>> 2] >>> 24 - 8 * ((g + 2) % 4) & 255, i = 0; 4 > i && g + 0.75 * i < e; i++) a.push(f.charAt(h >>> 6 * (3 - i) & 63));
            if (b = f.charAt(64)) for (; a.length % 4;) a.push(b);
            return a.join("")
        },
        parse: function(a) {
            var a = a.replace(/\s/g, ""),
            d = a.length,
            e = this._map,
            f = e.charAt(64);
            f && (f = a.indexOf(f), -1 != f && (d = f));
            for (var f = [], g = 0, h = 0; h < d; h++) if (h % 4) {
                var i = e.indexOf(a.charAt(h - 1)) << 2 * (h % 4),
                l = e.indexOf(a.charAt(h)) >>> 6 - 2 * (h % 4);
                f[g >>> 2] |= (i | l) << 24 - 8 * (g % 4);
                g++
            }
            return b.create(f, g)
        },
        _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
    }
})(); (function(a) {
    "function" === typeof bootstrap ? bootstrap("promise", a) : "object" === typeof exports ? a(void 0, exports) : "function" === typeof define ? define(a) : "undefined" !== typeof ses ? ses.ok() && (ses.makeQ = function() {
        return a(void 0, {})
    }) : a(void 0, Q = {})
})(function(a, b) {
    function c(a, b) {
        b.stack && "object" === typeof a && null !== a && a.stack && -1 === a.stack.indexOf(P) && (a.stack = d(a.stack) + "\n" + P + "\n" + d(b.stack))
    }
    function d(a) {
        for (var a = a.split("\n"), b = [], c = 0; c < a.length; ++c) {
            var d = a[c],
            e;
            if (e = /at .+ \((.*):(\d+):\d+\)/.exec(d)) {
                var f = e[2];
                e = e[1] === t && f >= n && f <= U
            } else e = !1; ! e && !( - 1 !== d.indexOf("(module.js:") || -1 !== d.indexOf("(node.js:")) && b.push(d)
        }
        return b.join("\n")
    }
    function e() {
        if (Error.captureStackTrace) {
            var a, b, c = Error.prepareStackTrace;
            Error.prepareStackTrace = function(c, d) {
                a = d[1].getFileName();
                b = d[1].getLineNumber()
            };
            Error.prepareStackTrace = c;
            t = a;
            return b
        }
    }
    function f(a, b, c) {
        return function() {
            "undefined" !== typeof console && "function" === typeof console.warn && console.warn(b + " is deprecated, use " + c + " instead.", Error("").stack);
            return a.apply(a, arguments)
        }
    }
    function g() {
        function a(e) {
            b && (d = m(e), I(b,
            function(a, b) {
                z(function() {
                    d.promiseDispatch.apply(d, b)
                })
            },
            void 0), c = b = void 0)
        }
        var b = [],
        c = [],
        d,
        e = J(g.prototype),
        f = J(h.prototype);
        f.promiseDispatch = function(a, e, f) {
            var g = D(arguments);
            b ? (b.push(g), "when" === e && f[1] && c.push(f[1])) : z(function() {
                d.promiseDispatch.apply(d, g)
            })
        };
        f.valueOf = function() {
            return b ? f: d.valueOf()
        };
        Error.captureStackTrace && (Error.captureStackTrace(f, g), f.stack = f.stack.substring(f.stack.indexOf("\n") + 1));
        B(f);
        e.promise = f;
        e.resolve = a;
        e.reject = function(b) {
            a(q(b))
        };
        e.notify = function(a) {
            b && I(c,
            function(b, c) {
                z(function() {
                    c(a)
                })
            },
            void 0)
        };
        return e
    }
    function h(a, b, c, d) {
        void 0 === b && (b = function(a) {
            return q(Error("Promise does not support operation: " + a))
        });
        var e = J(h.prototype);
        e.promiseDispatch = function(c, d, f) {
            var g;
            try {
                g = a[d] ? a[d].apply(e, f) : b.call(e, d, f)
            } catch(n) {
                g = q(n)
            }
            c && c(g)
        };
        c && (e.valueOf = c);
        d && (e.exception = d);
        B(e);
        return e
    }
    function i(a) {
        return l(a) ? a.valueOf() : a
    }
    function l(a) {
        return a && "function" === typeof a.promiseDispatch
    }
    function j(a) {
        return ! l(i(a))
    }
    function o(a) {
        a = i(a);
        return l(a) && "exception" in a
    }
    function q(a) {
        var a = a || Error(),
        b = h({
            when: function(b) {
                if (b) {
                    var c = M(L, this); - 1 !== c && (F.splice(c, 1), L.splice(c, 1))
                }
                return b ? b(a) : q(a)
            }
        },
        function() {
            return q(a)
        },
        function() {
            return this
        },
        a); ! K && "undefined" !== typeof window && !window.Touch && window.console && console.log("Should be empty:", F);
        K = !0;
        L.push(b);
        F.push(a);
        return b
    }
    function m(a) {
        if (l(a)) return a;
        if ((a = i(a)) && "function" === typeof a.then) {
            var b = g();
            a.then(b.resolve, b.reject, b.notify);
            return b.promise
        }
        return h({
            when: function() {
                return a
            },
            get: function(b) {
                return a[b]
            },
            put: function(b, c) {
                a[b] = c;
                return a
            },
            del: function(b) {
                delete a[b];
                return a
            },
            post: function(b, c) {
                return a[b].apply(a, c)
            },
            apply: function(b) {
                return a.apply(void 0, b)
            },
            keys: function() {
                return R(a)
            }
        },
        void 0,
        function() {
            return a
        })
    }
    function p(a, b, d, e) {
        function f(a) {
            try {
                return b ? b(a) : a
            } catch(c) {
                return q(c)
            }
        }
        function n(a) {
            if (d) {
                c(a, j);
                try {
                    return d(a)
                } catch(b) {
                    return q(b)
                }
            }
            return q(a)
        }
        var h = g(),
        i = !1,
        j = m(a);
        z(function() {
            j.promiseDispatch(function(a) {
                i || (i = !0, h.resolve(f(a)))
            },
            "when", [function(a) {
                i || (i = !0, h.resolve(n(a)))
            }])
        });
        j.promiseDispatch(void 0, "when", [void 0,
        function(a) {
            h.notify(e ? e(a) : a)
        }]);
        return h.promise
    }
    function r(a, b, c) {
        return p(a,
        function(a) {
            return x(a).then(function(a) {
                return b.apply(void 0, a)
            },
            c)
        },
        c)
    }
    function s(a, b, c) {
        var d = g();
        z(function() {
            m(a).promiseDispatch(d.resolve, b, c)
        });
        return d.promise
    }
    function v(a) {
        return function(b) {
            var c = D(arguments, 1);
            return s(b, a, c)
        }
    }
    function w(a) {
        var b = D(arguments, 1);
        return N(a, b)
    }
    function x(a) {
        return p(a,
        function(a) {
            var b = a.length;
            if (0 === b) return m(a);
            var c = g();
            I(a,
            function(d, e, f) {
                j(e) ? (a[f] = i(e), 0 === --b && c.resolve(a)) : p(e,
                function(d) {
                    a[f] = d;
                    0 === --b && c.resolve(a)
                }).fail(c.reject)
            },
            void 0);
            return c.promise
        })
    }
    function y(a, b) {
        return p(a, void 0, b)
    }
    function k(a, b) {
        var c = D(arguments, 2),
        d = g();
        c.push(d.makeNodeResolver());
        T(a, b, c).fail(d.reject);
        return d.promise
    }
    var n = e(),
    t,
    u = function() {},
    B = Object.freeze || u;
    "undefined" !== typeof cajaVM && (B = cajaVM.def);
    var z;
    if ("undefined" !== typeof process) z = process.nextTick;
    else if ("function" === typeof setImmediate) z = setImmediate;
    else if ("undefined" !== typeof MessageChannel) {
        var A = new MessageChannel,
        E = {},
        G = E;
        A.port1.onmessage = function() {
            E = E.next;
            var a = E.task;
            delete E.task;
            a()
        };
        z = function(a) {
            G = G.next = {
                task: a
            };
            A.port2.postMessage(0)
        }
    } else z = function(a) {
        setTimeout(a, 0)
    };
    var C;
    Function.prototype.bind ? (C = Function.prototype.bind, C = C.bind(C.call)) : C = function(a) {
        return function() {
            return a.call.apply(a, arguments)
        }
    };
    var D = C(Array.prototype.slice),
    I = C(Array.prototype.reduce ||
    function(a, b) {
        var c = 0,
        d = this.length;
        if (arguments.length === 1) {
            do {
                if (c in this) {
                    b = this[c++];
                    break
                }
                if (++c >= d) throw new TypeError;
            } while ( 1 )
        }
        for (; c < d; c++) c in this && (b = a(b, this[c], c));
        return b
    }),
    M = C(Array.prototype.indexOf ||
    function(a) {
        for (var b = 0; b < this.length; b++) if (this[b] === a) return b;
        return - 1
    }),
    O = C(Array.prototype.map ||
    function(a, b) {
        var c = this,
        d = [];
        I(c,
        function(e, f, g) {
            d.push(a.call(b, f, g, c))
        },
        void 0);
        return d
    }),
    J = Object.create ||
    function(a) {
        function b() {}
        b.prototype = a;
        return new b
    },
    R = Object.keys ||
    function(a) {
        var b = [],
        c;
        for (c in a) b.push(c);
        return b
    },
    S = Object.prototype.toString,
    H;
    H = "undefined" !== typeof ReturnValue ? ReturnValue: function(a) {
        this.value = a
    };
    var P = "From previous event:";
    b.nextTick = z;
    b.defer = g;
    g.prototype.makeNodeResolver = function() {
        var a = this;
        return function(b, c) {
            b ? a.reject(b) : arguments.length > 2 ? a.resolve(D(arguments, 1)) : a.resolve(c)
        }
    };
    b.promise = function(a) {
        var b = g();
        w(a, b.resolve, b.reject, b.notify).fail(b.reject);
        return b.promise
    };
    b.makePromise = h;
    h.prototype.then = function(a, b, c) {
        return p(this, a, b, c)
    };
    h.prototype.thenResolve = function(a) {
        return p(this,
        function() {
            return a
        })
    };
    I("isResolved isFulfilled isRejected dispatch when spread get put del post send invoke keys fapply fcall fbind all allResolved timeout delay catch finally fail fin progress end done nfcall nfapply nfbind ncall napply nbind npost nsend ninvoke nend nodeify".split(" "),
    function(a, c) {
        h.prototype[c] = function() {
            return b[c].apply(b, [this].concat(D(arguments)))
        }
    },
    void 0);
    h.prototype.toSource = function() {
        return this.toString()
    };
    h.prototype.toString = function() {
        return "[object Promise]"
    };
    B(h.prototype);
    b.nearer = i;
    b.isPromise = l;
    b.isResolved = function(a) {
        return j(a) || o(a)
    };
    b.isFulfilled = j;
    b.isRejected = o;
    var L = [],
    F = [],
    K;
    b.reject = q;
    b.resolve = m;
    b.master = function(a) {
        return h({
            isDef: function() {}
        },
        function(b, c) {
            return s(a, b, c)
        },
        function() {
            return i(a)
        })
    };
    b.when = p;
    b.spread = r;
    b.async = function(a) {
        return function() {
            function b(a, f) {
                var g;
                try {
                    g = c[a](f)
                } catch(n) {
                    return S(n) === "[object StopIteration]" || n instanceof H ? n.value: q(n)
                }
                return p(g, d, e)
            }
            var c = a.apply(this, arguments),
            d = b.bind(b, "send"),
            e = b.bind(b, "throw");
            return d()
        }
    };
    b["return"] = function(a) {
        throw new H(a);
    };
    b.promised = function(a) {
        return function() {
            return r([this, x(arguments)],
            function(b, c) {
                return a.apply(b, c)
            })
        }
    };
    b.dispatch = s;
    b.dispatcher = v;
    b.get = v("get");
    b.put = v("put");
    b["delete"] = b.del = v("del");
    var T = b.post = v("post");
    b.send = function(a, b) {
        var c = D(arguments, 2);
        return T(a, b, c)
    };
    b.invoke = f(b.send, "invoke", "send");
    var N = b.fapply = v("apply");
    b["try"] = w;
    b.fcall = w;
    b.fbind = function(a) {
        var b = D(arguments, 1);
        return function() {
            var c = b.concat(D(arguments));
            return N(a, c)
        }
    };
    b.keys = v("keys");
    b.all = x;
    b.allResolved = function(a) {
        return p(a,
        function(a) {
            return p(x(O(a,
            function(a) {
                return p(a, u, u)
            })),
            function() {
                return O(a, m)
            })
        })
    };
    b["catch"] = b.fail = y;
    b.progress = function(a, b) {
        return p(a, void 0, void 0, b)
    };
    b["finally"] = b.fin = function(a, b) {
        return p(a,
        function(a) {
            return p(b(),
            function() {
                return a
            })
        },
        function(a) {
            return p(b(),
            function() {
                return q(a)
            })
        })
    };
    b.done = function(a, d, e, f) {
        d = d || e || f ? p(a, d, e, f) : a;
        y(d,
        function(d) {
            z(function() {
                c(d, a);
                if (b.onerror) b.onerror(d);
                else throw d;
            })
        })
    };
    b.timeout = function(a, b) {
        var c = g(),
        d = setTimeout(function() {
            c.reject(Error("Timed out after " + b + " ms"))
        },
        b);
        p(a,
        function(a) {
            clearTimeout(d);
            c.resolve(a)
        },
        function(a) {
            clearTimeout(d);
            c.reject(a)
        });
        return c.promise
    };
    b.delay = function(a, b) {
        b === void 0 && (b = a, a = void 0);
        var c = g();
        setTimeout(function() {
            c.resolve(a)
        },
        b);
        return c.promise
    };
    b.nfapply = function(a, b) {
        var c = D(b),
        d = g();
        c.push(d.makeNodeResolver());
        N(a, c).fail(d.reject);
        return d.promise
    };
    b.nfcall = function(a) {
        var b = D(arguments, 1),
        c = g();
        b.push(c.makeNodeResolver());
        N(a, b).fail(c.reject);
        return c.promise
    };
    b.nfbind = function(a) {
        var b = D(arguments, 1);
        return function() {
            var c = b.concat(D(arguments)),
            d = g();
            c.push(d.makeNodeResolver());
            N(a, c).fail(d.reject);
            return d.promise
        }
    };
    b.npost = function(a, b, c) {
        var c = D(c),
        d = g();
        c.push(d.makeNodeResolver());
        T(a, b, c).fail(d.reject);
        return d.promise
    };
    b.nsend = k;
    b.ninvoke = f(k, "ninvoke", "nsend");
    b.nodeify = function(a, b) {
        if (b) a.then(function(a) {
            z(function() {
                b(null, a)
            })
        },
        function(a) {
            z(function() {
                b(a)
            })
        });
        else return a
    };
    var U = e()
}); (function(a) {
    function b(a) {
        return ! a[p] ? (a[p] = r++, !0) : !1
    }
    function c() {
        this.map_ = {}
    }
    function d(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b)
    }
    function e(a, b, c, d) {
        this.rootNode = a;
        this.elementFilter = b;
        this.calcReordered = c;
        this.calcOldPreviousSibling = d
    }
    function f(a) {
        function b() {
            e && (f && (e.qualifiers.push(f), f = void 0), d.push(e));
            e = {
                qualifiers: []
            }
        }
        function c() {
            f && e.qualifiers.push(f);
            f = {}
        }
        for (var d = [], e, f, g = /\s/, n, h = 1, i = 0; i < a.length;) {
            var j = a[i++];
            switch (h) {
            case 1:
                if (j.match(t)) {
                    b();
                    e.tagName = j;
                    h = 2;
                    break
                }
                if (j == "*") {
                    b();
                    e.tagName = "*";
                    h = 3;
                    break
                }
                if (j == ".") {
                    b();
                    c();
                    e.tagName = "*";
                    f.classBoolean = !0;
                    h = 4;
                    break
                }
                if (j == "#") {
                    b();
                    c();
                    e.tagName = "*";
                    f.id = !0;
                    h = 4;
                    break
                }
                if (j == "[") {
                    b();
                    c();
                    e.tagName = "*";
                    f.attrName = "";
                    h = 6;
                    break
                }
                if (j.match(g)) break;
                throw Error("Invalid or unsupported selector syntax.");
            case 2:
                if (j.match(u)) {
                    e.tagName += j;
                    break
                }
                if (j == ".") {
                    c();
                    f.classBoolean = !0;
                    h = 4;
                    break
                }
                if (j == "#") {
                    c();
                    f.id = !0;
                    h = 4;
                    break
                }
                if (j == "[") {
                    c();
                    f.attrName = "";
                    h = 6;
                    break
                }
                if (j.match(g)) {
                    h = 14;
                    break
                }
                if (j == ",") {
                    h = 1;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            case 3:
                if (j == ".") {
                    c();
                    f.classBoolean = !0;
                    h = 4;
                    break
                }
                if (j == "#") {
                    c();
                    f.id = !0;
                    h = 4;
                    break
                }
                if (j == "[") {
                    c();
                    f.attrName = "";
                    h = 6;
                    break
                }
                if (j.match(g)) {
                    h = 14;
                    break
                }
                if (j == ",") {
                    h = 1;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            case 4:
                if (j.match(t)) {
                    f.attrValue = j;
                    h = 5;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            case 5:
                if (j.match(u)) {
                    f.attrValue += j;
                    break
                }
                if (j == ".") {
                    c();
                    f.classBoolean = !0;
                    h = 4;
                    break
                }
                if (j == "#") {
                    c();
                    f.id = !0;
                    h = 4;
                    break
                }
                if (j == "[") {
                    c();
                    h = 6;
                    break
                }
                if (j.match(g)) {
                    h = 14;
                    break
                }
                if (j == ",") {
                    h = 1;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            case 6:
                if (j.match(t)) {
                    f.attrName = j;
                    h = 7;
                    break
                }
                if (j.match(g)) break;
                throw Error("Invalid or unsupported selector syntax.");
            case 7:
                if (j.match(u)) {
                    f.attrName += j;
                    break
                }
                if (j.match(g)) {
                    h = 8;
                    break
                }
                if (j == "~") {
                    f.contains = !0;
                    h = 9;
                    break
                }
                if (j == "=") {
                    f.attrValue = "";
                    h = 11;
                    break
                }
                if (j == "]") {
                    h = 3;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            case 8:
                if (j == "~") {
                    f.contains = !0;
                    h = 9;
                    break
                }
                if (j == "=") {
                    f.attrValue = "";
                    h = 11;
                    break
                }
                if (j == "]") {
                    h = 3;
                    break
                }
                if (j.match(g)) break;
                throw Error("Invalid or unsupported selector syntax.");
            case 9:
                if (j == "=") {
                    f.attrValue = "";
                    h = 11;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            case 10:
                if (j == "]") {
                    h = 3;
                    break
                }
                if (j.match(g)) break;
                throw Error("Invalid or unsupported selector syntax.");
            case 11:
                if (j.match(g)) break;
                if (j == '"' || j == "'") {
                    n = j;
                    h = 13;
                    break
                }
                f.attrValue += j;
                h = 12;
                break;
            case 12:
                if (j.match(g)) {
                    h = 10;
                    break
                }
                if (j == "]") {
                    h = 3;
                    break
                }
                if (j == "'" || j == '"') throw Error("Invalid or unsupported selector syntax.");
                f.attrValue += j;
                break;
            case 13:
                if (j == n) {
                    h = 10;
                    break
                }
                f.attrValue += j;
                break;
            case 14:
                if (j.match(g)) break;
                if (j == ",") {
                    h = 1;
                    break
                }
                throw Error("Invalid or unsupported selector syntax.");
            }
        }
        switch (h) {
        case 1:
        case 2:
        case 3:
        case 5:
        case 14:
            b();
            break;
        default:
            throw Error("Invalid or unsupported selector syntax.");
        }
        if (!d.length) throw Error("Invalid or unsupported selector syntax.");
        d.forEach(function(a) {
            var b = a.tagName.toUpperCase();
            if (a.tagName != b) a.caseInsensitiveTagName = b;
            var c = a.tagName;
            a.qualifiers.forEach(function(a) {
                if (a.classBoolean) c += "." + a.attrValue;
                else if (a.id) c += "#" + a.attrValue;
                else {
                    var b = a.attrName.toLowerCase();
                    if (a.attrName != b) a.caseInsensitiveAttrName = b;
                    a.contains ? c += "[" + a.attrName + "~=" + ('"' + a.attrValue.replace(/"/, '\\"') + '"') + "]": (c += "[" + a.attrName, a.hasOwnProperty("attrValue") && (c += "=" + ('"' + a.attrValue.replace(/"/, '\\"') + '"')), c += "]")
                }
            });
            a.selectorString = c
        });
        return d
    }
    function g(a) {
        if (typeof a != "string") throw Error("Invalid request opion. attribute must be a non-zero length string.");
        a = a.trim();
        if (!a) throw Error("Invalid request opion. attribute must be a non-zero length string.");
        if (!a.match(B)) throw Error("Invalid request option. invalid attribute name: " + a);
        return a
    }
    function h(a) {
        var b = {
            callback: !0,
            queries: !0,
            rootNode: !0,
            oldPreviousSibling: !0,
            observeOwnChanges: !0
        },
        c = {},
        d;
        for (d in a) if (! (d in b)) throw Error("Invalid option: " + d);
        if (typeof a.callback !== "function") throw Error("Invalid options: callback is required and must be a function");
        c.callback = a.callback;
        c.rootNode = a.rootNode || document;
        c.observeOwnChanges = a.observeOwnChanges;
        c.oldPreviousSibling = a.oldPreviousSibling;
        if (!a.queries || !a.queries.length) throw Error("Invalid options: queries must contain at least one query request object.");
        c.queries = [];
        for (b = 0; b < a.queries.length; b++) {
            var e = a.queries[b];
            if (e.all) {
                if (Object.keys(e).length > 1) throw Error("Invalid request option. all has no options.");
                c.queries.push({
                    all: !0
                })
            } else if (e.hasOwnProperty("attribute")) {
                d = {
                    attribute: g(e.attribute)
                };
                d.elementFilter = f("*[" + d.attribute + "]");
                if (Object.keys(e).length > 1) throw Error("Invalid request option. attribute has no options.");
                c.queries.push(d)
            } else if (e.hasOwnProperty("element")) {
                var h = Object.keys(e).length;
                d = {
                    element: e.element,
                    elementFilter: f(e.element)
                };
                if (e.hasOwnProperty("elementAttributes")) {
                    var n = d,
                    i = e.elementAttributes;
                    if (!i.trim().length) throw Error("Invalid request option: elementAttributes must contain at least one attribute.");
                    for (var e = {},
                    j = {},
                    i = i.split(/\s+/), t = 0; t < i.length; t++) {
                        var u = i[t];
                        if (u) {
                            u = g(u);
                            if (e.hasOwnProperty(u.toLowerCase())) throw Error("Invalid request option: observing multiple case varitations of the same attribute is not supported.");
                            j[u] = !0;
                            e[u.toLowerCase()] = !0
                        }
                    }
                    e = Object.keys(j);
                    n.elementAttributes = e;
                    h--
                }
                if (h > 1) throw Error("Invalid request option. element only allows elementAttributes option.");
                c.queries.push(d)
            } else if (e.characterData) {
                if (Object.keys(e).length > 1) throw Error("Invalid request option. characterData has no options.");
                c.queries.push({
                    characterData: !0
                })
            } else throw Error("Invalid request option. Unknown query request.");
        }
        return c
    }
    function i(a) {
        var b = {};
        a.forEach(function(a) {
            a.qualifiers.forEach(function(a) {
                a.classBoolean ? b["class"] = !0 : a.id ? b.id = !0 : b[a.attrName] = !0
            })
        });
        return Object.keys(b)
    }
    function l(a) {
        function b(a) {
            if (!c.attributes || d) c.attributes = !0,
            c.attributeOldValue = !0,
            a ? (d = d || {},
            a.forEach(function(a) {
                d[a] = !0;
                d[a.toLowerCase()] = !0
            })) : d = void 0
        }
        var c = {
            childList: !0,
            subtree: !0
        },
        d;
        a.forEach(function(a) {
            a.characterData ? (c.characterData = !0, c.characterDataOldValue = !0) : a.all ? (b(), c.characterData = !0, c.characterDataOldValue = !0) : a.attribute ? b([a.attribute.trim()]) : (a.elementFilter && a.elementFilter.some(function(a) {
                return a.className
            }) && b(["class"]), a = i(a.elementFilter).concat(a.elementAttributes || []), a.length && b(a))
        });
        if (d) c.attributeFilter = Object.keys(d);
        return c
    }
    function j(a, b, c) {
        a.elementFilter = c.elementFilter;
        a.filterCharacterData = c.characterData;
        var d = {
            target: b,
            type: "summary",
            added: [],
            removed: []
        };
        d.getOldParentNode = a.getOldParentNode.bind(a);
        if (c.all || c.element) d.reparented = [];
        if (c.all) d.reordered = [];
        a.getChanged(d);
        if (c.all || c.attribute || c.elementAttributes) if (b = a.getAttributesChanged(c.attribute ? [c.attribute] : c.elementAttributes), c.attribute) {
            d.valueChanged = [];
            if (b[c.attribute]) d.valueChanged = b[c.attribute];
            d.getOldAttribute = function(b) {
                return a.getOldAttribute(b, c.attribute)
            }
        } else d.attributeChanged = b,
        c.elementAttributes && c.elementAttributes.forEach(function(a) {
            d.attributeChanged.hasOwnProperty(a) || (d.attributeChanged[a] = [])
        }),
        d.getOldAttribute = a.getOldAttribute.bind(a);
        if (c.all || c.characterData) b = a.getCharacterDataChanged(),
        d.getOldCharacterData = a.getOldCharacterData.bind(a),
        c.characterData ? d.valueChanged = b: d.characterDataChanged = b;
        if (d.reordered) d.getOldPreviousSibling = a.getOldPreviousSibling.bind(a);
        return d
    }
    function o(a) {
        function b() {
            s.forEach(function(a) {
                a && a.recordPreviousState()
            })
        }
        function c(a) {
            s.forEach(function(b, c) {
                b && b.validate(a[c])
            })
        }
        function d(a) {
            if (!a || !a.length) return [];
            var b = new e(t, k, p, n.oldPreviousSibling);
            b.processMutations(a);
            return n.queries.map(function(a) {
                return j(b, t, a)
            })
        }
        function f(a) {
            return a.some(function(a) {
                return "added,removed,reordered,reparented,valueChanged,characterDataChanged".split(",").some(function(b) {
                    return a[b] && a[b].length
                }) ? !0 : a.attributeChanged && Object.keys(a.attributeChanged).some(function(b) {
                    return a.attributeChanged[b].length
                }) ? !0 : !1
            })
        }
        var g = !1,
        n = h(a),
        i = l(n.queries),
        t = n.rootNode,
        u = n.callback,
        k = Array.prototype.concat.apply([], n.queries.map(function(a) {
            return a.elementFilter ? a.elementFilter: []
        }));
        k.length || (k = void 0);
        var p = n.queries.some(function(a) {
            return a.all
        }),
        s = [];
        o.createQueryValidator && (s = n.queries.map(function(a) {
            return o.createQueryValidator(t, a)
        }));
        var q = new m(function(a) {
            n.observeOwnChanges || q.disconnect();
            a = d(a);
            c(a);
            n.observeOwnChanges && b();
            f(a) && u(a); ! n.observeOwnChanges && g && (b(), q.observe(t, i))
        });
        this.reconnect = function() {
            if (g) throw Error("Already connected");
            q.observe(t, i);
            g = !0;
            b()
        };
        var B = this.takeSummaries = function() {
            if (!g) throw Error("Not connected");
            var a = q.takeRecords(),
            a = d(a);
            if (f(a)) return a
        };
        this.disconnect = function() {
            var a = B();
            q.disconnect();
            g = !1;
            return a
        };
        this.reconnect()
    }
    var q = "matchesSelector";
    "webkitMatchesSelector" in Element.prototype ? q = "webkitMatchesSelector": "mozMatchesSelector" in Element.prototype && (q = "mozMatchesSelector");
    var m = a.MutationObserver || a.WebKitMutationObserver || a.MozMutationObserver;
    if (m === void 0) console.log("MutationSummary cannot load: DOM Mutation Observers are required."),
    console.log("https://developer.mozilla.org/en-US/docs/DOM/MutationObserver");
    else {
        var p = "__mutation_summary_node_map_id__",
        r = 1;
        c.prototype = {
            set: function(a, c) {
                b(a);
                this.map_[a[p]] = {
                    k: a,
                    v: c
                }
            },
            get: function(a) {
                if (!b(a) && (a = this.map_[a[p]])) return a.v
            },
            has: function(a) {
                return ! b(a) && a[p] in this.map_
            },
            deleteMethod: function(a) {
                b(a) || delete this.map_[a[p]]
            },
            keys: function() {
                var a = [],
                b;
                for (b in this.map_) a.push(this.map_[b].k);
                return a
            }
        };
        var s = 0,
        v = 1,
        w = 2,
        x = 3,
        y = 4,
        k = 5,
        n = Array.prototype.forEach.call.bind(Array.prototype.forEach);
        e.prototype = {
            getChange: function(a) {
                var b = this.changeMap.get(a);
                b || (b = {
                    target: a
                },
                this.changeMap.set(a, b));
                if (a.nodeType == Node.ELEMENT_NODE) b.matchCaseInsensitive = a instanceof HTMLElement && a.ownerDocument instanceof HTMLDocument;
                return b
            },
            getParentChange: function(a) {
                a = this.getChange(a);
                if (!a.childList) a.childList = !0,
                a.oldParentNode = null;
                return a
            },
            handleChildList: function(a) {
                this.childListChanges = !0;
                n(a.removedNodes,
                function(b) {
                    b = this.getParentChange(b);
                    b.added || b.oldParentNode ? b.added = !1 : b.oldParentNode = a.target
                },
                this);
                n(a.addedNodes,
                function(a) {
                    this.getParentChange(a).added = !0
                },
                this)
            },
            handleAttributes: function(a) {
                this.attributesChanges = !0;
                var b = this.getChange(a.target);
                if (!b.attributes) b.attributes = !0,
                b.attributeOldValues = {};
                b = b.attributeOldValues;
                if (!d(b, a.attributeName)) b[a.attributeName] = a.oldValue
            },
            handleCharacterData: function(a) {
                this.characterDataChanges = !0;
                var b = this.getChange(a.target);
                if (!b.characterData) b.characterData = !0,
                b.characterDataOldValue = a.oldValue
            },
            processMutations: function(a) {
                function b(a) {
                    if (t.calcOldPreviousSibling) {
                        t.processChildlistChanges();
                        var d = a.parentNode,
                        e = t.changeMap.get(a);
                        if (e && e.oldParentNode) d = e.oldParentNode;
                        e = t.childlistChanges.get(d);
                        e || (e = {
                            oldPrevious: new c
                        },
                        t.childlistChanges.set(d, e));
                        e.oldPrevious.has(a) || e.oldPrevious.set(a, a.previousSibling)
                    }
                }
                function d(a, c) {
                    if (!j.has(a)) {
                        j.set(a, !0);
                        var u = t.changeMap.get(a),
                        l = c;
                        if (u && u.childList || l == void 0) l = h(a);
                        if (l != s) {
                            n(a);
                            if (l == v) e.push(a);
                            else if (l == x) f.push(a),
                            b(a);
                            else if (l == w) {
                                var m = w;
                                u && u.childList && (u.oldParentNode !== a.parentNode ? (m = y, b(a)) : t.calcReordered && i(a) && (m = k));
                                g.set(a, m)
                            }
                            if (l != w) for (u = a.firstChild; u; u = u.nextSibling) d(u, l)
                        }
                    }
                }
                this.mutations = a;
                this.changeMap = new c;
                this.mutations.forEach(function(a) {
                    switch (a.type) {
                    case "childList":
                        this.handleChildList(a);
                        break;
                    case "attributes":
                        this.handleAttributes(a);
                        break;
                    case "characterData":
                        this.handleCharacterData(a)
                    }
                },
                this);
                var e = this.entered = [],
                f = this.exited = [],
                g = this.stayedIn = new c;
                if (this.childListChanges || this.attributesChanges) {
                    var n = this.matchabilityChange.bind(this),
                    h = this.reachabilityChange.bind(this),
                    i = this.wasReordered.bind(this),
                    j = new c,
                    t = this;
                    this.changeMap.keys().forEach(function(a) {
                        d(a)
                    })
                }
            },
            getChanged: function(a) {
                var b = this.matchabilityChange.bind(this);
                this.entered.forEach(function(c) {
                    var d = b(c); (d == v || d == w) && a.added.push(c)
                });
                this.stayedIn.keys().forEach(function(c) {
                    var d = b(c);
                    if (d == v) a.added.push(c);
                    else if (d == x) a.removed.push(c);
                    else if (d == w && (a.reparented || a.reordered)) d = this.stayedIn.get(c),
                    a.reparented && d == y ? a.reparented.push(c) : a.reordered && d == k && a.reordered.push(c)
                },
                this);
                this.exited.forEach(function(c) {
                    var d = b(c); (d == x || d == w) && a.removed.push(c)
                })
            },
            getOldParentNode: function(a) {
                var b = this.changeMap.get(a);
                if (b && b.childList) return b.oldParentNode ? b.oldParentNode: null;
                b = this.reachabilityChange(a);
                if (b == s || b == v) throw Error("getOldParentNode requested on invalid node.");
                return a.parentNode
            },
            getOldPreviousSibling: function(a) {
                var b = a.parentNode,
                c = this.changeMap.get(a);
                if (c && c.oldParentNode) b = c.oldParentNode;
                c = this.childlistChanges.get(b);
                if (!c) throw Error("getOldPreviousSibling requested on invalid node.");
                return c.oldPrevious.get(a)
            },
            getOldAttribute: function(a, b) {
                var c = this.changeMap.get(a);
                if (!c || !c.attributes) throw Error("getOldAttribute requested on invalid node.");
                c.matchCaseInsensitive && (b = b.toLowerCase());
                if (!d(c.attributeOldValues, b)) throw Error("getOldAttribute requested for unchanged attribute name.");
                return c.attributeOldValues[b]
            },
            getAttributesChanged: function(a) {
                if (!this.attributesChanges) return {};
                var b, c;
                a && (b = {},
                c = {},
                a.forEach(function(a) {
                    b[a] = !0;
                    var d = a.toLowerCase();
                    a != d && (c[d] = a)
                }));
                for (var d = {},
                a = this.changeMap.keys(), e = 0; e < a.length; e++) {
                    var f = a[e],
                    g = this.changeMap.get(f);
                    if (g.attributes && !(w != this.reachabilityChange(f) || w != this.matchabilityChange(f))) {
                        var n = f,
                        h = g.attributeOldValues;
                        Object.keys(h).forEach(function(a) {
                            var e = a;
                            g.matchCaseInsensitive && c && c[a] && (e = c[a]);
                            if ((!b || b[e]) && n.getAttribute(a) != h[a]) d[e] || (d[e] = []),
                            d[e].push(n)
                        })
                    }
                }
                return d
            },
            getOldCharacterData: function(a) {
                a = this.changeMap.get(a);
                if (!a || !a.characterData) throw Error("getOldCharacterData requested on invalid node.");
                return a.characterDataOldValue
            },
            getCharacterDataChanged: function() {
                if (!this.characterDataChanges) return [];
                for (var a = this.changeMap.keys(), b = [], c = 0; c < a.length; c++) {
                    var d = a[c];
                    if (! (w != this.reachabilityChange(d) || w != this.matchabilityChange(d))) {
                        var e = this.changeMap.get(d);
                        e.characterData && d.textContent != e.characterDataOldValue && b.push(d)
                    }
                }
                return b
            },
            reachabilityChange: function(a) {
                function b(a) {
                    if (a === e) return ! 0;
                    if (!a) return ! 1;
                    var c = g.get(a);
                    c === void 0 && (c = b(a.parentNode), g.set(a, c));
                    return c
                }
                function d(a) {
                    if (a === e) return ! 0;
                    if (!a) return ! 1;
                    var b = n.get(a);
                    if (b === void 0) {
                        var b = d,
                        c;
                        a: {
                            if ((c = f.get(a)) && c.childList) {
                                if (c.oldParentNode) {
                                    c = c.oldParentNode;
                                    break a
                                }
                                if (c.added) {
                                    c = null;
                                    break a
                                }
                            }
                            c = a.parentNode
                        }
                        b = b(c);
                        n.set(a, b)
                    }
                    return b
                }
                this.reachableCache = this.reachableCache || new c;
                this.wasReachableCache = this.wasReachableCache || new c;
                var e = this.rootNode,
                f = this.changeMap,
                g = this.reachableCache,
                n = this.wasReachableCache;
                return b(a) ? d(a) ? w: v: d(a) ? x: s
            },
            checkWasMatching: function(a, b, c) {
                var e = this.changeMap.get(a);
                if (!e || !e.attributeOldValues) return c;
                var f = b.tagName;
                if (e.matchCaseInsensitive && f != "*" && d(b, "caseInsensitiveTagName")) f = b.caseInsensitiveTagName;
                if (f != "*" && f != a.tagName) return ! 1;
                var g = e.attributeOldValues;
                if (!b.qualifiers.some(function(a) {
                    return a.classBoolean ? d(g, "class") : a.id ? d(g, "id") : e.matchCaseInsensitive && d(a, "caseInsensitiveAttrName") ? d(g, a.caseInsensitiveAttrName) : d(g, a.attrName)
                })) return c;
                for (c = 0; c < b.qualifiers.length; c++) {
                    var n = b.qualifiers[c],
                    h;
                    h = n.classBoolean ? "class": n.id ? "id": e.matchCaseInsensitive && d(n, "caseInsensitiveAttrName") ? n.caseInsensitiveAttrName: n.attrName;
                    f = n.classBoolean ? !0 : n.contains;
                    h = d(g, h) ? g[h] : a.getAttribute(h);
                    if (h == null) return ! 1;
                    if (n.hasOwnProperty("attrValue")) {
                        if (!f && n.attrValue !== h) return ! 1;
                        if (!h.split(" ").some(function(a) {
                            return a == n.attrValue
                        })) return ! 1
                    }
                }
                return ! 0
            },
            matchabilityChange: function(a) {
                if (this.filterCharacterData) switch (a.nodeType) {
                case Node.COMMENT_NODE:
                case Node.TEXT_NODE:
                    return w;
                default:
                    return s
                }
                if (!this.elementFilter) return w;
                if (a.nodeType !== Node.ELEMENT_NODE) return s;
                for (var b = this.elementFilter.map(function(b) {
                    if (!this.matchCache) this.matchCache = {};
                    this.matchCache[b.selectorString] || (this.matchCache[b.selectorString] = new c);
                    var d = this.matchCache[b.selectorString],
                    e = d.get(a);
                    if (e !== void 0) return e;
                    e = a[q](b.selectorString);
                    b = this.checkWasMatching(a, b, e);
                    e = e ? b ? w: v: b ? x: s;
                    d.set(a, e);
                    return e
                },
                this), d = s, e = 0; d != w && e < b.length;) {
                    switch (b[e]) {
                    case w:
                        d = w;
                        break;
                    case v:
                        d = d == x ? w: v;
                        break;
                    case x:
                        d = d == v ? w: x
                    }
                    e++
                }
                return d
            },
            processChildlistChanges: function() {
                function a(d) {
                    var e = b.get(d);
                    e || (e = {
                        added: new c,
                        removed: new c,
                        maybeMoved: new c,
                        oldPrevious: new c
                    },
                    b.set(d, e));
                    return e
                }
                if (!this.childlistChanges) {
                    var b = this.childlistChanges = new c,
                    d = this.reachabilityChange.bind(this),
                    e = this;
                    this.mutations.forEach(function(b) {
                        function c(a, b) {
                            a && !f.oldPrevious.has(a) && !f.added.has(a) && !f.maybeMoved.has(a) && (!b || !f.added.has(b) && !f.maybeMoved.has(b)) && f.oldPrevious.set(a, b)
                        }
                        if (b.type == "childList" && (d(b.target) == w || e.calcOldPreviousSibling)) {
                            var f = a(b.target),
                            g = b.previousSibling;
                            n(b.removedNodes,
                            function(a) {
                                c(a, g);
                                f.added.has(a) ? f.added.deleteMethod(a) : (f.removed.set(a, !0), f.maybeMoved.deleteMethod(a, !0));
                                g = a
                            });
                            c(b.nextSibling, g);
                            n(b.addedNodes,
                            function(a) {
                                f.removed.has(a) ? (f.removed.deleteMethod(a), f.maybeMoved.set(a, !0)) : f.added.set(a, !0)
                            })
                        }
                    })
                }
            },
            wasReordered: function(a) {
                function b(a) {
                    if (!a) return ! 1;
                    if (!f.maybeMoved.has(a)) return ! 1;
                    var c = g.get(a);
                    if (c !== void 0) return c;
                    if (n.has(a)) c = !0;
                    else {
                        n.set(a, !0);
                        if (i.has(a)) c = i.get(a);
                        else {
                            for (c = a.previousSibling; c && (f.added.has(c) || b(c));) c = c.previousSibling;
                            i.set(a, c)
                        }
                        c = c !== d(a)
                    }
                    n.has(a) ? (n.deleteMethod(a), g.set(a, c)) : c = g.get(a);
                    return c
                }
                function d(a) {
                    var c = h.get(a);
                    if (c !== void 0) return c;
                    for (c = f.oldPrevious.get(a); c && (f.removed.has(c) || b(c));) c = d(c);
                    if (c === void 0) c = a.previousSibling;
                    h.set(a, c);
                    return c
                }
                if (!this.childListChanges) return ! 1;
                this.processChildlistChanges();
                var e = a.parentNode,
                f = this.changeMap.get(a);
                if (f && f.oldParentNode) e = f.oldParentNode;
                f = this.childlistChanges.get(e);
                if (!f) return ! 1;
                if (f.moved) return f.moved.get(a);
                var g = f.moved = new c,
                n = new c,
                h = new c,
                i = new c;
                f.maybeMoved.keys().forEach(b);
                return f.moved.get(a)
            }
        };
        var t = /[a-zA-Z_]+/,
        u = /[a-zA-Z0-9_\-]+/,
        B = /^([a-zA-Z:_]+[a-zA-Z0-9_\-:\.]*)$/;
        a.MutationSummary = o;
        a.MutationSummary.NodeMap = c;
        a.MutationSummary.parseElementFilter = f
    }
})(this); (function(a) {
    function b() {
        if (typeof K == "undefined") {
            var a;
            a = new F;
            a.append(e(0).view);
            K = a.getBlob().size == 0
        }
        return K
    }
    function c() {
        var a = -1,
        b = this;
        b.append = function(c) {
            var d, e = b.table;
            for (d = 0; d < c.length; d++) a = a >>> 8 ^ e[(a ^ c[d]) & 255]
        };
        b.get = function() {
            return~a
        }
    }
    function d(a, b, c) {
        if (a.slice) return a.slice(b, b + c);
        else if (a.webkitSlice) return a.webkitSlice(b, b + c);
        else if (a.mozSlice) return a.mozSlice(b, b + c);
        else if (a.msSlice) return a.msSlice(b, b + c)
    }
    function e(a, b) {
        var c, d;
        c = new ArrayBuffer(a);
        d = new Uint8Array(c);
        b && d.set(b, 0);
        return {
            buffer: c,
            array: d,
            view: new DataView(c)
        }
    }
    function f() {}
    function g(a) {
        var b = this,
        c;
        b.size = 0;
        b.init = function(d, e) {
            var f = new F;
            f.append(a);
            c = new i(f.getBlob("text/plain"));
            c.init(function() {
                b.size = c.size;
                d()
            },
            e)
        };
        b.readUint8Array = function(a, b, d, e) {
            c.readUint8Array(a, b, d, e)
        }
    }
    function h(b) {
        var c = this,
        d;
        c.size = 0;
        c.init = function(a) {
            for (var e = b.length; b.charAt(e - 1) == "=";) e--;
            d = b.indexOf(",") + 1;
            c.size = Math.floor((e - d) * 0.75);
            a()
        };
        c.readUint8Array = function(c, f, g) {
            for (var n = e(f), h = Math.floor(c / 3) * 4, i = Math.ceil((c + f) / 3) * 4, i = a.atob(b.substring(h + d, i + d)), c = h = c - Math.floor(h / 4) * 3; c < h + f; c++) n.array[c - h] = i.charCodeAt(c);
            g(n.array)
        }
    }
    function i(a) {
        this.size = 0;
        this.init = function(b) {
            this.size = a.size;
            b()
        };
        this.readUint8Array = function(b, c, e, f) {
            var g = new FileReader;
            g.onload = function(a) {
                e(new Uint8Array(a.target.result))
            };
            g.onerror = f;
            g.readAsArrayBuffer(d(a, b, c))
        }
    }
    function l(a) {
        function b(d, e) {
            var f;
            c.data ? d() : (f = new XMLHttpRequest, f.addEventListener("load",
            function() {
                if (!c.size) c.size = Number(f.getResponseHeader("Content-Length"));
                c.data = new Uint8Array(f.response);
                d()
            },
            !1), f.addEventListener("error", e, !1), f.open("GET", a), f.responseType = "arraybuffer", f.send())
        }
        var c = this;
        c.size = 0;
        c.init = function(b, d) {
            var e = new XMLHttpRequest;
            e.addEventListener("load",
            function() {
                c.size = Number(e.getResponseHeader("Content-Length"));
                b()
            },
            !1);
            e.addEventListener("error", d, !1);
            e.open("HEAD", a);
            e.send()
        };
        c.readUint8Array = function(a, d, e, f) {
            b(function() {
                e(new Uint8Array(c.data.subarray(a, a + d)))
            },
            f)
        }
    }
    function j(a) {
        function b(c, d, e, f) {
            var g = new XMLHttpRequest;
            g.open("GET", a);
            g.responseType = "arraybuffer";
            g.setRequestHeader("Range", "bytes=" + c + "-" + (c + d - 1));
            g.addEventListener("load",
            function() {
                e(g.response)
            },
            !1);
            g.addEventListener("error", f, !1);
            g.send()
        }
        var c = this;
        c.size = 0;
        c.init = function(b, d) {
            var e = new XMLHttpRequest;
            e.addEventListener("load",
            function() {
                c.size = Number(e.getResponseHeader("Content-Length"));
                e.getResponseHeader("Accept-Ranges") == "bytes" ? b() : d(S)
            },
            !1);
            e.addEventListener("error", d, !1);
            e.open("HEAD", a);
            e.send()
        };
        c.readUint8Array = function(a, c, d, e) {
            b(a, c,
            function(a) {
                d(new Uint8Array(a))
            },
            e)
        }
    }
    function o() {}
    function q() {
        var a;
        this.init = function(b) {
            a = new F;
            b()
        };
        this.writeUint8Array = function(c, d) {
            a.append(b() ? c: c.buffer);
            d()
        };
        this.getData = function(b, c) {
            var d = new FileReader;
            d.onload = function(a) {
                b(a.target.result)
            };
            d.onerror = c;
            d.readAsText(a.getBlob("text/plain"))
        }
    }
    function m(b) {
        var c = "",
        d = "";
        this.init = function(a) {
            c += "data:" + (b || "") + ";base64,";
            a()
        };
        this.writeUint8Array = function(b, e) {
            var f, g = d.length,
            n = d;
            d = "";
            for (f = 0; f < Math.floor((g + b.length) / 3) * 3 - g; f++) n += String.fromCharCode(b[f]);
            for (; f < b.length; f++) d += String.fromCharCode(b[f]);
            n.length > 2 ? c += a.btoa(n) : d = n;
            e()
        };
        this.getData = function(b) {
            b(c + a.btoa(d))
        }
    }
    function p(a, c) {
        var d;
        this.init = function(b, c) {
            a.createWriter(function(a) {
                d = a;
                b()
            },
            c)
        };
        this.writeUint8Array = function(a, e, f) {
            var g = new F;
            g.append(b() ? a: a.buffer);
            d.onwrite = function() {
                d.onwrite = null;
                e()
            };
            d.onerror = f;
            d.write(g.getBlob(c))
        };
        this.getData = function(b) {
            a.file(b)
        }
    }
    function r(a) {
        var c;
        this.init = function(a) {
            c = new F;
            a()
        };
        this.writeUint8Array = function(a, d) {
            c.append(b() ? a: a.buffer);
            d()
        };
        this.getData = function(b) {
            b(c.getBlob(a))
        }
    }
    function s(a, b, c, d, e, f, g, n, h, i) {
        function j() {
            a.removeEventListener("message", t, !1);
            n(k)
        }
        function t(a) {
            var a = a.data,
            b = a.data;
            a.onappend && (k += b.length, c.writeUint8Array(b,
            function() {
                f(!1, b);
                u()
            },
            i));
            a.onflush && (b ? (k += b.length, c.writeUint8Array(b,
            function() {
                f(!1, b);
                j()
            },
            i)) : j());
            a.progress && g && g(m + a.current, e)
        }
        function u() {
            m = l * H;
            m < e ? b.readUint8Array(d + m, Math.min(H, e - m),
            function(b) {
                a.postMessage({
                    append: !0,
                    data: b
                });
                l++;
                g && g(m, e);
                f(!0, b)
            },
            h) : a.postMessage({
                flush: !0
            })
        }
        var l = 0,
        m, k;
        k = 0;
        a.addEventListener("message", t, !1);
        u()
    }
    function v(a, b, c, d, e, f, g, n, h, i) {
        function j() {
            var m;
            u = t * H;
            u < e ? b.readUint8Array(d + u, Math.min(H, e - u),
            function(b) {
                var n = a.append(b,
                function() {
                    g && g(d + u, e)
                });
                l += n.length;
                f(!0, b);
                c.writeUint8Array(n,
                function() {
                    f(!1, n);
                    t++;
                    setTimeout(j, 1)
                },
                i);
                g && g(u, e)
            },
            h) : (m = a.flush()) ? (l += m.length, c.writeUint8Array(m,
            function() {
                f(!1, m);
                n(l)
            },
            i)) : n(l)
        }
        var t = 0,
        u, l = 0;
        j()
    }
    function w(b, d, e, f, g, n, h, i, j) {
        function t(a, b) {
            g && !a && m.append(b)
        }
        function u(a) {
            n(a, m.get())
        }
        var l, m = new c;
        a.zip.useWebWorkers ? (l = new Worker(a.zip.workerScriptsPath + P), s(l, b, d, e, f, t, h, u, i, j)) : v(new a.zip.Inflater, b, d, e, f, t, h, u, i, j);
        return l
    }
    function x(b, d, e, f, g, n, h) {
        function i(a, b) {
            a && l.append(b)
        }
        function j(a) {
            f(a, l.get())
        }
        function t() {
            u.removeEventListener("message", t, !1);
            s(u, b, d, 0, b.size, i, g, j, n, h)
        }
        var u, l = new c;
        a.zip.useWebWorkers ? (u = new Worker(a.zip.workerScriptsPath + L), u.addEventListener("message", t, !1), u.postMessage({
            init: !0,
            level: e
        })) : v(new a.zip.Deflater, b, d, 0, b.size, i, g, j, n, h);
        return u
    }
    function y(a, b, d, e, f, g, n, h, i) {
        function j() {
            var c = t * H;
            c < e ? a.readUint8Array(d + c, Math.min(H, e - c),
            function(a) {
                f && u.append(a);
                n && n(c, e, a);
                b.writeUint8Array(a,
                function() {
                    t++;
                    j()
                },
                i)
            },
            h) : g(e, u.get())
        }
        var t = 0,
        u = new c;
        j()
    }
    function k(a) {
        var b, c = "",
        d, e = "\u00c7,\u00fc,\u00e9,\u00e2,\u00e4,\u00e0,\u00e5,\u00e7,\u00ea,\u00eb,\u00e8,\u00ef,\u00ee,\u00ec,\u00c4,\u00c5,\u00c9,\u00e6,\u00c6,\u00f4,\u00f6,\u00f2,\u00fb,\u00f9,\u00ff,\u00d6,\u00dc,\u00f8,\u00a3,\u00d8,\u00d7,\u0192,\u00e1,\u00ed,\u00f3,\u00fa,\u00f1,\u00d1,\u00aa,\u00ba,\u00bf,\u00ae,\u00ac,\u00bd,\u00bc,\u00a1,\u00ab,\u00bb,_,_,_,\u00a6,\u00a6,\u00c1,\u00c2,\u00c0,\u00a9,\u00a6,\u00a6,+,+,\u00a2,\u00a5,+,+,-,-,+,-,+,\u00e3,\u00c3,+,+,-,-,\u00a6,-,+,\u00a4,\u00f0,\u00d0,\u00ca,\u00cb,\u00c8,i,\u00cd,\u00ce,\u00cf,+,+,_,_,\u00a6,\u00cc,_,\u00d3,\u00df,\u00d4,\u00d2,\u00f5,\u00d5,\u00b5,\u00fe,\u00de,\u00da,\u00db,\u00d9,\u00fd,\u00dd,\u00af,\u00b4,\u00ad,\u00b1,_,\u00be,\u00b6,\u00a7,\u00f7,\u00b8,\u00b0,\u00a8,\u00b7,\u00b9,\u00b3,\u00b2,_, ".split(",");
        for (b = 0; b < a.length; b++) d = a.charCodeAt(b) & 255,
        c += d > 127 ? e[d - 128] : String.fromCharCode(d);
        return c
    }
    function n(a) {
        var b = [],
        c = 0,
        d = 0,
        e = 0,
        f = 0,
        g = 0;
        for (a += ""; c < a.length;) e = a.charCodeAt(c),
        e < 128 ? (b[d++] = String.fromCharCode(e), c++) : e > 191 && e < 224 ? (f = a.charCodeAt(c + 1), b[d++] = String.fromCharCode((e & 31) << 6 | f & 63), c += 2) : (f = a.charCodeAt(c + 1), g = a.charCodeAt(c + 2), b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63), c += 3);
        return b.join("")
    }
    function t(a) {
        var b, c = "";
        for (b = 0; b < a.length; b++) c += String.fromCharCode(a[b]);
        return c
    }
    function u(a, b, c, d, e) {
        a.version = b.view.getUint16(c, !0);
        a.bitFlag = b.view.getUint16(c + 2, !0);
        a.compressionMethod = b.view.getUint16(c + 4, !0);
        a.lastModDateRaw = b.view.getUint32(c + 6, !0);
        var f;
        var g = a.lastModDateRaw,
        n = (g & 4294901760) >> 16;
        g &= 65535;
        try {
            f = new Date(1980 + ((n & 65024) >> 9), ((n & 480) >> 5) - 1, n & 31, (g & 63488) >> 11, (g & 2016) >> 5, (g & 31) * 2, 0)
        } catch(h) {}
        a.lastModDate = f;
        if ((a.bitFlag & 1) === 1) e(C);
        else {
            if (d || (a.bitFlag & 8) != 8) a.crc32 = b.view.getUint32(c + 10, !0),
            a.compressedSize = b.view.getUint32(c + 14, !0),
            a.uncompressedSize = b.view.getUint32(c + 18, !0);
            a.compressedSize === 4294967295 || a.uncompressedSize === 4294967295 ? e(D) : (a.filenameLength = b.view.getUint16(c + 22, !0), a.extraFieldLength = b.view.getUint16(c + 24, !0))
        }
    }
    function B(a, b) {
        function c() {}
        function d(c, f) {
            a.readUint8Array(a.size - c, c,
            function(a) {
                a = e(a.length, a).view;
                a.getUint32(0) != 1347093766 ? d(c + 1, f) : f(a)
            },
            function() {
                b(I)
            })
        }
        c.prototype.getData = function(c, d, f, g) {
            function n(a, b) {
                m && m.terminate();
                m = null;
                a && a(b)
            }
            function h(a) {
                var b = e(4);
                b.view.setUint32(0, a);
                return l.crc32 == b.view.getUint32(0)
            }
            function i(a, b) {
                g && !h(b) ? j() : c.getData(function(a) {
                    n(d, a)
                })
            }
            function j() {
                n(b, J)
            }
            function t() {
                n(b, O)
            }
            var l = this,
            m;
            a.readUint8Array(l.offset, 30,
            function(d) {
                var d = e(d.length, d),
                n;
                d.view.getUint32(0) != 1347093252 ? b(G) : (u(l, d, 4, !1,
                function(a) {
                    b(a)
                }), n = l.offset + 30 + l.filenameLength + l.extraFieldLength, c.init(function() {
                    l.compressionMethod === 0 ? y(a, c, n, l.compressedSize, g, i, f, j, t) : m = w(a, c, n, l.compressedSize, g, i, f, j, t)
                },
                t))
            },
            j)
        };
        return {
            getEntries: function(f) {
                a.size < 22 ? b(G) : d(22,
                function(d) {
                    datalength = d.getUint32(16, !0);
                    fileslength = d.getUint16(8, !0);
                    a.readUint8Array(datalength, a.size - datalength,
                    function(a) {
                        for (var d = 0,
                        g = [], h, i, j = e(a.length, a), a = 0; a < fileslength; a++) {
                            h = new c;
                            if (j.view.getUint32(d) != 1347092738) {
                                b(G);
                                return
                            }
                            u(h, j, d + 6, !0,
                            function(a) {
                                b(a)
                            });
                            h.commentLength = j.view.getUint16(d + 32, !0);
                            h.directory = (j.view.getUint8(d + 38) & 16) == 16;
                            h.offset = j.view.getUint32(d + 42, !0);
                            i = t(j.array.subarray(d + 46, d + 46 + h.filenameLength));
                            h.filename = (h.bitFlag & 2048) === 2048 ? n(i) : k(i);
                            if (!h.directory && h.filename.charAt(h.filename.length - 1) == "/") h.directory = !0;
                            i = t(j.array.subarray(d + 46 + h.filenameLength + h.extraFieldLength, d + 46 + h.filenameLength + h.extraFieldLength + h.commentLength));
                            h.comment = (h.bitFlag & 2048) === 2048 ? n(i) : k(i);
                            g.push(h);
                            d += 46 + h.filenameLength + h.extraFieldLength + h.commentLength
                        }
                        f(g)
                    },
                    function() {
                        b(I)
                    })
                })
            },
            close: function(a) {
                a && a()
            }
        }
    }
    function z(a) {
        var b, c, d, e = [],
        f = 0,
        g = 0,
        n = a.length;
        for (b = 0; b < n; b++) c = a.charCodeAt(b),
        d = null,
        c < 128 ? g++:d = c > 127 && c < 2048 ? String.fromCharCode(c >> 6 | 192) + String.fromCharCode(c & 63 | 128) : String.fromCharCode(c >> 12 | 224) + String.fromCharCode(c >> 6 & 63 | 128) + String.fromCharCode(c & 63 | 128),
        d != null && (g > f && (e += a.slice(f, g)), e += d, f = g = b + 1);
        g > f && (e += a.slice(f, n));
        return e
    }
    function A(a) {
        var b, c = [];
        for (b = 0; b < a.length; b++) c.push(a.charCodeAt(b));
        return c
    }
    function E(a, b, c) {
        function d(a, b) {
            n && n.terminate();
            n = null;
            a && a(b)
        }
        function f() {
            d(b, M)
        }
        function g() {
            d(b, J)
        }
        var n, h = [],
        i = [],
        j = 0;
        return {
            add: function(b, t, u, l, m) {
                function k(d) {
                    var g;
                    B = m.lastModDate || new Date;
                    s = e(26);
                    h[b] = {
                        headerArray: s.array,
                        directory: m.directory,
                        filename: q,
                        offset: j,
                        comment: A(z(m.comment || ""))
                    };
                    s.view.setUint32(0, 335546376);
                    m.version && s.view.setUint8(0, m.version); ! c && m.level != 0 && s.view.setUint16(4, 2048);
                    s.view.setUint16(6, (B.getHours() << 6 | B.getMinutes()) << 5 | B.getSeconds() / 2, !0);
                    s.view.setUint16(8, (B.getFullYear() - 1980 << 4 | B.getMonth() + 1) << 5 | B.getDate(), !0);
                    s.view.setUint16(22, q.length, !0);
                    g = e(30 + q.length);
                    g.view.setUint32(0, 1347093252);
                    g.array.set(s.array, 4);
                    g.array.set([], 30);
                    g.array.set(q, 30);
                    j += g.array.length;
                    a.writeUint8Array(g.array, d, f)
                }
                function o(b, c) {
                    var g = e(16);
                    j += b || 0;
                    g.view.setUint32(0, 1347094280);
                    typeof c != "undefined" && (s.view.setUint32(10, c, !0), g.view.setUint32(4, c, !0));
                    t && (g.view.setUint32(8, b, !0), s.view.setUint32(14, b, !0), g.view.setUint32(12, t.size, !0), s.view.setUint32(18, t.size, !0));
                    a.writeUint8Array(g.array,
                    function() {
                        j += 16;
                        d(u)
                    },
                    f)
                }
                function p() {
                    m = m || {};
                    b = b.trim();
                    m.directory && b.charAt(b.length - 1) != "/" && (b += "/");
                    if (h[b]) throw R;
                    q = A(z(b));
                    i.push(b);
                    k(function() {
                        t ? c || m.level == 0 ? y(t, a, 0, t.size, !0, o, l, g, f) : n = x(t, a, m.level, o, l, g, f) : o()
                    },
                    f)
                }
                var s, q, B;
                t ? t.init(p, g) : p()
            },
            close: function(b) {
                var c, g = 0,
                n = 0;
                i.forEach(function(a) {
                    a = h[a];
                    g += 46 + a.filename.length + a.comment.length
                });
                c = e(g + 22);
                i.forEach(function(a) {
                    a = h[a];
                    c.view.setUint32(n, 1347092738);
                    c.view.setUint16(n + 4, 5120);
                    c.array.set(a.headerArray, n + 6);
                    c.view.setUint16(n + 32, a.comment.length, !0);
                    a.directory && c.view.setUint8(n + 38, 16);
                    c.view.setUint32(n + 42, a.offset, !0);
                    c.array.set(a.filename, n + 46);
                    c.array.set(a.comment, n + 46 + a.filename.length);
                    n += 46 + a.filename.length + a.comment.length
                });
                c.view.setUint32(n, 1347093766);
                c.view.setUint16(n + 8, i.length, !0);
                c.view.setUint16(n + 10, i.length, !0);
                c.view.setUint32(n + 12, g, !0);
                c.view.setUint32(n + 16, j, !0);
                a.writeUint8Array(c.array,
                function() {
                    d(function() {
                        a.getData(b)
                    })
                },
                f)
            }
        }
    }
    var G = "File format is not recognized.",
    C = "File contains encrypted entry.",
    D = "File is using Zip64 (4gb+ file size).",
    I = "Error while reading zip file.",
    M = "Error while writing zip file.",
    O = "Error while writing file data.",
    J = "Error while reading file data.",
    R = "File already exists.",
    S = "HTTP Range not supported.",
    H = 524288,
    P = "inflate.js",
    L = "deflate.js",
    F = a.WebKitBlobBuilder || a.MozBlobBuilder || a.MSBlobBuilder || a.BlobBuilder,
    K;
    c.prototype.table = function() {
        var a, b, c, d = [];
        for (a = 0; a < 256; a++) {
            c = a;
            for (b = 0; b < 8; b++) c & 1 ? c = c >>> 1 ^ 3988292384 : c >>>= 1;
            d[a] = c
        }
        return d
    } ();
    g.prototype = new f;
    g.prototype.constructor = g;
    h.prototype = new f;
    h.prototype.constructor = h;
    i.prototype = new f;
    i.prototype.constructor = i;
    l.prototype = new f;
    l.prototype.constructor = l;
    j.prototype = new f;
    j.prototype.constructor = j;
    o.prototype.getData = function(a) {
        a(this.data)
    };
    q.prototype = new o;
    q.prototype.constructor = q;
    m.prototype = new o;
    m.prototype.constructor = m;
    p.prototype = new o;
    p.prototype.constructor = p;
    r.prototype = new o;
    r.prototype.constructor = r;
    typeof F == "undefined" && (F = function() {
        var a;
        this.append = function(b) {
            a || (a = [new Blob]);
            a.push(b)
        };
        this.getBlob = function(b) {
            a || (a = [new Blob]);
            if (a.length > 1 || a[0].type != b) a = [b ? new Blob(a, {
                type: b
            }) : new Blob(a)];
            return a[0]
        }
    });
    a.zip = {
        Reader: f,
        Writer: o,
        BlobReader: i,
        HttpReader: l,
        HttpRangeReader: j,
        Data64URIReader: h,
        TextReader: g,
        BlobWriter: r,
        FileWriter: p,
        Data64URIWriter: m,
        TextWriter: q,
        createReader: function(a, b, c) {
            a.init(function() {
                b(B(a, c))
            },
            c)
        },
        createWriter: function(a, b, c, d) {
            a.init(function() {
                b(E(a, c, d))
            },
            c)
        },
        workerScriptsPath: "",
        useWebWorkers: !0
    }
})(this); (function() {
    var a = {
        application: {
            "andrew-inset": "ez",
            annodex: "anx",
            "atom+xml": "atom",
            "atomcat+xml": "atomcat",
            "atomserv+xml": "atomsrv",
            bbolin: "lin",
            cap: ["cap", "pcap"],
            "cu-seeme": "cu",
            "davmount+xml": "davmount",
            dsptype: "tsp",
            ecmascript: ["es", "ecma"],
            futuresplash: "spl",
            hta: "hta",
            "java-archive": "jar",
            "java-serialized-object": "ser",
            "java-vm": "class",
            javascript: "js",
            m3g: "m3g",
            "mac-binhex40": "hqx",
            mathematica: ["nb", "ma", "mb"],
            msaccess: "mdb",
            msword: ["doc", "dot"],
            mxf: "mxf",
            oda: "oda",
            ogg: "ogx",
            pdf: "pdf",
            "pgp-keys": "key",
            "pgp-signature": ["asc", "sig"],
            "pics-rules": "prf",
            postscript: "ps,ai,eps,epsi,epsf,eps2,eps3".split(","),
            rar: "rar",
            "rdf+xml": "rdf",
            "rss+xml": "rss",
            rtf: "rtf",
            smil: ["smi", "smil"],
            "xhtml+xml": ["xhtml", "xht"],
            xml: ["xml", "xsl", "xsd"],
            "xspf+xml": "xspf",
            zip: "zip",
            "vnd.android.package-archive": "apk",
            "vnd.cinderella": "cdy",
            "vnd.google-earth.kml+xml": "kml",
            "vnd.google-earth.kmz": "kmz",
            "vnd.mozilla.xul+xml": "xul",
            "vnd.ms-excel": "xls,xlb,xlt,xlm,xla,xlc,xlw".split(","),
            "vnd.ms-pki.seccat": "cat",
            "vnd.ms-pki.stl": "stl",
            "vnd.ms-powerpoint": ["ppt", "pps", "pot"],
            "vnd.oasis.opendocument.chart": "odc",
            "vnd.oasis.opendocument.database": "odb",
            "vnd.oasis.opendocument.formula": "odf",
            "vnd.oasis.opendocument.graphics": "odg",
            "vnd.oasis.opendocument.graphics-template": "otg",
            "vnd.oasis.opendocument.image": "odi",
            "vnd.oasis.opendocument.presentation": "odp",
            "vnd.oasis.opendocument.presentation-template": "otp",
            "vnd.oasis.opendocument.spreadsheet": "ods",
            "vnd.oasis.opendocument.spreadsheet-template": "ots",
            "vnd.oasis.opendocument.text": "odt",
            "vnd.oasis.opendocument.text-master": "odm",
            "vnd.oasis.opendocument.text-template": "ott",
            "vnd.oasis.opendocument.text-web": "oth",
            "vnd.openxmlformats-officedocument.spreadsheetml.sheet": "xlsx",
            "vnd.openxmlformats-officedocument.spreadsheetml.template": "xltx",
            "vnd.openxmlformats-officedocument.presentationml.presentation": "pptx",
            "vnd.openxmlformats-officedocument.presentationml.slideshow": "ppsx",
            "vnd.openxmlformats-officedocument.presentationml.template": "potx",
            "vnd.openxmlformats-officedocument.wordprocessingml.document": "docx",
            "vnd.openxmlformats-officedocument.wordprocessingml.template": "dotx",
            "vnd.smaf": "mmf",
            "vnd.stardivision.calc": "sdc",
            "vnd.stardivision.chart": "sds",
            "vnd.stardivision.draw": "sda",
            "vnd.stardivision.impress": "sdd",
            "vnd.stardivision.math": ["sdf", "smf"],
            "vnd.stardivision.writer": ["sdw", "vor"],
            "vnd.stardivision.writer-global": "sgl",
            "vnd.sun.xml.calc": "sxc",
            "vnd.sun.xml.calc.template": "stc",
            "vnd.sun.xml.draw": "sxd",
            "vnd.sun.xml.draw.template": "std",
            "vnd.sun.xml.impress": "sxi",
            "vnd.sun.xml.impress.template": "sti",
            "vnd.sun.xml.math": "sxm",
            "vnd.sun.xml.writer": "sxw",
            "vnd.sun.xml.writer.global": "sxg",
            "vnd.sun.xml.writer.template": "stw",
            "vnd.symbian.install": ["sis", "sisx"],
            "vnd.visio": ["vsd", "vst", "vss", "vsw"],
            "vnd.wap.wbxml": "wbxml",
            "vnd.wap.wmlc": "wmlc",
            "vnd.wap.wmlscriptc": "wmlsc",
            "vnd.wordperfect": "wpd",
            "vnd.wordperfect5.1": "wp5",
            "x-123": "wk",
            "x-7z-compressed": "7z",
            "x-abiword": "abw",
            "x-apple-diskimage": "dmg",
            "x-bcpio": "bcpio",
            "x-bittorrent": "torrent",
            "x-cbr": ["cbr", "cba", "cbt", "cb7"],
            "x-cbz": "cbz",
            "x-cdf": ["cdf", "cda"],
            "x-cdlink": "vcd",
            "x-chess-pgn": "pgn",
            "x-cpio": "cpio",
            "x-csh": "csh",
            "x-debian-package": ["deb", "udeb"],
            "x-director": "dcr,dir,dxr,cst,cct,cxt,w3d,fgd,swa".split(","),
            "x-dms": "dms",
            "x-doom": "wad",
            "x-dvi": "dvi",
            "x-httpd-eruby": "rhtml",
            "x-font": "pcf.Z",
            "x-freemind": "mm",
            "x-gnumeric": "gnumeric",
            "x-go-sgf": "sgf",
            "x-graphing-calculator": "gcf",
            "x-gtar": ["gtar", "taz"],
            "x-hdf": "hdf",
            "x-httpd-php": ["phtml", "pht", "php"],
            "x-httpd-php-source": "phps",
            "x-httpd-php3": "php3",
            "x-httpd-php3-preprocessed": "php3p",
            "x-httpd-php4": "php4",
            "x-httpd-php5": "php5",
            "x-ica": "ica",
            "x-info": "info",
            "x-internet-signup": ["ins", "isp"],
            "x-iphone": "iii",
            "x-iso9660-image": "iso",
            "x-java-jnlp-file": "jnlp",
            "x-jmol": "jmz",
            "x-killustrator": "kil",
            "x-koan": ["skp", "skd", "skt", "skm"],
            "x-kpresenter": ["kpr", "kpt"],
            "x-kword": ["kwd", "kwt"],
            "x-latex": "latex",
            "x-lha": "lha",
            "x-lyx": "lyx",
            "x-lzh": "lzh",
            "x-lzx": "lzx",
            "x-maker": "frm,maker,frame,fm,fb,book,fbdoc".split(","),
            "x-ms-wmd": "wmd",
            "x-ms-wmz": "wmz",
            "x-msdos-program": ["com", "exe", "bat", "dll"],
            "x-msi": "msi",
            "x-netcdf": ["nc", "cdf"],
            "x-ns-proxy-autoconfig": ["pac", "dat"],
            "x-nwc": "nwc",
            "x-object": "o",
            "x-oz-application": "oza",
            "x-pkcs7-certreqresp": "p7r",
            "x-python-code": ["pyc", "pyo"],
            "x-qgis": ["qgs", "shp", "shx"],
            "x-quicktimeplayer": "qtl",
            "x-redhat-package-manager": "rpm",
            "x-ruby": "rb",
            "x-sh": "sh",
            "x-shar": "shar",
            "x-shockwave-flash": ["swf", "swfl"],
            "x-silverlight": "scr",
            "x-stuffit": "sit",
            "x-sv4cpio": "sv4cpio",
            "x-sv4crc": "sv4crc",
            "x-tar": "tar",
            "x-tcl": "tcl",
            "x-tex-gf": "gf",
            "x-tex-pk": "pk",
            "x-texinfo": ["texinfo", "texi"],
            "x-trash": ["~", "%", "bak", "old", "sik"],
            "x-troff": ["t", "tr", "roff"],
            "x-troff-man": "man",
            "x-troff-me": "me",
            "x-troff-ms": "ms",
            "x-ustar": "ustar",
            "x-wais-source": "src",
            "x-wingz": "wz",
            "x-x509-ca-cert": ["crt", "der", "cer"],
            "x-xcf": "xcf",
            "x-xfig": "fig",
            "x-xpinstall": "xpi",
            applixware: "aw",
            "atomsvc+xml": "atomsvc",
            "ccxml+xml": "ccxml",
            "cdmi-capability": "cdmia",
            "cdmi-container": "cdmic",
            "cdmi-domain": "cdmid",
            "cdmi-object": "cdmio",
            "cdmi-queue": "cdmiq",
            "docbook+xml": "dbk",
            "dssc+der": "dssc",
            "dssc+xml": "xdssc",
            "emma+xml": "emma",
            "epub+zip": "epub",
            exi: "exi",
            "font-tdpfr": "pfr",
            "gml+xml": "gml",
            "gpx+xml": "gpx",
            gxf: "gxf",
            hyperstudio: "stk",
            "inkml+xml": ["ink", "inkml"],
            ipfix: "ipfix",
            json: "json",
            "jsonml+json": "jsonml",
            "lost+xml": "lostxml",
            "mads+xml": "mads",
            marc: "mrc",
            "marcxml+xml": "mrcx",
            "mathml+xml": "mathml",
            mbox: "mbox",
            "mediaservercontrol+xml": "mscml",
            "metalink+xml": "metalink",
            "metalink4+xml": "meta4",
            "mets+xml": "mets",
            "mods+xml": "mods",
            mp21: ["m21", "mp21"],
            mp4: "mp4s",
            "oebps-package+xml": "opf",
            "omdoc+xml": "omdoc",
            onenote: ["onetoc", "onetoc2", "onetmp", "onepkg"],
            oxps: "oxps",
            "patch-ops-error+xml": "xer",
            "pgp-encrypted": "pgp",
            pkcs10: "p10",
            "pkcs7-mime": ["p7m", "p7c"],
            "pkcs7-signature": "p7s",
            pkcs8: "p8",
            "pkix-attr-cert": "ac",
            "pkix-crl": "crl",
            "pkix-pkipath": "pkipath",
            pkixcmp: "pki",
            "pls+xml": "pls",
            "prs.cww": "cww",
            "pskc+xml": "pskcxml",
            "reginfo+xml": "rif",
            "relax-ng-compact-syntax": "rnc",
            "resource-lists+xml": "rl",
            "resource-lists-diff+xml": "rld",
            "rls-services+xml": "rs",
            "rpki-ghostbusters": "gbr",
            "rpki-manifest": "mft",
            "rpki-roa": "roa",
            "rsd+xml": "rsd",
            "sbml+xml": "sbml",
            "scvp-cv-request": "scq",
            "scvp-cv-response": "scs",
            "scvp-vp-request": "spq",
            "scvp-vp-response": "spp",
            sdp: "sdp",
            "set-payment-initiation": "setpay",
            "set-registration-initiation": "setreg",
            "shf+xml": "shf",
            "sparql-query": "rq",
            "sparql-results+xml": "srx",
            srgs: "gram",
            "srgs+xml": "grxml",
            "sru+xml": "sru",
            "ssdl+xml": "ssdl",
            "ssml+xml": "ssml",
            "tei+xml": ["tei", "teicorpus"],
            "thraud+xml": "tfi",
            "timestamped-data": "tsd",
            "vnd.3gpp.pic-bw-large": "plb",
            "vnd.3gpp.pic-bw-small": "psb",
            "vnd.3gpp.pic-bw-var": "pvb",
            "vnd.3gpp2.tcap": "tcap",
            "vnd.3m.post-it-notes": "pwn",
            "vnd.accpac.simply.aso": "aso",
            "vnd.accpac.simply.imp": "imp",
            "vnd.acucobol": "acu",
            "vnd.acucorp": ["atc", "acutc"],
            "vnd.adobe.air-application-installer-package+zip": "air",
            "vnd.adobe.formscentral.fcdt": "fcdt",
            "vnd.adobe.fxp": ["fxp", "fxpl"],
            "vnd.adobe.xdp+xml": "xdp",
            "vnd.adobe.xfdf": "xfdf",
            "vnd.ahead.space": "ahead",
            "vnd.airzip.filesecure.azf": "azf",
            "vnd.airzip.filesecure.azs": "azs",
            "vnd.amazon.ebook": "azw",
            "vnd.americandynamics.acc": "acc",
            "vnd.amiga.ami": "ami",
            "vnd.anser-web-certificate-issue-initiation": "cii",
            "vnd.anser-web-funds-transfer-initiation": "fti",
            "vnd.antix.game-component": "atx",
            "vnd.apple.installer+xml": "mpkg",
            "vnd.apple.mpegurl": "m3u8",
            "vnd.aristanetworks.swi": "swi",
            "vnd.astraea-software.iota": "iota",
            "vnd.audiograph": "aep",
            "vnd.blueice.multipass": "mpm",
            "vnd.bmi": "bmi",
            "vnd.businessobjects": "rep",
            "vnd.chemdraw+xml": "cdxml",
            "vnd.chipnuts.karaoke-mmd": "mmd",
            "vnd.claymore": "cla",
            "vnd.cloanto.rp9": "rp9",
            "vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"],
            "vnd.cluetrust.cartomobile-config": "c11amc",
            "vnd.cluetrust.cartomobile-config-pkg": "c11amz",
            "vnd.commonspace": "csp",
            "vnd.contact.cmsg": "cdbcmsg",
            "vnd.cosmocaller": "cmc",
            "vnd.crick.clicker": "clkx",
            "vnd.crick.clicker.keyboard": "clkk",
            "vnd.crick.clicker.palette": "clkp",
            "vnd.crick.clicker.template": "clkt",
            "vnd.crick.clicker.wordbank": "clkw",
            "vnd.criticaltools.wbs+xml": "wbs",
            "vnd.ctc-posml": "pml",
            "vnd.cups-ppd": "ppd",
            "vnd.curl.car": "car",
            "vnd.curl.pcurl": "pcurl",
            "vnd.dart": "dart",
            "vnd.data-vision.rdz": "rdz",
            "vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"],
            "vnd.dece.ttml+xml": ["uvt", "uvvt"],
            "vnd.dece.unspecified": ["uvx", "uvvx"],
            "vnd.dece.zip": ["uvz", "uvvz"],
            "vnd.denovo.fcselayout-link": "fe_launch",
            "vnd.dna": "dna",
            "vnd.dolby.mlp": "mlp",
            "vnd.dpgraph": "dpg",
            "vnd.dreamfactory": "dfac",
            "vnd.ds-keypoint": "kpxx",
            "vnd.dvb.ait": "ait",
            "vnd.dvb.service": "svc",
            "vnd.dynageo": "geo",
            "vnd.ecowin.chart": "mag",
            "vnd.enliven": "nml",
            "vnd.epson.esf": "esf",
            "vnd.epson.msf": "msf",
            "vnd.epson.quickanime": "qam",
            "vnd.epson.salt": "slt",
            "vnd.epson.ssf": "ssf",
            "vnd.eszigno3+xml": ["es3", "et3"],
            "vnd.ezpix-album": "ez2",
            "vnd.ezpix-package": "ez3",
            "vnd.fdf": "fdf",
            "vnd.fdsn.mseed": "mseed",
            "vnd.fdsn.seed": ["seed", "dataless"],
            "vnd.flographit": "gph",
            "vnd.fluxtime.clip": "ftc",
            "vnd.framemaker": ["fm", "frame", "maker", "book"],
            "vnd.frogans.fnc": "fnc",
            "vnd.frogans.ltf": "ltf",
            "vnd.fsc.weblaunch": "fsc",
            "vnd.fujitsu.oasys": "oas",
            "vnd.fujitsu.oasys2": "oa2",
            "vnd.fujitsu.oasys3": "oa3",
            "vnd.fujitsu.oasysgp": "fg5",
            "vnd.fujitsu.oasysprs": "bh2",
            "vnd.fujixerox.ddd": "ddd",
            "vnd.fujixerox.docuworks": "xdw",
            "vnd.fujixerox.docuworks.binder": "xbd",
            "vnd.fuzzysheet": "fzs",
            "vnd.genomatix.tuxedo": "txd",
            "vnd.geogebra.file": "ggb",
            "vnd.geogebra.tool": "ggt",
            "vnd.geometry-explorer": ["gex", "gre"],
            "vnd.geonext": "gxt",
            "vnd.geoplan": "g2w",
            "vnd.geospace": "g3w",
            "vnd.gmx": "gmx",
            "vnd.grafeq": ["gqf", "gqs"],
            "vnd.groove-account": "gac",
            "vnd.groove-help": "ghf",
            "vnd.groove-identity-message": "gim",
            "vnd.groove-injector": "grv",
            "vnd.groove-tool-message": "gtm",
            "vnd.groove-tool-template": "tpl",
            "vnd.groove-vcard": "vcg",
            "vnd.hal+xml": "hal",
            "vnd.handheld-entertainment+xml": "zmm",
            "vnd.hbci": "hbci",
            "vnd.hhe.lesson-player": "les",
            "vnd.hp-hpgl": "hpgl",
            "vnd.hp-hpid": "hpid",
            "vnd.hp-hps": "hps",
            "vnd.hp-jlyt": "jlt",
            "vnd.hp-pcl": "pcl",
            "vnd.hp-pclxl": "pclxl",
            "vnd.hydrostatix.sof-data": "sfd-hdstx",
            "vnd.ibm.minipay": "mpy",
            "vnd.ibm.modcap": ["afp", "listafp", "list3820"],
            "vnd.ibm.rights-management": "irm",
            "vnd.ibm.secure-container": "sc",
            "vnd.iccprofile": ["icc", "icm"],
            "vnd.igloader": "igl",
            "vnd.immervision-ivp": "ivp",
            "vnd.immervision-ivu": "ivu",
            "vnd.insors.igm": "igm",
            "vnd.intercon.formnet": ["xpw", "xpx"],
            "vnd.intergeo": "i2g",
            "vnd.intu.qbo": "qbo",
            "vnd.intu.qfx": "qfx",
            "vnd.ipunplugged.rcprofile": "rcprofile",
            "vnd.irepository.package+xml": "irp",
            "vnd.is-xpr": "xpr",
            "vnd.isac.fcs": "fcs",
            "vnd.jam": "jam",
            "vnd.jcp.javame.midlet-rms": "rms",
            "vnd.jisp": "jisp",
            "vnd.joost.joda-archive": "joda",
            "vnd.kahootz": ["ktz", "ktr"],
            "vnd.kde.karbon": "karbon",
            "vnd.kde.kchart": "chrt",
            "vnd.kde.kformula": "kfo",
            "vnd.kde.kivio": "flw",
            "vnd.kde.kontour": "kon",
            "vnd.kde.kpresenter": ["kpr", "kpt"],
            "vnd.kde.kspread": "ksp",
            "vnd.kde.kword": ["kwd", "kwt"],
            "vnd.kenameaapp": "htke",
            "vnd.kidspiration": "kia",
            "vnd.kinar": ["kne", "knp"],
            "vnd.koan": ["skp", "skd", "skt", "skm"],
            "vnd.kodak-descriptor": "sse",
            "vnd.las.las+xml": "lasxml",
            "vnd.llamagraphics.life-balance.desktop": "lbd",
            "vnd.llamagraphics.life-balance.exchange+xml": "lbe",
            "vnd.lotus-1-2-3": "123",
            "vnd.lotus-approach": "apr",
            "vnd.lotus-freelance": "pre",
            "vnd.lotus-notes": "nsf",
            "vnd.lotus-organizer": "org",
            "vnd.lotus-screencam": "scm",
            "vnd.lotus-wordpro": "lwp",
            "vnd.macports.portpkg": "portpkg",
            "vnd.mcd": "mcd",
            "vnd.medcalcdata": "mc1",
            "vnd.mediastation.cdkey": "cdkey",
            "vnd.mfer": "mwf",
            "vnd.mfmp": "mfm",
            "vnd.micrografx.flo": "flo",
            "vnd.micrografx.igx": "igx",
            "vnd.mif": "mif",
            "vnd.mobius.daf": "daf",
            "vnd.mobius.dis": "dis",
            "vnd.mobius.mbk": "mbk",
            "vnd.mobius.mqy": "mqy",
            "vnd.mobius.msl": "msl",
            "vnd.mobius.plc": "plc",
            "vnd.mobius.txf": "txf",
            "vnd.mophun.application": "mpn",
            "vnd.mophun.certificate": "mpc",
            "vnd.ms-artgalry": "cil",
            "vnd.ms-cab-compressed": "cab",
            "vnd.ms-excel.addin.macroenabled.12": "xlam",
            "vnd.ms-excel.sheet.binary.macroenabled.12": "xlsb",
            "vnd.ms-excel.sheet.macroenabled.12": "xlsm",
            "vnd.ms-excel.template.macroenabled.12": "xltm",
            "vnd.ms-fontobject": "eot",
            "vnd.ms-htmlhelp": "chm",
            "vnd.ms-ims": "ims",
            "vnd.ms-lrm": "lrm",
            "vnd.ms-officetheme": "thmx",
            "vnd.ms-powerpoint.addin.macroenabled.12": "ppam",
            "vnd.ms-powerpoint.presentation.macroenabled.12": "pptm",
            "vnd.ms-powerpoint.slide.macroenabled.12": "sldm",
            "vnd.ms-powerpoint.slideshow.macroenabled.12": "ppsm",
            "vnd.ms-powerpoint.template.macroenabled.12": "potm",
            "vnd.ms-project": ["mpp", "mpt"],
            "vnd.ms-word.document.macroenabled.12": "docm",
            "vnd.ms-word.template.macroenabled.12": "dotm",
            "vnd.ms-works": ["wps", "wks", "wcm", "wdb"],
            "vnd.ms-wpl": "wpl",
            "vnd.ms-xpsdocument": "xps",
            "vnd.mseq": "mseq",
            "vnd.musician": "mus",
            "vnd.muvee.style": "msty",
            "vnd.mynfc": "taglet",
            "vnd.neurolanguage.nlu": "nlu",
            "vnd.nitf": ["ntf", "nitf"],
            "vnd.noblenet-directory": "nnd",
            "vnd.noblenet-sealer": "nns",
            "vnd.noblenet-web": "nnw",
            "vnd.nokia.n-gage.data": "ngdat",
            "vnd.nokia.n-gage.symbian.install": "n-gage",
            "vnd.nokia.radio-preset": "rpst",
            "vnd.nokia.radio-presets": "rpss",
            "vnd.novadigm.edm": "edm",
            "vnd.novadigm.edx": "edx",
            "vnd.novadigm.ext": "ext",
            "vnd.oasis.opendocument.chart-template": "otc",
            "vnd.oasis.opendocument.formula-template": "odft",
            "vnd.oasis.opendocument.image-template": "oti",
            "vnd.olpc-sugar": "xo",
            "vnd.oma.dd2+xml": "dd2",
            "vnd.openofficeorg.extension": "oxt",
            "vnd.openxmlformats-officedocument.presentationml.slide": "sldx",
            "vnd.osgeo.mapguide.package": "mgp",
            "vnd.osgi.dp": "dp",
            "vnd.osgi.subsystem": "esa",
            "vnd.palm": ["pdb", "pqa", "oprc"],
            "vnd.pawaafile": "paw",
            "vnd.pg.format": "str",
            "vnd.pg.osasli": "ei6",
            "vnd.picsel": "efif",
            "vnd.pmi.widget": "wg",
            "vnd.pocketlearn": "plf",
            "vnd.powerbuilder6": "pbd",
            "vnd.previewsystems.box": "box",
            "vnd.proteus.magazine": "mgz",
            "vnd.publishare-delta-tree": "qps",
            "vnd.pvi.ptid1": "ptid",
            "vnd.quark.quarkxpress": "qxd,qxt,qwd,qwt,qxl,qxb".split(","),
            "vnd.realvnc.bed": "bed",
            "vnd.recordare.musicxml": "mxl",
            "vnd.recordare.musicxml+xml": "musicxml",
            "vnd.rig.cryptonote": "cryptonote",
            "vnd.rn-realmedia": "rm",
            "vnd.rn-realmedia-vbr": "rmvb",
            "vnd.route66.link66+xml": "link66",
            "vnd.sailingtracker.track": "st",
            "vnd.seemail": "see",
            "vnd.sema": "sema",
            "vnd.semd": "semd",
            "vnd.semf": "semf",
            "vnd.shana.informed.formdata": "ifm",
            "vnd.shana.informed.formtemplate": "itp",
            "vnd.shana.informed.interchange": "iif",
            "vnd.shana.informed.package": "ipk",
            "vnd.simtech-mindmapper": ["twd", "twds"],
            "vnd.smart.teacher": "teacher",
            "vnd.solent.sdkm+xml": ["sdkm", "sdkd"],
            "vnd.spotfire.dxp": "dxp",
            "vnd.spotfire.sfs": "sfs",
            "vnd.stepmania.package": "smzip",
            "vnd.stepmania.stepchart": "sm",
            "vnd.sus-calendar": ["sus", "susp"],
            "vnd.svd": "svd",
            "vnd.syncml+xml": "xsm",
            "vnd.syncml.dm+wbxml": "bdm",
            "vnd.syncml.dm+xml": "xdm",
            "vnd.tao.intent-module-archive": "tao",
            "vnd.tcpdump.pcap": ["pcap", "cap", "dmp"],
            "vnd.tmobile-livetv": "tmo",
            "vnd.trid.tpt": "tpt",
            "vnd.triscape.mxs": "mxs",
            "vnd.trueapp": "tra",
            "vnd.ufdl": ["ufd", "ufdl"],
            "vnd.uiq.theme": "utz",
            "vnd.umajin": "umj",
            "vnd.unity": "unityweb",
            "vnd.uoml+xml": "uoml",
            "vnd.vcx": "vcx",
            "vnd.visionary": "vis",
            "vnd.vsf": "vsf",
            "vnd.webturbo": "wtb",
            "vnd.wolfram.player": "nbp",
            "vnd.wqd": "wqd",
            "vnd.wt.stf": "stf",
            "vnd.xara": "xar",
            "vnd.xfdl": "xfdl",
            "vnd.yamaha.hv-dic": "hvd",
            "vnd.yamaha.hv-script": "hvs",
            "vnd.yamaha.hv-voice": "hvp",
            "vnd.yamaha.openscoreformat": "osf",
            "vnd.yamaha.openscoreformat.osfpvg+xml": "osfpvg",
            "vnd.yamaha.smaf-audio": "saf",
            "vnd.yamaha.smaf-phrase": "spf",
            "vnd.yellowriver-custom-menu": "cmp",
            "vnd.zul": ["zir", "zirz"],
            "vnd.zzazz.deck+xml": "zaz",
            "voicexml+xml": "vxml",
            widget: "wgt",
            winhlp: "hlp",
            "wsdl+xml": "wsdl",
            "wspolicy+xml": "wspolicy",
            "x-ace-compressed": "ace",
            "x-authorware-bin": ["aab", "x32", "u32", "vox"],
            "x-authorware-map": "aam",
            "x-authorware-seg": "aas",
            "x-blorb": ["blb", "blorb"],
            "x-bzip": "bz",
            "x-bzip2": ["bz2", "boz"],
            "x-cfs-compressed": "cfs",
            "x-chat": "chat",
            "x-conference": "nsc",
            "x-dgc-compressed": "dgc",
            "x-dtbncx+xml": "ncx",
            "x-dtbook+xml": "dtb",
            "x-dtbresource+xml": "res",
            "x-eva": "eva",
            "x-font-bdf": "bdf",
            "x-font-ghostscript": "gsf",
            "x-font-linux-psf": "psf",
            "x-font-otf": "otf",
            "x-font-pcf": "pcf",
            "x-font-snf": "snf",
            "x-font-ttf": ["ttf", "ttc"],
            "x-font-type1": ["pfa", "pfb", "pfm", "afm"],
            "x-font-woff": "woff",
            "x-freearc": "arc",
            "x-gca-compressed": "gca",
            "x-glulx": "ulx",
            "x-gramps-xml": "gramps",
            "x-install-instructions": "install",
            "x-lzh-compressed": ["lzh", "lha"],
            "x-mie": "mie",
            "x-mobipocket-ebook": ["prc", "mobi"],
            "x-ms-application": "application",
            "x-ms-shortcut": "lnk",
            "x-ms-xbap": "xbap",
            "x-msbinder": "obd",
            "x-mscardfile": "crd",
            "x-msclip": "clp",
            "x-msdownload": ["exe", "dll", "com", "bat", "msi"],
            "x-msmediaview": ["mvb", "m13", "m14"],
            "x-msmetafile": ["wmf", "wmz", "emf", "emz"],
            "x-msmoney": "mny",
            "x-mspublisher": "pub",
            "x-msschedule": "scd",
            "x-msterminal": "trm",
            "x-mswrite": "wri",
            "x-nzb": "nzb",
            "x-pkcs12": ["p12", "pfx"],
            "x-pkcs7-certificates": ["p7b", "spc"],
            "x-research-info-systems": "ris",
            "x-silverlight-app": "xap",
            "x-sql": "sql",
            "x-stuffitx": "sitx",
            "x-subrip": "srt",
            "x-t3vm-image": "t3",
            "x-tads": "gam",
            "x-tex": "tex",
            "x-tex-tfm": "tfm",
            "x-tgif": "obj",
            "x-xliff+xml": "xlf",
            "x-xz": "xz",
            "x-zmachine": "z1,z2,z3,z4,z5,z6,z7,z8".split(","),
            "xaml+xml": "xaml",
            "xcap-diff+xml": "xdf",
            "xenc+xml": "xenc",
            "xml-dtd": "dtd",
            "xop+xml": "xop",
            "xproc+xml": "xpl",
            "xslt+xml": "xslt",
            "xv+xml": ["mxml", "xhvml", "xvml", "xvm"],
            yang: "yang",
            "yin+xml": "yin",
            envoy: "evy",
            fractals: "fif",
            "internet-property-stream": "acx",
            olescript: "axs",
            "vnd.ms-outlook": "msg",
            "vnd.ms-pkicertstore": "sst",
            "x-compress": "z",
            "x-compressed": "tgz",
            "x-gzip": "gz",
            "x-perfmon": ["pma", "pmc", "pml", "pmr", "pmw"],
            "x-pkcs7-mime": ["p7c", "p7m"],
            "ynd.ms-pkipko": "pko"
        },
        audio: {
            amr: "amr",
            "amr-wb": "awb",
            annodex: "axa",
            basic: ["au", "snd"],
            flac: "flac",
            midi: ["mid", "midi", "kar", "rmi"],
            mpeg: "mpga,mpega,mp2,mp3,m4a,mp2a,m2a,m3a".split(","),
            mpegurl: "m3u",
            ogg: ["oga", "ogg", "spx"],
            "prs.sid": "sid",
            "x-aiff": ["aif", "aiff", "aifc"],
            "x-gsm": "gsm",
            "x-ms-wma": "wma",
            "x-ms-wax": "wax",
            "x-pn-realaudio": "ram",
            "x-realaudio": "ra",
            "x-sd2": "sd2",
            "x-wav": "wav",
            adpcm: "adp",
            mp4: "mp4a",
            s3m: "s3m",
            silk: "sil",
            "vnd.dece.audio": ["uva", "uvva"],
            "vnd.digital-winds": "eol",
            "vnd.dra": "dra",
            "vnd.dts": "dts",
            "vnd.dts.hd": "dtshd",
            "vnd.lucent.voice": "lvp",
            "vnd.ms-playready.media.pya": "pya",
            "vnd.nuera.ecelp4800": "ecelp4800",
            "vnd.nuera.ecelp7470": "ecelp7470",
            "vnd.nuera.ecelp9600": "ecelp9600",
            "vnd.rip": "rip",
            webm: "weba",
            "x-aac": "aac",
            "x-caf": "caf",
            "x-matroska": "mka",
            "x-pn-realaudio-plugin": "rmp",
            xm: "xm",
            mid: ["mid", "rmi"]
        },
        chemical: {
            "x-alchemy": "alc",
            "x-cache": ["cac", "cache"],
            "x-cache-csf": "csf",
            "x-cactvs-binary": ["cbin", "cascii", "ctab"],
            "x-cdx": "cdx",
            "x-chem3d": "c3d",
            "x-cif": "cif",
            "x-cmdf": "cmdf",
            "x-cml": "cml",
            "x-compass": "cpa",
            "x-crossfire": "bsd",
            "x-csml": ["csml", "csm"],
            "x-ctx": "ctx",
            "x-cxf": ["cxf", "cef"],
            "x-embl-dl-nucleotide": ["emb", "embl"],
            "x-gamess-input": ["inp", "gam", "gamin"],
            "x-gaussian-checkpoint": ["fch", "fchk"],
            "x-gaussian-cube": "cub",
            "x-gaussian-input": ["gau", "gjc", "gjf"],
            "x-gaussian-log": "gal",
            "x-gcg8-sequence": "gcg",
            "x-genbank": "gen",
            "x-hin": "hin",
            "x-isostar": ["istr", "ist"],
            "x-jcamp-dx": ["jdx", "dx"],
            "x-kinemage": "kin",
            "x-macmolecule": "mcm",
            "x-macromodel-input": ["mmd", "mmod"],
            "x-mdl-molfile": "mol",
            "x-mdl-rdfile": "rd",
            "x-mdl-rxnfile": "rxn",
            "x-mdl-sdfile": ["sd", "sdf"],
            "x-mdl-tgf": "tgf",
            "x-mmcif": "mcif",
            "x-mol2": "mol2",
            "x-molconn-Z": "b",
            "x-mopac-graph": "gpt",
            "x-mopac-input": ["mop", "mopcrt", "mpc", "zmt"],
            "x-mopac-out": "moo",
            "x-ncbi-asn1": "asn",
            "x-ncbi-asn1-ascii": ["prt", "ent"],
            "x-ncbi-asn1-binary": ["val", "aso"],
            "x-pdb": ["pdb", "ent"],
            "x-rosdal": "ros",
            "x-swissprot": "sw",
            "x-vamas-iso14976": "vms",
            "x-vmd": "vmd",
            "x-xtel": "xtel",
            "x-xyz": "xyz"
        },
        image: {
            gif: "gif",
            ief: "ief",
            jpeg: ["jpeg", "jpg", "jpe"],
            pcx: "pcx",
            png: "png",
            "svg+xml": ["svg", "svgz"],
            tiff: ["tiff", "tif"],
            "vnd.djvu": ["djvu", "djv"],
            "vnd.wap.wbmp": "wbmp",
            "x-canon-cr2": "cr2",
            "x-canon-crw": "crw",
            "x-cmu-raster": "ras",
            "x-coreldraw": "cdr",
            "x-coreldrawpattern": "pat",
            "x-coreldrawtemplate": "cdt",
            "x-corelphotopaint": "cpt",
            "x-epson-erf": "erf",
            "x-icon": "ico",
            "x-jg": "art",
            "x-jng": "jng",
            "x-nikon-nef": "nef",
            "x-olympus-orf": "orf",
            "x-photoshop": "psd",
            "x-portable-anymap": "pnm",
            "x-portable-bitmap": "pbm",
            "x-portable-graymap": "pgm",
            "x-portable-pixmap": "ppm",
            "x-rgb": "rgb",
            "x-xbitmap": "xbm",
            "x-xpixmap": "xpm",
            "x-xwindowdump": "xwd",
            bmp: "bmp",
            cgm: "cgm",
            g3fax: "g3",
            ktx: "ktx",
            "prs.btif": "btif",
            sgi: "sgi",
            "vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"],
            "vnd.dwg": "dwg",
            "vnd.dxf": "dxf",
            "vnd.fastbidsheet": "fbs",
            "vnd.fpx": "fpx",
            "vnd.fst": "fst",
            "vnd.fujixerox.edmics-mmr": "mmr",
            "vnd.fujixerox.edmics-rlc": "rlc",
            "vnd.ms-modi": "mdi",
            "vnd.ms-photo": "wdp",
            "vnd.net-fpx": "npx",
            "vnd.xiff": "xif",
            webp: "webp",
            "x-3ds": "3ds",
            "x-cmx": "cmx",
            "x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"],
            "x-pict": ["pic", "pct"],
            "x-tga": "tga",
            "cis-cod": "cod",
            pipeg: "jfif"
        },
        message: {
            rfc822: ["eml", "mime", "mht", "mhtml", "nws"]
        },
        model: {
            iges: ["igs", "iges"],
            mesh: ["msh", "mesh", "silo"],
            vrml: ["wrl", "vrml"],
            "x3d+vrml": ["x3dv", "x3dvz"],
            "x3d+xml": ["x3d", "x3dz"],
            "x3d+binary": ["x3db", "x3dbz"],
            "vnd.collada+xml": "dae",
            "vnd.dwf": "dwf",
            "vnd.gdl": "gdl",
            "vnd.gtw": "gtw",
            "vnd.mts": "mts",
            "vnd.vtu": "vtu"
        },
        text: {
            "cache-manifest": ["manifest", "appcache"],
            calendar: ["ics", "icz", "ifb"],
            css: "css",
            csv: "csv",
            h323: "323",
            html: ["html", "htm", "shtml", "stm"],
            iuls: "uls",
            mathml: "mml",
            plain: "txt,text,brf,conf,def,list,log,in,bas".split(","),
            richtext: "rtx",
            scriptlet: ["sct", "wsc"],
            texmacs: ["tm", "ts"],
            "tab-separated-values": "tsv",
            "vnd.sun.j2me.app-descriptor": "jad",
            "vnd.wap.wml": "wml",
            "vnd.wap.wmlscript": "wmls",
            "x-bibtex": "bib",
            "x-boo": "boo",
            "x-c++hdr": ["h++", "hpp", "hxx", "hh"],
            "x-c++src": ["c++", "cpp", "cxx", "cc"],
            "x-component": "htc",
            "x-dsrc": "d",
            "x-diff": ["diff", "patch"],
            "x-haskell": "hs",
            "x-java": "java",
            "x-literate-haskell": "lhs",
            "x-moc": "moc",
            "x-pascal": ["p", "pas"],
            "x-pcs-gcd": "gcd",
            "x-perl": ["pl", "pm"],
            "x-python": "py",
            "x-scala": "scala",
            "x-setext": "etx",
            "x-tcl": ["tcl", "tk"],
            "x-tex": ["tex", "ltx", "sty", "cls"],
            "x-vcalendar": "vcs",
            "x-vcard": "vcf",
            n3: "n3",
            "prs.lines.tag": "dsc",
            sgml: ["sgml", "sgm"],
            troff: "t,tr,roff,man,me,ms".split(","),
            turtle: "ttl",
            "uri-list": ["uri", "uris", "urls"],
            vcard: "vcard",
            "vnd.curl": "curl",
            "vnd.curl.dcurl": "dcurl",
            "vnd.curl.scurl": "scurl",
            "vnd.curl.mcurl": "mcurl",
            "vnd.dvb.subtitle": "sub",
            "vnd.fly": "fly",
            "vnd.fmi.flexstor": "flx",
            "vnd.graphviz": "gv",
            "vnd.in3d.3dml": "3dml",
            "vnd.in3d.spot": "spot",
            "x-asm": ["s", "asm"],
            "x-c": "c,cc,cxx,cpp,h,hh,dic".split(","),
            "x-fortran": ["f", "for", "f77", "f90"],
            "x-opml": "opml",
            "x-nfo": "nfo",
            "x-sfv": "sfv",
            "x-uuencode": "uu",
            webviewhtml: "htt"
        },
        video: {
            "3gpp": "3gp",
            annodex: "axv",
            dl: "dl",
            dv: ["dif", "dv"],
            fli: "fli",
            gl: "gl",
            mpeg: "mpeg,mpg,mpe,m1v,m2v,mp2,mpa,mpv2".split(","),
            mp4: ["mp4", "mp4v", "mpg4"],
            quicktime: ["qt", "mov"],
            ogg: "ogv",
            "vnd.mpegurl": ["mxu", "m4u"],
            "x-flv": "flv",
            "x-la-asf": ["lsf", "lsx"],
            "x-mng": "mng",
            "x-ms-asf": ["asf", "asx", "asr"],
            "x-ms-wm": "wm",
            "x-ms-wmv": "wmv",
            "x-ms-wmx": "wmx",
            "x-ms-wvx": "wvx",
            "x-msvideo": "avi",
            "x-sgi-movie": "movie",
            "x-matroska": ["mpv", "mkv", "mk3d", "mks"],
            "3gpp2": "3g2",
            h261: "h261",
            h263: "h263",
            h264: "h264",
            jpeg: "jpgv",
            jpm: ["jpm", "jpgm"],
            mj2: ["mj2", "mjp2"],
            "vnd.dece.hd": ["uvh", "uvvh"],
            "vnd.dece.mobile": ["uvm", "uvvm"],
            "vnd.dece.pd": ["uvp", "uvvp"],
            "vnd.dece.sd": ["uvs", "uvvs"],
            "vnd.dece.video": ["uvv", "uvvv"],
            "vnd.dvb.file": "dvb",
            "vnd.fvt": "fvt",
            "vnd.ms-playready.media.pyv": "pyv",
            "vnd.uvvu.mp4": ["uvu", "uvvu"],
            "vnd.vivo": "viv",
            webm: "webm",
            "x-f4v": "f4v",
            "x-m4v": "m4v",
            "x-ms-vob": "vob",
            "x-smv": "smv"
        },
        "x-conference": {
            "x-cooltalk": "ice"
        },
        "x-world": {
            "x-vrml": "vrm,vrml,wrl,flr,wrz,xaf,xof".split(",")
        }
    },
    b = function() {
        var b, d, e, f, g = {};
        for (b in a) if (a.hasOwnProperty(b)) for (d in a[b]) if (a[b].hasOwnProperty(d)) if (e = a[b][d], typeof e == "string") g[e] = b + "/" + d;
        else for (f = 0; f < e.length; f++) g[e[f]] = b + "/" + d;
        return g
    } ();
    zip.getMimeType = function(a) {
        return a ? b[a.split(".").pop()] || "application/octet-stream": "application/octet-stream"
    }
})(); (function() {
    function a(a) {
        this.tokens = [];
        this.tokens.links = {};
        this.options = a || h.defaults;
        this.rules = i.normal;
        if (this.options.gfm) this.rules = this.options.tables ? i.tables: i.gfm
    }
    function b(a, b) {
        this.options = b || h.defaults;
        this.links = a;
        this.rules = l.normal;
        if (!this.links) throw Error("Tokens array requires a `links` property.");
        if (this.options.gfm) this.rules = this.options.breaks ? l.breaks: l.gfm;
        else if (this.options.pedantic) this.rules = l.pedantic
    }
    function c(a) {
        this.tokens = [];
        this.token = null;
        this.options = a || h.defaults
    }
    function d(a, b) {
        return a.replace(!b ? /&(?!#?\w+;)/g: /&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
    }
    function e(a, b) {
        a = a.source;
        b = b || "";
        return function m(c, d) {
            if (!c) return RegExp(a, b);
            d = d.source || d;
            d = d.replace(/(^|[^\[])\^/g, "$1");
            a = a.replace(c, d);
            return m
        }
    }
    function f() {}
    function g(a) {
        for (var b = 1,
        c, d; b < arguments.length; b++) for (d in c = arguments[b], c) Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);
        return a
    }
    function h(b, e, f) {
        if (f || typeof e === "function") {
            f || (f = e, e = null);
            e && (e = g({},
            h.defaults, e));
            var i = e.highlight,
            l, r, s = 0;
            try {
                l = a.lex(b, e)
            } catch(v) {
                return f(v)
            }
            r = l.length;
            var w = function(a) {
                var b, d;
                a !== !0 && delete e.highlight;
                try {
                    b = c.parse(l, e)
                } catch(g) {
                    d = g
                }
                e.highlight = i;
                return d ? f(d) : f(null, b)
            };
            if (!i || i.length < 3) return w(!0);
            if (!r) return w();
            for (; s < l.length; s++)(function(a) {
                return a.type !== "code" ? --r || w() : i(a.text, a.lang,
                function(b, c) {
                    if (c == null || c === a.text) return--r || w();
                    a.text = c;
                    a.escaped = !0; --r || w()
                })
            })(l[s])
        } else try {
            return e && (e = g({},
            h.defaults, e)),
            c.parse(a.lex(b, e), e)
        } catch(x) {
            x.message += "\nPlease report this to https://github.com/chjj/marked.";
            if ((e || h.defaults).silent) return "<p>An error occured:</p><pre>" + d(x.message + "", !0) + "</pre>";
            throw x;
        }
    }
    var i = {
        newline: /^\n+/,
        code: /^( {4}[^\n]+\n*)+/,
        fences: f,
        hr: /^( *[-*_]){3,} *(?:\n+|$)/,
        heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
        nptable: f,
        lheading: /^([^\n]+)\n *(=|-){3,} *\n*/,
        blockquote: /^( *>[^\n]+(\n[^\n]+)*\n*)+/,
        list: /^( *)(bull) [\s\S]+?(?:hr|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
        html: /^ *(?:comment|closed|closing) *(?:\n{2,}|\s*$)/,
        def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,
        table: f,
        paragraph: /^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
        text: /^[^\n]+/,
        bullet: /(?:[*+-]|\d+\.)/,
        item: /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/
    };
    i.item = e(i.item, "gm")(/bull/g, i.bullet)();
    i.list = e(i.list)(/bull/g, i.bullet)("hr", /\n+(?=(?: *[-*_]){3,} *(?:\n+|$))/)();
    i._tag = "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|@)\\b";
    i.html = e(i.html)("comment", /<\!--[\s\S]*?--\>/)("closed", /<(tag)[\s\S]+?<\/\1>/)("closing", /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g, i._tag)();
    i.paragraph = e(i.paragraph)("hr", i.hr)("heading", i.heading)("lheading", i.lheading)("blockquote", i.blockquote)("tag", "<" + i._tag)("def", i.def)();
    i.normal = g({},
    i);
    i.gfm = g({},
    i.normal, {
        fences: /^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n+|$)/,
        paragraph: /^/
    });
    i.gfm.paragraph = e(i.paragraph)("(?!", "(?!" + i.gfm.fences.source.replace("\\1", "\\2") + "|")();
    i.tables = g({},
    i.gfm, {
        nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,
        table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/
    });
    a.rules = i;
    a.lex = function(b, c) {
        return (new a(c)).lex(b)
    };
    a.prototype.lex = function(a) {
        a = a.replace(/\r\n|\r/g, "\n").replace(/\t/g, "    ").replace(/\u00a0/g, " ").replace(/\u2424/g, "\n");
        return this.token(a, !0)
    };
    a.prototype.token = function(a, b) {
        for (var a = a.replace(/^ +$/gm, ""), c, d, e, f, g, h, l; a;) {
            if (e = this.rules.newline.exec(a)) a = a.substring(e[0].length),
            e[0].length > 1 && this.tokens.push({
                type: "space"
            });
            if (e = this.rules.code.exec(a)) a = a.substring(e[0].length),
            e = e[0].replace(/^ {4}/gm, ""),
            this.tokens.push({
                type: "code",
                text: !this.options.pedantic ? e.replace(/\n+$/, "") : e
            });
            else if (e = this.rules.fences.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: "code",
                lang: e[2],
                text: e[3]
            });
            else if (e = this.rules.heading.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: "heading",
                depth: e[1].length,
                text: e[2]
            });
            else if (b && (e = this.rules.nptable.exec(a))) {
                a = a.substring(e[0].length);
                g = {
                    type: "table",
                    header: e[1].replace(/^ *| *\| *$/g, "").split(/ *\| */),
                    align: e[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
                    cells: e[3].replace(/\n$/, "").split("\n")
                };
                for (h = 0; h < g.align.length; h++) g.align[h] = /^ *-+: *$/.test(g.align[h]) ? "right": /^ *:-+: *$/.test(g.align[h]) ? "center": /^ *:-+ *$/.test(g.align[h]) ? "left": null;
                for (h = 0; h < g.cells.length; h++) g.cells[h] = g.cells[h].split(/ *\| */);
                this.tokens.push(g)
            } else if (e = this.rules.lheading.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: "heading",
                depth: e[2] === "=" ? 1 : 2,
                text: e[1]
            });
            else if (e = this.rules.hr.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: "hr"
            });
            else if (e = this.rules.blockquote.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: "blockquote_start"
            }),
            e = e[0].replace(/^ *> ?/gm, ""),
            this.token(e, b),
            this.tokens.push({
                type: "blockquote_end"
            });
            else if (e = this.rules.list.exec(a)) {
                a = a.substring(e[0].length);
                f = e[2];
                this.tokens.push({
                    type: "list_start",
                    ordered: f.length > 1
                });
                e = e[0].match(this.rules.item);
                c = !1;
                l = e.length;
                for (h = 0; h < l; h++) g = e[h],
                d = g.length,
                g = g.replace(/^ *([*+-]|\d+\.) +/, ""),
                ~g.indexOf("\n ") && (d -= g.length, g = !this.options.pedantic ? g.replace(RegExp("^ {1," + d + "}", "gm"), "") : g.replace(/^ {1,4}/gm, "")),
                this.options.smartLists && h !== l - 1 && (d = i.bullet.exec(e[h + 1])[0], f !== d && !(f.length > 1 && d.length > 1) && (a = e.slice(h + 1).join("\n") + a, h = l - 1)),
                d = c || /\n\n(?!\s*$)/.test(g),
                h !== l - 1 && (c = g[g.length - 1] === "\n", d || (d = c)),
                this.tokens.push({
                    type: d ? "loose_item_start": "list_item_start"
                }),
                this.token(g, !1),
                this.tokens.push({
                    type: "list_item_end"
                });
                this.tokens.push({
                    type: "list_end"
                })
            } else if (e = this.rules.html.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: this.options.sanitize ? "paragraph": "html",
                pre: e[1] === "pre" || e[1] === "script",
                text: e[0]
            });
            else if (b && (e = this.rules.def.exec(a))) a = a.substring(e[0].length),
            this.tokens.links[e[1].toLowerCase()] = {
                href: e[2],
                title: e[3]
            };
            else if (b && (e = this.rules.table.exec(a))) {
                a = a.substring(e[0].length);
                g = {
                    type: "table",
                    header: e[1].replace(/^ *| *\| *$/g, "").split(/ *\| */),
                    align: e[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
                    cells: e[3].replace(/(?: *\| *)?\n$/, "").split("\n")
                };
                for (h = 0; h < g.align.length; h++) g.align[h] = /^ *-+: *$/.test(g.align[h]) ? "right": /^ *:-+: *$/.test(g.align[h]) ? "center": /^ *:-+ *$/.test(g.align[h]) ? "left": null;
                for (h = 0; h < g.cells.length; h++) g.cells[h] = g.cells[h].replace(/^ *\| *| *\| *$/g, "").split(/ *\| */);
                this.tokens.push(g)
            } else if (b && (e = this.rules.paragraph.exec(a))) a = a.substring(e[0].length),
            this.tokens.push({
                type: "paragraph",
                text: e[1][e[1].length - 1] === "\n" ? e[1].slice(0, -1) : e[1]
            });
            else if (e = this.rules.text.exec(a)) a = a.substring(e[0].length),
            this.tokens.push({
                type: "text",
                text: e[0]
            });
            else if (a) throw Error("Infinite loop on byte: " + a.charCodeAt(0));
        }
        return this.tokens
    };
    var l = {
        escape: /^\\([\\`*{}\[\]()#+\-.!_>])/,
        autolink: /^<([^ >]+(@|:\/)[^ >]+)>/,
        url: f,
        tag: /^<\!--[\s\S]*?--\>|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,
        link: /^!?\[(inside)\]\(href\)/,
        reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
        nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
        strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
        em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
        code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
        br: /^ {2,}\n(?!\s*$)/,
        del: f,
        text: /^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/,
        _inside: /(?:\[[^\]]*\]|[^\]]|\](?=[^\[]*\]))*/,
        _href: /\s*<?([^\s]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/
    };
    l.link = e(l.link)("inside", l._inside)("href", l._href)();
    l.reflink = e(l.reflink)("inside", l._inside)();
    l.normal = g({},
    l);
    l.pedantic = g({},
    l.normal, {
        strong: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
        em: /^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/
    });
    l.gfm = g({},
    l.normal, {
        escape: e(l.escape)("])", "~|])")(),
        url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,
        del: /^~~(?=\S)([\s\S]*?\S)~~/,
        text: e(l.text)("]|", "~]|")("|", "|https?://|")()
    });
    l.breaks = g({},
    l.gfm, {
        br: e(l.br)("{2,}", "*")(),
        text: e(l.gfm.text)("{2,}", "*")()
    });
    b.rules = l;
    b.output = function(a, c, d) {
        return (new b(c, d)).output(a)
    };
    b.prototype.output = function(a) {
        var k;
        var j;
        for (var b = "",
        c, e; a;) if (e = this.rules.escape.exec(a)) a = a.substring(e[0].length),
        b += e[1];
        else if (e = this.rules.autolink.exec(a)) a = a.substring(e[0].length),
        e[2] === "@" ? (c = e[1][6] === ":" ? this.mangle(e[1].substring(7)) : this.mangle(e[1]), e = this.mangle("mailto:") + c) : (j = c = d(e[1]), e = j),
        b += '<a href="' + e + '">' + c + "</a>";
        else if (e = this.rules.url.exec(a)) a = a.substring(e[0].length),
        k = c = d(e[1]),
        e = k,
        b += '<a href="' + e + '">' + c + "</a>";
        else if (e = this.rules.tag.exec(a)) a = a.substring(e[0].length),
        b += this.options.sanitize ? d(e[0]) : e[0];
        else if (e = this.rules.link.exec(a)) a = a.substring(e[0].length),
        b += this.outputLink(e, {
            href: e[2],
            title: e[3]
        });
        else if ((e = this.rules.reflink.exec(a)) || (e = this.rules.nolink.exec(a))) a = a.substring(e[0].length),
        c = (e[2] || e[1]).replace(/\s+/g, " "),
        c = this.links[c.toLowerCase()],
        !c || !c.href ? (b += e[0][0], a = e[0].substring(1) + a) : b += this.outputLink(e, c);
        else if (e = this.rules.strong.exec(a)) a = a.substring(e[0].length),
        b += "<strong>" + this.output(e[2] || e[1]) + "</strong>";
        else if (e = this.rules.em.exec(a)) a = a.substring(e[0].length),
        b += "<em>" + this.output(e[2] || e[1]) + "</em>";
        else if (e = this.rules.code.exec(a)) a = a.substring(e[0].length),
        b += "<code>" + d(e[2], !0) + "</code>";
        else if (e = this.rules.br.exec(a)) a = a.substring(e[0].length),
        b += "<br>";
        else if (e = this.rules.del.exec(a)) a = a.substring(e[0].length),
        b += "<del>" + this.output(e[1]) + "</del>";
        else if (e = this.rules.text.exec(a)) a = a.substring(e[0].length),
        b += d(this.smartypants(e[0]));
        else if (a) throw Error("Infinite loop on byte: " + a.charCodeAt(0));
        return b
    };
    b.prototype.outputLink = function(a, b) {
        return a[0][0] !== "!" ? '<a href="' + d(b.href) + '"' + (b.title ? ' title="' + d(b.title) + '"': "") + ">" + this.output(a[1]) + "</a>": '<img src="' + d(b.href) + '" alt="' + d(a[1]) + '"' + (b.title ? ' title="' + d(b.title) + '"': "") + ">"
    };
    b.prototype.smartypants = function(a) {
        return ! this.options.smartypants ? a: a.replace(/--/g, "\u2014").replace(/'([^']*)'/g, "\u2018$1\u2019").replace(/"([^"]*)"/g, "\u201c$1\u201d").replace(/\.{3}/g, "\u2026")
    };
    b.prototype.mangle = function(a) {
        for (var b = "",
        c = a.length,
        d = 0,
        e; d < c; d++) e = a.charCodeAt(d),
        Math.random() > 0.5 && (e = "x" + e.toString(16)),
        b += "&#" + e + ";";
        return b
    };
    c.parse = function(a, b) {
        return (new c(b)).parse(a)
    };
    c.prototype.parse = function(a) {
        this.inline = new b(a.links, this.options);
        this.tokens = a.reverse();
        for (a = ""; this.next();) a += this.tok();
        return a
    };
    c.prototype.next = function() {
        return this.token = this.tokens.pop()
    };
    c.prototype.peek = function() {
        return this.tokens[this.tokens.length - 1] || 0
    };
    c.prototype.parseText = function() {
        for (var a = this.token.text; this.peek().type === "text";) a += "\n" + this.next().text;
        return this.inline.output(a)
    };
    c.prototype.tok = function() {
        switch (this.token.type) {
        case "space":
            return "";
        case "hr":
            return "<hr>\n";
        case "heading":
            return "<h" + this.token.depth + ">" + this.inline.output(this.token.text) + "</h" + this.token.depth + ">\n";
        case "code":
            if (this.options.highlight) {
                var a = this.options.highlight(this.token.text, this.token.lang);
                if (a != null && a !== this.token.text) this.token.escaped = !0,
                this.token.text = a
            }
            if (!this.token.escaped) this.token.text = d(this.token.text, !0);
            return "<pre><code" + (this.token.lang ? ' class="' + this.options.langPrefix + this.token.lang + '"': "") + ">" + this.token.text + "</code></pre>\n";
        case "table":
            var a = "",
            b, c, e, f;
            a += "<thead>\n<tr>\n";
            for (c = 0; c < this.token.header.length; c++) b = this.inline.output(this.token.header[c]),
            a += this.token.align[c] ? '<th align="' + this.token.align[c] + '">' + b + "</th>\n": "<th>" + b + "</th>\n";
            a += "</tr>\n</thead>\n";
            a += "<tbody>\n";
            for (c = 0; c < this.token.cells.length; c++) {
                b = this.token.cells[c];
                a += "<tr>\n";
                for (f = 0; f < b.length; f++) e = this.inline.output(b[f]),
                a += this.token.align[f] ? '<td align="' + this.token.align[f] + '">' + e + "</td>\n": "<td>" + e + "</td>\n";
                a += "</tr>\n"
            }
            a += "</tbody>\n";
            return "<table>\n" + a + "</table>\n";
        case "blockquote_start":
            for (a = ""; this.next().type !== "blockquote_end";) a += this.tok();
            return "<blockquote>\n" + a + "</blockquote>\n";
        case "list_start":
            c = this.token.ordered ? "ol": "ul";
            for (a = ""; this.next().type !== "list_end";) a += this.tok();
            return "<" + c + ">\n" + a + "</" + c + ">\n";
        case "list_item_start":
            for (a = ""; this.next().type !== "list_item_end";) a += this.token.type === "text" ? this.parseText() : this.tok();
            return "<li>" + a + "</li>\n";
        case "loose_item_start":
            for (a = ""; this.next().type !== "list_item_end";) a += this.tok();
            return "<li>" + a + "</li>\n";
        case "html":
            return ! this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;
        case "paragraph":
            return "<p>" + this.inline.output(this.token.text) + "</p>\n";
        case "text":
            return "<p>" + this.parseText() + "</p>\n"
        }
    };
    f.exec = f;
    h.options = h.setOptions = function(a) {
        g(h.defaults, a);
        return h
    };
    h.defaults = {
        gfm: !0,
        tables: !0,
        breaks: !1,
        pedantic: !1,
        sanitize: !1,
        smartLists: !1,
        silent: !1,
        highlight: null,
        langPrefix: "lang-",
        smartypants: !1
    };
    h.Parser = c;
    h.parser = c.parse;
    h.Lexer = a;
    h.lexer = a.lex;
    h.InlineLexer = b;
    h.inlineLexer = b.output;
    h.parse = h;
    typeof exports === "object" ? module.exports = h: typeof define === "function" && define.amd ? define(function() {
        return h
    }) : this.marked = h
}).call(function() {
    return this || (typeof window !== "undefined" ? window: global)
} ()); (function(a, b) {
    typeof exports === "object" ? module.exports = b(require("./punycode"), require("./IPv6"), require("./SecondLevelDomains")) : typeof define === "function" && define.amd ? define(["./punycode", "./IPv6", "./SecondLevelDomains"], b) : a.URI = b(a.punycode, a.IPv6, a.SecondLevelDomains, a)
})(this,
function(a, b, c, d) {
    function e(a, b) {
        if (! (this instanceof e)) return new e(a, b);
        a === void 0 && (a = typeof location !== "undefined" ? location.href + "": "");
        this.href(a);
        return b !== void 0 ? this.absoluteTo(b) : this
    }
    function f(a) {
        return a.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1")
    }
    function g(a) {
        return a === void 0 ? "Undefined": String(Object.prototype.toString.call(a)).slice(8, -1)
    }
    function h(a) {
        return g(a) === "Array"
    }
    function i(a, b) {
        var c, d;
        if (h(b)) {
            for (c = 0, d = b.length; c < d; c++) if (!i(a, b[c])) return ! 1;
            return ! 0
        }
        var e = g(b);
        for (c = 0, d = a.length; c < d; c++) if (e === "RegExp") {
            if (typeof a[c] === "string" && a[c].match(b)) return ! 0
        } else if (a[c] === b) return ! 0;
        return ! 1
    }
    function l(a, b) {
        if (!h(a) || !h(b)) return ! 1;
        if (a.length !== b.length) return ! 1;
        a.sort();
        b.sort();
        for (var c = 0,
        d = a.length; c < d; c++) if (a[c] !== b[c]) return ! 1;
        return ! 0
    }
    function j(a) {
        return escape(a)
    }
    function o(a) {
        return encodeURIComponent(a).replace(/[!'()*]/g, j).replace(/\*/g, "%2A")
    }
    var q = d && d.URI,
    m = e.prototype,
    p = Object.prototype.hasOwnProperty;
    e._parts = function() {
        return {
            protocol: null,
            username: null,
            password: null,
            hostname: null,
            urn: null,
            port: null,
            path: null,
            query: null,
            fragment: null,
            duplicateQueryParameters: e.duplicateQueryParameters,
            escapeQuerySpace: e.escapeQuerySpace
        }
    };
    e.duplicateQueryParameters = !1;
    e.escapeQuerySpace = !0;
    e.protocol_expression = /^[a-z][a-z0-9-+-]*$/i;
    e.idn_expression = /[^a-z0-9\.-]/i;
    e.punycode_expression = /(xn--)/i;
    e.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
    e.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
    e.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019]))/ig;
    e.defaultPorts = {
        http: "80",
        https: "443",
        ftp: "21",
        gopher: "70",
        ws: "80",
        wss: "443"
    };
    e.invalid_hostname_characters = /[^a-zA-Z0-9\.-]/;
    e.domAttributes = {
        a: "href",
        blockquote: "cite",
        link: "href",
        base: "href",
        script: "src",
        form: "action",
        img: "src",
        area: "href",
        iframe: "src",
        embed: "src",
        source: "src",
        track: "src",
        input: "src"
    };
    e.getDomAttribute = function(a) {
        if (a && a.nodeName) {
            var b = a.nodeName.toLowerCase();
            return b === "input" && a.type !== "image" ? void 0 : e.domAttributes[b]
        }
    };
    e.encode = o;
    e.decode = decodeURIComponent;
    e.iso8859 = function() {
        e.encode = escape;
        e.decode = unescape
    };
    e.unicode = function() {
        e.encode = o;
        e.decode = decodeURIComponent
    };
    e.characters = {
        pathname: {
            encode: {
                expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,
                map: {
                    "%24": "$",
                    "%26": "&",
                    "%2B": "+",
                    "%2C": ",",
                    "%3B": ";",
                    "%3D": "=",
                    "%3A": ":",
                    "%40": "@"
                }
            },
            decode: {
                expression: /[\/\?#]/g,
                map: {
                    "/": "%2F",
                    "?": "%3F",
                    "#": "%23"
                }
            }
        },
        reserved: {
            encode: {
                expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,
                map: {
                    "%3A": ":",
                    "%2F": "/",
                    "%3F": "?",
                    "%23": "#",
                    "%5B": "[",
                    "%5D": "]",
                    "%40": "@",
                    "%21": "!",
                    "%24": "$",
                    "%26": "&",
                    "%27": "'",
                    "%28": "(",
                    "%29": ")",
                    "%2A": "*",
                    "%2B": "+",
                    "%2C": ",",
                    "%3B": ";",
                    "%3D": "="
                }
            }
        }
    };
    e.encodeQuery = function(a, b) {
        var c = e.encode(a + "");
        return b ? c.replace(/%20/g, "+") : c
    };
    e.decodeQuery = function(a, b) {
        a += "";
        try {
            return e.decode(b ? a.replace(/\+/g, "%20") : a)
        } catch(c) {
            return a
        }
    };
    e.recodePath = function(a) {
        for (var a = (a + "").split("/"), b = 0, c = a.length; b < c; b++) a[b] = e.encodePathSegment(e.decode(a[b]));
        return a.join("/")
    };
    e.decodePath = function(a) {
        for (var a = (a + "").split("/"), b = 0, c = a.length; b < c; b++) a[b] = e.decodePathSegment(a[b]);
        return a.join("/")
    };
    var r = {
        encode: "encode",
        decode: "decode"
    },
    s,
    v = function(a, b) {
        return function(c) {
            return e[b](c + "").replace(e.characters[a][b].expression,
            function(c) {
                return e.characters[a][b].map[c]
            })
        }
    };
    for (s in r) e[s + "PathSegment"] = v("pathname", r[s]);
    e.encodeReserved = v("reserved", "encode");
    e.parse = function(a, b) {
        var c;
        b || (b = {});
        c = a.indexOf("#");
        if (c > -1) b.fragment = a.substring(c + 1) || null,
        a = a.substring(0, c);
        c = a.indexOf("?");
        if (c > -1) b.query = a.substring(c + 1) || null,
        a = a.substring(0, c);
        if (a.substring(0, 2) === "//") b.protocol = null,
        a = a.substring(2),
        a = e.parseAuthority(a, b);
        else if (c = a.indexOf(":"), c > -1) b.protocol = a.substring(0, c) || null,
        b.protocol && !b.protocol.match(e.protocol_expression) ? b.protocol = void 0 : b.protocol === "file" ? a = a.substring(c + 3) : a.substring(c + 1, c + 3) === "//" ? (a = a.substring(c + 3), a = e.parseAuthority(a, b)) : (a = a.substring(c + 1), b.urn = !0);
        b.path = a;
        return b
    };
    e.parseHost = function(a, b) {
        var c = a.indexOf("/"),
        d;
        if (c === -1) c = a.length;
        a.charAt(0) === "[" ? (d = a.indexOf("]"), b.hostname = a.substring(1, d) || null, b.port = a.substring(d + 2, c) || null) : a.indexOf(":") !== a.lastIndexOf(":") ? (b.hostname = a.substring(0, c) || null, b.port = null) : (d = a.substring(0, c).split(":"), b.hostname = d[0] || null, b.port = d[1] || null);
        b.hostname && a.substring(c).charAt(0) !== "/" && (c++, a = "/" + a);
        return a.substring(c) || "/"
    };
    e.parseAuthority = function(a, b) {
        a = e.parseUserinfo(a, b);
        return e.parseHost(a, b)
    };
    e.parseUserinfo = function(a, b) {
        var c = a.indexOf("/"),
        d = c > -1 ? a.lastIndexOf("@", c) : a.indexOf("@");
        d > -1 && (c === -1 || d < c) ? (c = a.substring(0, d).split(":"), b.username = c[0] ? e.decode(c[0]) : null, c.shift(), b.password = c[0] ? e.decode(c.join(":")) : null, a = a.substring(d + 1)) : (b.username = null, b.password = null);
        return a
    };
    e.parseQuery = function(a, b) {
        if (!a) return {};
        a = a.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, "");
        if (!a) return {};
        for (var c = {},
        d = a.split("&"), f = d.length, g, h, i = 0; i < f; i++) g = d[i].split("="),
        h = e.decodeQuery(g.shift(), b),
        g = g.length ? e.decodeQuery(g.join("="), b) : null,
        c[h] ? (typeof c[h] === "string" && (c[h] = [c[h]]), c[h].push(g)) : c[h] = g;
        return c
    };
    e.build = function(a) {
        var b = "";
        a.protocol && (b += a.protocol + ":");
        if (!a.urn && (b || a.hostname)) b += "//";
        b += e.buildAuthority(a) || "";
        typeof a.path === "string" && (a.path.charAt(0) !== "/" && typeof a.hostname === "string" && (b += "/"), b += a.path);
        typeof a.query === "string" && a.query && (b += "?" + a.query);
        typeof a.fragment === "string" && a.fragment && (b += "#" + a.fragment);
        return b
    };
    e.buildHost = function(a) {
        var b = "";
        if (a.hostname) e.ip6_expression.test(a.hostname) ? b += a.port ? "[" + a.hostname + "]:" + a.port: a.hostname: (b += a.hostname, a.port && (b += ":" + a.port));
        else return "";
        return b
    };
    e.buildAuthority = function(a) {
        return e.buildUserinfo(a) + e.buildHost(a)
    };
    e.buildUserinfo = function(a) {
        var b = "";
        a.username && (b += e.encode(a.username), a.password && (b += ":" + e.encode(a.password)), b += "@");
        return b
    };
    e.buildQuery = function(a, b, c) {
        var d = "",
        f, g, i, l;
        for (g in a) if (p.call(a, g) && g) if (h(a[g])) {
            f = {};
            for (i = 0, l = a[g].length; i < l; i++) a[g][i] !== void 0 && f[a[g][i] + ""] === void 0 && (d += "&" + e.buildQueryParameter(g, a[g][i], c), b !== !0 && (f[a[g][i] + ""] = !0))
        } else a[g] !== void 0 && (d += "&" + e.buildQueryParameter(g, a[g], c));
        return d.substring(1)
    };
    e.buildQueryParameter = function(a, b, c) {
        return e.encodeQuery(a, c) + (b !== null ? "=" + e.encodeQuery(b, c) : "")
    };
    e.addQuery = function(a, b, c) {
        if (typeof b === "object") for (var d in b) p.call(b, d) && e.addQuery(a, d, b[d]);
        else if (typeof b === "string") a[b] === void 0 ? a[b] = c: (typeof a[b] === "string" && (a[b] = [a[b]]), h(c) || (c = [c]), a[b] = a[b].concat(c));
        else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
    };
    e.removeQuery = function(a, b, c) {
        var d;
        if (h(b)) for (c = 0, d = b.length; c < d; c++) a[b[c]] = void 0;
        else if (typeof b === "object") for (d in b) p.call(b, d) && e.removeQuery(a, d, b[d]);
        else if (typeof b === "string") if (c !== void 0) if (a[b] === c) a[b] = void 0;
        else {
            if (h(a[b])) {
                d = a[b];
                var f = {},
                g, i;
                if (h(c)) for (g = 0, i = c.length; g < i; g++) f[c[g]] = !0;
                else f[c] = !0;
                for (g = 0, i = d.length; g < i; g++) f[d[g]] !== void 0 && (d.splice(g, 1), i--, g--);
                a[b] = d
            }
        } else a[b] = void 0;
        else throw new TypeError("URI.addQuery() accepts an object, string as the first parameter");
    };
    e.hasQuery = function(a, b, c, d) {
        if (typeof b === "object") {
            for (var f in b) if (p.call(b, f) && !e.hasQuery(a, f, b[f])) return ! 1;
            return ! 0
        } else if (typeof b !== "string") throw new TypeError("URI.hasQuery() accepts an object, string as the name parameter");
        switch (g(c)) {
        case "Undefined":
            return b in a;
        case "Boolean":
            return a = Boolean(h(a[b]) ? a[b].length: a[b]),
            c === a;
        case "Function":
            return !! c(a[b], b, a);
        case "Array":
            return ! h(a[b]) ? !1 : (d ? i: l)(a[b], c);
        case "RegExp":
            return ! h(a[b]) ? Boolean(a[b] && a[b].match(c)) : !d ? !1 : i(a[b], c);
        case "Number":
            c = String(c);
        case "String":
            return ! h(a[b]) ? a[b] === c: !d ? !1 : i(a[b], c);
        default:
            throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
        }
    };
    e.commonPath = function(a, b) {
        var c = Math.min(a.length, b.length),
        d;
        for (d = 0; d < c; d++) if (a.charAt(d) !== b.charAt(d)) {
            d--;
            break
        }
        if (d < 1) return a.charAt(0) === b.charAt(0) && a.charAt(0) === "/" ? "/": "";
        if (a.charAt(d) !== "/" || b.charAt(d) !== "/") d = a.substring(0, d).lastIndexOf("/");
        return a.substring(0, d + 1)
    };
    e.withinString = function(a, b) {
        return a.replace(e.find_uri_expression, b)
    };
    e.ensureValidHostname = function(b) {
        if (b.match(e.invalid_hostname_characters)) {
            if (!a) throw new TypeError("Hostname '" + b + "' contains characters other than [A-Z0-9.-] and Punycode.js is not available");
            if (a.toASCII(b).match(e.invalid_hostname_characters)) throw new TypeError("Hostname '" + b + "' contains characters other than [A-Z0-9.-]");
        }
    };
    e.noConflict = function(a) {
        if (a) {
            a = {
                URI: this.noConflict()
            };
            if (URITemplate && typeof URITemplate.noConflict == "function") a.URITemplate = URITemplate.noConflict();
            if (b && typeof b.noConflict == "function") a.IPv6 = b.noConflict();
            if (SecondLevelDomains && typeof SecondLevelDomains.noConflict == "function") a.SecondLevelDomains = SecondLevelDomains.noConflict();
            return a
        } else if (d.URI === this) d.URI = q;
        return this
    };
    m.build = function(a) {
        if (a === !0) this._deferred_build = !0;
        else if (a === void 0 || this._deferred_build) this._string = e.build(this._parts),
        this._deferred_build = !1;
        return this
    };
    m.clone = function() {
        return new e(this)
    };
    m.valueOf = m.toString = function() {
        return this.build(!1)._string
    };
    r = {
        protocol: "protocol",
        username: "username",
        password: "password",
        hostname: "hostname",
        port: "port"
    };
    v = function(a) {
        return function(b, c) {
            return b === void 0 ? this._parts[a] || "": (this._parts[a] = b || null, this.build(!c), this)
        }
    };
    for (s in r) m[s] = v(r[s]);
    r = {
        query: "?",
        fragment: "#"
    };
    v = function(a, b) {
        return function(c, d) {
            return c === void 0 ? this._parts[a] || "": (c !== null && (c += "", c.charAt(0) === b && (c = c.substring(1))), this._parts[a] = c, this.build(!d), this)
        }
    };
    for (s in r) m[s] = v(s, r[s]);
    r = {
        search: ["?", "query"],
        hash: ["#", "fragment"]
    };
    v = function(a, b) {
        return function(c, d) {
            var e = this[a](c, d);
            return typeof e === "string" && e.length ? b + e: e
        }
    };
    for (s in r) m[s] = v(r[s][1], r[s][0]);
    m.pathname = function(a, b) {
        if (a === void 0 || a === !0) {
            var c = this._parts.path || (this._parts.hostname ? "/": "");
            return a ? e.decodePath(c) : c
        } else return this._parts.path = a ? e.recodePath(a) : "/",
        this.build(!b),
        this
    };
    m.path = m.pathname;
    m.href = function(a, b) {
        var c;
        if (a === void 0) return this.toString();
        this._string = "";
        this._parts = e._parts();
        var d = a instanceof e,
        f = typeof a === "object" && (a.hostname || a.path || a.pathname);
        a.nodeName && (f = e.getDomAttribute(a), a = a[f] || "", f = !1); ! d && f && a.pathname !== void 0 && (a = a.toString());
        if (typeof a === "string") this._parts = e.parse(a, this._parts);
        else if (d || f) for (c in d = d ? a._parts: a, d) p.call(this._parts, c) && (this._parts[c] = d[c]);
        else throw new TypeError("invalid input");
        this.build(!b);
        return this
    };
    m.is = function(a) {
        var b = !1,
        d = !1,
        f = !1,
        g = !1,
        h = !1,
        i = !1,
        l = !1,
        j = !this._parts.urn;
        this._parts.hostname && (j = !1, d = e.ip4_expression.test(this._parts.hostname), f = e.ip6_expression.test(this._parts.hostname), b = d || f, h = (g = !b) && c && c.has(this._parts.hostname), i = g && e.idn_expression.test(this._parts.hostname), l = g && e.punycode_expression.test(this._parts.hostname));
        switch (a.toLowerCase()) {
        case "relative":
            return j;
        case "absolute":
            return ! j;
        case "domain":
        case "name":
            return g;
        case "sld":
            return h;
        case "ip":
            return b;
        case "ip4":
        case "ipv4":
        case "inet4":
            return d;
        case "ip6":
        case "ipv6":
        case "inet6":
            return f;
        case "idn":
            return i;
        case "url":
            return ! this._parts.urn;
        case "urn":
            return !! this._parts.urn;
        case "punycode":
            return l
        }
        return null
    };
    var w = m.protocol,
    x = m.port,
    y = m.hostname;
    m.protocol = function(a, b) {
        if (a !== void 0 && a && (a = a.replace(/:(\/\/)?$/, ""), a.match(/[^a-zA-z0-9\.+-]/))) throw new TypeError("Protocol '" + a + "' contains characters other than [A-Z0-9.+-]");
        return w.call(this, a, b)
    };
    m.scheme = m.protocol;
    m.port = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a !== void 0 && (a === 0 && (a = null), a && (a += "", a.charAt(0) === ":" && (a = a.substring(1)), a.match(/[^0-9]/)))) throw new TypeError("Port '" + a + "' contains characters other than [0-9]");
        return x.call(this, a, b)
    };
    m.hostname = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a !== void 0) {
            var c = {};
            e.parseHost(a, c);
            a = c.hostname
        }
        return y.call(this, a, b)
    };
    m.host = function(a, b) {
        return this._parts.urn ? a === void 0 ? "": this: a === void 0 ? this._parts.hostname ? e.buildHost(this._parts) : "": (e.parseHost(a, this._parts), this.build(!b), this)
    };
    m.authority = function(a, b) {
        return this._parts.urn ? a === void 0 ? "": this: a === void 0 ? this._parts.hostname ? e.buildAuthority(this._parts) : "": (e.parseAuthority(a, this._parts), this.build(!b), this)
    };
    m.userinfo = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a === void 0) {
            if (!this._parts.username) return "";
            var c = e.buildUserinfo(this._parts);
            return c.substring(0, c.length - 1)
        } else return a[a.length - 1] !== "@" && (a += "@"),
        e.parseUserinfo(a, this._parts),
        this.build(!b),
        this
    };
    m.resource = function(a, b) {
        var c;
        if (a === void 0) return this.path() + this.search() + this.hash();
        c = e.parse(a);
        this._parts.path = c.path;
        this._parts.query = c.query;
        this._parts.fragment = c.fragment;
        this.build(!b);
        return this
    };
    m.subdomain = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a === void 0) return ! this._parts.hostname || this.is("IP") ? "": this._parts.hostname.substring(0, this._parts.hostname.length - this.domain().length - 1) || "";
        else {
            var c = this._parts.hostname.substring(0, this._parts.hostname.length - this.domain().length),
            c = RegExp("^" + f(c));
            a && a.charAt(a.length - 1) !== "." && (a += ".");
            a && e.ensureValidHostname(a);
            this._parts.hostname = this._parts.hostname.replace(c, a);
            this.build(!b);
            return this
        }
    };
    m.domain = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        typeof a === "boolean" && (b = a, a = void 0);
        if (a === void 0) {
            if (!this._parts.hostname || this.is("IP")) return "";
            var c = this._parts.hostname.match(/\./g);
            if (c && c.length < 2) return this._parts.hostname;
            c = this._parts.hostname.length - this.tld(b).length - 1;
            c = this._parts.hostname.lastIndexOf(".", c - 1) + 1;
            return this._parts.hostname.substring(c) || ""
        } else {
            if (!a) throw new TypeError("cannot set domain empty");
            e.ensureValidHostname(a);
            this._parts.hostname = !this._parts.hostname || this.is("IP") ? a: this._parts.hostname.replace(RegExp(f(this.domain()) + "$"), a);
            this.build(!b);
            return this
        }
    };
    m.tld = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        typeof a === "boolean" && (b = a, a = void 0);
        if (a === void 0) {
            if (!this._parts.hostname || this.is("IP")) return "";
            var d = this._parts.hostname.substring(this._parts.hostname.lastIndexOf(".") + 1);
            return b !== !0 && c && c.list[d.toLowerCase()] ? c.get(this._parts.hostname) || d: d
        } else {
            if (a) if (a.match(/[^a-zA-Z0-9-]/)) if (c && c.is(a)) d = RegExp(f(this.tld()) + "$"),
            this._parts.hostname = this._parts.hostname.replace(d, a);
            else throw new TypeError("TLD '" + a + "' contains characters other than [A-Z0-9]");
            else if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host");
            else d = RegExp(f(this.tld()) + "$"),
            this._parts.hostname = this._parts.hostname.replace(d, a);
            else throw new TypeError("cannot set TLD empty");
            this.build(!b);
            return this
        }
    };
    m.directory = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a === void 0 || a === !0) {
            if (!this._parts.path && !this._parts.hostname) return "";
            if (this._parts.path === "/") return "/";
            var c = this._parts.path.substring(0, this._parts.path.length - this.filename().length - 1) || (this._parts.hostname ? "/": "");
            return a ? e.decodePath(c) : c
        } else return c = this._parts.path.substring(0, this._parts.path.length - this.filename().length),
        c = RegExp("^" + f(c)),
        this.is("relative") || (a || (a = "/"), a.charAt(0) !== "/" && (a = "/" + a)),
        a && a.charAt(a.length - 1) !== "/" && (a += "/"),
        a = e.recodePath(a),
        this._parts.path = this._parts.path.replace(c, a),
        this.build(!b),
        this
    };
    m.filename = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a === void 0 || a === !0) {
            if (!this._parts.path || this._parts.path === "/") return "";
            var c = this._parts.path.substring(this._parts.path.lastIndexOf("/") + 1);
            return a ? e.decodePathSegment(c) : c
        } else {
            c = !1;
            a.charAt(0) === "/" && (a = a.substring(1));
            a.match(/\.?\//) && (c = !0);
            var d = RegExp(f(this.filename()) + "$"),
            a = e.recodePath(a);
            this._parts.path = this._parts.path.replace(d, a);
            c ? this.normalizePath(b) : this.build(!b);
            return this
        }
    };
    m.suffix = function(a, b) {
        if (this._parts.urn) return a === void 0 ? "": this;
        if (a === void 0 || a === !0) {
            if (!this._parts.path || this._parts.path === "/") return "";
            var c = this.filename(),
            d = c.lastIndexOf(".");
            if (d === -1) return "";
            c = c.substring(d + 1);
            c = /^[a-z0-9%]+$/i.test(c) ? c: "";
            return a ? e.decodePathSegment(c) : c
        } else {
            a.charAt(0) === "." && (a = a.substring(1));
            if (c = this.suffix()) d = a ? RegExp(f(c) + "$") : RegExp(f("." + c) + "$");
            else {
                if (!a) return this;
                this._parts.path += "." + e.recodePath(a)
            }
            if (d) a = e.recodePath(a),
            this._parts.path = this._parts.path.replace(d, a);
            this.build(!b);
            return this
        }
    };
    m.segment = function(a, b, c) {
        var d = this._parts.urn ? ":": "/",
        e = this.path(),
        f = e.substring(0, 1) === "/",
        e = e.split(d);
        a !== void 0 && typeof a !== "number" && (c = b, b = a, a = void 0);
        if (a !== void 0 && typeof a !== "number") throw Error("Bad segment '" + a + "', must be 0-based integer");
        f && e.shift();
        a < 0 && (a = Math.max(e.length + a, 0));
        if (b === void 0) return a === void 0 ? e: e[a];
        else if (a === null || e[a] === void 0) if (h(b)) for (var e = [], a = 0, g = b.length; a < g; a++) {
            if (b[a].length || e.length && e[e.length - 1].length) e.length && !e[e.length - 1].length && e.pop(),
            e.push(b[a])
        } else {
            if (b || typeof b === "string") e[e.length - 1] === "" ? e[e.length - 1] = b: e.push(b)
        } else b || typeof b === "string" && b.length ? e[a] = b: e.splice(a, 1);
        f && e.unshift("");
        return this.path(e.join(d), c)
    };
    m.segmentCoded = function(a, b, c) {
        var d, f;
        typeof a !== "number" && (c = b, b = a, a = void 0);
        if (b === void 0) {
            a = this.segment(a, b, c);
            if (h(a)) for (d = 0, f = a.length; d < f; d++) a[d] = e.decode(a[d]);
            else a = a !== void 0 ? e.decode(a) : void 0;
            return a
        }
        if (h(b)) for (d = 0, f = b.length; d < f; d++) b[d] = e.decode(b[d]);
        else b = typeof b === "string" ? e.encode(b) : b;
        return this.segment(a, b, c)
    };
    var k = m.query;
    m.query = function(a, b) {
        if (a === !0) return e.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        else if (typeof a === "function") {
            var c = e.parseQuery(this._parts.query, this._parts.escapeQuerySpace),
            d = a.call(this, c);
            this._parts.query = e.buildQuery(d || c, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
            this.build(!b);
            return this
        } else return a !== void 0 && typeof a !== "string" ? (this._parts.query = e.buildQuery(a, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!b), this) : k.call(this, a, b)
    };
    m.setQuery = function(a, b, c) {
        var d = e.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        if (typeof a === "object") for (var f in a) p.call(a, f) && (d[f] = a[f]);
        else if (typeof a === "string") d[a] = b !== void 0 ? b: null;
        else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        this._parts.query = e.buildQuery(d, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        typeof a !== "string" && (c = b);
        this.build(!c);
        return this
    };
    m.addQuery = function(a, b, c) {
        var d = e.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        e.addQuery(d, a, b === void 0 ? null: b);
        this._parts.query = e.buildQuery(d, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        typeof a !== "string" && (c = b);
        this.build(!c);
        return this
    };
    m.removeQuery = function(a, b, c) {
        var d = e.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        e.removeQuery(d, a, b);
        this._parts.query = e.buildQuery(d, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        typeof a !== "string" && (c = b);
        this.build(!c);
        return this
    };
    m.hasQuery = function(a, b, c) {
        var d = e.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return e.hasQuery(d, a, b, c)
    };
    m.setSearch = m.setQuery;
    m.addSearch = m.addQuery;
    m.removeSearch = m.removeQuery;
    m.hasSearch = m.hasQuery;
    m.normalize = function() {
        return this._parts.urn ? this.normalizeProtocol(!1).normalizeQuery(!1).normalizeFragment(!1).build() : this.normalizeProtocol(!1).normalizeHostname(!1).normalizePort(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build()
    };
    m.normalizeProtocol = function(a) {
        if (typeof this._parts.protocol === "string") this._parts.protocol = this._parts.protocol.toLowerCase(),
        this.build(!a);
        return this
    };
    m.normalizeHostname = function(c) {
        if (this._parts.hostname) {
            if (this.is("IDN") && a) this._parts.hostname = a.toASCII(this._parts.hostname);
            else if (this.is("IPv6") && b) this._parts.hostname = b.best(this._parts.hostname);
            this._parts.hostname = this._parts.hostname.toLowerCase();
            this.build(!c)
        }
        return this
    };
    m.normalizePort = function(a) {
        if (typeof this._parts.protocol === "string" && this._parts.port === e.defaultPorts[this._parts.protocol]) this._parts.port = null,
        this.build(!a);
        return this
    };
    m.normalizePath = function(a) {
        if (this._parts.urn) return this;
        if (!this._parts.path || this._parts.path === "/") return this;
        var b, c = this._parts.path,
        d, f;
        c.charAt(0) !== "/" && (b = !0, c = "/" + c);
        for (c = c.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/");;) {
            d = c.indexOf("/../");
            if (d === -1) break;
            else if (d === 0) {
                c = c.substring(3);
                break
            }
            f = c.substring(0, d).lastIndexOf("/");
            f === -1 && (f = d);
            c = c.substring(0, f) + c.substring(d + 3)
        }
        b && this.is("relative") && (c = c.substring(1));
        c = e.recodePath(c);
        this._parts.path = c;
        this.build(!a);
        return this
    };
    m.normalizePathname = m.normalizePath;
    m.normalizeQuery = function(a) {
        if (typeof this._parts.query === "string") this._parts.query.length ? this.query(e.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null,
        this.build(!a);
        return this
    };
    m.normalizeFragment = function(a) {
        if (!this._parts.fragment) this._parts.fragment = null,
        this.build(!a);
        return this
    };
    m.normalizeSearch = m.normalizeQuery;
    m.normalizeHash = m.normalizeFragment;
    m.iso8859 = function() {
        var a = e.encode,
        b = e.decode;
        e.encode = escape;
        e.decode = decodeURIComponent;
        this.normalize();
        e.encode = a;
        e.decode = b;
        return this
    };
    m.unicode = function() {
        var a = e.encode,
        b = e.decode;
        e.encode = o;
        e.decode = unescape;
        this.normalize();
        e.encode = a;
        e.decode = b;
        return this
    };
    m.readable = function() {
        var b = this.clone();
        b.username("").password("").normalize();
        var c = "";
        b._parts.protocol && (c += b._parts.protocol + "://");
        b._parts.hostname && (b.is("punycode") && a ? (c += a.toUnicode(b._parts.hostname), b._parts.port && (c += ":" + b._parts.port)) : c += b.host());
        b._parts.hostname && b._parts.path && b._parts.path.charAt(0) !== "/" && (c += "/");
        c += b.path(!0);
        if (b._parts.query) {
            for (var d = "",
            f = 0,
            g = b._parts.query.split("&"), h = g.length; f < h; f++) {
                var i = (g[f] || "").split("=");
                d += "&" + e.decodeQuery(i[0], this._parts.escapeQuerySpace).replace(/&/g, "%26");
                i[1] !== void 0 && (d += "=" + e.decodeQuery(i[1], this._parts.escapeQuerySpace).replace(/&/g, "%26"))
            }
            c += "?" + d.substring(1)
        }
        c += e.decodeQuery(b.hash(), !0);
        return c
    };
    m.absoluteTo = function(a) {
        var b = this.clone(),
        c = ["protocol", "username", "password", "hostname", "port"],
        d,
        f;
        if (this._parts.urn) throw Error("URNs do not have any generally defined hierarchical components");
        a instanceof e || (a = new e(a));
        if (!b._parts.protocol) b._parts.protocol = a._parts.protocol;
        if (this._parts.hostname) return b;
        for (d = 0; f = c[d]; d++) b._parts[f] = a._parts[f];
        c = ["query", "path"];
        for (d = 0; f = c[d]; d++) ! b._parts[f] && a._parts[f] && (b._parts[f] = a._parts[f]);
        if (b.path().charAt(0) !== "/") a = a.directory(),
        b._parts.path = (a ? a + "/": "") + b._parts.path,
        b.normalizePath();
        b.build();
        return b
    };
    m.relativeTo = function(a) {
        var b = this.clone().normalize(),
        c,
        d,
        f,
        g;
        if (b._parts.urn) throw Error("URNs do not have any generally defined hierarchical components");
        a = (new e(a)).normalize();
        c = b._parts;
        d = a._parts;
        f = b.path();
        g = a.path();
        if (f.charAt(0) !== "/") throw Error("URI is already relative");
        if (g.charAt(0) !== "/") throw Error("Cannot calculate a URI relative to another relative URI");
        if (c.protocol === d.protocol) c.protocol = null;
        if (c.username !== d.username || c.password !== d.password) return b.build();
        if (c.protocol !== null || c.username !== null || c.password !== null) return b.build();
        if (c.hostname === d.hostname && c.port === d.port) c.hostname = null,
        c.port = null;
        else return b.build();
        if (f === g) return c.path = "",
        b.build();
        a = e.commonPath(b.path(), a.path());
        if (!a) return b.build();
        d = d.path.substring(a.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
        c.path = d + c.path.substring(a.length);
        return b.build()
    };
    m.equals = function(a) {
        var b = this.clone(),
        a = new e(a),
        c = {},
        d = {},
        f = {},
        g;
        b.normalize();
        a.normalize();
        if (b.toString() === a.toString()) return ! 0;
        c = b.query();
        d = a.query();
        b.query("");
        a.query("");
        if (b.toString() !== a.toString()) return ! 1;
        if (c.length !== d.length) return ! 1;
        c = e.parseQuery(c, this._parts.escapeQuerySpace);
        d = e.parseQuery(d, this._parts.escapeQuerySpace);
        for (g in c) if (p.call(c, g)) {
            if (h(c[g])) {
                if (!l(c[g], d[g])) return ! 1
            } else if (c[g] !== d[g]) return ! 1;
            f[g] = !0
        }
        for (g in d) if (p.call(d, g) && !f[g]) return ! 1;
        return ! 0
    };
    m.duplicateQueryParameters = function(a) {
        this._parts.duplicateQueryParameters = !!a;
        return this
    };
    m.escapeQuerySpace = function(a) {
        this._parts.escapeQuerySpace = !!a;
        return this
    };
    return e
}); (function(a, b) {
    typeof exports === "object" ? module.exports = b(require("./URI")) : typeof define === "function" && define.amd ? define(["./URI"], b) : a.URITemplate = b(a.URI, a)
})(this,
function(a, b) {
    function c(a) {
        if (c._cache[a]) return c._cache[a];
        if (! (this instanceof c)) return new c(a);
        this.expression = a;
        c._cache[a] = this;
        return this
    }
    function d(a) {
        this.data = a;
        this.cache = {}
    }
    var e = b && b.URITemplate,
    f = Object.prototype.hasOwnProperty,
    g = c.prototype,
    h = {
        "": {
            prefix: "",
            separator: ",",
            named: !1,
            empty_name_separator: !1,
            encode: "encode"
        },
        "+": {
            prefix: "",
            separator: ",",
            named: !1,
            empty_name_separator: !1,
            encode: "encodeReserved"
        },
        "#": {
            prefix: "#",
            separator: ",",
            named: !1,
            empty_name_separator: !1,
            encode: "encodeReserved"
        },
        ".": {
            prefix: ".",
            separator: ".",
            named: !1,
            empty_name_separator: !1,
            encode: "encode"
        },
        "/": {
            prefix: "/",
            separator: "/",
            named: !1,
            empty_name_separator: !1,
            encode: "encode"
        },
        ";": {
            prefix: ";",
            separator: ";",
            named: !0,
            empty_name_separator: !1,
            encode: "encode"
        },
        "?": {
            prefix: "?",
            separator: "&",
            named: !0,
            empty_name_separator: !0,
            encode: "encode"
        },
        "&": {
            prefix: "&",
            separator: "&",
            named: !0,
            empty_name_separator: !0,
            encode: "encode"
        }
    };
    c._cache = {};
    c.EXPRESSION_PATTERN = /\{([^a-zA-Z0-9%_]?)([^\}]+)(\}|$)/g;
    c.VARIABLE_PATTERN = /^([^*:]+)((\*)|:(\d+))?$/;
    c.VARIABLE_NAME_PATTERN = /[^a-zA-Z0-9%_]/;
    c.expand = function(a, b) {
        var d = h[a.operator],
        e = d.named ? "Named": "Unnamed",
        f = a.variables,
        g = [],
        p,
        r,
        s;
        for (s = 0; r = f[s]; s++) p = b.get(r.name),
        p.val.length ? g.push(c["expand" + e](p, d, r.explode, r.explode && d.separator || ",", r.maxlength, r.name)) : p.type && g.push("");
        return g.length ? d.prefix + g.join(d.separator) : ""
    };
    c.expandNamed = function(b, c, d, e, f, g) {
        var h = "",
        r = c.encode,
        c = c.empty_name_separator,
        s = !b[r].length,
        v = b.type === 2 ? "": a[r](g),
        w,
        x,
        y;
        for (x = 0, y = b.val.length; x < y; x++) f ? (w = a[r](b.val[x][1].substring(0, f)), b.type === 2 && (v = a[r](b.val[x][0].substring(0, f)))) : s ? (w = a[r](b.val[x][1]), b.type === 2 ? (v = a[r](b.val[x][0]), b[r].push([v, w])) : b[r].push([void 0, w])) : (w = b[r][x][1], b.type === 2 && (v = b[r][x][0])),
        h && (h += e),
        d ? h += v + (c || w ? "=": "") + w: (x || (h += a[r](g) + (c || w ? "=": "")), b.type === 2 && (h += v + ","), h += w);
        return h
    };
    c.expandUnnamed = function(b, c, d, e, f) {
        var g = "",
        h = c.encode,
        c = c.empty_name_separator,
        r = !b[h].length,
        s,
        v,
        w,
        x;
        for (w = 0, x = b.val.length; w < x; w++) f ? v = a[h](b.val[w][1].substring(0, f)) : r ? (v = a[h](b.val[w][1]), b[h].push([b.type === 2 ? a[h](b.val[w][0]) : void 0, v])) : v = b[h][w][1],
        g && (g += e),
        b.type === 2 && (s = f ? a[h](b.val[w][0].substring(0, f)) : b[h][w][0], g += s, g += d ? c || v ? "=": "": ","),
        g += v;
        return g
    };
    c.noConflict = function() {
        if (b.URITemplate === c) b.URITemplate = e;
        return c
    };
    g.expand = function(a) {
        var b = ""; (!this.parts || !this.parts.length) && this.parse();
        a instanceof d || (a = new d(a));
        for (var e = 0,
        f = this.parts.length; e < f; e++) b += typeof this.parts[e] === "string" ? this.parts[e] : c.expand(this.parts[e], a);
        return b
    };
    g.parse = function() {
        var a = this.expression,
        b = c.EXPRESSION_PATTERN,
        d = c.VARIABLE_PATTERN,
        e = c.VARIABLE_NAME_PATTERN,
        f = [],
        g = 0,
        p,
        r,
        s;
        for (b.lastIndex = 0;;) {
            r = b.exec(a);
            if (r === null) {
                f.push(a.substring(g));
                break
            } else f.push(a.substring(g, r.index)),
            g = r.index + r[0].length;
            if (h[r[1]]) {
                if (!r[3]) throw Error('Unclosed Expression "' + r[0] + '"');
            } else throw Error('Unknown Operator "' + r[1] + '" in "' + r[0] + '"');
            p = r[2].split(",");
            for (var v = 0,
            w = p.length; v < w; v++) {
                s = p[v].match(d);
                if (s === null) throw Error('Invalid Variable "' + p[v] + '" in "' + r[0] + '"');
                else if (s[1].match(e)) throw Error('Invalid Variable Name "' + s[1] + '" in "' + r[0] + '"');
                p[v] = {
                    name: s[1],
                    explode: !!s[3],
                    maxlength: s[4] && parseInt(s[4], 10)
                }
            }
            if (!p.length) throw Error('Expression Missing Variable(s) "' + r[0] + '"');
            f.push({
                expression: r[0],
                operator: r[1],
                variables: p
            })
        }
        f.length || f.push(a);
        this.parts = f;
        return this
    };
    d.prototype.get = function(a) {
        var b = this.data,
        c = {
            type: 0,
            val: [],
            encode: [],
            encodeReserved: []
        },
        d;
        if (this.cache[a] !== void 0) return this.cache[a];
        this.cache[a] = c;
        b = String(Object.prototype.toString.call(b)) === "[object Function]" ? b(a) : String(Object.prototype.toString.call(b[a])) === "[object Function]" ? b[a](a) : b[a];
        if (! (b === void 0 || b === null)) if (String(Object.prototype.toString.call(b)) === "[object Array]") {
            for (d = 0, a = b.length; d < a; d++) b[d] !== void 0 && b[d] !== null && c.val.push([void 0, String(b[d])]);
            if (c.val.length) c.type = 3
        } else if (String(Object.prototype.toString.call(b)) === "[object Object]") {
            for (d in b) f.call(b, d) && b[d] !== void 0 && b[d] !== null && c.val.push([d, String(b[d])]);
            if (c.val.length) c.type = 2
        } else c.type = 1,
        c.val.push([void 0, String(b)]);
        return c
    };
    a.expand = function(b, d) {
        var e = (new c(b)).expand(d);
        return new a(e)
    };
    return c
});
var dateFormat = function() {
    var a = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
    b = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
    c = /[^-+\dA-Z]/g,
    d = function(a, b) {
        a = String(a);
        for (b = b || 2; a.length < b;) a = "0" + a;
        return a
    };
    return function(e, f, g) {
        var h = dateFormat;
        arguments.length == 1 && Object.prototype.toString.call(e) == "[object String]" && !/\d/.test(e) && (f = e, e = void 0);
        e = e ? new Date(e) : new Date;
        if (isNaN(e)) throw SyntaxError("invalid date");
        f = String(h.masks[f] || f || h.masks["default"]);
        f.slice(0, 4) == "UTC:" && (f = f.slice(4), g = !0);
        var i = g ? "getUTC": "get",
        l = e[i + "Date"](),
        j = e[i + "Day"](),
        o = e[i + "Month"](),
        q = e[i + "FullYear"](),
        m = e[i + "Hours"](),
        p = e[i + "Minutes"](),
        r = e[i + "Seconds"](),
        i = e[i + "Milliseconds"](),
        s = g ? 0 : e.getTimezoneOffset(),
        v = {
            d: l,
            dd: d(l),
            ddd: h.i18n.dayNames[j],
            dddd: h.i18n.dayNames[j + 7],
            m: o + 1,
            mm: d(o + 1),
            mmm: h.i18n.monthNames[o],
            mmmm: h.i18n.monthNames[o + 12],
            yy: String(q).slice(2),
            yyyy: q,
            h: m % 12 || 12,
            hh: d(m % 12 || 12),
            H: m,
            HH: d(m),
            M: p,
            MM: d(p),
            s: r,
            ss: d(r),
            l: d(i, 3),
            L: d(i > 99 ? Math.round(i / 10) : i),
            t: m < 12 ? "a": "p",
            tt: m < 12 ? "am": "pm",
            T: m < 12 ? "A": "P",
            TT: m < 12 ? "AM": "PM",
            Z: g ? "UTC": (String(e).match(b) || [""]).pop().replace(c, ""),
            o: (s > 0 ? "-": "+") + d(Math.floor(Math.abs(s) / 60) * 100 + Math.abs(s) % 60, 4),
            S: ["th", "st", "nd", "rd"][l % 10 > 3 ? 0 : (l % 100 - l % 10 != 10) * l % 10]
        };
        return f.replace(a,
        function(a) {
            return a in v ? v[a] : a.slice(1, a.length - 1)
        })
    }
} ();
dateFormat.masks = {
    "default": "ddd mmm dd yyyy HH:MM:ss",
    shortDate: "m/d/yy",
    mediumDate: "mmm d, yyyy",
    longDate: "mmmm d, yyyy",
    fullDate: "dddd, mmmm d, yyyy",
    shortTime: "h:MM TT",
    mediumTime: "h:MM:ss TT",
    longTime: "h:MM:ss TT Z",
    isoDate: "yyyy-mm-dd",
    isoTime: "HH:MM:ss",
    isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
    isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
};
dateFormat.i18n = {
    dayNames: "Sun,Mon,Tue,Wed,Thu,Fri,Sat,Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    monthNames: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec,January,February,March,April,May,June,July,August,September,October,November,December".split(",")
}; (function() {
    function a(a) {
        return /^\s*<[^>]+>\s*$/.test(a)
    }
    function b(a) { (a = /^<(iframe|object|math|svg|script)/.exec(a)) && (a = a[1]);
        return a
    }
    function c(c) {
        return ! a(c) || b(c) || /^\s*<[^>]+\/>\s*$/.test(c)
    }
    function d(a, b, c) {
        this.start_in_before = a;
        this.start_in_after = b;
        this.length = c;
        this.end_in_before = this.start_in_before + this.length - 1;
        this.end_in_after = this.start_in_after + this.length - 1
    }
    function e(a) {
        for (var c = "char",
        d = "",
        e = "",
        f = [], g = 0; g < a.length; g++) {
            var h = a[g];
            switch (c) {
            case "tag":
                var i = b(d);
                i ? (c = "atomic_tag", e = i, d += h) : h === ">" ? (d += ">", f.push(d), d = "", c = /^\s+$/.test(h) ? "whitespace": "char") : d += h;
                break;
            case "atomic_tag":
                h === ">" && d.substring(d.length - e.length - 2) === "</" + e ? (d += ">", f.push(d), e = d = "", c = "char") : d += h;
                break;
            case "char":
                h === "<" ? (d && f.push(d), d = "<", c = "tag") : /\s/.test(h) ? (d && f.push(d), d = h, c = "whitespace") : /[\w\d\#@]/.test(h) ? d += h: /&/.test(h) ? (d && f.push(d), d = h) : (d += h, f.push(d), d = "");
                break;
            case "whitespace":
                h === "<" ? (d && f.push(d), d = "<", c = "tag") : /^\s+$/.test(h) ? d += h: (d && f.push(d), d = h, c = "char");
                break;
            default:
                throw Error("Unknown mode " + c);
            }
        }
        d && f.push(d);
        return f
    }
    function f(a) {
        var b = /<([^\s>]+)[\s>]/.exec(a);
        return b ? "<" + b[1].toLowerCase() + ">": a ? a.replace(/(\s+|&nbsp;|&#160;)/g, " ") : a
    }
    function g(a, b, c, e, g, h, i) {
        for (var b = e,
        j = h,
        l = 0,
        m = {}; e < g; e++) {
            for (var o = {},
            p = f(a[e]), p = c[p], q = 0; q < p.length; q++) {
                var r = p[q];
                if (! (r < h)) {
                    if (r >= i) break;
                    m[r - 1] || (m[r - 1] = 0);
                    var C = m[r - 1] + 1;
                    o[r] = C;
                    C > l && (b = e - C + 1, j = r - C + 1, l = C)
                }
            }
            m = o
        }
        return l !== 0 ? new d(b, j, l) : null
    }
    function h(a, b, c, d, e, f, i, l) {
        var j = g(a, b, c, d, e, f, i);
        j && (d < j.start_in_before && f < j.start_in_after && h(a, b, c, d, j.start_in_before, f, j.start_in_after, l), l.push(j), j.end_in_before <= e && j.end_in_after <= i && h(a, b, c, j.end_in_before + 1, e, j.end_in_after + 1, i, l));
        return l
    }
    function i(a) {
        if (!a.find_these) throw Error("params must have find_these key");
        if (!a.in_these) throw Error("params must have in_these key");
        for (var b = a.find_these.map(function(a) {
            return f(a)
        }), a = a.in_these.map(function(a) {
            return f(a)
        }), c = {},
        d = 0; d < b.length; d++) {
            var e = b[d];
            c[e] = [];
            for (var g = a.indexOf(e); g !== -1;) c[e].push(g),
            g = a.indexOf(e, g + 1)
        }
        return c
    }
    function l(a, b) {
        var c = i({
            find_these: a,
            in_these: b
        });
        return h(a, b, c, 0, a.length, 0, b.length, [])
    }
    function j(a, b) {
        if (!a) throw Error("before_tokens?");
        if (!b) throw Error("after_tokens?");
        var c = 0,
        e = 0,
        f = [],
        g = {
            "false,false": "replace",
            "true,false": "insert",
            "false,true": "delete",
            "true,true": "none"
        },
        h = l(a, b);
        h.push(new d(a.length, b.length, 0));
        for (var i = 0; i < h.length; i++) {
            var j = h[i],
            m = g[[c === j.start_in_before, e === j.start_in_after].toString()];
            m !== "none" && f.push({
                action: m,
                start_in_before: c,
                end_in_before: m !== "insert" ? j.start_in_before - 1 : void 0,
                start_in_after: e,
                end_in_after: m !== "delete" ? j.start_in_after - 1 : void 0
            });
            j.length !== 0 && f.push({
                action: "equal",
                start_in_before: j.start_in_before,
                end_in_before: j.end_in_before,
                start_in_after: j.start_in_after,
                end_in_after: j.end_in_after
            });
            c = j.end_in_before + 1;
            e = j.end_in_after + 1
        }
        c = [];
        e = {
            action: "none"
        };
        for (g = 0; g < f.length; g++) h = f[g],
        i = h.action !== "equal" ? !1 : h.end_in_before - h.start_in_before !== 0 ? !1 : /^\s$/.test(a.slice(h.start_in_before, h.end_in_before + 1)),
        i && e.action === "replace" || h.action === "replace" && e.action === "replace" ? (e.end_in_before = h.end_in_before, e.end_in_after = h.end_in_after) : (c.push(h), e = h);
        return c
    }
    function o(a, b, c) {
        for (var b = b.slice(a, b.length + 1), a = null, d = 0; d < b.length; d++) {
            var e = c(b[d]);
            e === !0 && (a = d);
            if (e === !1) break
        }
        return a !== null ? b.slice(0, a + 1) : []
    }
    function q(b, d, e) {
        for (var f = "",
        g = 0,
        h = d.length;;) {
            if (g >= h) break;
            var i = o(g, d, c);
            g += i.length;
            if (i.length !== 0) {
                var i = i.join(""),
                j = e ? ' class="' + e + '"': "";
                i.trim() && (f += "<" + b + j + ">" + i + "</" + b + ">")
            }
            if (g >= h) break;
            i = o(g, d, a);
            g += i.length;
            f += i.join("")
        }
        return f
    }
    function m(a, b, c, d) {
        for (var e = "",
        f = 0; f < c.length; f++) {
            var g = c[f];
            e += r[g.action](g, a, b, d)
        }
        return e
    }
    function p(a, b, c) {
        if (a === b) return a;
        var a = e(a),
        b = e(b),
        d = j(a, b);
        return m(a, b, d, c)
    }
    var r = {
        equal: function(a, b, c) {
            return c.slice(a.start_in_after, a.end_in_after + 1).join("")
        },
        insert: function(a, b, c, d) {
            a = c.slice(a.start_in_after, a.end_in_after + 1);
            return q("ins", a, d)
        },
        "delete": function(a, b, c, d) {
            a = b.slice(a.start_in_before, a.end_in_before + 1);
            return q("del", a, d)
        }
    };
    r.replace = function(a, b, c, d) {
        return r["delete"](a, b, c, d) + r.insert(a, b, c, d)
    };
    p.html_to_tokens = e;
    p.find_matching_blocks = l;
    l.find_match = g;
    l.create_index = i;
    l.get_key_for_token = f;
    p.calculate_operations = j;
    p.render_operations = m;
    typeof define === "function" ? define([],
    function() {
        return p
    }) : typeof module !== "undefined" && module !== null ? module.exports = p: this.htmldiff = p
}).call(this); (function() {
    window.BaseClass = function() {
        this.initialize.apply(this, arguments)
    };
    BaseClass.prototype.initialize = function() {};
    BaseClass.prototype.remove = function() {
        this.stopListening()
    };
    BaseClass.extend = Backbone.View.extend;
    _.extend(BaseClass.prototype, Backbone.Events);
    window.Analytics = {};
    Analytics.initialize = function() {
        var a = app.getConfig();
        ia("init", {
            endpoint: URLUtils.expand("{+apiHost}/events/"),
            eventIterator: Analytics.eventIterator_,
            project: "habitat",
            logLevel: "error",
            sentryOptions: {
                dsn: a.get("sentryDSN"),
                tags: {
                    fileVersion: a.get("fileVersion")
                },
                includePaths: [/\js\/js\/(.+)\.js/]
            }
        })
    };
    Analytics.sendMemoryUsageEvent = function() {
        var a = Analytics.win_ || window;
        if (a.performance && a.performance.memory) {
            var b = Analytics.MEMORY_ANALYTICS_INTERVAL_MS * Math.round(a.performance.now() / Analytics.MEMORY_ANALYTICS_INTERVAL_MS);
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.HABITAT_MEMORY_USAGE,
                eventInfo: {
                    runningTime: Math.floor(b / 6E4),
                    memoryLimit: Math.floor(a.performance.memory.jsHeapSizeLimit / 1E6),
                    memoryTotal: Math.floor(a.performance.memory.totalJSHeapSize / 1E6),
                    memoryUsage: Math.floor(a.performance.memory.usedJSHeapSize / 1E6)
                }
            })
        }
    };
    Analytics.eventIterator_ = function(a) {
        var b = Analytics.win_ || window,
        c = a.currentUser || app.getCurrentUser(),
        b = {
            agent: "inkling-habitat",
            timestamp: Date.now(),
            deviceId: Analytics.getDeviceID_(),
            url: b.location.href,
            environment: app.getConfig().get("environment"),
            browserInfo: Analytics.getBrowserString_(),
            userAgent: (Analytics.navigator_ || navigator).userAgent
        };
        c && _.extend(b, {
            userId: c.get("s9id"),
            firstName: c.get("firstName"),
            lastName: c.get("lastName"),
            email: c.get("uid")
        });
        return a = {
            s9id: UUID(),
            eventType: a.eventType,
            eventMode: a.eventMode || Analytics.MODES.ONESHOT,
            eventInfo: a.eventInfo,
            context: _.extend({},
            a.context, b)
        }
    };
    Analytics.getDeviceID_ = function() {
        var a = CookieUtils.read("brs9id");
        return a ? (a = a.split("|")[0], a[0] === '"' && (a = a.slice(1)), atob(a)) : ""
    };
    Analytics.getBrowserString_ = function() {
        var a = BrowserUtils.getBrowserInfo();
        return StringUtils.capitalize(a.name) + " " + a.majorVersion + " on " + StringUtils.capitalize(a.platform)
    };
    Analytics.MEMORY_ANALYTICS_INTERVAL_MS = 108E5;
    Analytics.EVENTS = {
        COUNTLOG: "CountLog",
        HABITAT_REGISTRATION: "HabitatRegistration",
        SAVE_PROJECT: "SaveProject",
        OPEN_PROJECT: "OpenProject",
        BUILD_PROJECT: "BuildProject",
        CREATE_PROJECT: "CreateProject",
        ADD_PROJECT_MEMBERS: "AddProjectMembers",
        MODIFY_PROJECT_MEMBER: "ModifyProjectMember",
        REMOVE_PROJECT_MEMBER: "RemoveProjectMember",
        SIGN_UP: "SignUp",
        LOG_IN: "LogIn",
        SEND_TO_STORE: "SendToStore",
        FETCH_SEARCH: "FetchSearch",
        FETCH_PANEL_OPEN: "FetchPanelOpen",
        OPEN_BLOCK_PICKER: "OpenBlockPicker",
        BLOCK_INSERTED: "BlockInserted",
        OPEN_REPORT: "ReportOpen",
        OPEN_REPORT_NAVIGATION: "ReportOpenFromNavigation",
        OPEN_REPORT_BUILD: "ReportOpenFromBuild",
        IMPORT_FILES_SELECTED: "ImportFilesSelected",
        IMPORT_FILES_UPLOADED: "ImportFilesUploaded",
        SAVE_MAPPER: "SaveMapper",
        SAVE_CODE_MODE: "com.inkling.habitat.SaveCodeMode",
        MAPPER_INTRO_ACTION: "MapperIntroAction",
        CONTENT_VALIDATION_ERROR: "ContentValidationError",
        HABITAT_MEMORY_USAGE: "HabitatMemoryUsage",
        NEW_ISSUE: "NewIssue",
        UPDATE_ISSUE: "UpdateIssue"
    };
    Analytics.MODES = {
        ONESHOT: "oneshot",
        ENTER: "enter",
        EXIT: "exit"
    };
    Analytics.TIMING_TAGS = {
        DASHBOARD_LOAD: "habitat.dashboardLoad",
        PROJECT_LOAD: "habitat.projectLoad",
        FETCH_WIDGET_TOKEN: "habitat.widgetDomain.fetchToken",
        FILE_LOAD: "habitat.fileLoad",
        READER_CARD_RTE_TYPE: "habitat.readerCard.rteTypeDelay",
        READER_CARD_CODE_TYPE: "habitat.readerCard.codeTypeDelay",
        SAVE_MESSAGE_DURATION: "habitat.saveMessageDuration"
    };
    window.Animation = BaseClass.extend({
        currentAnimationFrame_: null,
        initialize: function(a) {
            this.win_ = a.window || window;
            this.start_ = Date.now();
            this.duration_ = a.duration;
            this.lerp_ = a.tick;
            this.easingFunc_ = a.easingFunction;
            this.onComplete_ = a.onComplete ||
            function() {};
            this.animate_ = this.animate_.bind(this);
            this.animate_()
        },
        cancel: function() {
            if (this.currentAnimationFrame_) this.win_.cancelAnimationFrame(this.currentAnimationFrame_),
            this.currentAnimationFrame_ = null,
            this.onComplete_()
        },
        isAnimating: function() {
            return this.currentAnimationFrame_ !== null
        },
        animate_: function() {
            var a = Date.now() - this.start_;
            a >= this.duration_ ? (this.currentAnimationFrame_ = null, this.lerp_(1), this.onComplete_()) : (this.lerp_(this.easingFunc_(a / this.duration_)), this.currentAnimationFrame_ = this.win_.requestAnimationFrame(this.animate_))
        }
    });
    Animation.EASING_FUNCTIONS = {
        SIMPLE_EASE: function(a) {
            a *= 2;
            return a < 1 ? Math.pow(a, 2) / 2 : -1 * (--a * (a - 2) - 1) / 2
        },
        LINEAR: function(a) {
            return a
        }
    };
    window.AssetManager = BaseClass.extend({
        imagesCollection_: null,
        videosCollection_: null,
        assetsUploading_: null,
        queuedShowPickerRequest_: null,
        initialize: function(a) {
            a = a || {};
            this.assetsUploading_ = [];
            this.imagesCollection_ = new ImageAssetCollection;
            this.imagesCollection_.on("loaded", this.onCollectionLoad_, this);
            this.videosCollection_ = new VideoAssetCollection;
            this.videosCollection_.on("loaded", this.onCollectionLoad_, this);
            this.win_ = a.window || window
        },
        fetchAssets: function() {
            this.imagesCollection_.fetch({
                add: !0
            });
            this.videosCollection_.fetch({
                add: !0
            })
        },
        isUploading: function() {
            return this.assetsUploading_.length > 0
        },
        isLoaded: function(a) {
            return this[a + "sCollection_"].isLoaded()
        },
        getImageAsset: function(a) {
            var b = this.imagesCollection_.get(a);
            return b ? b: this.assetsUploading_.find(function(b) {
                return b.get("filePath") === a
            },
            this) || null
        },
        getVideoAsset: function(a) {
            var b = this.videosCollection_.find(function(b) {
                return b.get("streamName") === a
            });
            return b ? b: this.assetsUploading_.find(function(b) {
                return b.get("streamName") === a
            },
            this) || null
        },
        queryForAsset: function(a, b) {
            b = b || {};
            /^img\//.test(a) ? this.imagesCollection_.fetch({
                add: !0,
                filePath: a.split("/").slice(1).join("/"),
                success: function() {
                    var c = this.imagesCollection_.get(a);
                    b.success && b.success(c)
                }.bind(this),
                error: function() {
                    b.error && b.error()
                }.bind(this)
            }) : _.delay(b.error.bind(b), 1)
        },
        showAssetPicker: function(a) {
            var b = a.type || "image",
            c = a.onClose ||
            function() {},
            d = this[b + "sCollection_"];
            if (d.isLoaded()) {
                var e = function(a) {
                    a && a.get("status") === AssetModel.STATUS.NEW && (a = this["upload" + StringUtils.capitalize(b) + "_"](a));
                    c(a)
                }.bind(this); (new AssetPickerView({
                    collection: d,
                    onClose: e,
                    directory: a.directory,
                    isFromBlueprint: a.isFromBlueprint
                })).render()
            } else this.queuedShowPickerRequest_ = {
                collection: d,
                request: this.showAssetPicker.bind(this, a)
            },
            app.getMessageView().show("Loading Assets...")
        },
        onCollectionLoad_: function(a) {
            if (this.queuedShowPickerRequest_ && this.queuedShowPickerRequest_.collection === a) this.queuedShowPickerRequest_.request(),
            this.queuedShowPickerRequest_ = null,
            app.getMessageView().hide("Loading Assets...");
            a === this.imagesCollection_ ? this.trigger("loaded:images") : this.trigger("loaded:videos")
        },
        uploadImage_: function(a) {
            var b = a,
            c = this.imagesCollection_.get(a.get("filePath"));
            if (c) if (this.win_.confirm(AssetManager.ERROR_MESSAGES_.CONFLICT)) c.set(a.toJSON()),
            b = c,
            this.imagesCollection_.remove(c);
            else return null;
            this.assetsUploading_.push(b);
            b.save({},
            {
                success: this.uploadImageSuccess_.bind(this),
                errorHandler: this.handleImageError_.bind(this, b),
                error: this.uploadError_.bind(this)
            });
            return b
        },
        uploadImageSuccess_: function(a) {
            a.set({
                lastAuthor: app.getCurrentUser().get("uid"),
                id: a.id || a.get("filePath"),
                lastModifiedTimestamp: Date.now()
            });
            this.imagesCollection_.add(a);
            this.assetsUploading_ = this.assetsUploading_.filter(function(b) {
                return b !== a
            })
        },
        uploadVideo_: function(a) {
            var b = a.get("streamName");
            if (this.getVideoAsset(b)) return a = AssetManager.ERROR_MESSAGES_.VIDEO_CONFICT,
            a = a.replace("{streamName}", b),
            app.getMessageView().error(a, MessageView.DEFAULT_DISPLAY_TIME),
            null;
            this.assetsUploading_.push(a);
            a.save();
            a.on("change:status", this.videoStatusChange_, this);
            return a
        },
        videoStatusChange_: function(a, b) {
            if (b === AssetModel.STATUS.FAILED) this.uploadError_(a);
            else if (b === AssetModel.STATUS.COMPLETED) this.videosCollection_.add(a),
            this.assetsUploading_ = this.assetsUploading_.filter(function(b) {
                return b !== a
            }); (b === AssetModel.STATUS.FAILED || b === AssetModel.STATUS.COMPLETED) && a.off("change:status", this.videoStatusChange_, this)
        },
        handleImageError_: function(a, b) {
            var c, d = null;
            try {
                c = JSON.parse(b.responseText),
                d = c.status.statusCode
            } catch(e) {}
            return b.status === 409 && d === "ContentConflictException" && this.win_.confirm(AssetManager.ERROR_MESSAGES_.CONFLICT) ? (c = b.getResponseHeader("X-Subversion-Revision"), c = parseInt(c, 10), a.save({
                revision: c
            },
            {
                success: this.uploadImageSuccess_.bind(this),
                errorHandler: this.handleImageError_.bind(this, a),
                error: this.uploadError_.bind(this)
            }), !0) : !1
        },
        uploadError_: function(a) {
            app.getMessageView().error(AssetManager.ERROR_MESSAGES_.GENERIC);
            this.assetsUploading_ = this.assetsUploading_.filter(function(b) {
                return b !== a
            })
        }
    });
    AssetManager.ERROR_MESSAGES_ = {
        GENERIC: "The asset upload failed. Please try again.",
        CONFLICT: "A version of this asset exists on the server already; your changes will overwrite them. Proceed anyway?",
        VIDEO_CONFICT: 'A video called "{streamName}" already exists. Please rename the file and try again.'
    };
    window.Autogrow = Backbone.View.extend({
        proxy_: null,
        minHeight_: null,
        maxHeight_: null,
        keyboard_: null,
        initialize: function(a) {
            this.options = a || {};
            this.doc_ = a.document || document;
            var b = Autogrow.MINIMUM_ROWS_;
            this.minHeight_ = a.minHeight === void 0 ? this.getRowHeight_() * b: a.minHeight;
            this.maxHeight_ = a.maxHeight || null;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    "*": this.onInput_.bind(this)
                }),
                el: this.el
            });
            this.setupProxy_()
        },
        render: function() {
            this.resize_();
            app.getKeyboardManager().activate(this.keyboard_)
        },
        remove: function() {
            this.stopListening();
            this.undelegateEvents();
            DOMUtils.detachElement(this.proxy_);
            app.getKeyboardManager().remove(this.keyboard_)
        },
        onInput_: function() {
            _.delay(this.resize_.bind(this), 1)
        },
        getRowHeight_: function() {
            var a = DOMUtils.getComputedStyle(this.el),
            b = a.lineHeight;
            return b === "normal" ? parseInt(a.fontSize, 10) * 1.2 : parseInt(b, 10)
        },
        setupProxy_: function() {
            this.proxy_ = DOMUtils.createElement("div", {
                styles: {
                    overflowX: "hidden",
                    position: "absolute",
                    top: 0,
                    left: "-9999px"
                },
                doc: this.doc_
            });
            var a = DOMUtils.getComputedStyle(this.el);
            "fontSize,fontFamily,width,margin,lineHeight,padding,box-sizing,-webkit-box-sizing,border-style,border-width".split(",").forEach(function(b) {
                this.proxy_.style[b] = a[b]
            },
            this);
            this.doc_.body.appendChild(this.proxy_)
        },
        resize_: function() {
            var a = this.el.value || "",
            a = StringUtils.escapeHTML(a),
            a = a.replace(/\n|\r|\r\n/g, "<br/>A");
            this.proxy_.set("html", a);
            a = Math.max(this.minHeight_, this.proxy_.getHeight());
            this.maxHeight_ && (a = Math.min(a, this.maxHeight_));
            this.el.getHeight() !== a && (DOMUtils.setStyles(this.el, {
                height: a + "px",
                overflow: "hidden",
                overflowX: "hidden",
                overflowY: "hidden",
                textAlign: "center"
            }), Hacks.forceLayout(this.el), DOMUtils.setStyles(this.el, {
                overflow: null,
                overflowX: null,
                overflowY: null,
                textAlign: null
            }), this.trigger("resize"))
        }
    });
    Autogrow.MINIMUM_ROWS_ = 3;
    window.BrowserFeatures = {
        iFramePropagatesKeyEvents: function(a) {
            return ! /Chrome/.test((a || window).navigator.userAgent)
        },
        getEventName: function(a) {
            if (a === "transitionend") return "webkitTransitionEnd"
        },
        getFileInputDirectoryAttribute: function() {
            return "webkitDirectory"
        },
        getFileRelativePath: function(a) {
            return a.webkitRelativePath || a.name
        },
        getFileRelativePathAttribute: function() {
            return "webkitRelativePath"
        },
        getItemEntry: function(a) {
            return a.webkitGetAsEntry ? a.webkitGetAsEntry() : null
        },
        getCSSMatchPrefix: function() {
            return ":-webkit-any"
        }
    };
    window.BrowserUtils = {
        getBrowserInfo: function(a) {
            var b = (a || navigator).userAgent.toLowerCase().match(/(\bchrome\b)\/(\d*)/),
            a = (a || navigator).platform.toLowerCase().match(/mac|win|linux/);
            return {
                name: b ? b[1] : "unknown",
                majorVersion: b ? parseInt(b[2], 10) : 0,
                platform: a ? a[0] : "other"
            }
        }
    };
    window.BuildsManager = BaseClass.extend({
        hasActiveBuild_: !1,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            a = app.getProjectModel().get("buildCollection");
            if (a.isLoaded()) this.win_.setTimeout(function() {
                this.buildsLoaded_()
            }.bind(this), 1);
            else a.on("loaded", this.buildsLoaded_, this)
        },
        isBuilding: function() {
            var a = this.getLatestBuild_();
            return a && a.isInProgress()
        },
        startBuild: function(a, b, c) {
            if (this.isBuilding()) app.getMessageView().error(BuildsManager.MESSAGES.BUILD_IN_PROGRESS, MessageView.DEFAULT_DISPLAY_TIME);
            else if (!app.getSaveHandler().isSaveRequired() || this.win_.confirm(BuildsManager.MESSAGES.PROMPT_UNSAVED_DATA)) {
                var d = new BuildModel({
                    shortName: a,
                    trackName: b,
                    userParameters: c
                });
                app.getProjectModel().get("buildCollection").add(d);
                d.save({},
                {
                    success: function() {
                        app.getMessageView().show(BuildsManager.MESSAGES.BUILD_STARTED, MessageView.DEFAULT_DISPLAY_TIME);
                        this.fireBuildAnalytics_(d, c);
                        this.buildStarted_(d)
                    }.bind(this),
                    error: function(a, b) {
                        b.status === 409 ? app.getMessageView().error(BuildsManager.MESSAGES.BUILD_IN_PROGRESS, MessageView.DEFAULT_DISPLAY_TIME) : app.getMessageView().error(BuildsManager.MESSAGES.BUILD_BLOCKED, MessageView.DEFAULT_DISPLAY_TIME)
                    }.bind(this)
                });
                app.getMessageView().show(BuildsManager.MESSAGES.BUILD_STARTING, MessageView.DEFAULT_DISPLAY_TIME);
                return d
            }
        },
        getBuildProgress: function(a) {
            a = a || this.getLatestBuild_();
            if (!a) return 0;
            var b = a.get("startTime"),
            a = a.get("expectedCompletionTime"),
            b = (Date.now() - b) / (a - b) * 100;
            return Math.floor(Math.min(Math.max(b, 0), 100))
        },
        fireBuildAnalytics_: function(a, b) {
            var c = b.chapters,
            d = app.getProjectModel().get("toc").get("xml").xpathAll("//s9ml:chapter").length,
            c = {
                shortName: a.get("shortName"),
                buildTrack: a.get("trackName"),
                revision: a.get("revision"),
                chapterCount: c ? c.length: 0,
                totalChapterCount: d,
                contentBuildId: a.id
            };
            if (b.users) c.users = b.users;
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.BUILD_PROJECT,
                eventInfo: c
            })
        },
        buildsLoaded_: function() {
            var a = app.getProjectModel().get("buildCollection");
            a.off("loaded", this.buildsLoaded_, this);
            this.isBuilding() && this.buildStarted_(this.getLatestBuild_());
            a.on("add reset remove loaded", this.buildsChangedEvent_, this)
        },
        getLatestBuild_: function() {
            return app.getProjectModel().get("buildCollection").at(0)
        },
        buildsChangedEvent_: function() {
            var a = this.getLatestBuild_();
            this.hasActiveBuild_ && a && this.buildProgressed_(a); ! this.hasActiveBuild_ && a && a.isInProgress() ? this.buildStarted_(a) : this.hasActiveBuild_ && a && a.hasCompleted() && this.buildCompleted_(a)
        },
        buildStarted_: function(a) {
            this.hasActiveBuild_ = !0;
            this.trigger("build:started");
            this.buildProgressed_(a)
        },
        buildProgressed_: function(a) {
            this.trigger("build:progress", this.getBuildProgress(a))
        },
        buildCompleted_: function(a) {
            this.trigger("build:finished", a);
            if (a.get("initiator") === app.getCurrentUser().get("uid")) {
                var a = a.get("status"),
                b = app.getMessageView();
                if (a === BuildModel.STATUS.SUCCESS) b.show(BuildsManager.MESSAGES.BUILD_COMPLETE, MessageView.DEFAULT_DISPLAY_TIME);
                else {
                    var c = function() {
                        app.getRouter().openBuilds()
                    };
                    a === BuildModel.STATUS.WARNING ? b.show(BuildsManager.MESSAGES.BUILD_COMPLETE_WARNINGS, MessageView.DEFAULT_DISPLAY_TIME, c) : a === BuildModel.STATUS.ERROR ? b.error(BuildsManager.MESSAGES.BUILD_COMPLETE_ERRORS, MessageView.DEFAULT_DISPLAY_TIME, c) : b.error(BuildsManager.MESSAGES.BUILD_FAILED, MessageView.DEFAULT_DISPLAY_TIME, c)
                }
            }
            this.hasActiveBuild_ = !1
        }
    });
    BuildsManager.MESSAGES = {
        BUILD_STARTING: "Starting build...",
        BUILD_STARTED: "Build started",
        BUILD_BLOCKED: "Error starting build",
        BUILD_IN_PROGRESS: "Build currently in progress",
        BUILD_COMPLETE: "Build complete",
        BUILD_COMPLETE_WARNINGS: "Build complete with warnings: click here to view",
        BUILD_COMPLETE_ERRORS: "Build failed: click here to view",
        BUILD_FAILED: "Build failed: click here to view",
        PROMPT_UNSAVED_DATA: "There are unsaved changes. Would you still like to build?"
    };
    window.ClassGroupParser = {
        parse: function(a) {
            var b = [];
            if (!a) return b;
            StringUtils.splitOnLineBreak(a).forEach(function(a) {
                var d = a.trim().match(ClassGroupParser.GROUP_REGEXP_);
                if (d) { (a = d[1]) && (a = a.toLowerCase());
                    var e = d[2],
                    d = {
                        id: a ? a + e: e,
                        label: d[3],
                        classes: e.split(".").splice(1)
                    };
                    if (a) d.tagName = a;
                    b.push(d)
                }
            });
            return b
        }
    };
    ClassGroupParser.GROUP_REGEXP_ = /^([a-zA-Z0-9]+)?((?:\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*)+)\s+(.+)$/;
    window.CookieUtils = {
        read: function(a, b) {
            var c = (b && b.document || document).cookie.match(CookieUtils.makeCookieMatcher_(a));
            return c ? decodeURIComponent(c[1]) : null
        },
        write: function(a, b, c) {
            var d = c && c.document || document,
            a = encodeURIComponent(a) + "=" + encodeURIComponent(b),
            c = c || {};
            a += "; Path=" + encodeURI(c.path || "/");
            c.domain && (a += "; Domain=" + c.domain.replace(/;[^$]*/, ""));
            if (_.isFinite(c.duration)) c = c.duration,
            c < 0 && (console.warn("Programming Error: cookie duration cannot be negative, assuming 0."), c = 0),
            a += "; Max-Age=" + c * 86400;
            app.getConfig().get("localDevelopment") || (a += "; Secure");
            d.cookie = a
        },
        dispose: function(a, b) {
            b = b || {};
            b.duration = 0;
            CookieUtils.write(a, "", b)
        },
        makeCookieMatcher_: function(a) {
            return "(?:^|;)\\s*" + StringUtils.escapeRegExp(encodeURIComponent(a)) + "\\s*=\\s*([^;]*)"
        }
    }; (function() {
        function a(a, c) {
            if (a.nodeType === Node.TEXT_NODE) b(a, c);
            else {
                var d = a[n[c]];
                d && d.nodeType === Node.TEXT_NODE ? b(d, k[c]) : a.parentNode.insertBefore((a.ownerDocument || a).createTextNode("\n"), c === y.START ? a: d)
            }
        }
        function b(a, b) {
            var c = b === y.START ? q: m;
            i(a,
            function(a) {
                return a.replace(c, "\n")
            })
        }
        function c(a, b, c) {
            i(a,
            function(a) {
                return a.replace(s, "\n" + b).replace(r, "\n" + c).replace(v, "").replace(w, "")
            })
        }
        function d(a, b, c) {
            i(a,
            function(a) {
                var d = a.split(l),
                e = d.reduce(function(a, b) {
                    var c = b.match(p);
                    if (!c || !c[2]) return a;
                    c = c[1].length;
                    return c < a ? c: a
                },
                Infinity),
                d = d.map(function(a, f) {
                    var g = isFinite(e) ? a.slice(e) : "";
                    return f === d.length - 1 ? c + g: g ? b + g: ""
                });
                return d.join("\n").replace(v, "")
            })
        }
        function e(a, b, c) {
            if (a.nodeType === Node.DOCUMENT_NODE || a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) return ! 1;
            if (!f(a, b, c)) return ! 1;
            var d = a[n[b]];
            return ! a.parentElement && !d ? !1 : a.nodeType !== Node.TEXT_NODE && c.wrapper(a, b) ? !0 : !d && c.content(a.parentElement, b) ? !0 : !1
        }
        function f(a, b, c) {
            var d = j,
            e = o,
            f = b === y.START ? e: d,
            h = b === y.START ? d: e;
            if (a.parentNode && a.parentNode.nodeType === Node.DOCUMENT_NODE) return ! 1;
            var d = a[n[b]] || a.parentNode,
            i = !0;
            g(a, d, k[b],
            function(a) {
                if (a.nodeType === Node.TEXT_NODE || a.nodeType === Node.CDATA_SECTION_NODE) {
                    if (h.test(a.textContent) || (i = !1), a.textContent) return ! 0
                } else if (a.nodeType === Node.ELEMENT_NODE && !c.whitespace(a)) return ! 0
            });
            if (i) return ! 0;
            var l = !0;
            g(d, a, b,
            function(a) {
                if (a.nodeType === Node.TEXT_NODE || a.nodeType === Node.CDATA_SECTION_NODE) {
                    if (f.test(a.textContent) || (l = !1), a.textContent) return ! 0
                } else if (a.nodeType === Node.ELEMENT_NODE && !c.whitespace(a)) return ! 0
            });
            return l
        }
        function g(a, b, c, d) {
            for (var e = n[c], c = t[c]; a;) {
                if (d(a)) break;
                var f = null,
                f = a[c] && (!b || b.parentNode !== a) ? a[c] : a[e] ? a[e] : a.parentNode,
                b = a,
                a = f
            }
        }
        function h(a, b) {
            for (var c = [a]; c.length > 0;) {
                var d = c.pop();
                if (b(d) !== !1) for (var e = d.childNodes.length - 1; e >= 0; e--) c.push(d.childNodes[e])
            }
        }
        function i(a, b) {
            var c = a.textContent,
            d = b(c);
            if (d !== c) a.textContent = d
        }
        var l = /\n/,
        j = /^[ \t\n]+/,
        o = /[ \t\n]+$/,
        q = /^[ \t]*\n?/,
        m = /\n?[ \t]*$/,
        p = /^([ \t]*)([\s\S]*)$/,
        r = /\n[ \t]*$/,
        s = /\n[ \t]*/g,
        v = /[\t ]+(?=\n)/g,
        w = /\n+(?=\n)/g,
        x = {
            XML: {
                indent: function() {
                    return ! 0
                },
                whitespace: function() {
                    return ! 1
                },
                content: function() {
                    return ! 0
                },
                wrapper: function() {
                    return ! 0
                }
            },
            SEMANTIC_HTML: {
                indent: function(a) {
                    return a.tagName.toLowerCase() !== "pre"
                },
                whitespace: function(a) {
                    return u.indexOf(a.tagName.toLowerCase()) !== -1
                },
                content: function(a) {
                    return a.nodeType !== Node.ELEMENT_NODE ? !0 : z.indexOf(a.tagName.toLowerCase()) !== -1
                },
                wrapper: function(a) {
                    return a.nodeType !== Node.ELEMENT_NODE ? !0 : B.indexOf(a.tagName.toLowerCase()) !== -1
                }
            }
        },
        y = {
            START: "start",
            END: "end"
        },
        k = {
            start: y.END,
            end: y.START
        },
        n = {
            start: "previousSibling",
            end: "nextSibling"
        },
        t = {
            start: "lastChild",
            end: "firstChild"
        },
        u = "a,abbr,acronym,audio,b,bdi,bdo,big,blink,button,canvas,cite,code,data,datalist,del,dfn,em,font,i,img,input,ins,kbd,keygen,label,link,map,mark,marquee,math,meta,meter,nobr,object,output,progress,q,rp,rt,ruby,s,samp,select,small,spacer,span,strike,strong,sub,sup,svg,time,tt,u,var,video,wbr,xmp".split(","),
        B = "address,applet,area,article,aside,audio,base,basefont,blockquote,body,br,canvas,caption,center,col,colgroup,dd,details,dialog,div,dl,dt,embed,epub:switch,epub:trigger,epub:case,epub:default,fieldset,figcaption,figure,footer,form,frame,frameset,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,iframe,label,legend,li,link,main,map,math,menu,menuitem,meta,nav,noframes,noscript,object,ol,optgroup,option,p,param,pre,script,section,source,style,summary,svg,table,tbody,td,tfoot,th,thead,title,tr,ul,video".split(","),
        z = "address,applet,area,article,aside,body,center,colgroup,dialog,div,dl,fieldset,figure,footer,form,head,header,hgroup,html,main,map,math,nav,ol,optgroup,section,table,tbody,tfoot,thead,tr,ul".split(","),
        A;
        if (typeof exports !== "undefined") A = exports;
        else if (typeof window !== "undefined") A = window.DOMPrettifier = {};
        A.prettify = function(g, i) {
            for (var i = i || {},
            j = i.indent || 2,
            k = i.formatter || x.XML,
            m = "",
            n = 0; n < j; n++) m += " ";
            g.normalize();
            h(g,
            function(c) {
                if (c !== g) {
                    switch (c.nodeType) {
                    case Node.COMMENT_NODE:
                        k.content(c, y.START) && b(c, y.START);
                        k.content(c, y.END) && b(c, y.END);
                        break;
                    case Node.CDATA_SECTION_NODE:
                        k.content(c, y.START) && f(c, y.START) && b(c, y.START),
                        k.content(c, y.END) && f(c, y.END) && b(c, y.END)
                    }
                    e(c, y.START, k) && a(c, y.START);
                    e(c, y.END, k) && a(c, y.END)
                }
                if (c.nodeType === Node.ELEMENT_NODE && !k.indent(c)) return ! 1
            });
            h(g,
            function(a) {
                var b;
                if (a.nodeType === Node.ELEMENT_NODE && !k.indent(a)) return ! 1;
                b = a.nodeType;
                if (! (b !== Node.TEXT_NODE && b !== Node.COMMENT_NODE && b !== Node.CDATA_SECTION_NODE)) {
                    b = m;
                    var e = !1,
                    f = a;
                    if (f.nodeType === Node.TEXT_NODE) f = f.parentElement,
                    e = !f;
                    for (; f && (f.nodeType !== Node.TEXT_NODE || f === a || !l.test(f.textContent));) f = f.previousSibling ? f.previousSibling: f.parentElement;
                    var g = (f ? f.textContent: "").split(l).pop().match(p),
                    f = g[1],
                    g = !g[2];
                    b = f + (!e && g ? b: "");
                    switch (a.nodeType) {
                    case Node.TEXT_NODE:
                        c(a, b, a.nextSibling ? b: f);
                        break;
                    case Node.CDATA_SECTION_NODE:
                        c(a, b, f);
                        break;
                    case Node.COMMENT_NODE:
                        d(a, b, f)
                    }
                }
            })
        };
        A.FORMATTER = x;
        A.DIRECTION = y;
        A.WRAP_ELEMENT_CONTENT = z;
        A.WRAP_ELEMENTS = B;
        A.WHITESPACE_SENSITIVE_ELEMENTS = u
    })();
    _.extend(Array.prototype, {
        find: function(a, b) {
            var c;
            this.some(function(d, e, f) {
                if (a.call(b, d, e, f)) return c = d,
                !0
            });
            return c
        }
    });
    window.DOMUtils = {
        getParent: function(a, b) {
            if (a && a.parentNode) for (a = a.parentNode; a && a.matchesSelector;) {
                if (a.matchesSelector(b)) return a;
                a = a.parentNode
            }
        },
        getParents: function(a) {
            if (!a) return null;
            for (var b = [], a = a.parentElement; a;) b.unshift(a),
            a = a.parentElement;
            return b
        },
        getFormValues: function(a) {
            return ! a || a.tagName.toLowerCase() !== "form" ? null: a.querySelectorAll("input, select, textarea").reduce(function(b, c) {
                var d = c.getAttribute("name");
                if (d && !c.disabled && !b.hasOwnProperty(d)) if (c.tagName.toLowerCase() === "select") {
                    var e = Array.prototype.slice.call(c.selectedOptions);
                    b[d] = e.map(function(a) {
                        return a.value
                    })
                } else if (e = c.getAttribute("type"), e === "checkbox") e = a.querySelectorAll('input[type="checkbox"][name="' + d + '"]:checked'),
                e.length && (b[d] = e.map(function(a) {
                    return a.value
                }));
                else if (e === "radio") {
                    if (c.checked) b[d] = c.value
                } else b[d] = c.value;
                return b
            },
            {}) || {}
        },
        selectAllAndFocusInput: function(a) {
            a && (a.setSelectionRange(0, a.value.length), a.focus())
        },
        detachElement: function(a) {
            a && a.parentNode && a.parentNode.removeChild(a)
        },
        detachMatchingElements: function(a, b) {
            b && b.querySelectorAll(a).forEach(function(a) {
                DOMUtils.detachElement(a)
            },
            this)
        },
        isMouseEnterLeave: function(a, b) {
            return ! b.relatedTarget ? !0 : b.relatedTarget !== a && !a.contains(b.relatedTarget)
        },
        isSecondaryClick: function(a) {
            return ! a ? !1 : a.metaKey || a.ctrlKey || a.button > 0
        },
        getOffset: function(a, b) {
            for (var c = 0,
            d = 0,
            e = a.offsetParent; e && !e.contains(b);) c += e.offsetTop,
            d += e.offsetLeft,
            e = e.offsetParent;
            return {
                top: c + a.offsetTop,
                left: d + a.offsetLeft
            }
        },
        getScroll: function(a) {
            for (var b = 0,
            c = 0,
            d = a.parentNode; d;) d.scrollTop && (b += d.scrollTop),
            d.scrollLeft && (c += d.scrollLeft),
            d = d.parentNode;
            return {
                top: b + a.scrollTop,
                left: c + a.scrollLeft
            }
        },
        getSelector: function(a, b) {
            if (!a) return null;
            var b = b || {},
            c = a.tagName.toLowerCase(),
            d = a.getAttribute("id");
            d && !b.stripId && !UUID.isUUID(d) && (c += "#" + d);
            d = Array.prototype.slice.call(a.classList);
            b.ignoreClassesMatching && (d = d.filter(function(a) {
                return ! b.ignoreClassesMatching.test(a)
            },
            this));
            d.length && (c += "." + d.join("."));
            return c
        },
        verticalScrollTo: function(a, b, c) {
            if (!a || !b) return ! 1;
            var b = DOMUtils.calculateScrollingDetails_(a, b, c),
            c = b.elemTop < a.scrollTop,
            d = b.elemBottom > b.parentScrollBottom;
            return c && !d || !c && d ? (a.scrollTop = b.elemHeight < a.offsetHeight ? b.elemTop - a.offsetHeight / 2 + b.elemHeight / 2 : c ? b.elemBottom - a.offsetHeight: b.elemTop, !0) : !1
        },
        isScrolledOffScreen: function(a, b, c) {
            b = DOMUtils.calculateScrollingDetails_(a, b, c);
            return b.elemTop < a.scrollTop || b.elemBottom > b.parentScrollBottom
        },
        runFadeAnimation: function(a, b, c) {
            return new Animation({
                duration: 100,
                easingFunction: Animation.EASING_FUNCTIONS.LINEAR,
                tick: function(c) {
                    a.style.opacity = b ? c: 1 - c
                },
                onComplete: function() {
                    c && c()
                }
            })
        },
        createRectOverlay: function(a) {
            if (a) {
                var b = a.ownerDocument.createElement("div");
                DOMUtils.copySizeAndPosition(b, a);
                return b
            }
        },
        copySizeAndPosition: function(a, b) {
            if (a && b) {
                var c = b.getBoundingClientRect(); ["width", "height", "top", "left"].forEach(function(b) {
                    a.style[b] = c[b] + "px"
                })
            }
        },
        onTransitionEnd: function(a, b) {
            if (a && b) {
                var c = BrowserFeatures.getEventName("transitionend");
                a.addEventListener(c,
                function e(f) {
                    f.target === a && (b(f), a.removeEventListener(c, e))
                })
            }
        },
        getSibling: function(a, b, c) {
            c = c ? "previousElementSibling": "nextElementSibling";
            for (a = a[c]; a;) {
                if (a.matchesSelector(b)) return a;
                a = a[c]
            }
            return null
        },
        insertSibling: function(a, b, c) {
            c.parentNode.insertBefore(a, b === "after" ? c.nextSibling: c)
        },
        createElement: function(a, b) {
            var b = b || {},
            c = (b.doc || document).createElement(a);
            if (b.html) c.innerHTML = b.html;
            if (b.text) c.textContent = b.text;
            if (b.className) c.className = b.className;
            if (b.id) c.id = b.id;
            b.s9id && XMLUtilities.setS9ID(c, b.s9id);
            b.dataset && Object.keys(b.dataset).forEach(function(a) {
                c.dataset[a] = b.dataset[a]
            });
            b.styles && Object.keys(b.styles).forEach(function(a) {
                c.style[a] = b.styles[a]
            });
            b.attributes && Object.keys(b.attributes).forEach(function(a) {
                b.attributes[a] !== null && c.setAttribute(a, b.attributes[a])
            });
            return c
        },
        replaceNode: function(a, b, c) {
            if (a && b && a.parentNode) {
                if (c) b.innerHTML = "",
                a.childNodes.slice().forEach(function(a) {
                    b.appendChild(a)
                });
                a.parentNode.replaceChild(b, a)
            }
        },
        setStyles: function(a, b) {
            Object.keys(b).forEach(function(c) {
                a.style[c] = b[c]
            })
        },
        unwrapElement: function(a) {
            var b = DOMUtils.getRangeInfo(a.ownerDocument),
            c = DOMUtils.createChildFragment(a),
            d = c.childNodes.slice();
            DOMUtils.replaceNode(a, c);
            DOMUtils.restoreRange(b);
            return d
        },
        createChildFragment: function(a, b) {
            var c = a.ownerDocument.createDocumentFragment();
            a.childNodes.slice().forEach(function(a) {
                b && (a = a.cloneNode(!0));
                c.appendChild(a)
            });
            return c
        },
        hasNoAttributes: function(a) {
            return ! a.attributes.length ? !0 : a.attributes.length === 1 && a.getAttribute("class") === ""
        },
        determineEdges: function(a, b) {
            var c = [],
            d = b.getBoundingClientRect();
            a.top <= b.scrollTop && c.push(DOMUtils.EDGE.TOP);
            a.left <= b.scrollLeft && c.push(DOMUtils.EDGE.LEFT);
            a.left + a.width >= b.scrollLeft + d.width && c.push(DOMUtils.EDGE.RIGHT);
            a.top + a.height >= b.scrollTop + d.height && c.push(DOMUtils.EDGE.BOTTOM);
            return c
        },
        moveCursorToEndOfNode: function(a) {
            if (a) {
                var b = a.ownerDocument,
                c = b.getSelection(),
                b = b.createRange();
                b.selectNodeContents(a);
                b.collapse(!1);
                c.removeAllRanges();
                c.addRange(b)
            }
        },
        userHasSelectedAll: function(a) {
            var b = a.getSelection();
            if (!b.rangeCount) return ! 1;
            var c = b.getRangeAt(0);
            if (c.collapsed) return ! 1;
            a.execCommand("selectAll", !1);
            var d;
            b.rangeCount && (d = b.getRangeAt(0));
            d = !!d && c.startContainer === d.startContainer && c.startOffset === d.startOffset && c.endContainer === d.endContainer && c.endOffset === d.endOffset;
            a.execCommand("unselect", !1);
            b.addRange(c);
            return d
        },
        getSelectedFragment: function(a) {
            var b = a.cloneContents();
            if (!a.collapsed) {
                a = a.commonAncestorContainer;
                if (a.nodeType === Node.TEXT_NODE) a = a.parentNode;
                for (; a && a.tagName.toLowerCase() !== "body";) {
                    if (HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, a)) {
                        for (var c = a.cloneNode(!1); b.childNodes.length;) c.appendChild(b.firstChild);
                        b.appendChild(c)
                    }
                    a = a.parentNode
                }
            }
            return b
        },
        getRange: function(a) {
            a = a.getSelection();
            if (!a || !a.rangeCount) return null;
            a = a.getRangeAt(0);
            return a.startContainer.nodeType === Node.DOCUMENT_NODE ? null: a.startContainer.nodeType === Node.ELEMENT_NODE && a.startContainer.tagName.toLowerCase() === "html" ? null: a
        },
        getRangeInfo: function(a) {
            var b = DOMUtils.getRange(a);
            return b ? {
                doc: a,
                collapsed: b.collapsed,
                startContainer: b.startContainer,
                startOffset: b.startOffset,
                endContainer: b.endContainer,
                endOffset: b.endOffset
            }: null
        },
        restoreRange: function(a) {
            if (a && a.doc.contains(a.startContainer) && a.doc.contains(a.endContainer)) {
                var b = a.doc.getSelection();
                b.removeAllRanges();
                var c = a.doc.createRange();
                c.setStart(a.startContainer, a.startOffset);
                c.setEnd(a.endContainer, a.endOffset);
                b.addRange(c)
            }
        },
        isSameRange: function(a, b) {
            return ! a || !b ? !1 : a.startContainer === b.startContainer && a.startOffset === b.startOffset && a.endContainer === b.endContainer && a.endOffset === b.endOffset
        },
        focusWindow: function(a) { (a.frameElement || a).focus()
        },
        reparentNakedPhrasingNodes: function(a) {
            if (a.xpath("//xhtml:body")) {
                var b = a.xpath("//xhtml:body"),
                c;
                b.childNodes.slice().forEach(function(d) {
                    if (HTMLContent.canNest(d, b)) {
                        if (d.nodeType !== Node.TEXT_NODE || d.nodeValue.trim() !== "") c = null
                    } else c || (c = a.createElementNS(XHTML_NS, "p"), b.replaceChild(c, d)),
                    c.appendChild(d)
                },
                this)
            }
        },
        normalizeTripleClickSelection: function(a) {
            if (a && a.body) {
                var b = DOMUtils.getRange(a);
                if (b) {
                    for (var c = this.getParents(b.startContainer), d = c.length - 1, e = c[d], f, g = !1; d >= 0 && e.tagName && !g;) {
                        f = e.tagName.toLowerCase();
                        if (f === "li" || f === "figcaption") g = !0;
                        d -= 1
                    }
                    e = !1;
                    b.endContainer.tagName && (e = b.endContainer.tagName.toLowerCase() === "figure");
                    if (b.startContainer !== b.endContainer && (b.startOffset === 0 || g) && (b.endOffset === 0 || e)) {
                        d = c.length - 1;
                        e = c[d];
                        for (f = e.tagName.toLowerCase(); d >= 0 && HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, e) && f !== "cite";) e = c[d],
                        f = e.tagName.toLowerCase(),
                        d -= 1;
                        e && f !== "body" && (b = a.getSelection(), a = a.createRange(), a.setStart(e, 0), a.setEnd(e, e.childNodes.length), b.removeAllRanges(), b.addRange(a))
                    }
                }
            }
        },
        normalizeTextNodes: function(a) {
            if (a.body) {
                var b = DOMUtils.getRange(a),
                c;
                b && (c = new RestorableRange({
                    window: a.defaultView
                }), c.save(b));
                a.body.normalize();
                c && c.restore(a, !1)
            }
        },
        isFragmentedTextNode: function(a) {
            var b = a.previousSibling,
            a = a.nextSibling;
            return b && b.nodeType === Node.TEXT_NODE ? !0 : a && a.nodeType === Node.TEXT_NODE ? !0 : !1
        },
        getFirstFragmentedTextNode: function(a) {
            if (!DOMUtils.isFragmentedTextNode(a)) return null;
            for (; a.previousSibling && a.previousSibling.nodeType === Node.TEXT_NODE;) a = a.previousSibling;
            return a
        },
        getNormalizedPositionInParent: function(a) {
            var b = a.parentElement,
            c = b.cloneNode(!1);
            Array.prototype.forEach.call(b.childNodes,
            function(b) {
                var d = b.cloneNode(!1);
                if (b === a) a.nodeType === Node.TEXT_NODE ? d.nodeValue += "\u0091": d.s9HabitatTarget = !0;
                c.appendChild(d)
            });
            c.normalize();
            for (var d, b = 0; b < c.childNodes.length; b++) {
                var e = c.childNodes[b];
                if (e.nodeType === Node.TEXT_NODE && e.nodeValue.indexOf("\u0091") !== -1) {
                    d = b;
                    break
                } else if (e.s9HabitatTarget) {
                    d = b;
                    break
                }
            }
            return d
        },
        getPathToNode: function(a, b) {
            if (!a) return null;
            var b = b || {},
            c = [],
            d,
            e,
            f = DOMUtils.findNearestId(a, {
                useS9ID: !!b.isWithinContent
            });
            if (f && (e = f.element, d = f.type + "=" + f.id, e === a)) return d;
            for (f = a.parentElement; f;) {
                c.unshift(DOMUtils.getNormalizedPositionInParent(a));
                if (e && f === e) break;
                a = f;
                f = f.parentElement
            }
            d && c.unshift(d);
            return c = c.join("/")
        },
        getNodeFromPath: function(a, b) {
            var c = null,
            d = a.querySelector("html");
            if (b && d) {
                c = b.split("/");
                c[0].test(/^s9id=/) ? (d = c.shift().replace(/^s9id=/, ""), d = XMLUtilities.getNodeByS9ID(a, d)) : c[0].test(/^id=/) && (d = c.shift().replace(/^id=/, ""), d = a.getElementById(d));
                for (; d && c.length;) var e = parseInt(c.shift(), 10),
                d = d.childNodes[e];
                c = d
            }
            return c
        },
        findNearestId: function(a, b) {
            var b = b || {},
            c = !!b.useS9ID;
            if (a && a.nodeType !== Node.ELEMENT_NODE) a = a.parentElement;
            for (var d; a && !d;) c && XMLUtilities.getS9ID(a) ? d = {
                type: "s9id",
                id: XMLUtilities.getS9ID(a),
                element: a
            }: !c && a.hasAttribute("id") && (d = {
                type: "id",
                id: a.getAttribute("id"),
                element: a
            }),
            a = a.parentElement;
            return d || null
        },
        isWhitespaceNode: function(a) {
            return ! a || a.nodeType !== Node.TEXT_NODE ? !1 : a.nodeValue.test(/^\s+$/g)
        },
        isEmptyElement: function(a) {
            return ! a || a.nodeType !== Node.ELEMENT_NODE || !a.childNodes.length ? !0 : !HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, a) && a.childNodes.every(function(a) {
                return DOMUtils.isWhitespaceNode(a)
            })
        },
        getComputedStyle: function(a) {
            return a.ownerDocument.defaultView.getComputedStyle(a)
        },
        insertFragmentAtCursor: function(a, b) {
            var c = DOMUtils.createElement("b", {
                doc: a
            }),
            d = a.getSelection().getRangeAt(0);
            d.deleteContents();
            d.insertNode(c);
            for (var e = d = b.firstChild,
            f; e;) DOMUtils.isWhitespaceNode(e) ? DOMUtils.detachElement(e) : (DOMUtils.insertSibling(e, "before", c), f = e.childNodes[e.childNodes.length - 1], ElementNestingUtils.fixElementNesting(e, a, !0), e.parentNode && (f = e)),
            e = b.firstChild;
            DOMUtils.ensureUniqueS9IDsAfterInsert_(a, d);
            DOMUtils.moveCursorToEndOfNode(f);
            DOMUtils.removeInsertMarker_(c);
            DOMUtils.normalizeInsertedTextNodes_(a)
        },
        getCoordsRelativeToViewport: function(a) {
            var b = a.getBoundingClientRect() || {};
            if (a.collapsed) if ((b = a.getClientRects()) && b.length > 0) b = b[0];
            else {
                a = a.startContainer || a.endContainer;
                if (a.nodeType === Node.TEXT_NODE) a = a.parentElement;
                b = a.getBoundingClientRect()
            }
            return {
                top: b.top || 0,
                left: b.left || 0,
                width: b.width || 0,
                height: b.height || 0
            }
        },
        getCoordsRelativeToElement: function(a, b) {
            var c = this.getCoordsRelativeToViewport(a),
            d = this.getCoordsRelativeToViewport(b);
            c.top -= d.top;
            c.left -= d.left;
            return c
        },
        getOwnerElement: function(a) {
            return a && a.nodeType === Node.ATTRIBUTE_NODE ? a.xpath("./..") : null
        },
        stopDOMObserver: function(a) {
            if (a) try {
                a.disconnect()
            } catch(b) {}
        },
        startDOMObserver: function(a) {
            if (a) try {
                a.reconnect()
            } catch(b) {}
        },
        ensureUniqueS9IDsAfterInsert_: function(a, b) {
            for (var c = b.xpathAll("//preceding::*"), d = 0; d < c.length; d++) {
                var e = c[d];
                if (e.nodeType === Node.ELEMENT_NODE) {
                    if (e.getAttribute("id") === "s9-habitat-new-html-end") break;
                    var f = XMLUtilities.getS9ID(e);
                    XMLUtilities.isDuplicateS9ID(a, f) && XMLUtilities.setS9ID(e, UUID())
                }
            }
        },
        normalizeInsertedTextNodes_: function(a) {
            a.body.normalize()
        },
        removeInsertMarker_: function(a) {
            a = DOMUtils.insertMarkerHasEmptyParent_(a) ? a.parentElement: a;
            a.parentElement.removeChild(a)
        },
        insertMarkerHasEmptyParent_: function(a) {
            return Array.prototype.every.call(a.parentElement.childNodes,
            function(b) {
                return DOMUtils.isWhitespaceNode(b) ? !0 : b.nodeType === Node.TEXT_NODE && b.nodeValue === "" ? !0 : b.nodeType === Node.ELEMENT_NODE && b.nodeName.toLowerCase() === "br" ? !0 : b === a ? !0 : !1
            })
        },
        calculateScrollingDetails_: function(a, b, c) {
            var b = DOMUtils.getCoordsRelativeToViewport(b),
            d = DOMUtils.getCoordsRelativeToViewport(a),
            e = b.top;
            c ? (c = parseInt(DOMUtils.getComputedStyle(c).marginTop, 10), e += c) : (e = b.top - d.top, e += a.scrollTop);
            return {
                elemTop: e,
                elemBottom: e + b.height,
                elemHeight: b.height,
                parentScrollBottom: a.scrollTop + a.offsetHeight
            }
        }
    };
    DOMUtils.EDGE = {
        LEFT: "left",
        RIGHT: "right",
        TOP: "top",
        BOTTOM: "bottom"
    };
    window.DocumentWriteObserver = BaseClass.extend({
        observer_: null,
        initialize: function(a) {
            DocumentWriteObserver.__super__.initialize.apply(this, arguments);
            this.observer_ = new MutationObserver(this.mutationEvent_.bind(this));
            this.observer_.observe(a.document, {
                childList: !0,
                attributes: !1,
                characterData: !1,
                subtree: !1
            })
        },
        remove: function() {
            this.observer_.disconnect();
            DocumentWriteObserver.__super__.remove.apply(this, arguments)
        },
        mutationEvent_: function() {
            this.trigger("rewrite")
        }
    });
    window.DragManager = BaseClass.extend({
        makeDraggable: function(a, b) {
            var b = b || {},
            c = b.document || document,
            d = a.onStart ||
            function() {};
            a.onStart = function() {
                c.body.classList.add(DragManager.HAS_ACTIVE_DRAG_CLASS);
                d.apply(this, arguments)
            };
            var e = a.onDrop ||
            function() {};
            a.onDrop = function() {
                c.body.classList.remove(DragManager.HAS_ACTIVE_DRAG_CLASS);
                e.apply(this, arguments)
            };
            var f = a.onRemove ||
            function() {};
            a.onRemove = function() {
                c.body.classList.remove(DragManager.HAS_ACTIVE_DRAG_CLASS);
                f.apply(this, arguments)
            };
            return b.useNearestElement ? new HTMLBlockDragView(a) : new DragView(a)
        }
    });
    DragManager.HAS_ACTIVE_DRAG_CLASS = "has-active-drag";
    Element.NativeEvents.webkitTransitionEnd = 2;
    Element.NativeEvents.dragstart = 2;
    Element.NativeEvents.dragend = 2;
    Element.NativeEvents.drag = 2;
    Element.NativeEvents.dragenter = 2;
    Element.NativeEvents.dragleave = 2;
    Element.NativeEvents.dragover = 2;
    Element.NativeEvents.drop = 2;
    Element.NativeEvents.loadeddata = 2;
    Element.Position.setOffsetOption = function(a, b) {
        var c = {
            x: 0,
            y: 0
        },
        d = a.measure(function() {
            return document.id(this.getOffsetParent())
        }),
        e;
        if (d && d != a.getDocument().body) e = d.getScroll(),
        c = d.measure(function() {
            var a = this.getPosition();
            if (DOMUtils.getComputedStyle(this).position === "fixed") {
                var b = window.getScroll();
                a.x += b.x;
                a.y += b.y
            }
            return a
        }),
        b.offset = {
            parentPositioned: d != document.id(b.relativeTo),
            x: b.offset.x - c.x + e.x,
            y: b.offset.y - c.y + e.y
        }
    };
    window.ElementNestingUtils = {
        fixElementNesting: function(a, b, c) {
            var c = c !== void 0 ? c: !1,
            d;
            c || (d = DOMUtils.getRangeInfo(b));
            if (a) {
                for (b = a.parentNode; ! HTMLContent.canNest(a, b);) {
                    if (b.nodeName.toLowerCase() === "body") break;
                    ElementNestingUtils.splitParentAroundElement(a);
                    b = a.parentNode
                }
                ElementNestingUtils.unwrapPresentationNode(b, a)
            } else DOMUtils.reparentNakedPhrasingNodes(b);
            c || DOMUtils.restoreRange(d)
        },
        splitParentAroundElement: function(a) {
            var b = a.parentNode,
            c = b.childNodes,
            d = c.indexOf(a),
            e = this.filterWhitespaceNodes_(c.slice(0, d)),
            c = this.filterWhitespaceNodes_(c.slice(d + 1, c.length)),
            d = b.parentNode;
            if (e.length) {
                var f = b.cloneNode(!1);
                c.length && (f.removeAttribute("id"), f.removeAttribute("data-uuid"));
                e.forEach(function(a) {
                    f.appendChild(a)
                });
                d.insertBefore(f, b)
            }
            d.insertBefore(a, b);
            c.length || d.removeChild(b)
        },
        filterWhitespaceNodes_: function(a) {
            return a.filter(function(a) {
                return ! DOMUtils.isWhitespaceNode(a)
            })
        },
        unwrapPresentationNode: function(a, b) {
            a.nodeType !== Node.ELEMENT_NODE || b.nodeType !== Node.ELEMENT_NODE || a.tagName !== b.tagName || ElementNestingUtils.PRESENTATIONAL_TAGS.contains(a.tagName.toLowerCase()) && DOMUtils.unwrapElement(b)
        }
    };
    window.ElementNestingUtils.PRESENTATIONAL_TAGS = "b,i,strong,small,abbr,mark,dfn,code,var,sup,sub".split(",");
    window.Enumeration = BaseClass.extend({
        initialize: function(a, b) {
            this.enumType_ = a || Enumeration.ENUM_TYPE.NOTHING;
            this.startOffset_ = b || 0;
            this.startOffset_ = Math.max(0, this.startOffset_)
        },
        getEnumerationForIndex: function(a) {
            a = a + this.startOffset_ + 1;
            switch (this.enumType_) {
            case Enumeration.ENUM_TYPE.LETTER_LOWER:
                return this.toAlpha_(a);
            case Enumeration.ENUM_TYPE.LETTER:
            case Enumeration.ENUM_TYPE.LETTER_UPPER:
                return this.toAlpha_(a).toUpperCase();
            case Enumeration.ENUM_TYPE.NUMBER:
                return String(a);
            case Enumeration.ENUM_TYPE.ROMAN_UPPER:
                return this.toRoman_(a).toUpperCase();
            case Enumeration.ENUM_TYPE.ROMAN:
            case Enumeration.ENUM_TYPE.ROMAN_LOWER:
                return this.toRoman_(a);
            default:
                return ""
            }
        },
        toAlpha_: function(a) {
            return "abcdefghijklmnopqrstuvwxyz" [(a - 1) % 26]
        },
        toRoman_: function(a) {
            if (a > 3999) return "";
            for (var b = ["i", "x", "c", "m"], c = ["v", "l", "d"], d = ""; a >= 1;) {
                var e = a % 10,
                a = parseInt(a / 10, 10),
                f = b.shift(),
                g = c.shift(),
                h = "";
                if (e === 9) h += f + b[0];
                else if (e === 4) h += f + g;
                else {
                    e >= 5 && (h += g, e -= 5);
                    for (; e > 0 && e <= 3;) h += f,
                    e--
                }
                d = h + d
            }
            return d
        }
    });
    Enumeration.ENUM_TYPE = {
        NOTHING: "nothing",
        NUMBER: "number",
        LETTER_LOWER: "letter_lowercase",
        LETTER_UPPER: "letter_uppercase",
        LETTER: "letter",
        ROMAN_LOWER: "roman_lowercase",
        ROMAN_UPPER: "roman_uppercase",
        ROMAN: "roman"
    };
    window.FileUploader = {
        uploadFiles: function(a, b) {
            return FileUploader.prepareFiles_(a).then(function(a) {
                return FileUploader.uploadFiles_(a, b)
            })
        },
        prepareFiles_: function(a) {
            a = Array.prototype.slice.call(a);
            a = a.filter(function(a) {
                return a.name[0] !== "."
            });
            return ! a.length ? Q.reject("No files selected") : a.some(function(a) {
                return ! FileUploader.VALID_PATH_RE_.test(BrowserFeatures.getFileRelativePath(a))
            }) ? Q.reject("File and folder names must be lowercase and contain no spaces or special characters") : Q.resolve(a)
        },
        uploadFiles_: function(a, b) {
            var c = URLUtils.expand("{+apiHost}/files/{shortName}/trunk/head/{+directory}/", {
                shortName: app.getProjectModel().get("shortName"),
                directory: b
            }),
            d = function(b, f) {
                if (!a.length) return b();
                var g = a.pop(),
                h = c + BrowserFeatures.getFileRelativePath(g);
                this.uploadFile_(g, h).then(function() {
                    d(b, f)
                }).fail(f)
            }.bind(this);
            return Q.promise(function(a, b) {
                d(a, b)
            })
        },
        uploadFile_: function(a, b) {
            var c = app.getProjectModel();
            return Q.promise(function(d, e) {
                var f = new HabitatRequest({
                    url: b,
                    method: "POST",
                    data: a,
                    headers: {
                        "X-Subversion-Revision": c.get("revision")
                    },
                    onSuccess: function() {
                        var a = f.xhr.getResponseHeader("X-Subversion-Revision"); (a = parseInt(a, 10)) && c.setRevision(a);
                        d()
                    },
                    onFailure: function() {
                        e("Error uploading file " + BrowserFeatures.getFileRelativePath(a))
                    }
                });
                f.send()
            })
        }
    };
    FileUploader.VALID_PATH_RE_ = /^[a-z0-9\.\/_\-]+$/;
    window.FileUtils = {
        getFilenameFromPath: function(a, b) {
            b = b || window;
            if (FileUtils.isURL(a) && !FileUtils.isFileURL(a)) return a;
            var a = a.replace(/^file\:\/\/(\/[A-Z]:)/, ""),
            a = a.replace(/^\/\//, ""),
            a = a.replace(/\\/g, "/"),
            c = a.split("/"),
            c = c[c.length - 1];
            return c = b.decodeURIComponent(c)
        },
        hasWindowsDriveLetter: function(a) {
            return ! a ? !1 : /^[a-z]:/i.test(a)
        },
        getFileURL: function(a) {
            return "filesystem:" + window.location.origin + "/persistent" + FileUtils.getProjectRoot() + a
        },
        getProjectPath: function(a) {
            return a.replace(/\/?(?:import\/[^\/]+\/)?/, "")
        },
        getProjectRoot: function() {
            return "/import/" + app.getProjectModel().get("shortName") + "/"
        },
        isURL: function(a) {
            return /^[^:]+:/.test(a) && !FileUtils.hasWindowsDriveLetter(a)
        },
        isJavascriptURL: function(a) {
            return /^javascript:/.test(a)
        },
        isFileURL: function(a) {
            return /^file:/.test(a)
        },
        prefixFilename: function(a, b) {
            var b = FileUtils.removeFileEnding(b),
            c = a.split("/");
            c[c.length - 1] = b + "_" + c[c.length - 1];
            return a = c.join("/")
        },
        generateNewFilePath: function(a, b, c) {
            b = b + "_" + FileUtils.getPaddedIndexString((c || 0) + 1) + ".html";
            b = FileUtils.normalizeFilePath(FileUtils.getFilenameFromPath(b));
            return FileUtils.prefixFilename(b, a)
        },
        getPaddedIndexString: function(a, b) {
            var b = b || 3,
            c = Math.floor(a).toString().length;
            return a < 0 || c >= b ? a + "": Array(b - c + 1).join("0") + a
        },
        removeFileEnding: function(a) {
            a = FileUtils.getFilenameFromPath(a);
            return a = a.replace(/\.[^.]*$/, "")
        },
        normalizeFilePath: function(a) {
            a = a.toLowerCase();
            a = a.replace(/%20/g, " ");
            a = a.replace(/[^a-z_\-\.0-9]/g, "_");
            a = a.replace(/_{2,}/g, "_");
            a = a.replace(/\.x?html?$/, ".html");
            a = a.replace(/\.jpe?g$/, ".jpg");
            return /\.html$/.test(a) ? RepositoryLayout.S9ML_DIRECTORY + "/" + a: /\.css$/.test(a) ? RepositoryLayout.CSS_DIRECTORY + "/" + a: /(?:\.png$)|(?:\.gif$)|(?:jpg$)/.test(a) ? RepositoryLayout.IMG_DIRECTORY + "/" + a: null
        }
    };
    window.FormatTime = {
        format: function(a) {
            if (a === void 0 || a === null) return "";
            a = new Date(parseInt(a, 10));
            return dateFormat(a, "mmm dS, h:MMtt")
        },
        formatMonthDayYear: function(a) {
            if (a === void 0 || a === null) return "";
            var b = new Date(parseInt(a, 10)),
            a = b.getMonth() + 1,
            c = b.getDate(),
            b = b.getFullYear(),
            a = a + "/" + c;
            b != (new Date).getFullYear() && (a += "/" + b);
            return a
        },
        getRelativeDateTimeString: function(a, b) {
            var b = b || "",
            c = new Date(Date.now()) - new Date(a),
            d = Math.floor(c / 315576E5);
            c -= d * 315576E5;
            var e = Math.floor(c / 864E5);
            c -= e * 864E5;
            var f = Math.floor(c / 36E5);
            c -= f * 36E5;
            c = Math.floor(c / 6E4);
            f += e * 24;
            f += d * 8766;
            return f === 0 ? c + "mins" + b: f > 0 && f < 23 ? f + "h " + c + "mins" + b: FormatTime.format(a)
        },
        getRelativeDateString: function(a) {
            var b = new Date(Date.now());
            if (b.toDateString() === a.toDateString()) return "today";
            if ((new Date(b.getTime() - 864E5)).toDateString() === a.toDateString()) return "yesterday";
            var c = a.toDateString().split(" ").slice(1);
            b.getFullYear() === a.getFullYear() ? c.pop() : (a = c.pop(), b = c.pop(), b += ",", c.push(b, a));
            return c.join(" ").replace(" 0", " ")
        },
        getTimeString: function(a) {
            var b = a.getHours(),
            c = b < 12;
            b %= 12;
            b === 0 && (b = 12);
            a = a.getMinutes();
            b = b + ":" + ("0" + a).slice( - 2);
            b += c ? "am": "pm";
            return b
        }
    };
    window.FunctionUtils = {
        createDebouncer: function(a, b, c) {
            var d = null,
            e = Array.prototype.slice.call(arguments, 3),
            f,
            g = this.win_ || window,
            h = function() {
                return d !== null ? (g.clearTimeout(d), d = null, !0) : !1
            };
            return {
                call: function() {
                    var i = Array.prototype.slice.call(arguments);
                    f = e.concat(i);
                    h();
                    d = g.setTimeout(function() {
                        d = null;
                        a.apply(c, f)
                    },
                    b)
                },
                invokeNow: function() {
                    h() && a.apply(c, f)
                },
                cancel: function() {
                    h()
                }
            }
        }
    };
    window.HTMLDetails = {
        __comment__: ["This file is machine-generated; do not edit it by hand. See the file-level comment at the top of scripts/generateHTMLDetails.js for more information."],
        version: "9de7155dab94479c735ce1c862f72323",
        whitelistedElements: "a,abbr,address,article,aside,audio,b,blockquote,body,br,button,caption,cite,code,col,colgroup,datalist,dd,del,dfn,div,dl,dt,em,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,http://www.idpf.org/2007/ops|case,http://www.idpf.org/2007/ops|default,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|annotation,http://www.w3.org/1998/Math/MathML|annotation-xml,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|degree,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|logbase,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|math,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mglyph,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlabeledtr,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|momentabout,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mprescripts,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mscarries,http://www.w3.org/1998/Math/MathML|mscarry,http://www.w3.org/1998/Math/MathML|msgroup,http://www.w3.org/1998/Math/MathML|msline,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|msrow,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtd,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|mtr,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|none,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|otherwise,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piece,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|sep,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor,i,iframe,img,input,ins,kbd,keygen,label,legend,li,link,meta,nav,object,ol,optgroup,option,output,p,param,pre,q,s,samp,section,select,small,source,span,strong,sub,sup,table,tbody,td,textarea,tfoot,th,thead,title,tr,u,ul,var,video,wbr".split(","),
        tagsNeedingS9IDs: "address,article,aside,audio,blockquote,button,dd,div,dl,dt,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,html,http://www.standardnine.com/s9ml|annotation,http://www.standardnine.com/s9ml|answer,http://www.standardnine.com/s9ml|assessment,http://www.standardnine.com/s9ml|audio,http://www.standardnine.com/s9ml|audiofigure,http://www.standardnine.com/s9ml|axis,http://www.standardnine.com/s9ml|chapter,http://www.standardnine.com/s9ml|choice,http://www.standardnine.com/s9ml|config,http://www.standardnine.com/s9ml|false,http://www.standardnine.com/s9ml|file,http://www.standardnine.com/s9ml|function,http://www.standardnine.com/s9ml|glossary,http://www.standardnine.com/s9ml|glossentry,http://www.standardnine.com/s9ml|guidedtour,http://www.standardnine.com/s9ml|hotspot,http://www.standardnine.com/s9ml|hotspotfigure,http://www.standardnine.com/s9ml|imagefigure,http://www.standardnine.com/s9ml|imagefillin,http://www.standardnine.com/s9ml|imageregion,http://www.standardnine.com/s9ml|img,http://www.standardnine.com/s9ml|layer,http://www.standardnine.com/s9ml|layeredfigure,http://www.standardnine.com/s9ml|map,http://www.standardnine.com/s9ml|matching,http://www.standardnine.com/s9ml|model,http://www.standardnine.com/s9ml|molecule,http://www.standardnine.com/s9ml|multianswer,http://www.standardnine.com/s9ml|multichoice,http://www.standardnine.com/s9ml|multifigure,http://www.standardnine.com/s9ml|option,http://www.standardnine.com/s9ml|orderedchoice,http://www.standardnine.com/s9ml|outline,http://www.standardnine.com/s9ml|param,http://www.standardnine.com/s9ml|parametric,http://www.standardnine.com/s9ml|plot,http://www.standardnine.com/s9ml|plotfigure,http://www.standardnine.com/s9ml|region,http://www.standardnine.com/s9ml|remark,http://www.standardnine.com/s9ml|remarks,http://www.standardnine.com/s9ml|searchindex,http://www.standardnine.com/s9ml|shortanswer,http://www.standardnine.com/s9ml|sliderfigure,http://www.standardnine.com/s9ml|step,http://www.standardnine.com/s9ml|toc,http://www.standardnine.com/s9ml|true,http://www.standardnine.com/s9ml|truefalse,http://www.standardnine.com/s9ml|unit,http://www.standardnine.com/s9ml|video,http://www.standardnine.com/s9ml|videofigure,http://www.standardnine.com/s9ml|webfigure,http://www.w3.org/1998/Math/MathML|math,iframe,img,input,keygen,li,nav,object,ol,p,pre,section,select,table,td,textarea,th,ul,video".split(","),
        tagsAllowingSourcepage: "address,article,aside,audio,blockquote,button,dd,div,dl,dt,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,http://www.standardnine.com/s9ml|assessment,http://www.standardnine.com/s9ml|audiofigure,http://www.standardnine.com/s9ml|guidedtour,http://www.standardnine.com/s9ml|hotspotfigure,http://www.standardnine.com/s9ml|imagefigure,http://www.standardnine.com/s9ml|layeredfigure,http://www.standardnine.com/s9ml|molecule,http://www.standardnine.com/s9ml|multifigure,http://www.standardnine.com/s9ml|plotfigure,http://www.standardnine.com/s9ml|sliderfigure,http://www.standardnine.com/s9ml|videofigure,http://www.standardnine.com/s9ml|webfigure,http://www.w3.org/1998/Math/MathML|math,iframe,img,input,keygen,li,nav,object,ol,p,pre,section,select,table,td,textarea,th,ul,video".split(","),
        tagsInCategory: {
            ALLOWS_TEXT: "abbr,b,bdi,bdo,blockquote,button,caption,cite,code,data,datalist,dd,del,details,dfn,dt,em,figcaption,h1,h2,h3,h4,h5,h6,i,iframe,ins,kbd,label,legend,li,mark,meter,output,p,pre,progress,q,rp,rt,ruby,s,samp,small,span,strong,sub,summary,sup,td,textarea,time,u,var".split(","),
            BLOCK: "address,article,aside,audio,blockquote,canvas,dd,div,dl,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,img,object,ol,output,p,pre,section,http://www.w3.org/2000/svg|svg,table,tfoot,ul,video".split(","),
            EMBEDDED: "audio,canvas,embed,iframe,img,http://www.w3.org/1998/Math/MathML|math,object,http://www.w3.org/2000/svg|svg,video".split(","),
            FLOW: "address,article,aside,audio,blockquote,canvas,details,dialog,div,dl,embed,http://www.idpf.org/2007/ops|trigger,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hr,iframe,img,main,http://www.w3.org/1998/Math/MathML|math,menu,meta,nav,object,ol,output,p,pre,script,section,style,http://www.w3.org/2000/svg|svg,table,ul,video".split(","),
            FORM_ASSOCIATED: "button,fieldset,img,input,keygen,label,object,output,select,textarea".split(","),
            HEADING: "h1,h2,h3,h4,h5,h6".split(","),
            INTERACTIVE: "a,audio,button,details,embed,iframe,img,input,keygen,label,menu,object,select,textarea,video".split(","),
            LABELABLE: "button,input,keygen,meter,output,progress,select,textarea".split(","),
            METADATA: "base,http://www.idpf.org/2007/ops|trigger,link,meta,noscript,script,style,title".split(","),
            OBSOLETE: "acronym,applet,basefont,bgsound,big,blink,center,dir,font,frame,frameset,hgroup,isindex,listing,marquee,nobr,noframes,plaintext,spacer,strike,tt,xmp".split(","),
            PALPABLE: "TEXT(),a,abbr,address,article,aside,audio,b,bdi,bdo,blockquote,button,canvas,cite,code,data,details,dfn,div,dl,em,embed,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,i,iframe,img,input,ins,kbd,keygen,label,main,map,mark,http://www.w3.org/1998/Math/MathML|math,meter,nav,object,ol,output,p,pre,progress,q,ruby,s,samp,section,select,small,span,strong,sub,sup,http://www.w3.org/2000/svg|svg,table,textarea,time,u,ul,var,video".split(","),
            PHRASING: "TEXT(),abbr,area,audio,b,bdi,bdo,br,button,canvas,cite,code,data,datalist,dfn,em,embed,i,iframe,img,input,kbd,keygen,label,mark,http://www.w3.org/1998/Math/MathML|math,meta,meter,object,output,progress,q,ruby,s,samp,script,select,small,span,strong,sub,sup,http://www.w3.org/2000/svg|svg,textarea,time,u,var,video,wbr".split(","),
            SCRIPT_SUPPORTING: ["script"],
            SECTIONING: ["article", "aside", "blockquote", "nav", "section"],
            SECTIONING_ROOT: "blockquote,body,details,dialog,fieldset,figure,td".split(","),
            TRANSPARENT: "a,del,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|case,http://www.idpf.org/2007/ops|default,ins,map,noscript".split(","),
            VOID: "area,base,br,col,embed,http://www.idpf.org/2007/ops|trigger,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr".split(",")
        },
        tagsInNamespace: {
            "http://www.w3.org/1999/xhtml": "a,abbr,acronym,address,applet,area,article,aside,audio,b,base,basefont,bdi,bdo,bgsound,big,blink,blockquote,body,br,button,canvas,caption,center,cite,code,col,colgroup,data,datalist,dd,del,details,dfn,dialog,dir,div,dl,dt,em,embed,fieldset,figcaption,figure,font,footer,form,frame,frameset,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,i,iframe,img,input,ins,isindex,kbd,keygen,label,legend,li,link,listing,main,map,mark,marquee,menu,menuitem,meta,meter,nav,nobr,noframes,noscript,object,ol,optgroup,option,output,p,param,plaintext,pre,progress,q,rp,rt,ruby,s,samp,script,section,select,small,source,spacer,span,strike,strong,style,sub,summary,sup,table,tbody,td,textarea,tfoot,th,thead,time,title,tr,track,tt,u,ul,var,video,wbr,xmp".split(","),
            "http://www.idpf.org/2007/ops": ["case", "default", "switch", "trigger"],
            "http://www.w3.org/1998/Math/MathML": "abs,and,annotation,annotation-xml,apply,approx,arccos,arccosh,arccot,arccoth,arccsc,arccsch,arcsec,arcsech,arcsin,arcsinh,arctan,arctanh,arg,bind,bvar,card,cartesianproduct,cbytes,ceiling,cerror,ci,cn,codomain,complexes,compose,condition,conjugate,cos,cosh,cot,coth,cs,csc,csch,csymbol,curl,declare,degree,determinant,diff,divergence,divide,domain,domainofapplication,emptyset,eq,equivalent,eulergamma,exists,exp,exponentiale,factorial,factorof,false,floor,fn,forall,gcd,geq,grad,gt,ident,image,imaginary,imaginaryi,implies,in,infinity,int,integers,intersect,interval,inverse,lambda,laplacian,lcm,leq,limit,list,ln,log,logbase,lowlimit,lt,maction,maligngroup,malignmark,math,matrix,matrixrow,max,mean,median,menclose,merror,mfenced,mfrac,mglyph,mi,min,minus,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mode,moment,momentabout,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,naturalnumbers,neq,none,not,notanumber,notin,notprsubset,notsubset,or,otherwise,outerproduct,partialdiff,pi,piece,piecewise,plus,power,primes,product,prsubset,quotient,rationals,real,reals,reln,rem,root,scalarproduct,sdev,sec,sech,selector,semantics,sep,set,setdiff,share,sin,sinh,subset,sum,tan,tanh,tendsto,times,transpose,true,union,uplimit,variance,vector,vectorproduct,xor".split(","),
            "http://www.w3.org/2000/svg": ["svg"]
        },
        exclusions: "a a,a button,a details,a embed,a iframe,a input,a keygen,a label,a select,a textarea,address address,address article,address aside,address footer,address h1,address h2,address h3,address h4,address h5,address h6,address header,address nav,address section,button button,button input,button keygen,button select,button textarea,caption table,dfn dfn,footer footer,footer header,form form,h1 h1,h1 h2,h1 h3,h1 h4,h1 h5,h1 h6,h1 p,h2 h1,h2 h2,h2 h3,h2 h4,h2 h5,h2 h6,h2 p,h3 h1,h3 h2,h3 h3,h3 h4,h3 h5,h3 h6,h3 p,h4 h1,h4 h2,h4 h3,h4 h4,h4 h5,h4 h6,h4 p,h5 h1,h5 h2,h5 h3,h5 h4,h5 h5,h5 h6,h5 p,h6 h1,h6 h2,h6 h3,h6 h4,h6 h5,h6 h6,h6 p,header footer,header header,label label,noscript noscript,p h1,p h2,p h3,p h4,p h5,p h6,p p".split(","),
        tags: {
            "TEXT()": {
                category: ["PALPABLE", "PHRASING"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            a: {
                category: ["INTERACTIVE", "PALPABLE", "TRANSPARENT"],
                conditionalCategory: [],
                excludedAncestors: ["a"],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            abbr: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            acronym: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            address: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            applet: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            area: {
                category: ["PHRASING", "VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            article: {
                category: ["BLOCK", "FLOW", "SECTIONING", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            aside: {
                category: ["BLOCK", "FLOW", "SECTIONING", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            audio: {
                category: ["BLOCK", "FLOW", "PHRASING", "EMBEDDED"],
                conditionalCategory: [{
                    "[controls]": ["INTERACTIVE", "PALPABLE"]
                }],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,source,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,autoplay,class,content,controls,crossorigin,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,loop,mediagroup,pattern,prefix,preload,property,rel,resource,rev,sourcepage,src,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            b: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            base: {
                category: ["METADATA", "VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            basefont: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            bdi: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            bdo: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            bgsound: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            big: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            blink: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            blockquote: {
                category: "BLOCK,FLOW,SECTIONING,SECTIONING_ROOT,PALPABLE,ALLOWS_TEXT".split(","),
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,cite,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            body: {
                category: ["SECTIONING_ROOT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            br: {
                category: ["PHRASING", "VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            button: {
                category: "PHRASING,INTERACTIVE,PALPABLE,FORM_ASSOCIATED,LABELABLE,ALLOWS_TEXT".split(","),
                conditionalCategory: [],
                excludedAncestors: ["button", "a"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,autofocus,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,disabled,form,formaction,formenctype,formmethod,formnovalidate,formtarget,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,name,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,type,typeof,value,vocab".split(",")
            },
            canvas: {
                category: ["BLOCK", "FLOW", "PHRASING", "EMBEDDED", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            caption: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            center: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            cite: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            code: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            col: {
                category: ["VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,span,title,typeof,vocab".split(",")
            },
            colgroup: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["col"],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,span,title,typeof,vocab,width".split(",")
            },
            data: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            datalist: {
                category: ["PHRASING", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,option,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            dd: {
                category: ["BLOCK", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            del: {
                category: ["TRANSPARENT", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,cite,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            details: {
                category: ["FLOW", "SECTIONING_ROOT", "INTERACTIVE", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: ["a"],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            dfn: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: ["dfn"],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            dialog: {
                category: ["FLOW", "SECTIONING_ROOT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            dir: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            div: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            dl: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["dd", "dt"],
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            dt: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            em: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            embed: {
                category: "BLOCK,FLOW,PHRASING,EMBEDDED,INTERACTIVE,PALPABLE,VOID".split(","),
                conditionalCategory: [],
                excludedAncestors: ["a"],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            fieldset: {
                category: ["BLOCK", "FLOW", "SECTIONING_ROOT", "PALPABLE", "FORM_ASSOCIATED"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,legend,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,disabled,form,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,name,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            figcaption: {
                category: ["BLOCK", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            figure: {
                category: ["BLOCK", "FLOW", "SECTIONING_ROOT", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            font: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            footer: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["footer", "header", "address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            form: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["form"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,action,audio-begin,audio-end,autocomplete,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,enctype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,method,name,novalidate,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,target,title,typeof,vocab".split(",")
            },
            frame: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            frameset: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            h1: {
                category: ["BLOCK", "FLOW", "HEADING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "address,p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,title,typeof,vocab".split(",")
            },
            h2: {
                category: ["BLOCK", "FLOW", "HEADING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "address,p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,title,typeof,vocab".split(",")
            },
            h3: {
                category: ["BLOCK", "FLOW", "HEADING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "address,p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,title,typeof,vocab".split(",")
            },
            h4: {
                category: ["BLOCK", "FLOW", "HEADING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "address,p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,title,typeof,vocab".split(",")
            },
            h5: {
                category: ["BLOCK", "FLOW", "HEADING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "address,p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,title,typeof,vocab".split(",")
            },
            h6: {
                category: ["BLOCK", "FLOW", "HEADING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "address,p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,title,typeof,vocab".split(",")
            },
            head: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.idpf.org/2007/ops|trigger", "link", "meta", "title"],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            header: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["header", "footer", "address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            hgroup: {
                category: ["BLOCK", "OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "h1,h2,h3,h4,h5,h6".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            hr: {
                category: ["BLOCK", "FLOW", "VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            html: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !1,
                canNest: ["body", "head"],
                allowedAttributes: "about,alias,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,designation,enumeration,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            "http://www.idpf.org/2007/ops|case": {
                category: ["TRANSPARENT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()"],
                allowedAttributes: ["id", "required-namespace"]
            },
            "http://www.idpf.org/2007/ops|default": {
                category: ["TRANSPARENT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: ["id"]
            },
            "http://www.idpf.org/2007/ops|switch": {
                category: ["TRANSPARENT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.idpf.org/2007/ops|case", "http://www.idpf.org/2007/ops|default"],
                allowedAttributes: ["id"]
            },
            "http://www.idpf.org/2007/ops|trigger": {
                category: ["METADATA", "FLOW", "VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: ["action", "http://www.w3.org/2001/xml-events|event", "http://www.w3.org/2001/xml-events|observer", "id", "ref"]
            },
            "http://www.w3.org/1998/Math/MathML|abs": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|and": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|annotation": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()"],
                allowedAttributes: "cd,class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,name,other,src,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|annotation-xml": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "cd,class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,name,other,src,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|apply": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|degree,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|logbase,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|momentabout,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|approx": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arccos": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arccosh": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arccot": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arccoth": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arccsc": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arccsch": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arcsec": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arcsech": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arcsin": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arcsinh": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arctan": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arctanh": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|arg": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|bind": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|degree,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|logbase,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|momentabout,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|bvar": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.w3.org/1998/Math/MathML|ci", "http://www.w3.org/1998/Math/MathML|degree", "http://www.w3.org/1998/Math/MathML|semantics"],
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|card": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cartesianproduct": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cbytes": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|ceiling": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cerror": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|ci": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mglyph,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,type,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cn": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mglyph,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|sep".split(","),
                allowedAttributes: "base,class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,type,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|codomain": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|complexes": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|compose": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|condition": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|conjugate": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cos": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cosh": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cot": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|coth": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|cs": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()"],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|csc": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|csch": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|csymbol": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mglyph,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover".split(","),
                allowedAttributes: "cd,class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,type,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|curl": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|declare": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "definitionURL,encoding,nargs,occurrence,scope,type".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|degree": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|determinant": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|diff": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|divergence": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|divide": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|domain": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|domainofapplication": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|emptyset": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|eq": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|equivalent": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|eulergamma": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|exists": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|exp": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|exponentiale": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|factorial": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|factorof": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|false": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|floor": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|fn": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|forall": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|gcd": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|geq": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|grad": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|gt": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|ident": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|image": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|imaginary": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|imaginaryi": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|implies": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|in": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|infinity": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|int": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|integers": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|intersect": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|interval": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,closure,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|inverse": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|lambda": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|laplacian": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|lcm": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|leq": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|limit": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|list": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,order,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|ln": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|log": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|logbase": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|lowlimit": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|lt": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|maction": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "actiontype,class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,selection,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|maligngroup": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,groupalign,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|malignmark": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,edge,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|math": {
                category: ["FLOW", "PALPABLE", "EMBEDDED", "PHRASING"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "accent,accentunder,align,alignmentscope,altimg,altimg-height,altimg-valign,altimg-width,alttext,audio-begin,audio-end,bevelled,cdgroup,charalign,charspacing,class,close,columnalign,columnlines,columnspacing,columnspan,columnwidth,crossout,data-uuid,decimalpoint,denomalign,depth,dir,display,displaystyle,edge,equalcolumns,equalrows,fence,form,frame,framespacing,groupalign,height,href,http://www.w3.org/1999/xlink|href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indenttarget,infixlinebreakstyle,largeop,leftoverhang,length,linebreak,linebreakmultchar,linebreakstyle,lineleading,linethickness,location,longdivstyle,lquote,lspace,macros,mathbackground,mathcolor,mathsize,mathvariant,maxsize,maxwidth,minlabelspacing,minsize,mode,movablelimits,mslinethickness,notation,numalign,open,other,overflow,pattern,position,rightoverhang,rowalign,rowlines,rowspacing,rowspan,rquote,rspace,scriptlevel,scriptminsize,scriptsizemultiplier,selection,separator,separators,shift,side,sourcepage,stackalign,startpage,stretchy,style,subscriptshift,subtitle,superscriptshift,symmetric,tags,valign,width,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|matrix": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|matrixrow": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|max": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mean": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|median": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|menclose": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,notation,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|merror": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mfenced": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,close,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,open,other,separators,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mfrac": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "bevelled,class,denomalign,href,http://www.w3.org/1999/xlink|href,id,linethickness,mathbackground,mathcolor,numalign,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mglyph": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "alt,background,class,color,fontfamily,fontsize,fontstyle,fontweight,height,href,http://www.w3.org/1999/xlink|href,id,index,mathbackground,mathcolor,mathsize,mathvariant,other,src,style,valign,width,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mi": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()", "http://www.w3.org/1998/Math/MathML|malignmark", "http://www.w3.org/1998/Math/MathML|mglyph"],
                allowedAttributes: "background,class,color,dir,fontfamily,fontsize,fontstyle,fontweight,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,mathsize,mathvariant,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|min": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|minus": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mlabeledtr": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.w3.org/1998/Math/MathML|mtd"],
                allowedAttributes: "class,columnalign,groupalign,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,rowalign,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mlongdiv": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mscarries,http://www.w3.org/1998/Math/MathML|msgroup,http://www.w3.org/1998/Math/MathML|msline,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|msrow,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,longdivstyle,mathbackground,mathcolor,other,position,shift,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mmultiscripts": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mprescripts,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|none,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,subscriptshift,superscriptshift,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mn": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()", "http://www.w3.org/1998/Math/MathML|malignmark", "http://www.w3.org/1998/Math/MathML|mglyph"],
                allowedAttributes: "background,class,color,dir,fontfamily,fontsize,fontstyle,fontweight,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,mathsize,mathvariant,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mo": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()", "http://www.w3.org/1998/Math/MathML|malignmark", "http://www.w3.org/1998/Math/MathML|mglyph"],
                allowedAttributes: "accent,background,class,color,dir,fence,fontfamily,fontsize,fontstyle,fontweight,form,href,http://www.w3.org/1999/xlink|href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indenttarget,largeop,linebreak,linebreakmultchar,linebreakstyle,lineleading,lspace,mathbackground,mathcolor,mathsize,mathvariant,maxsize,minsize,movablelimits,other,rspace,separator,stretchy,style,symmetric,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mode": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|moment": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|momentabout": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|mover": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "accent,align,class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mpadded": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,depth,height,href,http://www.w3.org/1999/xlink|href,id,lspace,mathbackground,mathcolor,other,style,voffset,width,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mphantom": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mprescripts": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mroot": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mrow": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,dir,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|ms": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()", "http://www.w3.org/1998/Math/MathML|malignmark", "http://www.w3.org/1998/Math/MathML|mglyph"],
                allowedAttributes: "background,class,color,dir,fontfamily,fontsize,fontstyle,fontweight,href,http://www.w3.org/1999/xlink|href,id,lquote,mathbackground,mathcolor,mathsize,mathvariant,other,rquote,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mscarries": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mscarry,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|none,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,crossout,href,http://www.w3.org/1999/xlink|href,id,location,mathbackground,mathcolor,other,position,scriptsizemultiplier,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mscarry": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|none,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,crossout,href,http://www.w3.org/1999/xlink|href,id,location,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msgroup": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mscarries,http://www.w3.org/1998/Math/MathML|msgroup,http://www.w3.org/1998/Math/MathML|msline,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|msrow,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,position,shift,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msline": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,leftoverhang,length,mathbackground,mathcolor,mslinethickness,other,position,rightoverhang,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mspace": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "background,class,color,depth,dir,fontfamily,fontsize,fontstyle,fontweight,height,href,http://www.w3.org/1999/xlink|href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indenttarget,linebreak,mathbackground,mathcolor,mathsize,mathvariant,other,style,width,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msqrt": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msrow": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|none,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,position,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mstack": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mscarries,http://www.w3.org/1998/Math/MathML|msgroup,http://www.w3.org/1998/Math/MathML|msline,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|msrow,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "align,charalign,charspacing,class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,stackalign,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mstyle": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "accent,accentunder,align,alignmentscope,background,bevelled,charalign,charspacing,class,close,color,columnalign,columnlines,columnspacing,columnspan,columnwidth,crossout,decimalpoint,denomalign,depth,dir,displaystyle,edge,equalcolumns,equalrows,fence,fontfamily,fontsize,fontstyle,fontweight,form,frame,framespacing,groupalign,height,href,http://www.w3.org/1999/xlink|href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indenttarget,infixlinebreakstyle,largeop,leftoverhang,length,linebreak,linebreakmultchar,linebreakstyle,lineleading,linethickness,location,longdivstyle,lquote,lspace,mathbackground,mathcolor,mathsize,mathvariant,maxsize,mediummathspace,minlabelspacing,minsize,movablelimits,mslinethickness,notation,numalign,open,other,position,rightoverhang,rowalign,rowlines,rowspacing,rowspan,rquote,rspace,scriptlevel,scriptminsize,scriptsizemultiplier,selection,separator,separators,shift,side,stackalign,stretchy,style,subscriptshift,superscriptshift,symmetric,thickmathspace,thinmathspace,valign,verythickmathspace,verythinmathspace,veryverythickmathspace,veryverythinmathspace,width,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msub": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,subscriptshift,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msubsup": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,subscriptshift,superscriptshift,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|msup": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,superscriptshift,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mtable": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.w3.org/1998/Math/MathML|mlabeledtr", "http://www.w3.org/1998/Math/MathML|mtr"],
                allowedAttributes: "align,alignmentscope,class,columnalign,columnlines,columnspacing,columnwidth,displaystyle,equalcolumns,equalrows,frame,framespacing,groupalign,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,minlabelspacing,other,rowalign,rowlines,rowspacing,side,style,width,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mtd": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,columnalign,columnspan,groupalign,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,rowalign,rowspan,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mtext": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()", "http://www.w3.org/1998/Math/MathML|malignmark", "http://www.w3.org/1998/Math/MathML|mglyph"],
                allowedAttributes: "background,class,color,dir,fontfamily,fontsize,fontstyle,fontweight,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,mathsize,mathvariant,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|mtr": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.w3.org/1998/Math/MathML|mtd"],
                allowedAttributes: "class,columnalign,groupalign,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,rowalign,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|munder": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "accentunder,align,class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|munderover": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "accent,accentunder,align,class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|naturalnumbers": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|neq": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|none": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,mathbackground,mathcolor,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|not": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|notanumber": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|notin": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|notprsubset": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|notsubset": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|or": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|otherwise": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|outerproduct": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|partialdiff": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|pi": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|piece": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|piecewise": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["http://www.w3.org/1998/Math/MathML|otherwise", "http://www.w3.org/1998/Math/MathML|piece"],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|plus": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|power": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|primes": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|product": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|prsubset": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|quotient": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|rationals": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|real": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|reals": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|reln": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|rem": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|root": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|scalarproduct": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sdev": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sec": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sech": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|selector": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|semantics": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|annotation,http://www.w3.org/1998/Math/MathML|annotation-xml,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|maction,http://www.w3.org/1998/Math/MathML|maligngroup,http://www.w3.org/1998/Math/MathML|malignmark,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|menclose,http://www.w3.org/1998/Math/MathML|merror,http://www.w3.org/1998/Math/MathML|mfenced,http://www.w3.org/1998/Math/MathML|mfrac,http://www.w3.org/1998/Math/MathML|mi,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mlongdiv,http://www.w3.org/1998/Math/MathML|mmultiscripts,http://www.w3.org/1998/Math/MathML|mn,http://www.w3.org/1998/Math/MathML|mo,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|mover,http://www.w3.org/1998/Math/MathML|mpadded,http://www.w3.org/1998/Math/MathML|mphantom,http://www.w3.org/1998/Math/MathML|mroot,http://www.w3.org/1998/Math/MathML|mrow,http://www.w3.org/1998/Math/MathML|ms,http://www.w3.org/1998/Math/MathML|mspace,http://www.w3.org/1998/Math/MathML|msqrt,http://www.w3.org/1998/Math/MathML|mstack,http://www.w3.org/1998/Math/MathML|mstyle,http://www.w3.org/1998/Math/MathML|msub,http://www.w3.org/1998/Math/MathML|msubsup,http://www.w3.org/1998/Math/MathML|msup,http://www.w3.org/1998/Math/MathML|mtable,http://www.w3.org/1998/Math/MathML|mtext,http://www.w3.org/1998/Math/MathML|munder,http://www.w3.org/1998/Math/MathML|munderover,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "cd,class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,name,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sep": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|set": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,type,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|setdiff": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|share": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,href,http://www.w3.org/1999/xlink|href,id,other,src,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sin": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sinh": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|subset": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|sum": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|tan": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|tanh": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|tendsto": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,type,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|times": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|transpose": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|true": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|union": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|uplimit": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: []
            },
            "http://www.w3.org/1998/Math/MathML|variance": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|vector": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "http://www.w3.org/1998/Math/MathML|abs,http://www.w3.org/1998/Math/MathML|and,http://www.w3.org/1998/Math/MathML|apply,http://www.w3.org/1998/Math/MathML|approx,http://www.w3.org/1998/Math/MathML|arccos,http://www.w3.org/1998/Math/MathML|arccosh,http://www.w3.org/1998/Math/MathML|arccot,http://www.w3.org/1998/Math/MathML|arccoth,http://www.w3.org/1998/Math/MathML|arccsc,http://www.w3.org/1998/Math/MathML|arccsch,http://www.w3.org/1998/Math/MathML|arcsec,http://www.w3.org/1998/Math/MathML|arcsech,http://www.w3.org/1998/Math/MathML|arcsin,http://www.w3.org/1998/Math/MathML|arcsinh,http://www.w3.org/1998/Math/MathML|arctan,http://www.w3.org/1998/Math/MathML|arctanh,http://www.w3.org/1998/Math/MathML|arg,http://www.w3.org/1998/Math/MathML|bind,http://www.w3.org/1998/Math/MathML|bvar,http://www.w3.org/1998/Math/MathML|card,http://www.w3.org/1998/Math/MathML|cartesianproduct,http://www.w3.org/1998/Math/MathML|cbytes,http://www.w3.org/1998/Math/MathML|ceiling,http://www.w3.org/1998/Math/MathML|cerror,http://www.w3.org/1998/Math/MathML|ci,http://www.w3.org/1998/Math/MathML|cn,http://www.w3.org/1998/Math/MathML|codomain,http://www.w3.org/1998/Math/MathML|complexes,http://www.w3.org/1998/Math/MathML|compose,http://www.w3.org/1998/Math/MathML|condition,http://www.w3.org/1998/Math/MathML|conjugate,http://www.w3.org/1998/Math/MathML|cos,http://www.w3.org/1998/Math/MathML|cosh,http://www.w3.org/1998/Math/MathML|cot,http://www.w3.org/1998/Math/MathML|coth,http://www.w3.org/1998/Math/MathML|cs,http://www.w3.org/1998/Math/MathML|csc,http://www.w3.org/1998/Math/MathML|csch,http://www.w3.org/1998/Math/MathML|csymbol,http://www.w3.org/1998/Math/MathML|curl,http://www.w3.org/1998/Math/MathML|declare,http://www.w3.org/1998/Math/MathML|determinant,http://www.w3.org/1998/Math/MathML|diff,http://www.w3.org/1998/Math/MathML|divergence,http://www.w3.org/1998/Math/MathML|divide,http://www.w3.org/1998/Math/MathML|domain,http://www.w3.org/1998/Math/MathML|domainofapplication,http://www.w3.org/1998/Math/MathML|emptyset,http://www.w3.org/1998/Math/MathML|eq,http://www.w3.org/1998/Math/MathML|equivalent,http://www.w3.org/1998/Math/MathML|eulergamma,http://www.w3.org/1998/Math/MathML|exists,http://www.w3.org/1998/Math/MathML|exp,http://www.w3.org/1998/Math/MathML|exponentiale,http://www.w3.org/1998/Math/MathML|factorial,http://www.w3.org/1998/Math/MathML|factorof,http://www.w3.org/1998/Math/MathML|false,http://www.w3.org/1998/Math/MathML|floor,http://www.w3.org/1998/Math/MathML|fn,http://www.w3.org/1998/Math/MathML|forall,http://www.w3.org/1998/Math/MathML|gcd,http://www.w3.org/1998/Math/MathML|geq,http://www.w3.org/1998/Math/MathML|grad,http://www.w3.org/1998/Math/MathML|gt,http://www.w3.org/1998/Math/MathML|ident,http://www.w3.org/1998/Math/MathML|image,http://www.w3.org/1998/Math/MathML|imaginary,http://www.w3.org/1998/Math/MathML|imaginaryi,http://www.w3.org/1998/Math/MathML|implies,http://www.w3.org/1998/Math/MathML|in,http://www.w3.org/1998/Math/MathML|infinity,http://www.w3.org/1998/Math/MathML|int,http://www.w3.org/1998/Math/MathML|integers,http://www.w3.org/1998/Math/MathML|intersect,http://www.w3.org/1998/Math/MathML|interval,http://www.w3.org/1998/Math/MathML|inverse,http://www.w3.org/1998/Math/MathML|lambda,http://www.w3.org/1998/Math/MathML|laplacian,http://www.w3.org/1998/Math/MathML|lcm,http://www.w3.org/1998/Math/MathML|leq,http://www.w3.org/1998/Math/MathML|limit,http://www.w3.org/1998/Math/MathML|list,http://www.w3.org/1998/Math/MathML|ln,http://www.w3.org/1998/Math/MathML|log,http://www.w3.org/1998/Math/MathML|lowlimit,http://www.w3.org/1998/Math/MathML|lt,http://www.w3.org/1998/Math/MathML|matrix,http://www.w3.org/1998/Math/MathML|matrixrow,http://www.w3.org/1998/Math/MathML|max,http://www.w3.org/1998/Math/MathML|mean,http://www.w3.org/1998/Math/MathML|median,http://www.w3.org/1998/Math/MathML|min,http://www.w3.org/1998/Math/MathML|minus,http://www.w3.org/1998/Math/MathML|mode,http://www.w3.org/1998/Math/MathML|moment,http://www.w3.org/1998/Math/MathML|naturalnumbers,http://www.w3.org/1998/Math/MathML|neq,http://www.w3.org/1998/Math/MathML|not,http://www.w3.org/1998/Math/MathML|notanumber,http://www.w3.org/1998/Math/MathML|notin,http://www.w3.org/1998/Math/MathML|notprsubset,http://www.w3.org/1998/Math/MathML|notsubset,http://www.w3.org/1998/Math/MathML|or,http://www.w3.org/1998/Math/MathML|outerproduct,http://www.w3.org/1998/Math/MathML|partialdiff,http://www.w3.org/1998/Math/MathML|pi,http://www.w3.org/1998/Math/MathML|piecewise,http://www.w3.org/1998/Math/MathML|plus,http://www.w3.org/1998/Math/MathML|power,http://www.w3.org/1998/Math/MathML|primes,http://www.w3.org/1998/Math/MathML|product,http://www.w3.org/1998/Math/MathML|prsubset,http://www.w3.org/1998/Math/MathML|quotient,http://www.w3.org/1998/Math/MathML|rationals,http://www.w3.org/1998/Math/MathML|real,http://www.w3.org/1998/Math/MathML|reals,http://www.w3.org/1998/Math/MathML|reln,http://www.w3.org/1998/Math/MathML|rem,http://www.w3.org/1998/Math/MathML|root,http://www.w3.org/1998/Math/MathML|scalarproduct,http://www.w3.org/1998/Math/MathML|sdev,http://www.w3.org/1998/Math/MathML|sec,http://www.w3.org/1998/Math/MathML|sech,http://www.w3.org/1998/Math/MathML|selector,http://www.w3.org/1998/Math/MathML|semantics,http://www.w3.org/1998/Math/MathML|set,http://www.w3.org/1998/Math/MathML|setdiff,http://www.w3.org/1998/Math/MathML|share,http://www.w3.org/1998/Math/MathML|sin,http://www.w3.org/1998/Math/MathML|sinh,http://www.w3.org/1998/Math/MathML|subset,http://www.w3.org/1998/Math/MathML|sum,http://www.w3.org/1998/Math/MathML|tan,http://www.w3.org/1998/Math/MathML|tanh,http://www.w3.org/1998/Math/MathML|tendsto,http://www.w3.org/1998/Math/MathML|times,http://www.w3.org/1998/Math/MathML|transpose,http://www.w3.org/1998/Math/MathML|true,http://www.w3.org/1998/Math/MathML|union,http://www.w3.org/1998/Math/MathML|uplimit,http://www.w3.org/1998/Math/MathML|variance,http://www.w3.org/1998/Math/MathML|vector,http://www.w3.org/1998/Math/MathML|vectorproduct,http://www.w3.org/1998/Math/MathML|xor".split(","),
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|vectorproduct": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/1998/Math/MathML|xor": {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "class,definitionURL,encoding,href,http://www.w3.org/1999/xlink|href,id,other,style,xref".split(",")
            },
            "http://www.w3.org/2000/svg|svg": {
                category: ["BLOCK", "EMBEDDED", "PHRASING", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            i: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            iframe: {
                category: "BLOCK,FLOW,PHRASING,EMBEDDED,INTERACTIVE,PALPABLE,ALLOWS_TEXT".split(","),
                conditionalCategory: [],
                excludedAncestors: ["a"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["TEXT()"],
                allowedAttributes: "about,allowfullscreen,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,height,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,src,startpage,subtitle,tags,title,typeof,vocab,width".split(",")
            },
            img: {
                category: "FORM_ASSOCIATED,FLOW,BLOCK,PHRASING,EMBEDDED,PALPABLE,VOID".split(","),
                conditionalCategory: [{
                    "[usemap]": ["INTERACTIVE"]
                }],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: [],
                allowedAttributes: "about,alt,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,src,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            input: {
                category: ["FORM_ASSOCIATED", "PHRASING", "VOID"],
                conditionalCategory: [{
                    ":not([type='hidden'])": ["INTERACTIVE", "PALPABLE", "LABELABLE"]
                }],
                excludedAncestors: ["a", "button"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: [],
                allowedAttributes: "about,audio-begin,audio-end,autocapitalize,autocomplete,autocorrect,autofocus,checked,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,dirname,disabled,form,formaction,formenctype,formmethod,formnovalidate,formtarget,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,list,max,maxlength,min,multiple,name,pattern,placeholder,prefix,property,readonly,rel,required,resource,rev,size,sourcepage,startpage,step,subtitle,tags,title,type,typeof,value,vocab".split(",")
            },
            ins: {
                category: ["PALPABLE", "TRANSPARENT", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,cite,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            isindex: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            kbd: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            keygen: {
                category: "FORM_ASSOCIATED,PHRASING,INTERACTIVE,PALPABLE,LABELABLE,VOID".split(","),
                conditionalCategory: [],
                excludedAncestors: ["a", "button"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: [],
                allowedAttributes: "about,audio-begin,audio-end,autofocus,challenge,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,disabled,form,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,keytype,name,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            label: {
                category: ["FORM_ASSOCIATED", "PHRASING", "INTERACTIVE", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: ["label", "a"],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,for,form,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            legend: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            li: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,value,vocab".split(",")
            },
            link: {
                category: ["METADATA", "VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,accesskey,charset,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,dir,href,hreflang,http://www.w3.org/XML/1998/namespace|lang,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,lang,media,prefix,property,rel,resource,rev,sizes,tabindex,title,translate,type,typeof,vocab".split(",")
            },
            listing: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            main: {
                category: ["FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            map: {
                category: ["PALPABLE", "TRANSPARENT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            mark: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            marquee: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            menu: {
                category: ["FLOW"],
                conditionalCategory: [{
                    "[type='toolbar']": ["INTERACTIVE"]
                },
                {
                    "[type='list']": ["INTERACTIVE"]
                }],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            menuitem: {
                category: ["VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            meta: {
                category: ["METADATA", "VOID"],
                conditionalCategory: [{
                    "[itemprop]": ["FLOW", "PHRASING"]
                }],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,accesskey,charset,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,dir,http-equiv,http://www.w3.org/XML/1998/namespace|lang,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,lang,name,prefix,property,resource,tabindex,title,translate,typeof,vocab".split(",")
            },
            meter: {
                category: ["PHRASING", "PALPABLE", "LABELABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            nav: {
                category: ["FLOW", "SECTIONING", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            nobr: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            noframes: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            noscript: {
                category: ["METADATA", "TRANSPARENT"],
                conditionalCategory: [],
                excludedAncestors: ["noscript"],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            object: {
                category: "FORM_ASSOCIATED,FLOW,PHRASING,EMBEDDED,PALPABLE,BLOCK".split(","),
                conditionalCategory: [{
                    "[usemap]": ["INTERACTIVE"]
                }],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["param"],
                allowedAttributes: "about,audio-begin,audio-end,class,content,data,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,height,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,type,typeof,vocab,width".split(",")
            },
            ol: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["li"],
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,reversed,sourcepage,start,startpage,subtitle,tags,title,type,typeof,vocab".split(",")
            },
            optgroup: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["option"],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,disabled,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,label,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            option: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["TEXT()"],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,disabled,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,label,prefix,property,rel,resource,rev,selected,title,typeof,value,vocab".split(",")
            },
            output: {
                category: "BLOCK,FLOW,FORM_ASSOCIATED,LABELABLE,PHRASING,PALPABLE,ALLOWS_TEXT".split(","),
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,for,form,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,name,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            p: {
                category: ["BLOCK", "FLOW", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: "p,h1,h2,h3,h4,h5,h6".split(","),
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            param: {
                category: ["VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,name,prefix,property,rel,resource,rev,title,typeof,value,vocab".split(",")
            },
            plaintext: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            pre: {
                category: ["BLOCK", "FLOW", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            progress: {
                category: ["LABELABLE", "PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            q: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,cite,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            rp: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            rt: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            ruby: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            s: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            samp: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            script: {
                category: ["METADATA", "FLOW", "PHRASING", "SCRIPT_SUPPORTING"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            section: {
                category: ["BLOCK", "FLOW", "SECTIONING", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["address"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            select: {
                category: ["FORM_ASSOCIATED", "LABELABLE", "PHRASING", "INTERACTIVE", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["a", "button"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["optgroup", "option"],
                allowedAttributes: "about,audio-begin,audio-end,autofocus,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,disabled,form,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,multiple,name,pattern,prefix,property,rel,required,resource,rev,size,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            small: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            source: {
                category: ["VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,media,prefix,property,rel,resource,rev,src,title,type,typeof,vocab".split(",")
            },
            spacer: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            span: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            strike: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            strong: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            style: {
                category: ["METADATA"],
                conditionalCategory: [{
                    "[scoped]": ["FLOW"]
                }],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            sub: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            summary: {
                category: ["ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            sup: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            table: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: ["caption"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "caption,col,colgroup,tbody,tfoot,thead,tr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            tbody: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["tr"],
                allowedAttributes: "about,align,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,valign,vocab".split(",")
            },
            td: {
                category: ["SECTIONING_ROOT", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,align,audio-begin,audio-end,class,colspan,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,rowspan,sourcepage,startpage,subtitle,tags,title,typeof,valign,vocab".split(",")
            },
            textarea: {
                category: "FORM_ASSOCIATED,LABELABLE,PHRASING,INTERACTIVE,PALPABLE,ALLOWS_TEXT".split(","),
                conditionalCategory: [],
                excludedAncestors: ["a", "button"],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["TEXT()"],
                allowedAttributes: "about,audio-begin,audio-end,autofocus,class,cols,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,dirname,disabled,form,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,maxlength,name,pattern,placeholder,prefix,property,readonly,rel,required,resource,rev,rows,sourcepage,startpage,subtitle,tags,title,typeof,vocab,wrap".split(",")
            },
            tfoot: {
                category: ["BLOCK"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["tr"],
                allowedAttributes: "about,align,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,valign,vocab".split(",")
            },
            th: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,align,audio-begin,audio-end,class,colspan,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,rowspan,scope,sourcepage,startpage,subtitle,tags,title,typeof,valign,vocab".split(",")
            },
            thead: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["tr"],
                allowedAttributes: "about,align,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,valign,vocab".split(",")
            },
            time: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            title: {
                category: ["METADATA"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),b,i,small,sub,sup,u".split(","),
                allowedAttributes: []
            },
            tr: {
                category: [],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: ["td", "th"],
                allowedAttributes: "about,align,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,valign,vocab".split(",")
            },
            track: {
                category: ["VOID"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            tt: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            },
            u: {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            ul: {
                category: ["BLOCK", "FLOW", "PALPABLE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: ["li"],
                allowedAttributes: "about,audio-begin,audio-end,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,pattern,prefix,property,rel,resource,rev,sourcepage,startpage,subtitle,tags,title,typeof,vocab".split(",")
            },
            "var": {
                category: ["PHRASING", "PALPABLE", "ALLOWS_TEXT"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: "TEXT(),a,abbr,audio,b,br,button,cite,code,datalist,del,dfn,em,http://www.idpf.org/2007/ops|switch,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,object,output,q,s,samp,select,small,span,strong,sub,sup,textarea,u,var,video,wbr".split(","),
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            video: {
                category: ["BLOCK", "FLOW", "PHRASING", "EMBEDDED", "PALPABLE"],
                conditionalCategory: [{
                    "[controls]": ["INTERACTIVE"]
                }],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !0,
                allowsSourcepage: !0,
                canNest: "TEXT(),a,abbr,address,article,aside,audio,b,blockquote,br,button,cite,code,datalist,del,dfn,div,dl,em,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,http://www.idpf.org/2007/ops|switch,http://www.idpf.org/2007/ops|trigger,http://www.w3.org/1998/Math/MathML|math,i,iframe,img,input,ins,kbd,keygen,label,link,meta,nav,object,ol,output,p,pre,q,s,samp,section,select,small,source,span,strong,sub,sup,table,textarea,u,ul,var,video,wbr".split(","),
                allowedAttributes: "about,audio-begin,audio-end,autoplay,class,content,controls,crossorigin,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,data-uuid,datatype,height,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,loop,mediagroup,muted,pattern,poster,prefix,preload,property,rel,resource,rev,sourcepage,src,startpage,subtitle,tags,title,typeof,vocab,width".split(",")
            },
            wbr: {
                category: ["VOID", "PHRASING"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !0,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: "about,class,content,data-activityurl,data-assignmenturl,data-containerid,data-displaytarget,data-guid,data-href,data-icon,data-iconheight,data-iconwidth,data-lightbox,data-lmsrequired,data-minheight,data-minwidth,data-module,data-offlinesupport,data-previous,data-profile,data-profile-deliveryformat,data-profile-difficulty,data-profile-formfactor,data-profile-intendedenduserrole,data-profile-priority,data-profile-product,data-profile-productlevel,data-profile-productscope,data-profile-set,data-profile-targetinstitution,data-profile-targetlocation,data-registry-guid,data-responsivedesigned,data-type,datatype,href,http://www.idpf.org/2007/ops|prefix,http://www.idpf.org/2007/ops|type,http://www.w3.org/2001/10/synthesis|alphabet,http://www.w3.org/2001/10/synthesis|ph,id,inlist,itemid,itemprop,itemref,itemscope,itemtype,prefix,property,rel,resource,rev,title,typeof,vocab".split(",")
            },
            xmp: {
                category: ["OBSOLETE"],
                conditionalCategory: [],
                excludedAncestors: [],
                isWhitelisted: !1,
                needsS9ID: !1,
                allowsSourcepage: !1,
                canNest: [],
                allowedAttributes: []
            }
        },
        metadataAttributes: "http://www.idpf.org/2007/ops|type,prefix,property,resource,typeof,vocab,about,content,datatype,rel,rev,inlist,itemscope,itemtype,itemid,itemprop,itemref".split(",")
    };
    window.HTMLContent = {
        isCategory: function(a, b) {
            if (b) {
                if (typeof b !== "string" && b.nodeType !== Node.ELEMENT_NODE && b.nodeType !== Node.TEXT_NODE) return ! 1
            } else return ! 1;
            var c = this.getNodeDetails_(b, !0);
            if (!c.localName) return ! 1;
            c = HTMLDetails.tags[c.fullName];
            if (!c) return ! 1;
            if (a === HTMLContent.CATEGORY.PHRASING && DOMUtils.isWhitespaceNode(b)) return ! 1;
            var d = this.isConditionallyPresent_(b, c, a),
            e = this.isCategoryFromTransparency_(b, a);
            return c.category.indexOf(a) !== -1 || d || e
        },
        getCategory: function(a) {
            return (HTMLDetails.tagsInCategory[a] || []).map(this.prefixExpandedName_, this)
        },
        isElementAllowed: function(a) {
            a = this.getNodeDetails_(a, !0);
            a = HTMLDetails.tags[a.fullName];
            return ! a ? !1 : a.isWhitelisted
        },
        isAttributeAllowed: function(a) {
            var b = this.getNodeDetails_(a, !1),
            c = a.nodeValue,
            d = DOMUtils.getOwnerElement(a);
            if (a.nodeName === "xmlns" && c === XHTML_NS) return ! 0;
            else if (/^xmlns:/.test(a.nodeName)) return a = a.nodeName.split(":")[1],
            XMLUtilities.isAllowedPrefixInContent(a);
            if (d) for (c = d; c && c.nodeType === Node.ELEMENT_NODE;) {
                if (c.nodeName === "math") break;
                else if (c.nodeName === "svg") return ! 1;
                c = c.parentNode
            }
            d = this.getNodeDetails_(d, !0);
            d = HTMLDetails.tags[d.fullName];
            return ! d ? !1 : a.name.indexOf("data-") === 0 ? !0 : d.allowedAttributes.indexOf(b.fullName) !== -1
        },
        convertXHTMLEntities: function(a) {
            Object.keys(HTMLContent.ENTITIES_).forEach(function(b) {
                a = a.replace(RegExp("&" + b + ";", "g"), "&#" + HTMLContent.ENTITIES_[b] + ";")
            });
            return a
        },
        hasPageNumber: function(a) {
            return ! a || a.nodeType !== Node.ELEMENT_NODE ? !1 : !isNaN(parseInt(a.getAttribute("sourcepage"), 10))
        },
        isValidVideoDomain: function(a) {
            a = DOMUtils.createElement("a", {
                attributes: {
                    href: a
                }
            });
            return HTMLContent.ALLOWED_EXTERNAL_VIDEO_DOMAINS.indexOf(a.hostname) > -1
        },
        shouldHaveS9ID: function(a) {
            a = this.getNodeDetails_(a, !0);
            return HTMLDetails.tagsNeedingS9IDs.indexOf(a.fullName) !== -1
        },
        canHaveSourcePage: function(a) {
            a = this.getNodeDetails_(a, !0);
            return HTMLDetails.tagsAllowingSourcepage.indexOf(a.fullName) !== -1
        },
        canNest: function(a, b) {
            if (!a || !b) return ! 1;
            var c = this.handleNestingNodeType_(a, b);
            if (c !== void 0) return c;
            if (this.hasExcludedAncestors_(a, b)) return ! 1;
            var d = this.handleTransparentElems_(a, b, c),
            b = d.lookFrom,
            c = d.nestingAllowed;
            if (c !== void 0) return c;
            c = this.handleNestingTextNode_(a, b);
            if (c !== void 0) return c;
            c = this.getNodeDetails_(a, !0);
            d = this.getNodeDetails_(b, !0);
            c = HTMLDetails.tags[d.fullName].canNest.indexOf(c.fullName) !== -1;
            return d.localName === "body" && !HTMLContent.isCategory(HTMLContent.CATEGORY.FLOW, a) ? !1 : c
        },
        isProcessingInstruction: function(a) {
            return a ? a.nodeType === Node.PROCESSING_INSTRUCTION_NODE ? !0 : typeof a === "string" ? /^<?\?xml/.test(a) : !1 : !1
        },
        isDoctype: function(a) {
            return a ? a.nodeType === Node.DOCUMENT_TYPE_NODE ? !0 : typeof a === "string" ? /^<?!DOCTYPE/i.test(a) : !1 : !1
        },
        getTagsNeedingS9IDs: function() {
            return HTMLDetails.tagsNeedingS9IDs.reduce(function(a, b) {
                if (b.indexOf("|") !== -1) {
                    var c = b.split("|"),
                    d = c[0],
                    c = c[1];
                    if (d === S9ML_NS) return a;
                    b = (d = XMLUtilities.getPrefixForNamespaceInContent(d)) && XMLUtilities.isAllowedPrefixInContent(d) ? d + ":" + c: c
                }
                a.push(b);
                return a
            },
            []).sort()
        },
        isPhrasingElement: function(a) {
            return HTMLContent.isCategory(HTMLContent.CATEGORY.BLOCK, a) ? !1 : a.childNodes.every(function(a) {
                return ! HTMLContent.isCategory(HTMLContent.CATEGORY.BLOCK, a) && HTMLContent.isPhrasingElement(a)
            },
            this)
        },
        isVideoElement: function(a) {
            return ! a || a.nodeType !== Node.ELEMENT_NODE ? !1 : a.tagName.toLowerCase() === "video" ? !0 : a.tagName.toLowerCase() === "iframe" ? _.any(HTMLContent.ALLOWED_EXTERNAL_VIDEO_SOURCES_,
            function(b) {
                return a.src.indexOf(b) !== -1
            }) : !1
        },
        isWidgetElement: function(a) {
            return ! a || a.nodeType !== Node.ELEMENT_NODE ? !1 : a.tagName.toLowerCase() !== "iframe" ? !1 : a.classList.contains(WidgetRewritePlugin.WIDGET_MARKER_CLASS)
        },
        hasMetadataAttribute: function(a) {
            return ! a ? !1 : _.some(a.attributes,
            function(a) {
                var c = a.localName;
                a.namespaceURI && (c = a.namespaceURI + "|" + c);
                return HTMLDetails.metadataAttributes.indexOf(c) !== -1
            },
            this)
        },
        getNodeDetails_: function(a, b) {
            var c = null,
            d = null,
            e = null,
            f = null,
            e = null;
            if (typeof a === "string") d = a.toLowerCase();
            else if (a.nodeType === Node.ELEMENT_NODE || a.nodeType === Node.ATTRIBUTE_NODE) d = a.nodeName.toLowerCase(),
            f = a.namespaceURI;
            else if (a.nodeType === Node.TEXT_NODE) d = HTMLContent.DOM_TEXT_NODE,
            f = null;
            d && d.test(/:/) && (e = d.split(":"), c = e[0], d = e[1]);
            b && (d && HTMLDetails.tagsInNamespace[MATHML_NS].indexOf(d) !== -1 ? f = MATHML_NS: d && HTMLDetails.tagsInNamespace[SVG_NS].indexOf(d) !== -1 && (f = SVG_NS));
            c && !f ? f = XMLUtilities.getNamespaceForPrefixInContent(c) : f && !c && (c = XMLUtilities.getPrefixForNamespaceInContent(f));
            e = d;
            f && f !== XHTML_NS && (e = f + "|" + d);
            return {
                prefix: c,
                localName: d,
                fullName: e,
                namespaceURI: f || XHTML_NS
            }
        },
        prefixExpandedName_: function(a) {
            if (a.indexOf("|") !== -1) {
                var a = a.split("|"),
                b = a[0],
                a = a[1];
                if (b !== MATHML_NS && b !== SVG_NS) {
                    var c = XMLUtilities.getPrefixForNamespaceInContent(b);
                    c ? a = c + ":" + a: console.error("HTMLContent encountered unknown namespace: " + b + " for tag or attribute " + a)
                }
            }
            return a
        },
        isConditionallyPresent_: function(a, b, c) {
            var d = !1;
            a.nodeType === Node.ELEMENT_NODE && (d = b.conditionalCategory.some(function(b) {
                return Object.keys(b).some(function(d) {
                    return (a.matchesSelector || a.webkitMatchesSelector).call(a, d) ? b[d].indexOf(c) !== -1 : !1
                })
            }));
            return d
        },
        isCategoryFromTransparency_: function(a, b) {
            var c = this.getNodeDetails_(a, !0);
            if (!c.localName) return ! 1;
            c = HTMLDetails.tags[c.fullName];
            if (!c) return ! 1;
            if (a.nodeType === Node.TEXT_NODE && DOMUtils.isWhitespaceNode(a)) return ! 1;
            if (c.category.indexOf(b) !== -1) return ! 0;
            if (b === HTMLContent.CATEGORY.VOID || b === HTMLContent.CATEGORY.SCRIPT_SUPPORTING || b === HTMLContent.CATEGORY.OBSOLETE) return ! 1;
            var c = c.category.indexOf(HTMLContent.CATEGORY.TRANSPARENT) !== -1,
            d = a.nodeType === Node.ELEMENT_NODE,
            e = a.nodeType === Node.TEXT_NODE;
            if (c && (d || e)) {
                if (b === HTMLContent.CATEGORY.ALLOWS_TEXT) return typeof a === "string" ? !0 : Array.prototype.every.call(a.childNodes,
                function(a) {
                    return HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, a)
                });
                for (e = 0; e < a.childNodes.length; e++) if (d = this.isCategoryFromTransparency_(a.childNodes[e], b)) return ! 0
            }
            return c && typeof a === "string" ? b === HTMLContent.CATEGORY.PHRASING || b === HTMLContent.CATEGORY.BLOCK || b === HTMLContent.CATEGORY.FLOW: !1
        },
        handleNestingNodeType_: function(a, b) {
            if (a.nodeType === Node.COMMENT_NODE || a.nodeType === Node.PROCESSING_INSTRUCTION_NODE || a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) return ! 0;
            else if (a.nodeType === Node.ATTRIBUTE_NODE || a.nodeType === Node.DOCUMENT_NODE || a.nodeType === Node.DOCUMENT_TYPE_NODE) return ! 1;
            if (b.nodeType === Node.DOCUMENT_NODE || b.nodeType === Node.DOCUMENT_FRAGMENT_NODE) return ! 0;
            else if (b.nodeType === Node.COMMENT_NODE || b.nodeType === Node.PROCESSING_INSTRUCTION_NODE || b.nodeType === Node.ATTRIBUTE_NODE || b.nodeType === Node.DOCUMENT_TYPE_NODE) return ! 1
        },
        handleNestingTextNode_: function(a, b) {
            if (b.nodeType === Node.TEXT_NODE) return ! 1;
            else if (a.nodeType === Node.TEXT_NODE) {
                var c = DOMUtils.isWhitespaceNode(a);
                return HTMLContent.isCategory(HTMLContent.CATEGORY.VOID, b) ? !1 : c ? !0 : HTMLContent.isCategory(HTMLContent.CATEGORY.ALLOWS_TEXT, b)
            } else if (this.isTransparentElemWrappingText_(a)) return HTMLContent.isCategory(HTMLContent.CATEGORY.ALLOWS_TEXT, b)
        },
        handleTransparentElems_: function(a, b, c) {
            for (var d = b; d && HTMLContent.isCategory(HTMLContent.CATEGORY.TRANSPARENT, d);) d = d.parentElement;
            b = d || b;
            HTMLContent.isCategory(HTMLContent.CATEGORY.TRANSPARENT, a) && a.childNodes && a.childNodes.length && (Array.prototype.every.call(a.childNodes,
            function(a) {
                return HTMLContent.canNest(a, b)
            }) || (c = !1));
            return {
                nestingAllowed: c,
                lookFrom: b
            }
        },
        hasExcludedAncestors_: function(a, b) {
            if (b.nodeType !== Node.ELEMENT_NODE || typeof a !== "string" && a.nodeType !== Node.ELEMENT_NODE) return ! 1;
            if (b.nodeName.toLowerCase() === "body") return ! 1;
            var c = b.ownerDocument,
            d;
            d = typeof a === "string" ? c.createElementNS(XHTML_NS, a) : a.cloneNode(!0);
            c = b.cloneNode(!0);
            c.appendChild(d);
            var e = c;
            d = b.xpathAll('ancestor::*[local-name() != "body" and local-name() != "html"]');
            d = Array.prototype.slice.call(d).reverse();
            if (d.length) {
                for (var f = e = d[0].cloneNode(!1), g = 1; g < d.length; g++) {
                    var h = d[g].cloneNode(!1);
                    f.appendChild(h);
                    f = h
                }
                f.appendChild(c)
            }
            return e.querySelectorAll(HTMLDetails.exclusions.join(",")).length > 0
        },
        isTransparentElemWrappingText_: function(a) {
            if (typeof a === "string" || a.nodeType !== Node.ELEMENT_NODE) return ! 1;
            for (; HTMLContent.isCategory(HTMLContent.CATEGORY.TRANSPARENT, a) && a.childNodes.length === 1;) if (a = a.childNodes[0], a.nodeType === Node.TEXT_NODE) return ! 0;
            return ! 1
        }
    };
    HTMLContent.CATEGORY = {
        ALLOWS_TEXT: "ALLOWS_TEXT",
        BLOCK: "BLOCK",
        METADATA: "METADATA",
        FLOW: "FLOW",
        SECTIONING: "SECTIONING",
        SECTIONING_ROOT: "SECTIONING_ROOT",
        HEADING: "HEADING",
        PHRASING: "PHRASING",
        EMBEDDED: "EMBEDDED",
        INTERACTIVE: "INTERACTIVE",
        TRANSPARENT: "TRANSPARENT",
        PALPABLE: "PALPABLE",
        OBSOLETE: "OBSOLETE",
        FORM_ASSOCIATED: "FORM_ASSOCIATED",
        LABELABLE: "LABELABLE",
        VOID: "VOID",
        SCRIPT_SUPPORTING: "SCRIPT_SUPPORTING"
    };
    HTMLContent.DOM_TEXT_NODE = "TEXT()";
    HTMLContent.BOOLEAN_ATTRIBUTES = "allow,allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,draggable,enabled,hidden,indeterminate,inert,ismap,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,readonly,required,reversed,scoped,seamless,selected,sortable,spellcheck,translate,truespeed,typemustmatch".split(",");
    HTMLContent.ENTITIES_ = {
        nbsp: 160,
        iexcl: 161,
        cent: 162,
        pound: 163,
        curren: 164,
        yen: 165,
        brvbar: 166,
        sect: 167,
        uml: 168,
        copy: 169,
        ordf: 170,
        laquo: 171,
        not: 172,
        shy: 173,
        reg: 174,
        macr: 175,
        deg: 176,
        plusmn: 177,
        sup2: 178,
        sup3: 179,
        acute: 180,
        micro: 181,
        para: 182,
        middot: 183,
        cedil: 184,
        sup1: 185,
        ordm: 186,
        raquo: 187,
        frac14: 188,
        frac12: 189,
        frac34: 190,
        iquest: 191,
        Agrave: 192,
        Aacute: 193,
        Acirc: 194,
        Atilde: 195,
        Auml: 196,
        Aring: 197,
        AElig: 198,
        Ccedil: 199,
        Egrave: 200,
        Eacute: 201,
        Ecirc: 202,
        Euml: 203,
        Igrave: 204,
        Iacute: 205,
        Icirc: 206,
        Iuml: 207,
        ETH: 208,
        Ntilde: 209,
        Ograve: 210,
        Oacute: 211,
        Ocirc: 212,
        Otilde: 213,
        Ouml: 214,
        times: 215,
        Oslash: 216,
        Ugrave: 217,
        Uacute: 218,
        Ucirc: 219,
        Uuml: 220,
        Yacute: 221,
        THORN: 222,
        szlig: 223,
        agrave: 224,
        aacute: 225,
        acirc: 226,
        atilde: 227,
        auml: 228,
        aring: 229,
        aelig: 230,
        ccedil: 231,
        egrave: 232,
        eacute: 233,
        ecirc: 234,
        euml: 235,
        igrave: 236,
        iacute: 237,
        icirc: 238,
        iuml: 239,
        eth: 240,
        ntilde: 241,
        ograve: 242,
        oacute: 243,
        ocirc: 244,
        otilde: 245,
        ouml: 246,
        divide: 247,
        oslash: 248,
        ugrave: 249,
        uacute: 250,
        ucirc: 251,
        uuml: 252,
        yacute: 253,
        thorn: 254,
        yuml: 255,
        OElig: 338,
        oelig: 339,
        Scaron: 352,
        scaron: 353,
        Yuml: 376,
        fnof: 402,
        circ: 710,
        tilde: 732,
        Alpha: 913,
        Beta: 914,
        Gamma: 915,
        Delta: 916,
        Epsilon: 917,
        Zeta: 918,
        Eta: 919,
        Theta: 920,
        Iota: 921,
        Kappa: 922,
        Lambda: 923,
        Mu: 924,
        Nu: 925,
        Xi: 926,
        Omicron: 927,
        Pi: 928,
        Rho: 929,
        Sigma: 931,
        Tau: 932,
        Upsilon: 933,
        Phi: 934,
        Chi: 935,
        Psi: 936,
        Omega: 937,
        alpha: 945,
        beta: 946,
        gamma: 947,
        delta: 948,
        epsilon: 949,
        zeta: 950,
        eta: 951,
        theta: 952,
        iota: 953,
        kappa: 954,
        lambda: 955,
        mu: 956,
        nu: 957,
        xi: 958,
        omicron: 959,
        pi: 960,
        rho: 961,
        sigmaf: 962,
        sigma: 963,
        tau: 964,
        upsilon: 965,
        phi: 966,
        chi: 967,
        psi: 968,
        omega: 969,
        thetasym: 977,
        upsih: 978,
        piv: 982,
        ensp: 8194,
        emsp: 8195,
        thinsp: 8201,
        zwnj: 8204,
        zwj: 8205,
        lrm: 8206,
        rlm: 8207,
        ndash: 8211,
        mdash: 8212,
        lsquo: 8216,
        rsquo: 8217,
        sbquo: 8218,
        ldquo: 8220,
        rdquo: 8221,
        bdquo: 8222,
        dagger: 8224,
        Dagger: 8225,
        bull: 8226,
        hellip: 8230,
        permil: 8240,
        prime: 8242,
        Prime: 8243,
        lsaquo: 8249,
        rsaquo: 8250,
        oline: 8254,
        frasl: 8260,
        euro: 8364,
        image: 8465,
        weierp: 8472,
        real: 8476,
        trade: 8482,
        alefsym: 8501,
        larr: 8592,
        uarr: 8593,
        rarr: 8594,
        darr: 8595,
        harr: 8596,
        crarr: 8629,
        lArr: 8656,
        uArr: 8657,
        rArr: 8658,
        dArr: 8659,
        hArr: 8660,
        forall: 8704,
        part: 8706,
        exist: 8707,
        empty: 8709,
        nabla: 8711,
        isin: 8712,
        notin: 8713,
        ni: 8715,
        prod: 8719,
        sum: 8721,
        minus: 8722,
        lowast: 8727,
        radic: 8730,
        prop: 8733,
        infin: 8734,
        ang: 8736,
        and: 8743,
        or: 8744,
        cap: 8745,
        cup: 8746,
        "int": 8747,
        there4: 8756,
        sim: 8764,
        cong: 8773,
        asymp: 8776,
        ne: 8800,
        equiv: 8801,
        le: 8804,
        ge: 8805,
        sub: 8834,
        sup: 8835,
        nsub: 8836,
        sube: 8838,
        supe: 8839,
        oplus: 8853,
        otimes: 8855,
        perp: 8869,
        sdot: 8901,
        vellip: 8942,
        lceil: 8968,
        rceil: 8969,
        lfloor: 8970,
        rfloor: 8971,
        lang: 9001,
        rang: 9002,
        loz: 9674,
        spades: 9824,
        clubs: 9827,
        hearts: 9829,
        diams: 9830
    };
    HTMLContent.PHRASING_ALLOWED_DIRECTLY_UNDER_BODY_ = {
        a: !0,
        audio: !0,
        code: !0,
        embed: !0,
        iframe: !0,
        img: !0,
        math: !0,
        object: !0,
        svg: !0,
        video: !0
    };
    HTMLContent.ALLOWED_EXTERNAL_VIDEO_SOURCES_ = ["player.vimeo.com/video", "youtube.com/embed/"];
    HTMLContent.ALLOWED_EXTERNAL_VIDEO_DOMAINS = "youtube.com,www.youtube.com,youtu.be,www.youtu.be,vimeo.com,www.vimeo.com".split(",");
    HTMLContent.VALID_VIDEO_ENCODINGS = [{
        key: "webm_high",
        type: "video/webm"
    },
    {
        key: "h264",
        type: "video/mp4"
    }];
    window.HTMLDiff = {
        compare: function(a, b) {
            return htmldiff(a, b, HTMLDiff.WRAPPER_CLASS_NAME_)
        }
    };
    HTMLDiff.WRAPPER_CLASS_NAME_ = "s9-habitat-diff-result";
    window.HTMLSanitizer = BaseClass.extend({
        fragment_: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document
        },
        importHTML: function(a, b) {
            var b = b || {},
            c = b.whitelist === void 0 ? !0 : b.whitelist,
            d = b.rewritePaths === void 0 ? !0 : b.rewritePaths,
            e = b.reparentNakedPhrasingContent === void 0 ? !0 : b.reparentNakedPhrasingContent,
            f = !!b.removeClassesAndIDs;
            this.fragment_ = this.isFragment_(a);
            var a = this.preprocessFragments_(a),
            a = this.stripMicrosoftOfficeCruft_(a),
            a = this.generalFilter_(a),
            g = this.parseXHTML5_(a);
            this.stripEmptyTags_(g);
            this.stripGoogleDocsCruft_(g);
            c && this.whitelistMarkup_(g);
            this.standardizeBooleanAttributes_(g);
            this.standardizeVoidElements_(g);
            this.fixListNesting_(g);
            this.removeInvalidIDs_(g);
            e && DOMUtils.reparentNakedPhrasingNodes(g);
            this.fragmentBRTags_(g);
            this.removeMeaninglessSpans_(g);
            this.stripEmptyTags_(g);
            d && this.rewritePathsInHTML_(g);
            this.stripMathPrefixes_(g);
            this.fragment_ || this.addInGlobalCSS_(g);
            f && (this.removeAttributeFromDocument_(g, "class"), this.removeAttributeFromDocument_(g, "id"));
            a = this.serializeXHTML5_(g);
            a = this.whitelistNamespaces_(a);
            a = this.addS9IDsWhereNeeded_(a);
            a = this.cleanExcessWhitespace_(a);
            return a = StringUtils.specialCharactersToEntities(a)
        },
        fromReaderContent: function(a) {
            this.fragment_ = this.isFragment_(a);
            a = this.preprocessFragments_(a);
            a = this.stripPrivateControlCharacters_(a);
            a = this.parseXHTML5_(a);
            this.whitelistMarkup_(a);
            this.standardizeBooleanAttributes_(a);
            this.standardizeVoidElements_(a);
            a = this.serializeXHTML5_(a);
            a = this.whitelistNamespaces_(a);
            a = this.addS9IDsWhereNeeded_(a);
            return a = StringUtils.specialCharactersToEntities(a)
        },
        toReaderContent: function(a) {
            a = this.addS9IDsWhereNeeded_(a);
            a = a.replace(/<!DOCTYPE[^>]+>\n?/, "");
            return a = this.stripPrivateControlCharacters_("<!DOCTYPE html>\n" + a)
        },
        serializeXHTML5_: function(a) {
            XMLUtilities.setHTML5Doctype(a);
            if (this.fragment_) {
                var a = a.getElementsByTagNameNS(XHTML_NS, "body")[0],
                b = DOMUtils.createChildFragment(a);
                PrettyPrinter.prettify(b);
                return XMLUtilities.serializeFragment(b, a)
            } else return PrettyPrinter.prettify(a),
            XMLUtilities.serializeDocument(a)
        },
        parseXHTML5_: function(a) {
            a = a.replace(/<([^!?/ > \s][ ^ \s > ] * )([ ^ >] * ) > /,function(a,b,c){c=c.replace(/xmlns = \S * /,"");return"<"+b+' xmlns="'+XHTML_NS+'"'+c+">"});try{return XMLUtilities.parseDocument(a,XMLUtilities.DOCUMENT_TYPE.XHTML)}catch(b){a=XMLUtilities.parseDocument(a,XMLUtilities.DOCUMENT_TYPE.HTML);this.processHTMLDocument_(a);var c=XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.XHTML);XMLUtilities.cloneDocumentChildren(a,
c);a=XMLUtilities.serializeDocument(c);return XMLUtilities.parseDocument(a,XMLUtilities.DOCUMENT_TYPE.XHTML)}},addUndeclaredPrefixesInHTML_:function(a){var b=[],c={};a.xpathAll('descendant-or-self::*[contains(local-name(),":")] |descendant-or-self::*/@ * [contains(local - name(), ":")]').forEach(function(a){var d=a.localName.match(/^(.*):/)[1];(a=a.lookupNamespaceURI(d))?c[d]=a:b.push(d)},this);var d=_.values(c),e={};b.forEach(function(a){var b=null;c[a]&&(b=c[a]);b||(b=XMLUtilities.getNamespaceForPrefixInContent(a));
if(!b){var h=1;do b="urn:autonamespace_"+h,h+=1;while(d.indexOf(b)!==-1)}d.push(b);c[a]=b;e[a]=b},this);Object.keys(e).forEach(function(b){a.documentElement.setAttributeNS(XMLNS_NS,"xmlns:"+b,e[b])},this)},processHTMLDocument_:function(a){var b=/^xmlns(:.*)?$/;a.xpathAll("descendant-or-self::*").forEach(function(c){var d;try{a.createElement(c.localName),d=c}catch(e){for(d=a.createElement("div");c.firstChild;)d.appendChild(c.firstChild);c.parentNode.replaceChild(d,c)}Array.prototype.slice.call(c.attributes).forEach(function(a){c.removeAttribute(a.name);
try{b.test(a.localName)?d.setAttributeNS(XMLNS_NS,a.name,a.value):d.setAttribute(a.name,a.value)}catch(e){}})},this);this.addUndeclaredPrefixesInHTML_(a)},generalFilter_:function(a){a=a.replace(/[\u0000-\u0008\u000B\u000C\u000E-\u001F]/g,"");a=this.stripPrivateControlCharacters_(a);a=a.replace(/class="Apple\-interchange\-newline"/g,"");a=a.replace(/\s*(?:<br\s*\/?>)\s*/g,"<br />");a=a.replace(/(<(?:p|div)[^>]*>)(?:<br\s*\/?>)+/g,"$1");a=a.replace(/(?:<br\s*\/?>)+<\/p>/g,"</p>");return a=a.replace(/(?:<br\s*\/?>){2,}/g,
"<br />")},standardizeBooleanAttributes_:function(a){var b=HTMLContent.BOOLEAN_ATTRIBUTES.map(function(a){return"//xhtml:*/@"+a},this).join("|");a.xpathAll(b).forEach(function(a){DOMUtils.getOwnerElement(a).setAttribute(a.name,a.name)},this)},standardizeVoidElements_:function(a){var b=HTMLContent.getCategory(HTMLContent.CATEGORY.VOID).map(function(a){a.indexOf(":")===-1&&(a="xhtml:"+a);return"//"+a+"[node()]"},this).join("|");a.xpathAll(b).forEach(function(a){for(;a.lastChild;)a.parentElement.insertBefore(a.lastChild,
a.nextSibling)},this)},fragmentBRTags_:function(a){a.xpathAll("//xhtml:p/xhtml:br").forEach(function(b){for(var c=b.parentNode,d=a.createElementNS(XHTML_NS,c.tagName.toLowerCase()),e=c.attributes,f=0;f<e.length;f++)d.setAttribute(e[f].nodeName,e[f].nodeValue);c.parentNode.insertBefore(d,c);for(e=b.previousSibling;e;)d.insertBefore(e,d.firstChild),e=b.previousSibling;DOMUtils.detachElement(b);d.childNodes.length?(HTMLContent.shouldHaveS9ID(c)&&XMLUtilities.setS9ID(c,UUID()),d.getAttribute("id")===
c.getAttribute("id")&&c.removeAttribute("id")):DOMUtils.detachElement(d)})},removeMeaninglessSpans_:function(a){a.xpathAll("//xhtml:span").filter(function(a){return!a.attributes.length}).forEach(function(a){var c=DOMUtils.createChildFragment(a);a.parentNode.replaceChild(c,a)})},removeAttributeFromDocument_:function(a,b){a.querySelectorAll("["+b+"]").forEach(function(a){a.removeAttribute(b)})},rewritePathsInHTML_:function(a){var b=a.querySelectorAll('link[rel~ = "stylesheet"]');b.forEach(function(a){var b=
FileUtils.getFilenameFromPath(a.getAttribute("href"));FileUtils.isURL(b)||(b=(b=FileUtils.normalizeFilePath(b))?HTMLSanitizer.PATH_TO_ROOT_+b:"",a.setAttribute("href",b))});b=a.xpathAll("//xhtml:img");b.forEach(function(a){var b=a.getAttribute("src");if(!FileUtils.isURL(b)||FileUtils.isFileURL(b))b=(b=FileUtils.normalizeFilePath(FileUtils.getFilenameFromPath(b)))?HTMLSanitizer.PATH_TO_ROOT_+b:"",a.setAttribute("src",b)});b=a.xpathAll("//xhtml:a[@href]");b.forEach(function(a){var b=a.getAttribute("href");
if(b&&!(b.charAt(0)==="/"||UUID.isUUID(b)))if(FileUtils.isJavascriptURL(b))a.setAttribute("href","");else if(!FileUtils.isURL(b)||FileUtils.isFileURL(b)){var b=FileUtils.getFilenameFromPath(b),b=StringUtils.parseRelativeHref(b),e=b.pathname;e&&(e=(e=FileUtils.normalizeFilePath(e))?HTMLSanitizer.PATH_TO_ROOT_+e:"");e+=b.fragment;a.setAttribute("href",e)}})},stripMathPrefixes_:function(a){a.xpathAll("//math:*").forEach(function(b){if(b.prefix){var c=a.createElementNS(b.namespaceURI,b.localName);for(Array.prototype.forEach.call(b.attributes,
function(a){c.setAttributeNS(a.namespaceURI,a.name,a.value)});b.hasChildNodes();)c.appendChild(b.firstChild);b.parentNode.replaceChild(c,b)}})},addInGlobalCSS_:function(a){var b=a.xpath("//xhtml:head");if(!b){var c=a.xpath("//xhtml:html"),b=a.createElementNS(XHTML_NS,"head");c.insertBefore(b,c.firstChild)}for(var c=a.xpathAll(' //xhtml:link[@rel="stylesheet"]'),d=0;d<c.length;d++){var e=HTMLSanitizer.PATH_TO_ROOT_+RepositoryLayout.CSS_MAIN_PATH;if(c[d].getAttribute("href")===e)return}a=a.createElementNS(XHTML_NS,
            "link"); a.setAttribute("rel", "stylesheet"); a.setAttribute("type", "text/css"); a.setAttribute("href", HTMLSanitizer.PATH_TO_ROOT_ + RepositoryLayout.CSS_MAIN_PATH); c.length ? c[0].parentNode.insertBefore(a, c[0]) : b.appendChild(a)
        },
        whitelistMarkup_: function(a) {
            for (var b = a.querySelectorAll("*"), c, d = 0; d < b.length; d++) c = b[d],
            HTMLContent.isElementAllowed(c) || this.reparentBlacklistedNode_(c);
            b = a.xpathAll("//*/@*");
            for (d = 0; d < b.length; d++) ! HTMLContent.isAttributeAllowed(b[d]) && b[d].nodeName !== "x-finished" && DOMUtils.getOwnerElement(b[d]).removeAttribute(b[d].name);
            b = a.querySelectorAll("body meta[charset]");
            for (d = 0; d < b.length; d++) c = b[d],
            DOMUtils.detachElement(c)
        },
        reparentBlacklistedNode_: function(a) {
            var b = a.tagName.toLowerCase();
            b === "script" || b === "style" ? a.parentNode.removeChild(a) : a.parentNode && (b = DOMUtils.createChildFragment(a), a.parentNode.replaceChild(b, a))
        },
        whitelistNamespaces_: function(a) {
            this.findNamespaces_(a).forEach(function(b) {
                var c = this.parseNamespace_(b),
                b = c.prefix,
                c = c.namespaceURI,
                d = this.doc_.createElement("div");
                d.setAttributeNS(XMLNS_NS, "xmlns:" + b, c);
                HTMLContent.isAttributeAllowed(d.attributes[0]) || (c = StringUtils.escapeRegExp(c), a = a.replace(RegExp("\\s*xmlns:" + b + '="' + c + '"(\\s*)', "g"), "$1"))
            },
            this);
            return a
        },
        isFragment_: function(a) {
            return a.indexOf("<html") === -1
        },
        findNamespaces_: function(a) {
            return a.match(/xmlns\:[a-zA-Z0-9_\-]+="[^"]+"/g) || []
        },
        parseNamespace_: function(a) {
            a = a.match(/xmlns\:([a-zA-Z0-9_\-]+)="([^"]+)"/);
            return {
                prefix: a[1],
                namespaceURI: a[2]
            }
        },
        insideAttribute_: function(a, b) {
            var c = a.substring(0, b);
            return this.inTag_(c) && !this.inQuote_(c)
        },
        inTag_: function(a) {
            return /<[^>]+$/.test(a)
        },
        inQuote_: function(a) {
            return /(=(?:"[^"]*|'[^']*))$/.test(a)
        },
        removeInvalidIDs_: function(a) {
            var b = "[data-uuid]" + HTMLContent.getTagsNeedingS9IDs().reduce(function(a, b) {
                return a + ":not(" + b + ")"
            },
            "");
            a.querySelectorAll(b).forEach(function(a) {
                a.removeAttribute("data-uuid")
            },
            this)
        },
        addS9IDsWhereNeeded_: function(a) {
            return XMLUtilities.modifyS9IDs(a,
            function(a, c, d) {
                return HTMLContent.shouldHaveS9ID(a) ? d ? d: c && UUID.isUUID(c) ? c: UUID() : null
            }.bind(this))
        },
        stripMicrosoftOfficeCruft_: function(a) {
            a = this.handleMicrosoftComments_(a);
            a = this.normalizeMicrosoftOfficeSpacing_(a);
            return a = this.handleMicrosoftOfficeClassNames_(a)
        },
        handleMicrosoftComments_: function(a) {
            a = a.replace(/<!\-\-StartFragment\-\->/g, "");
            a = a.replace(/<!\-\-EndFragment\-\->/g, "");
            return a = this.handleMicrosoftConditionalComments_(a)
        },
        handleMicrosoftConditionalComments_: function(a) {
            a = a.replace(/<!\-\-\[if/g, "<![if");
            a = a.replace(/<!\[endif\]\-\->/g, "<![endif]>");
            if (!a.match(/<!\[if|<!\[endif/g)) return a;
            for (var b = "",
            c = 0,
            d = !1,
            e = 0; e < a.length; e++) if (a.substring(e, e + 5) === "<![if") {
                c++;
                for (var d = !1,
                f = 0; f < HTMLSanitizer.COMMENTS_TO_KEEP_.length; f++) {
                    var g = "<![if " + HTMLSanitizer.COMMENTS_TO_KEEP_[f] + "]>";
                    a.substring(e, e + g.length) === g && (d = !0, e = e + g.length - 1)
                }
            } else if (a.substring(e, e + 10) === "<![endif]>") {
                if (c--, d = !1, e = e + 10 - 1, c < 0) break
            } else if (c === 0 || d) b += a[e];
            return c !== 0 ? a: b
        },
        handleMicrosoftOfficeClassNames_: function(a) {
            return a = a.replace(/\s+class=(["']?)((?:Mso\w*)|(?:SpellE)|(?:GramE)|(?:WordSection\d+))\1/g,
            function(a, c, d, e, f) {
                if (this.insideAttribute_(f, e)) {
                    a = !1;
                    for (c = 0; c < HTMLSanitizer.MS_OFFICE_CLASSES_TO_KEEP_.length; c++) if (HTMLSanitizer.MS_OFFICE_CLASSES_TO_KEEP_[c].test(d)) {
                        a = !0;
                        break
                    }
                    a = a ? ' class="' + d.replace("Mso", "") + '"': ""
                }
                return a
            }.bind(this))
        },
        normalizeMicrosoftOfficeSpacing_: function(a) {
            a = a.replace(/<span\s+style=(["']?)mso-spacerun:yes\1>\s*<\/span>/g, " ");
            return a = a.replace(/<span\s+style=(["']?)mso-tab-count:\d+\1>\s*<\/span>/g, " ")
        },
        stripEmptyTags_: function(a) {
            for (var b = 1; b <= 3; b++) a.xpathAll('(//xhtml:b|//xhtml:i|//xhtml:u|//xhtml:strong|//xhtml:em|//xhtml:sub|//xhtml:sup)[count(*) = 0 and translate(normalize-space(text()), "\u00a0", "") = "" and not(normalize-space(../text()))]').forEach(function(a) {
                HTMLContent.hasMetadataAttribute(a) || DOMUtils.detachElement(a)
            });
            a.xpathAll('(//xhtml:p|//xhtml:div|//xhtml:span|//xhtml:strong|//xhtml:b|//xhtml:i|//xhtml:u|//xhtml:sub|//xhtml:sup|//xhtml:em)[count(*) = 0 and translate(normalize-space(), "\u00a0", "") = ""]').forEach(function(a) {
                HTMLContent.hasMetadataAttribute(a) || (!HTMLContent.isPhrasingElement(a) || !a.childNodes.length) && DOMUtils.detachElement(a)
            })
        },
        cleanExcessWhitespace_: function(a) {
            return a = a.replace(/[\t ]+(\n|$)/g, "\n").replace(/\n{2,}/g, "\n").replace(/\n+$/, "")
        },
        fixListNesting_: function(a) {
            a.xpathAll('(//xhtml:ol|//xhtml:ul)/*[name() != "li"]|(//xhtml:ol|//xhtml:ul)/text()').forEach(function(a) {
                if (!DOMUtils.isWhitespaceNode(a)) {
                    var c = a.ownerDocument,
                    d = a.parentElement,
                    c = a.previousElementSibling ? a.previousElementSibling: c.createElementNS(XHTML_NS, "li");
                    c.appendChild(a);
                    c.parentElement || d.insertBefore(c, d.firstChild)
                }
            })
        },
        stripGoogleDocsCruft_: function(a) {
            a.xpathAll('//*[starts-with(@id, "docs-internal-guid-")]').forEach(DOMUtils.unwrapElement)
        },
        preprocessFragments_: function(a) {
            this.fragment_ && (a = "<html><body>" + a + "</body></html>");
            return a
        },
        stripPrivateControlCharacters_: function(a) {
            return a.replace(/\u0091|\u0092/g, "")
        }
    });
    HTMLSanitizer.PATH_TO_ROOT_ = "../";
    HTMLSanitizer.COMMENTS_TO_KEEP_ = ["!vml", "!supportLists", "!supportFootnotes"];
    HTMLSanitizer.MS_OFFICE_CLASSES_TO_KEEP_ = [/^MsoCaption/, /^MsoFootnote/, /^MsoFootnoteReference/, /^MsoFootnoteText/, /^MsoListNumber*/, /^MsoHeader/, /^MsoFooter/, /^MsoListBullet/];
    window.Hacks = {
        ANNOTATION_FONTS: ["Whitney A", "Whitney B"],
        READER_CARD_FONTS: "Whitney A,Whitney B,Whitney SSm A,Whitney SSm B,Chronicle Text G3 A,Chronicle Text G3 B".split(","),
        SCROLL_MULTIPLIER_: 3,
        forceLayout: function(a) {
            DOMUtils.getComputedStyle(a)
        },
        emulateKeyScrolling: function(a, b, c, d) {
            var e = parseInt(DOMUtils.getComputedStyle(d).fontSize, 10) * Hacks.SCROLL_MULTIPLIER_,
            c = function(c) {
                var g = d.scrollTop,
                h = b.body.contentEditable === "true" || a.get("editing");
                switch (c.shortcut) {
                case "space":
                    h || (c.preventDefault(), d.scrollByPages(1));
                    break;
                case "pagedown":
                    c.preventDefault();
                    d.scrollByPages(1);
                    c = d.scrollTop - g;
                    Hacks.moveCaret_(b, c);
                    break;
                case "pageup":
                    c.preventDefault();
                    d.scrollByPages( - 1);
                    c = d.scrollTop - g;
                    Hacks.moveCaret_(b, c);
                    break;
                case "left":
                    h || (c.preventDefault(), d.scrollLeft -= e);
                    break;
                case "right":
                    h || (c.preventDefault(), d.scrollLeft += e);
                    break;
                case "up":
                    h || (c.preventDefault(), d.scrollByLines( - 3));
                    break;
                case "down":
                    h || (c.preventDefault(), d.scrollByLines(3))
                }
            };
            return app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    space: c.bind(this),
                    pageup: c.bind(this),
                    pagedown: c.bind(this),
                    left: c.bind(this),
                    right: c.bind(this),
                    up: c.bind(this),
                    down: c.bind(this)
                })
            })
        },
        getScrollableDimensions: function(a) {
            var b = Math.max(a.scrollWidth, a.offsetWidth),
            a = Math.max(a.scrollHeight, a.offsetHeight);
            return {
                width: b,
                height: a
            }
        },
        getHiddenSize: function(a) {
            var b = {
                width: a.offsetWidth,
                height: a.offsetHeight
            };
            if (DOMUtils.getComputedStyle(a).display === "none") {
                var c = a.getAttribute("style");
                DOMUtils.setStyles(a, {
                    display: "block",
                    top: "-999999px",
                    left: "-999999px",
                    position: "absolute"
                });
                b = {
                    width: a.offsetWidth,
                    height: a.offsetHeight
                };
                a.setAttribute("style", c)
            }
            return b
        },
        cleanHTMLFromFileSystem: function(a) {
            var b = a.indexOf("</html>");
            return a = a.substring(0, b) + "</html>"
        },
        forceCorrectIframeScrollbars: function(a, b) {
            var b = b || window,
            c = a.style.width,
            d = a.style.height;
            b.setTimeout(function() {
                a.style.width = a.offsetWidth + 1 + "px";
                a.style.height = a.offsetHeight + 1 + "px";
                b.setTimeout(function() {
                    a.style.width = c;
                    a.style.height = d
                },
                1)
            },
            150)
        },
        parseDocumentFromString: function(a, b) {
            var a = a + "<?" + Hacks.PARSE_NAMESPACE_SENTINEL_ID_ + "?>",
            c;
            try {
                c = (new DOMParser).parseFromString(a, b)
            } catch(d) {
                c = null
            }
            if (c) {
                var e = c.lastChild;
                if (e && e.nodeType === Node.PROCESSING_INSTRUCTION_NODE && e.target === Hacks.PARSE_NAMESPACE_SENTINEL_ID_) e.parentNode.removeChild(e);
                else if (!c.xpath("//xhtml:parsererror")) c.documentElement || c.appendChild(c.createElementNS(XHTML_NS, "html")),
                c.documentElement.insertBefore(c.createElementNS(XHTML_NS, "parsererror"), c.documentElement.firstChild).appendChild(c.createElementNS(XHTML_NS, "div")).textContent = "Failed to parse due to missing namespace declarations."
            }
            return c
        },
        cloneDocumentType: function(a, b) {
            return a.implementation.createDocumentType(b.name, b.publicId || "", b.systemId || "")
        },
        deleteSelectAll: function(a) {
            var b = a.getIframeDocument(),
            c = '<p data-uuid="' + UUID() + '"><br/></p>';
            a.replaceBodyNode(c, !0);
            c = b.body.children[0];
            a = b.createRange();
            a.setStart(c, 0);
            a.collapse(!0);
            b = b.getSelection();
            b.removeAllRanges();
            b.addRange(a)
        },
        preventVerticalParentScroll: function(a, b) {
            var c = b.scrollHeight - b.clientHeight;
            c > 0 && a.wheelDeltaY !== 0 && (a.wheelDeltaY > 0 ? b.scrollTop === 0 && a.preventDefault() : b.scrollTop >= c && a.preventDefault())
        },
        moveCaret_: function(a, b) {
            var c = DOMUtils.getRange(a);
            if (c) {
                var d = DOMUtils.getCoordsRelativeToViewport(c),
                c = d.left,
                d = d.top + b,
                e = a.documentElement,
                c = Math.max(1, Math.min(c, e.clientWidth - 1)),
                d = Math.max(1, Math.min(d, e.clientHeight - 1)),
                e = a.getSelection(),
                c = a.caretRangeFromPoint(c, d);
                e.removeAllRanges();
                e.addRange(c)
            }
        }
    };
    Hacks.PARSE_NAMESPACE_SENTINEL_ID_ = "s9-habitat-document-namespace-prefix-sentinel";
    Hacks.FontChecker = BaseClass.extend({
        timeOutId_: null,
        intervalId_: null,
        div_: null,
        doc_: null,
        initialize: function(a) {
            var a = a || {},
            b = a.fontNames,
            c = a.callback ||
            function() {},
            d = a.timeout || 5E3,
            e = a.classes || [];
            this.doc_ = a.doc || document;
            this.win_ = a.win || window;
            this.div_ = DOMUtils.createElement("div", {
                className: e.join(" "),
                styles: {
                    position: "absolute",
                    top: "-1000px",
                    left: "-1000px"
                }
            });
            a = DOMUtils.createElement("span", {
                html: "iiiiiiiIIIII!!!!!!!,,,,,,....QQQQQQ",
                styles: {
                    fontSize: "16px"
                }
            });
            this.div_.appendChild(a);
            this.doc_.documentElement.appendChild(this.div_);
            var f = a.offsetWidth;
            this.div_.removeChild(a);
            b.forEach(function(a) {
                var b = this.doc_.createElement("span");
                b.style.fontFamily = "'" + a + "'";
                b.innerHTML = "iiiiiiiIIIII!!!!!!!,,,,,,....QQQQQQ";
                b.style.fontSize = "16px";
                this.div_.appendChild(b)
            },
            this);
            var g = function() {
                return this.div_.childNodes.every(function(a) {
                    return a.offsetWidth !== f
                },
                this)
            }.bind(this);
            if (g()) this.remove(),
            c();
            else {
                var h = !1;
                this.timeOutId_ = this.win_.setTimeout(function() {
                    h = !0
                }.bind(this), d);
                this.intervalId_ = this.win_.setInterval(function() {
                    if (g() || h) this.remove(),
                    c()
                }.bind(this), 30)
            }
        },
        remove: function() {
            this.win_.clearInterval(this.intervalId_);
            this.intervalId_ = null;
            this.win_.clearTimeout(this.timeOutId_);
            this.timeOutId_ = null;
            DOMUtils.detachElement(this.div_);
            Hacks.FontChecker.__super__.remove.call(this)
        }
    });
    window.DOMWalker = BaseClass.extend({
        initialize: function(a) {
            this.node_ = a;
            this.document_ = a.ownerDocument
        },
        createWalker_: function(a) {
            return this.document_.createTreeWalker(a || this.node_, NodeFilter.SHOW_TEXT)
        },
        resetWalker_: function(a) {
            a.currentNode = a.root;
            return a
        },
        findTextNode: function(a) {
            var b = this.node_,
            c = (a = a === "forward") ? "nextSibling": "previousSibling",
            d = a ? "firstChild": "lastChild",
            e;
            do {
                if (a || e) {
                    for (; e = b[d];) b = e;
                    if (b.nodeType === Node.TEXT_NODE && /\S/.test(b.nodeValue)) break
                }
                for (; ! (e = b[c]);) b = b.parentNode
            } while ( b = e );
            return b
        },
        alignWalker_: function(a, b) {
            for (var c = this.resetWalker_(a).currentNode; c && c !== b;) c = a.nextNode();
            return a
        },
        parentOffset_: function(a, b) {
            for (var c = a.currentNode,
            d; d = a.previousNode();) b += d.textContent.length;
            this.alignWalker_(a, c);
            return b
        },
        findNodeFromOffset_: function(a, b) {
            var c = a.currentNode,
            d, e, f;
            for (this.resetWalker_(a); d = a.nextNode();) if (f = d.textContent.length, e = d, f <= b) b -= f;
            else break;
            d || (b = f);
            d = {
                node: e,
                offset: b
            };
            this.alignWalker_(a, c);
            return d
        },
        toParentOffset: function(a) {
            var b = XMLUtilities.getParentWithS9ID(this.node_),
            c = this.createWalker_(b);
            this.alignWalker_(c, this.node_);
            return {
                node: b,
                offset: this.parentOffset_(c, a)
            }
        },
        fromParentOffset: function(a) {
            return this.findNodeFromOffset_(this.createWalker_(), a)
        },
        toCharOffsetLegacy: function(a, b) {
            var c = this.node_.textContent,
            d = RegExp.separator.clone("g");
            c.charAt(0).match(d) && a++;
            b && a--;
            for (var e = 0; e < a; e++) d.test(c);
            for (e = d.lastIndex; b && e < c.length && !c.charAt(e).match(d);) e++;
            return this.findNodeFromOffset_(this.createWalker_(), e)
        }
    });
    window.Highlighter = BaseClass.extend({
        initialize: function(a) {
            this.doc_ = a || document
        },
        highlight: function(a) {
            var b = a.get("highlight"),
            a = a.cid,
            c = b.toRange(this.doc_);
            if (a && c) {
                var b = c.startContainer,
                d = c.endContainer,
                e = c.startOffset,
                f = c.endOffset;
                if (b === d) this.wrap(b, a, e, f);
                else {
                    c = this.doc_.createTreeWalker(c.commonAncestorContainer, NodeFilter.SHOW_TEXT);
                    c.currentNode = b;
                    var g = c.nextNode();
                    for (this.wrap(b, a, e); g !== d;) this.wrap(g, a),
                    g = c.nextNode();
                    this.wrap(d, a, 0, f)
                }
            }
        },
        wrap: function(a, b, c, d) {
            var e = a.parentNode,
            f = a.textContent.length; ! c && c !== 0 && (c = 0); ! d && d !== 0 && (d = f);
            if (a.textContent.match(RegExp.onlyNewlines)) return a;
            if (Highlighter.TEXT_PARENT_BLACKLIST.contains(a.parentNode.tagName.toLowerCase())) return a;
            return d === 0 ? a: e.matchesSelector("mark.s9-habitat-highlight") ? (d !== f && this.splitHighlightNode_(e, d), c !== 0 && (e = this.splitHighlightNode_(e, c)), e.classList.add("s9-habitat-issue-cid-" + b), e) : (d !== f && a.splitText(d), c !== 0 && (a = a.splitText(c)), b = DOMUtils.createElement("mark", {
                className: "s9-habitat-highlight s9-habitat-issue-cid-" + b,
                doc: this.doc_
            }), DOMUtils.replaceNode(a, b), b.appendChild(a), e.normalize(), a)
        },
        removeHighlight: function(a) {
            this.getHighlights(a).forEach(function(b) {
                b.classList.remove("s9-habitat-issue-cid-" + a);
                if (b.className.indexOf("s9-habitat-issue-cid-") === -1) {
                    for (; b.firstChild;) DOMUtils.insertSibling(b.firstChild, "before", b);
                    var c = b.parentNode;
                    DOMUtils.detachElement(b);
                    c.normalize()
                }
            })
        },
        getLastHighlightedElement: function(a) {
            a = this.doc_.querySelectorAll(".s9-habitat-issue-cid-" + a);
            return a.length ? a[a.length - 1] : null
        },
        getHighlights: function(a) {
            return this.doc_.querySelectorAll(".s9-habitat-issue-cid-" + a)
        },
        getHighlightedText: function(a) {
            return this.getHighlights(a).reduce(function(a, c) {
                return a + c.textContent
            },
            "")
        },
        splitHighlightNode_: function(a, b) {
            var c = a.cloneNode(!0);
            c.innerHTML = "";
            var d = a.childNodes[0].splitText(b);
            c.appendChild(d);
            Array.prototype.slice.call(a.children).forEach(function(a) {
                c.appendChild(a)
            });
            DOMUtils.insertSibling(c, "after", a);
            return c
        }
    });
    Highlighter.TEXT_PARENT_BLACKLIST = ["tr"];
    window.Selection = BaseClass.extend({
        window_: null,
        document_: null,
        initialize: function(a, b) {
            this.window_ = a || window;
            this.document_ = b || document;
            this.boundSelectionHandler = this.selectionHandler_.bind(this);
            b.addEventListener("mouseup", this.boundSelectionHandler)
        },
        cleanup: function() {
            this.document_.removeEventListener("mouseup", this.boundSelectionHandler)
        },
        getCurrentSelection: function() {
            return this.select_()
        },
        restoreSelection: function(a) {
            this.setSelection_(a.toRange(this.document_))
        },
        selectionHandler_: function() {
            var a = this.select_();
            a && this.trigger("selection", a)
        },
        select_: function() {
            var a = this.window_.getSelection();
            if (a.type === "None") return null;
            var b = a.getRangeAt(0);
            if (a.isCollapsed || b.endOffset === b.startOffset && b.startContainer === b.endContainer) return null;
            b = this.sanitizeRange_(b);
            this.setSelection_(b);
            return new TextSelectionModel({},
            b)
        },
        sanitizeRange_: function(a) {
            var b = a.startContainer,
            c = a.endContainer;
            b.nodeType !== Node.TEXT_NODE && (b = (new DOMWalker(b)).findTextNode("forward"), a.setStart(b, 0));
            c.nodeType !== Node.TEXT_NODE && (b = (new DOMWalker(c)).findTextNode("backward"), a.setEnd(b, b.textContent.length));
            return a
        },
        setSelection_: function(a) {
            var b = this.window_.getSelection();
            b.collapse(a.startContainer, a.startOffset);
            b.extend(a.endContainer, a.endOffset)
        }
    });
    window.ImageNodeSaver = BaseClass.extend({
        selector_: null,
        uniquenessProp_: null,
        imageNodes_: null,
        initialize: function(a, b) {
            b = b || {};
            this.selector_ = b.selector || "img";
            this.uniquenessProp_ = b.uniquenessProp || "id";
            this.imageNodes_ = a.querySelectorAll(this.selector_).reduce(function(a, b) {
                var e = b[this.uniquenessProp_];
                e && (a[e] = b);
                return a
            }.bind(this), {})
        },
        replaceImageNodes: function(a) {
            a.querySelectorAll(this.selector_).forEach(function(a) {
                if (a) {
                    var c = this.imageNodes_[a[this.uniquenessProp_]];
                    if (c && c.outerHTML === a.outerHTML) {
                        var d = a.parentElement;
                        d && d.replaceChild(c, a)
                    }
                }
            },
            this)
        }
    });
    window.CSSImporter = BaseClass.extend({
        bookImporter_: null,
        initialize: function(a) {
            a = a || {};
            this.bookImporter_ = a.bookImporter
        },
        cleanup: function(a) {
            a = this.rewritePathsInCSS_(a);
            return a = this.filterCSSOnImport_(a)
        },
        rewritePathsInCSS_: function(a) {
            return a
        },
        filterCSSOnImport_: function(a) {
            var b = RegExp("^(margin|padding|top|left|bottom|right|position|width|min-width|max-width|height|min-height|max-height|-)"),
            a = a.replace(CSSImporter.MATCH_CSS_BLOCKS_,
            function(a) {
                return a = a.replace(CSSImporter.MATCH_CSS_RULES_,
                function(a, c) {
                    return b.test(c) ? "": a
                })
            }.bind(this));
            return a = a.replace(CSSImporter.MATCH_EMPTY_BLOCKS_, "")
        }
    });
    CSSImporter.MATCH_CSS_BLOCKS_ = /(?!\{)([^\}]*)(?!\})/g;
    CSSImporter.MATCH_CSS_RULES_ = /\n?\s*([a-z0-9\-]+)\s*:\s*[^;\}]+[;$]?/gi;
    CSSImporter.MATCH_EMPTY_BLOCKS_ = /[a-z@0-9_\-\,\s\:#\(\)\.]+\{\s*\}\n/gi;
    window.EpubImporter = BaseClass.extend({
        files_: null,
        packageFiles_: null,
        spineOrder_: null,
        initialize: function() {
            zip.workerScriptsPath = "/Resources/Assets/js/"
        },
        extractFromContainer: function(a) {
            return this.inflateContainer_(a).then(function(a) {
                this.files_ = a
            }.bind(this)).then(this.ensureValidMimeType_.bind(this)).then(this.findDefaultPackageDocument_.bind(this)).then(this.parsePackageDocument_.bind(this)).then(this.processFiles_.bind(this)).then(function(a) {
                return {
                    files: a,
                    spineOrder: this.spineOrder_
                }
            }.bind(this)).fail(function(a) {
                console.warn("Failed to import EPUB with error:", a)
            })
        },
        createFileFromBlob_: function(a) {
            var b = Q.defer(),
            c = new FileReader;
            c.onloadend = function() {
                b.resolve(this)
            };
            c.onerror = function() {
                b.reject("Failed to create file from blob.")
            };
            c.readAsText(a);
            return b.promise
        },
        ensureValidMimeType_: function() {
            var a = this.files_[0];
            return ! a || a.filename !== EpubImporter.PUBLICATION_FILES_.MIMETYPE ? Q.reject("Could not find the mimetype file in the EPUB Container.") : this.fileFromArchive_(a).then(function(a) {
                if (a.result.replace(/\s+$/, "") !== EpubImporter.MIMETYPE) throw "Invalid MIME type, expected: " + EpubImporter.MIMETYPE + " but got: " + a.result;
            })
        },
        extractAsXML_: function(a) {
            return this.fileFromArchive_(a).then(function(a) {
                return XMLUtilities.parseDocument(a.result, XMLUtilities.DOCUMENT_TYPE.XML)
            })
        },
        extractFileFromZip_: function(a) {
            var b = zip.getMimeType(a.filename),
            c = new zip.BlobWriter(b);
            return Q.promise(function(b) {
                a.getData(c, b)
            })
        },
        fileFromArchive_: function(a) {
            return this.extractFileFromZip_(a).then(this.createFileFromBlob_)
        },
        findDefaultPackageDocument_: function() {
            var a = this.files_.find(function(a) {
                return a.filename === EpubImporter.PUBLICATION_FILES_.CONTAINER
            });
            return ! a ? Q.reject("Could not find " + EpubImporter.PUBLICATION_FILES_.CONTAINER + " in the EPUB Container.") : this.extractAsXML_(a).then(function(a) {
                var b;
                a = a.querySelectorAll("container > rootfiles > rootfile");
                a.length > 1 && console.warn("EPUB Container contained multiple renditions. Using the default rendition for import.");
                if (b = (a = a[0]) && a.getAttribute("full-path"), a = b) return a;
                else throw "Could not find a package document in the EPUB Container.";
            })
        },
        inflateContainer_: function(a) {
            var b = new zip.BlobReader(a);
            return Q.promise(function(a, d) {
                zip.createReader(b,
                function(b) {
                    b.getEntries(a)
                },
                d)
            })
        },
        parsePackageDocument_: function(a) {
            var b = this.files_.find(function(b) {
                return b.filename === a
            }),
            c = URI(b.filename).filename("").toString();
            return this.extractAsXML_(b).then(function(a) {
                var b = a.querySelector("manifest");
                this.packageFiles_ = _.reduce(b.children,
                function(a, b) {
                    var d = c + b.getAttribute("href");
                    a[d] = !0;
                    return a
                },
                {},
                this);
                a = a.querySelector("spine");
                this.spineOrder_ = _.reduce(a.children,
                function(a, c, d) {
                    c = b.querySelector('[id="' + c.getAttribute("idref") + '"]');
                    c = FileUtils.getFilenameFromPath(c.getAttribute("href"));
                    a[c] = d + 1;
                    return a
                },
                {})
            }.bind(this))
        },
        processFiles_: function() {
            var a = this.files_.filter(function(a) {
                return this.packageFiles_[a.filename]
            },
            this);
            return PromiseUtils.map(a,
            function(a) {
                return this.extractFileFromZip_(a).then(function(c) {
                    c.name = FileUtils.getFilenameFromPath(a.filename);
                    var d = BrowserFeatures.getFileRelativePathAttribute();
                    c[d] = a.filename;
                    return c
                }.bind(this))
            },
            this)
        }
    });
    EpubImporter.MIMETYPE = "application/epub+zip";
    EpubImporter.PUBLICATION_FILES_ = {
        MIMETYPE: "mimetype",
        CONTAINER: "META-INF/container.xml"
    };
    window.ImportedPageLoader = BaseClass.extend({
        pages_: null,
        load: function(a, b) { (b ||
            function() {})(ImportedPageLoader.LOADING_MESSAGE_);
            this.pages_ = new ImportedPageCollection;
            this.readHTMLFiles_(function(b) {
                b.forEach(function(a) {
                    this.pages_.add(new ImportedPageModel({
                        filePath: FileUtils.getProjectPath(a.fullPath),
                        content: "",
                        localFileURL: a.toURL()
                    }))
                },
                this);
                this.loadBook_(function() {
                    a.apply(void 0, arguments)
                })
            }.bind(this))
        },
        hasPages: function(a) {
            app.getLocalFileStorage().getProjectDirectory().then(function() {
                a(!0)
            },
            function() {
                a(!1)
            })
        },
        readHTMLFiles_: function(a) {
            var b = function() {
                a([])
            },
            c = app.getLocalFileStorage();
            c.getProjectDirectory(RepositoryLayout.S9ML_DIRECTORY + "/").then(function(d) {
                c.readAllFiles(d).then(function(b) {
                    b = b.filter(function(a) {
                        return /\.x?html?$/.test(a.fullPath)
                    });
                    a(b)
                },
                b)
            },
            b)
        },
        loadBook_: function(a) {
            this.pages_.length === 0 ? a(null) : app.getLocalFileStorage().getProjectDirectory().then(function(b) {
                var c = this.pages_,
                d = c.length;
                c.forEach(function(e) {
                    var f = e.get("filePath");
                    b.getFile(f, {
                        create: !1
                    },
                    function(b) {
                        b.file(function(b) {
                            var f = new FileReader;
                            f.onloadend = function() {
                                var b = Hacks.cleanHTMLFromFileSystem(f.result);
                                e.set("content", b);
                                e.updateFromContent();
                                e.addTracking();
                                d--;
                                d || a(c)
                            };
                            f.readAsText(b)
                        })
                    },
                    app.getLocalFileStorage().onError)
                })
            }.bind(this))
        }
    });
    ImportedPageLoader.LOADING_MESSAGE_ = "Loading book...";
    window.ImportedPageSaver = BaseClass.extend({
        save: function() {},
        cleanup_: function(a, b, c) {
            a = a.clone();
            c && this.autogenerateHTMLTitle_(a);
            a.removeTracking();
            c = a.get("xml");
            b || c.xpathAll("//*[@x-finished]").forEach(function(a) {
                a.removeAttribute("x-finished")
            });
            c = this.removeInvalidPageNumbers_(c);
            c = this.addS9IDsForExport_(c);
            c.xpathAll("//xhtml:a[not(@href) and not(@name)]").forEach(function(a) {
                a.setAttribute("href", "")
            });
            XMLUtilities.setHTML5Doctype(c);
            c.head || c.documentElement.insertBefore(c.createElementNS(XHTML_NS, "head"), c.documentElement.firstChild);
            c.xpath("//xhtml:title") || c.head.insertBefore(c.createElementNS(XHTML_NS, "title"), c.head.firstChild);
            c.xpathAll("//xhtml:meta").filter(function(a) {
                return (a.getAttribute("charset") || "").toLowerCase() === "utf-8"
            },
            this).length === 0 && (b = c.createElementNS(XHTML_NS, "meta"), b.setAttribute("charset", "utf-8"), c.head.insertBefore(b, c.head.firstChild));
            PrettyPrinter.prettify(c);
            b = XMLUtilities.serializeDocument(c);
            b = b.replace(/ xmlns="http:\/\/www.w3.org\/1999\/xhtml"/g, "");
            b = b.replace(/<html/, '<html xmlns="http://www.w3.org/1999/xhtml"');
            return b = b.replace(/<\?xml version[^>]+>\s*/, "")
        },
        addS9IDsForExport_: function(a) {
            var b = [];
            HTMLContent.getTagsNeedingS9IDs().forEach(function(a) {
                b.push("//xhtml:" + a)
            });
            b = b.join("|");
            a.xpathAll(b).forEach(function(a) {
                var b = XMLUtilities.getS9ID(a) || UUID();
                XMLUtilities.setS9ID(a, b)
            });
            return a
        },
        autogenerateHTMLTitle_: function(a) {
            var b = ImportedPageSaver.DEFAULT_HTML_TITLE_,
            a = a.get("xml"),
            c = a.querySelector("h1"),
            d = a.querySelector("title");
            if (c) b = c.innerHTML;
            else if (d) b = d.innerHTML;
            b = b.trim();
            b = b.replace(/<(?!\/?(b|i|u|sub|sup|small))[^>]*>/g, "");
            c = a.querySelector("head");
            if (!c) {
                var e = a.querySelector("html"),
                c = a.createElementNS(XHTML_NS, "head"),
                f = a.querySelector("body");
                e.insertBefore(c, f)
            }
            d || (d = a.createElementNS(XHTML_NS, "title"), c.appendChild(d));
            d.innerHTML = b
        },
        removeInvalidPageNumbers_: function(a) {
            a.xpathAll("//@sourcepage").forEach(function(a) {
                var a = DOMUtils.getOwnerElement(a),
                c = a.getAttribute("sourcepage"); (!HTMLContent.hasPageNumber(a) || c === "" || parseInt(c, 10) < 0) && a.removeAttribute("sourcepage");
                if (HTMLContent.canHaveSourcePage(a)) {
                    if (a.tagName.toLowerCase() === "h1") {
                        for (var c = !1,
                        d = a.parentNode; d && d.nodeType === Node.ELEMENT_NODE && !c;) d.tagName.toLowerCase() === "header" && (c = !0),
                        d = d.parentNode;
                        c && a.removeAttribute("sourcepage")
                    }
                } else a.removeAttribute("sourcepage")
            },
            this);
            return a
        }
    });
    ImportedPageSaver.DEFAULT_HTML_TITLE_ = "Page Title";
    window.ImportedPageSaverZip = ImportedPageSaver.extend({
        pagePathsLookup_: null,
        imagePathsLookup_: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            this.pagePathsLookup_ = {};
            this.imagePathsLookup_ = {}
        },
        save: function(a) {
            var b = a.pages,
            c = a.project || null,
            d = a.callback ||
            function() {},
            e = a.progressCallback ||
            function() {};
            zip.createWriter(new zip.BlobWriter("application/zip"),
            function(a) { (c ? this.generateIncremental_(a, b, c) : this.generateRaw_(a, b)).progress(function(a) {
                    e(a)
                }).then(function(b) {
                    a.close(function(a) {
                        d(a, c ? b: null)
                    })
                }).done()
            }.bind(this))
        },
        generateRaw_: function(a, b) {
            return this.addPagesToZip_(a, !0, b).then(function() {
                return app.getLocalFileStorage().getProjectDirectory()
            }).then(function(b) {
                return this.addAssetsToZip_(a, !0, b)
            }.bind(this))
        },
        generateIncremental_: function(a, b, c) {
            var d = this.getImageAssets_(c),
            e = null;
            return this.getTOC_(c).then(function(c) {
                var g = b.getGroupings(),
                h = this.updateTOC_(c, g),
                g = new Blob([c.get("content")], {
                    type: "text/xml"
                });
                e = c.get("contentRevision");
                return this.writeBlobToZip_(a, c.get("filePath"), g).then(function() {
                    return Q.all([h, d])
                })
            }.bind(this)).spread(function(b, c) {
                this.autogenerateImagePaths_(b, c);
                this.updatePathsInHTML_(b);
                return this.addPagesToZip_(a, !1, b)
            }.bind(this)).then(function() {
                return app.getLocalFileStorage().getProjectDirectory()
            }).then(function(b) {
                return this.addAssetsToZip_(a, !1, b)
            }.bind(this)).then(function() {
                return e
            })
        },
        addPagesToZip_: function(a, b, c) {
            return c.reduce(function(c, e) {
                var f;
                f = b ? this.cleanup_(e, !0, !1) : this.cleanup_(e, !1, !0);
                var g = new Blob([f], {
                    type: "text/html"
                });
                return c.then(function() {
                    return this.writeBlobToZip_(a, e.get("filePath"), g)
                }.bind(this))
            }.bind(this), Q.resolve())
        },
        addAssetsToZip_: function(a, b, c) {
            return app.getLocalFileStorage().readAllFiles(c).then(function(c) {
                c = c.filter(function(a) {
                    var c = FileUtils.getProjectPath(a.fullPath);
                    return ! b && PageImporter.GLOBAL_BOOK_ASSETS_HISTORY.indexOf(c) !== -1 ? !1 : a.name !== "content.opf" && a.name !== "toc.ncx" && /\.x?html?$/.test(c) === !1
                });
                return c.reduce(function(b, c) {
                    return b.then(function() {
                        return this.writeFileToZip_(a, c)
                    }.bind(this))
                }.bind(this), Q.resolve())
            }.bind(this))
        },
        updateTOC_: function(a, b) {
            var c = a.getHighestEnumerations(),
            d = a.get("rootPiece").get("units");
            d.length === 0 && d.add(new TOCUnitModel);
            var e = d.last().get("chapters"),
            f = new ImportedPageCollection,
            g = {};
            b.forEach(function(a) {
                c[a.designation] || (c[a.designation] = 0);
                c[a.designation]++;
                var b = new TOCChapterModel({
                    title: this.autogenerateTOCTitle_(a),
                    designation: a.designation,
                    enumeration: c[a.designation].toString(),
                    thumbnailPath: "../" + RepositoryLayout.CHAPTER_THUMBNAIL_PATH
                });
                e.add(b);
                var d = b.get("exhibits");
                a.pages.forEach(function(a) {
                    var b = new TOCExhibitModel;
                    b.set({
                        type: "html",
                        isNew: !0
                    });
                    d.add(b);
                    b.set("path", a.get("filePath").replace(/^s9ml\//, ""));
                    g[a.id] = b;
                    f.add(a)
                })
            },
            this);
            a.generateExhibitPathsIfNeeded();
            Object.keys(g).forEach(function(a) {
                var b = g[a],
                a = f.get(a),
                c = a.get("filePath"),
                b = RepositoryLayout.S9ML_DIRECTORY + "/" + b.get("path");
                a.set("filePath", b);
                this.pagePathsLookup_["_" + c] = b
            },
            this);
            a.updateFromXML();
            return f
        },
        autogenerateTOCTitle_: function(a) {
            var b = "";
            if ((a = a.pages.length ? a.pages[0] : null) && a.get("type") === ImportedPageModel.Type.CHAPTER_START) {
                var c = a.get("xml"),
                a = c.querySelector("h1"),
                c = c.querySelector("title");
                if (a) b = a.innerHTML;
                else if (c) b = c.innerHTML;
                b = b.trim();
                b = b.replace(/<[^>]+>/g, "")
            }
            return b
        },
        writeFileToZip_: function(a, b) {
            return Q.promise(function(c, d, e) {
                b.file(function(f) {
                    var g = FileUtils.getProjectPath(b.fullPath),
                    h = this.imagePathsLookup_["_" + g];
                    if (h) g = h.newPath;
                    this.writeBlobToZip_(a, g, f).then(c, d, e)
                }.bind(this))
            }.bind(this))
        },
        writeBlobToZip_: function(a, b, c) {
            return Q.promise(function(d, e, f) {
                f("Exporting " + b);
                e = new zip.BlobReader(c);
                a.add(b, e, d, null, {
                    level: 0
                })
            }.bind(this))
        },
        getTOC_: function(a) {
            return Q.promise(function(b, c) {
                var d = new TOCDocumentModel({
                    project: a
                });
                d.on("loaded",
                function() {
                    b(d)
                },
                this);
                d.fetch({
                    error: function() {
                        c()
                    }
                })
            })
        },
        getImageAssets_: function(a) {
            return Q.promise(function(b, c) {
                var d = new ImageAssetCollection(null, {
                    project: a
                });
                d.on("loaded",
                function() {
                    b(d)
                });
                d.fetch({
                    add: !0,
                    error: function() {
                        c()
                    }
                })
            })
        },
        autogenerateImagePaths_: function(a, b) {
            var c = {};
            a.forEach(function(a) {
                var b = a.get("filePath").match(/^s9ml\/([^\/]+)/),
                c = RepositoryLayout.IMG_DIRECTORY + "/" + (b && b[1] || null);
                a.get("xml").xpathAll("//xhtml:img").forEach(function(b) {
                    b = b.getAttribute("src");
                    if (!FileUtils.isURL(b)) {
                        var b = FileUtils.getFilenameFromPath(b),
                        e = RepositoryLayout.IMG_DIRECTORY + "/" + b,
                        i = this.imagePathsLookup_["_" + e];
                        i && i.onPages.length && i.onPages.indexOf(a) === -1 ? (i.newPath = RepositoryLayout.SHARED_CHAPTER_IMAGES_PATH + "/" + b, i.onPages.push(a)) : i = {
                            onPages: [a],
                            newPath: c + "/" + b
                        };
                        this.imagePathsLookup_["_" + e] = i
                    }
                },
                this)
            },
            this);
            Object.keys(this.imagePathsLookup_).forEach(function(a) {
                for (var a = this.imagePathsLookup_[a], e = 1, f = a.newPath.match(/^(.*?)(\.[^\.\/]+)?$/); b.get(a.newPath) || c[a.newPath];) a.newPath = f[1] + "_" + e + (f[2] || ""),
                e++;
                c[a.newPath] = !0
            },
            this)
        },
        updatePathsInHTML_: function(a) {
            a.forEach(function(a) {
                var c = a.get("xml"),
                d = c.xpathAll("//xhtml:img");
                d.forEach(function(a) {
                    var b = a.getAttribute("src");
                    FileUtils.isURL(b) || (b = this.imagePathsLookup_["_" + (RepositoryLayout.IMG_DIRECTORY + "/" + FileUtils.getFilenameFromPath(b))]) && a.setAttribute("src", "../../" + b.newPath)
                },
                this);
                d = c.xpathAll("//xhtml:a");
                d.forEach(function(a) {
                    var b = a.getAttribute("href");
                    if (b && !FileUtils.isURL(b)) {
                        var b = StringUtils.parseRelativeHref(b),
                        c = RepositoryLayout.S9ML_DIRECTORY + "/" + FileUtils.getFilenameFromPath(b.pathname),
                        c = this.pagePathsLookup_["_" + c];
                        if (!c) {
                            c = RepositoryLayout.IMG_DIRECTORY + "/" + FileUtils.getFilenameFromPath(b.pathname);
                            c = this.imagePathsLookup_["_" + c];
                            if (!c) return;
                            c = c.newPath
                        }
                        c = "../../" + c + b.fragment;
                        a.setAttribute("href", c)
                    }
                },
                this);
                d = c.querySelectorAll('link[rel~="stylesheet"]');
                d.forEach(function(a) {
                    var b = a.getAttribute("href");
                    a.setAttribute("href", "../" + b)
                });
                a.updateFromXML()
            },
            this)
        }
    });
    window.ImportedPageUploader = BaseClass.extend({
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document
        },
        save: function(a, b, c, d) {
            var e = [5, 20, 25, 5, 45],
            f = e.reduce(function(a, b) {
                return a + b
            },
            0),
            g = function(a, b) {
                for (var c = 0,
                d = 0; d < a; d++) c += e[d];
                var c = 100 * c / f,
                g = e[a] / f;
                return function(a) {
                    return {
                        progress: c + g * a,
                        text: b
                    }
                }
            },
            h = null;
            this.checkRepoExists_(b).progress(g(0, "Creating project")).then(function() {
                return this.generateBlob_(a, b).progress(g(1, "Building book"))
            }.bind(this)).then(function(a) {
                h = a.tocRevision;
                return this.uploadBlob_(b.get("shortName"), a.data).progress(g(2, "Uploading book data"))
            }.bind(this)).then(function(a) {
                return this.importS3File_(b.get("id"), a.key, a.bucket, h).progress(g(3, "Starting import"))
            }.bind(this)).then(function(a) {
                return this.pollImportStatus_(a).progress(g(4, "Importing book into project"))
            }.bind(this)).then(function() {
                c(ImportedPageUploader.STATUS.SUCCESS)
            },
            function(a) {
                if (typeof a !== "string") console.warn("Unexpected import error", a),
                a = ImportedPageUploader.STATUS.FAILURE;
                c(a)
            },
            function(a) {
                d && d(a)
            }).done()
        },
        generateBlob_: function(a, b) {
            var c = Q.defer();
            this.win_.setTimeout(function() {
                c.notify(0)
            },
            1); (new ImportedPageSaverZip).save({
                pages: a,
                project: b,
                callback: function(a, b) {
                    c.resolve({
                        data: a,
                        tocRevision: b
                    })
                }
            });
            return c.promise
        },
        checkRepoExists_: function(a) {
            var b = Q.defer();
            this.win_.setTimeout(function() {
                b.notify(0)
            },
            1);
            a.get("repoExists") ? b.resolve(!0) : (a.on("change:repoExists",
            function d(a, f) {
                f && (a.off("change:repoExists", d, this), b.resolve(!0))
            },
            this), a.pollForRepoCreation());
            return b.promise
        },
        uploadBlob_: function(a, b) {
            var c = Q.defer();
            this.win_.setTimeout(function() {
                c.notify(0)
            },
            1); (new ChunkableUploadRequest({
                filename: "book.zip",
                data: b,
                type: ChunkableUploadRequest.FILE_TYPE.MAPPER,
                shortName: a,
                onSuccess: c.resolve,
                onFailure: function() {
                    c.reject(ImportedPageUploader.STATUS.UPLOAD_FAILURE)
                },
                onProgress: function(a) {
                    a.lengthComputable && c.notify(100 * a.loaded / a.total)
                }
            })).send();
            return c.promise
        },
        importS3File_: function(a, b, c, d) {
            var e = Q.defer();
            this.win_.setTimeout(function() {
                e.notify(0)
            },
            1); (new HabitatRequest({
                url: URLUtils.expand("{+apiHost}/mapperimports?show=true"),
                method: "POST",
                headers: {
                    "Content-type": "application/json; charset=utf-8"
                },
                urlEncoded: !1,
                data: JSON.stringify({
                    projectId: a,
                    s3bucket: c,
                    s3key: b,
                    tocRevision: d
                }),
                onSuccess: function(a) {
                    a = JSON.parse(a).result;
                    e.resolve(a.s9id)
                },
                onFailure: function(a) {
                    a.status === 409 ? e.reject(ImportedPageUploader.STATUS.DUPLICATE_FAILURE) : e.reject(ImportedPageUploader.STATUS.REQUEST_FAILURE)
                }
            })).send();
            return e.promise
        },
        pollImportStatus_: function(a) {
            return this.checkImportStatus_(a).then(function(b) {
                if (b.status === ImportedPageUploader.UPLOAD_STATUS_.SUCCEEDED) return Q.resolve();
                else if (b.status === ImportedPageUploader.UPLOAD_STATUS_.FAILED) {
                    var c = ImportedPageUploader.STATUS.FAILURE;
                    if (b.error) if (b.error === ImportedPageUploader.IMPORT_ERROR_.REVISION_CONFLICT) c = ImportedPageUploader.STATUS.TOC_FAILURE;
                    else if (b.error === ImportedPageUploader.IMPORT_ERROR_.EXTRACTION_ERROR) c = ImportedPageUploader.STATUS.UNZIP_FAILURE;
                    return Q.reject(c)
                }
                return Q.delay(ImportedPageUploader.POLL_FREQUENCY_).then(function() {
                    return this.pollImportStatus_(a)
                }.bind(this))
            }.bind(this))
        },
        checkImportStatus_: function(a) {
            var b = Q.defer(); (new HabitatRequest({
                url: URLUtils.expand("{+apiHost}/mapperimports/{s9id}", {
                    s9id: a
                }),
                method: "GET",
                onSuccess: function(a) {
                    a = JSON.parse(a).result;
                    b.notify(a.progress);
                    b.resolve({
                        status: a.state,
                        phase: a.phase || null,
                        error: a.error || null
                    })
                },
                onFailure: function() {
                    b.reject(ImportedPageUploader.STATUS.REQUEST_FAILURE)
                }
            })).send();
            return b.promise
        }
    });
    ImportedPageUploader.POLL_FREQUENCY_ = 4E3;
    ImportedPageUploader.UPLOAD_STATUS_ = {
        RUNNING: "RUNNING",
        FAILED: "FAILED",
        SUCCEEDED: "SUCCEEDED"
    };
    ImportedPageUploader.IMPORT_ERROR_ = {
        REVISION_CONFLICT: "REVISION CONFLICT",
        EXTRACTION_ERROR: "EXTRACTION ERROR"
    };
    ImportedPageUploader.STATUS = {
        SUCCESS: "success",
        UPLOAD_FAILURE: "upload-failure",
        DUPLICATE_FAILURE: "duplicate-failure",
        UNZIP_FAILURE: "unzip-failure",
        TOC_FAILURE: "toc-failure",
        REQUEST_FAILURE: "request-failure",
        FAILURE: "failure"
    };
    window.PageImporter = BaseClass.extend({
        progressManager_: null,
        initialize: function(a) {
            a = a || {};
            this.window_ = a.window || window
        },
        importFiles: function(a, b, c) {
            a = Array.prototype.filter.call(a,
            function(a) {
                return a.name[0] === "." ? (console.warn("Import: Ignoring " + a.name), !1) : !0
            });
            this.progressManager_ = new MultiStepProgressManager([{
                weight: 50,
                total: a.length
            },
            {
                weight: 40,
                total: PageImporter.GLOBAL_BOOK_ASSETS.length
            },
            {
                weight: 10,
                total: 1
            }]);
            this.configureEvents_(b, c);
            a.length === 0 ? this.trigger("finished", null, [], []) : (b = app.userHasPermission(PermissionsModel.TEMPORARY.EPUB_IMPORT), a.length === 1 && a[0].type === EpubImporter.MIMETYPE && b ? _.defer(this.epubImport_.bind(this, a[0])) : _.defer(this.basicImport_.bind(this, a)))
        },
        basicImport_: function(a) {
            this.runImport_(a, !0).then(function(a) {
                this.trigger("finished", a.pages, a.importResult.fileErrors, a.importResult.filesImported)
            }.bind(this)).done()
        },
        epubImport_: function(a) {
            var b; (new EpubImporter).extractFromContainer(a).then(function(a) {
                b = a.spineOrder;
                return this.runImport_(a.files)
            }.bind(this)).then(function(a) {
                var d = _.reduce(Object.keys(b),
                function(a, c) {
                    var d = FileUtils.normalizeFilePath(c);
                    a[d] = b[c];
                    return a
                },
                {});
                a.pages.setOrdering(d);
                a.pages.sort({
                    silent: !0
                });
                this.trigger("finished", a.pages, a.importResult.fileErrors, a.importResult.filesImported, !0)
            }.bind(this)).done()
        },
        runImport_: function(a, b) {
            var c, d = this.importFiles_(a).then(function(a) {
                c = a
            });
            b && (d = d.then(this.importGlobalBookCSS_.bind(this)));
            return d.then(function() {
                return Q.promise(function(a) { (new ImportedPageLoader).load(a)
                })
            }).then(function(a) {
                return {
                    pages: a,
                    importResult: c
                }
            })
        },
        importFiles_: function(a) {
            var b = this,
            c = {
                fileErrors: [],
                filesImported: []
            },
            d = Q.delay(1);
            return a.reduce(function(a, d) {
                return a.then(function() {
                    return b.importFile_(d)
                }).then(function() {
                    c.filesImported.push({
                        filename: d.name,
                        filePath: BrowserFeatures.getFileRelativePath(d)
                    })
                },
                function(a) {
                    c.fileErrors.push({
                        filename: d.name,
                        message: a,
                        filePath: BrowserFeatures.getFileRelativePath(d)
                    })
                }).then(function() {
                    b.progressManager_.incrementStepProgress(PageImporter.STEPS.IMPORT_FILES)
                })
            },
            d).then(function() {
                return c
            })
        },
        deleteExistingFiles: function(a) {
            var b = app.getLocalFileStorage(),
            c = b.onError;
            b.getProjectDirectory().then(function(b) {
                b.removeRecursively(a, c)
            },
            c)
        },
        configureEvents_: function(a, b) {
            if (b) this.progressManager_.on("progress", b);
            this.on("finished",
            function() {
                this.progressManager_.off("progress", b);
                a.apply(null, arguments)
            },
            this)
        },
        importFile_: function(a) {
            var b = FileUtils.normalizeFilePath(a.name);
            return b === null ? (console.warn("Import: Ignoring " + a.name), Q.reject("Unsupported")) : this.rewriteImportedFile_(a, b).then(function(a) {
                return this.writeBlobToPath_(a, b)
            }.bind(this),
            function() {
                throw "Invalid XHTML";
            })
        },
        rewriteImportedFile_: function(a) {
            if (a.type !== "text/css" && a.type !== "text/html" && a.type !== "application/xhtml+xml") return Q.resolve(a);
            var b = Q.defer(),
            c = new FileReader;
            c.onloadend = function() {
                var d;
                if (a.type === "text/html" || a.type === "application/xhtml+xml") {
                    var e = new HTMLSanitizer;
                    try {
                        d = e.importHTML(c.result)
                    } catch(f) {
                        return b.reject()
                    }
                } else a.type === "text/css" && (d = (new CSSImporter({
                    bookImporter: this
                })).cleanup(c.result));
                var g;
                if (a.type === "text/html" || a.type === "application/xhtml+xml" || a.type === "text/css") g = new Blob([d], {
                    type: a.type
                });
                b.resolve(g)
            }.bind(this);
            c.readAsText(a);
            return b.promise
        },
        importGlobalBookCSS_: function() {
            var a = this,
            b = this.progressManager_,
            c = PageImporter.GLOBAL_BOOK_ASSETS.map(function(c) {
                return Q.promise(function(e, f) { (new HabitatRequest({
                        url: PageImporter.PATH_TO_GLOBAL_BOOK_ASSETS_ + c,
                        responseType: "blob",
                        onSuccess: function(g) {
                            a.writeBlobToPath_(g, c).then(function() {
                                b.incrementStepProgress(PageImporter.STEPS.IMPORT_BOOK_CSS);
                                e()
                            },
                            f)
                        },
                        onFailure: f
                    })).send()
                })
            });
            return Q.allResolved(c)
        },
        writeBlobToPath_: function(a, b) {
            var c = app.getLocalFileStorage(),
            d = {
                create: !0,
                exclusive: !1
            };
            return c.getProjectDirectory(null, {
                create: !0
            }).then(function(a) {
                return c.expandDirectory(b, d, a).then(function() {
                    return a
                })
            }).then(function(c) {
                return Q.promise(function(f, g) {
                    c.getFile(b, d,
                    function(b) {
                        b.createWriter(function(b) {
                            b.write(a);
                            f()
                        },
                        g)
                    },
                    g)
                })
            }).fail(function() {
                c.onError()
            })
        }
    });
    PageImporter.GLOBAL_BOOK_ASSETS = "assets/css/main.css,assets/css/images/icon-arrow-hide-blue.svg,assets/css/images/icon-arrow-right-gray.svg,assets/css/images/icon-arrow-right-white.svg,assets/css/images/icon-arrow-show-blue.svg,assets/css/images/icon-assessment-black.svg,assets/css/images/icon-audio-player-white.svg,assets/css/images/icon-audio-white.svg,assets/css/images/icon-custom-white.svg,assets/css/images/icon-definition-black.svg,assets/css/images/icon-definition-blue.svg,assets/css/images/icon-guidedtour-blue.svg,assets/css/images/icon-hotspot-blue.svg,assets/css/images/icon-key-term-black.svg,assets/css/images/icon-link-blue.svg,assets/css/images/icon-link-jump-blue.svg,assets/css/images/icon-molecule-black.svg,assets/css/images/icon-molecule-white.svg,assets/css/images/icon-poptip-blue.svg,assets/css/images/icon-slidedtour-blue.svg,assets/css/images/icon-slideline-blue.svg,assets/css/images/icon-slideshow-blue.svg,assets/css/images/icon-table-black.svg,assets/css/images/icon-testyourself-blue.svg,assets/css/images/icon-threed-black.svg,assets/css/images/icon-threed-blue.svg,assets/css/images/icon-threed-white.svg,assets/css/images/icon-video-white.svg,assets/css/images/icon-web-white.svg,assets/img/equation-sample.png,assets/img/figure-unavailable.png,assets/img/icon.png,assets/img/publisher-logo.png,assets/img/stub-landscape.png,assets/img/stub-portrait.png,assets/img/temp-icon.svg".split(",");
    PageImporter.GLOBAL_BOOK_ASSETS_HISTORY = PageImporter.GLOBAL_BOOK_ASSETS.concat("assets/css/ui/icon-arrow-hide-blue.svg,assets/css/ui/icon-arrow-right-gray.svg,assets/css/ui/icon-arrow-right-white.svg,assets/css/ui/icon-arrow-show-blue.svg,assets/css/ui/icon-assessment-black.svg,assets/css/ui/icon-audio-player-white.svg,assets/css/ui/icon-audio-white.svg,assets/css/ui/icon-custom-white.svg,assets/css/ui/icon-definition-black.svg,assets/css/ui/icon-definition-blue.svg,assets/css/ui/icon-guidedtour-blue.svg,assets/css/ui/icon-hotspot-blue.svg,assets/css/ui/icon-key-term-black.svg,assets/css/ui/icon-link-blue.svg,assets/css/ui/icon-link-jump-blue.svg,assets/css/ui/icon-molecule-black.svg,assets/css/ui/icon-molecule-white.svg,assets/css/ui/icon-poptip-blue.svg,assets/css/ui/icon-slidedtour-blue.svg,assets/css/ui/icon-slideline-blue.svg,assets/css/ui/icon-slideshow-blue.svg,assets/css/ui/icon-table-black.svg,assets/css/ui/icon-testyourself-blue.svg,assets/css/ui/icon-threed-black.svg,assets/css/ui/icon-threed-blue.svg,assets/css/ui/icon-threed-white.svg,assets/css/ui/icon-video-white.svg,assets/css/ui/icon-web-white.svg,assets/sass/core/_font-ios.scss,assets/sass/core/_font-web.scss,assets/sass/core/_mixin.scss,assets/sass/core/_platform.scss,assets/sass/core/_reset.scss,assets/sass/custom/_custom.scss,assets/sass/custom/card/_card-chapter-appendix.scss,assets/sass/custom/card/_card-chapter-introduction.scss,assets/sass/custom/card/_card-chapter-reader.scss,assets/sass/custom/card/_card-chapter-review.scss,assets/sass/custom/card/_card-front-matter.scss,assets/sass/custom/card/_card-index.scss,assets/sass/custom/card/_card-section-introduction.scss,assets/sass/custom/card/_card-sub-reader.scss,assets/sass/custom/common/_color.scss,assets/sass/custom/common/_mixin.scss,assets/sass/custom/common/_shared.scss,assets/sass/custom/pattern/block/_block-blockquote.scss,assets/sass/custom/pattern/block/_block-default.scss,assets/sass/custom/pattern/block/_block-equation-key.scss,assets/sass/custom/pattern/block/_block-helper.scss,assets/sass/custom/pattern/block/_block-objective.scss,assets/sass/custom/pattern/block/_block-section.scss,assets/sass/custom/pattern/block/_block-table.scss,assets/sass/custom/pattern/callout/_callout-assessment.scss,assets/sass/custom/pattern/callout/_callout-audio.scss,assets/sass/custom/pattern/callout/_callout-basic.scss,assets/sass/custom/pattern/callout/_callout-custom.scss,assets/sass/custom/pattern/callout/_callout-key-term.scss,assets/sass/custom/pattern/callout/_callout-molecule.scss,assets/sass/custom/pattern/callout/_callout-simple.scss,assets/sass/custom/pattern/callout/_callout-table.scss,assets/sass/custom/pattern/callout/_callout-threed.scss,assets/sass/custom/pattern/callout/_callout-transcript.scss,assets/sass/custom/pattern/callout/_callout-video.scss,assets/sass/custom/pattern/callout/_callout-web.scss,assets/sass/custom/pattern/callout/_callout.scss,assets/sass/custom/pattern/figure/_figure-badge.scss,assets/sass/custom/pattern/figure/_figure-caption-full.scss,assets/sass/custom/pattern/figure/_figure-caption-position.scss,assets/sass/custom/pattern/figure/_figure-row.scss,assets/sass/custom/pattern/figure/_figure-text-image.scss,assets/sass/custom/pattern/figure/_figure-truncation.scss,assets/sass/custom/pattern/figure/_figure.scss,assets/sass/custom/pattern/heading/_heading-h1.scss,assets/sass/custom/pattern/heading/_heading-h2.scss,assets/sass/custom/pattern/heading/_heading-h3.scss,assets/sass/custom/pattern/heading/_heading-h4.scss,assets/sass/custom/pattern/heading/_heading-h5.scss,assets/sass/custom/pattern/heading/_heading-h6.scss,assets/sass/custom/pattern/heading/_heading-inline.scss,assets/sass/custom/pattern/inline/_inline-default.scss,assets/sass/custom/pattern/inline/_inline-dropcap.scss,assets/sass/custom/pattern/inline/_inline-fraction.scss,assets/sass/custom/pattern/inline/_inline-helper.scss,assets/sass/custom/pattern/list/_list-key-term-extended.scss,assets/sass/custom/pattern/list/_list-key-term.scss,assets/sass/custom/pattern/list/_list-ol-parenthesis.scss,assets/sass/custom/pattern/list/_list-ol.scss,assets/sass/custom/pattern/list/_list-question-fillin.scss,assets/sass/custom/pattern/list/_list-step.scss,assets/sass/custom/pattern/list/_list-ul.scss,assets/sass/custom/pattern/platform/_s9-answer.scss,assets/sass/custom/pattern/platform/_s9-inline-audio.scss,assets/sass/custom/pattern/platform/_s9-scrollable.scss".split(","));
    PageImporter.PATH_TO_GLOBAL_BOOK_ASSETS_ = "/Resources/Assets/global-book-assets/";
    PageImporter.STEPS = {
        IMPORT_FILES: 0,
        IMPORT_BOOK_CSS: 1,
        LOAD_PAGES: 2
    };
    window.IssueFilters = {
        setDefaultState: function(a, b) {
            b = b || {
                attributes: {},
                defaultState: !1
            };
            return {
                attributes: b.attributes,
                defaultState: a
            }
        },
        clear: function(a) {
            return {
                attributes: {},
                defaultState: a.defaultState
            }
        },
        get: function(a, b, c) {
            var c = c || {
                attributes: {},
                defaultState: !1
            },
            d = c.defaultState;
            if (a = c.attributes[a]) if (d = a[b], typeof d == "undefined") d = c.defaultState;
            return d
        },
        set: function(a, b, c, d) {
            var d = d || {
                attributes: {},
                defaultState: !1
            },
            d = ObjectUtils.clone(d),
            e = d.attributes[a];
            e || (e = {});
            c == d.defaultState ? delete e[b] : e[b] = c;
            d.attributes[a] = e;
            return d
        },
        isMinimized: function(a, b) {
            var b = b || {
                attributes: {},
                defaultState: !1
            },
            c = b.defaultState,
            d = b.attributes,
            e;
            for (e in d) if (d.hasOwnProperty(e) && (c = a.get(e), c = IssueFilters.get(e, c, b))) break;
            return c
        }
    };
    window.Keyboard = BaseClass.extend({
        bindings: null,
        stopPropagation: !1,
        el: null,
        initialize: function(a) {
            a = a || {};
            this.bindings = this.validateBindings_(this.cleanBindings_(a.bindings));
            this.el = a.el || null;
            this.stopPropagation = !!a.stopPropagation
        },
        cleanBindings_: function(a) {
            var a = _.extend({},
            a),
            b = {};
            Object.keys(a).forEach(function(c) {
                var d = c.toLowerCase();
                b[d] = a[c]
            });
            return b
        },
        validateBindings_: function(a) {
            Object.keys(a).forEach(function(a) {
                var c = a.split("+"),
                d = ["ctrl", "alt", "shift", "cmd"];
                c.length > 6 && console.warn("Programming Error: The binding", a, "is probably incorrect. It has more than 6 pieces.");
                if (c.length > 2) {
                    for (var e = 0; d.indexOf(c[e]) !== -1;) e++;
                    for (var f = 0,
                    f = e + 1; f < c.length; f++) d.indexOf(c[f]) !== -1 && console.warn("Programming Error: The modifier", c[f], "occurs after the first non-modifier. The binding is:", a);
                    for (f = e = 0; f < c.length; f++) {
                        var g = d.indexOf(c[f]);
                        g !== -1 && (g < e && console.warn("Programming Error: The modifier", c[f], "appears after a modifier that it should precede. The binding is:", a), e = Math.max(g, e))
                    }
                }
            });
            return a
        }
    });
    window.KeyboardManager = BaseClass.extend({
        globalKeyboards_: null,
        localKeyboards_: null,
        initialize: function(a) {
            this.registerDocument_(a || document);
            this.globalKeyboards_ = [];
            this.localKeyboards_ = []
        },
        createKeyboard: function(a) {
            a = a || {};
            return new Keyboard({
                bindings: a.bindings,
                el: a.el || null,
                stopPropagation: !!a.stopPropagation
            })
        },
        activate: function(a, b) {
            this.remove(a);
            a.el = b || a.el; (a.el ? this.localKeyboards_: this.globalKeyboards_).unshift(a)
        },
        remove: function(a) {
            if (a) {
                var b = a.el ? this.localKeyboards_: this.globalKeyboards_,
                a = b.indexOf(a);
                a !== -1 && b.splice(a, 1)
            }
        },
        registerIframe: function(a) {
            this.registerDocument_(a.contentDocument, a)
        },
        registerDocument_: function(a, b) {
            a.addEventListener("keydown", this.handleKeydown_.bind(this, b))
        },
        handleKeydown_: function(a, b) {
            var c = this.extractKeyCombination_(b);
            b.shortcut = c;
            var d = this.localKeyboards_.slice(),
            e = this.globalKeyboards_.slice();
            d.some(function(d) {
                if (d.el.contains(b.target) || a && d.el.contains(a)) return this.dispatchKeyboardEvent_(d, c, b)
            },
            this) || e.some(function(a) {
                return this.dispatchKeyboardEvent_(a, c, b)
            },
            this)
        },
        dispatchKeyboardEvent_: function(a, b, c) {
            c.stopPropagation = a.stopPropagation;
            var d = a.bindings["*"],
            e = !1;
            a.bindings[b] && (d = a.bindings[b]);
            d && (e = d(c) === !1);
            return c.stopPropagation || e
        },
        extractKeyCombination_: function(a) {
            var b = a.keyCode,
            c = [];
            a.ctrlKey && c.push("ctrl");
            a.altKey && c.push("alt");
            a.shiftKey && c.push("shift");
            a.metaKey && c.push("cmd");
            b >= KeyboardManager.LOWEST_CHAR_ && b <= KeyboardManager.HIGHEST_CHAR_ ? c.push(String.fromCharCode(b)) : KeyboardManager.SPECIAL_KEYS_.indexOf(b) === -1 && c.push(KeyboardManager.KEY_IDENTIFIERS_[b] || a.keyIdentifier);
            return c.join("+").toLowerCase()
        }
    });
    KeyboardManager.LOWEST_CHAR_ = "0".charCodeAt(0);
    KeyboardManager.HIGHEST_CHAR_ = "Z".charCodeAt(0);
    KeyboardManager.SPECIAL_KEYS_ = [16, 17, 18, 91];
    KeyboardManager.KEY_IDENTIFIERS_ = {
        8 : "backspace",
        9 : "tab",
        13 : "enter",
        27 : "esc",
        32 : "space",
        33 : "pageup",
        34 : "pagedown",
        35 : "end",
        36 : "home",
        37 : "left",
        38 : "up",
        39 : "right",
        40 : "down",
        46 : "delete"
    };
    window.KeyboardResolver = BaseClass.extend({
        resolve: function(a) {
            var b = BrowserUtils.getBrowserInfo().platform;
            b !== "mac" && (b = "other");
            var c = {};
            Object.keys(a).forEach(function(d) {
                var e = KeyboardResolver.KEY_MAP_[d]; ! e || !e[b] ? c[d] = a[d] : c[e[b]] = a[d]
            });
            return c
        },
        getHumanReadableKeyBinding: function(a) {
            var b = BrowserUtils.getBrowserInfo().platform;
            if (a = KeyboardResolver.KEY_MAP_[a]) return b === "mac" ? Object.keys(KeyboardResolver.MAC_META_KEY_MAP_).reduce(function(a, b) {
                return a.replace(RegExp(b, "g"), KeyboardResolver.MAC_META_KEY_MAP_[b])
            },
            a.mac).replace(/\+/g, "").toUpperCase() : a.other
        }
    });
    KeyboardResolver.KEY_MAP_ = {
        undo: {
            mac: "cmd+z",
            other: "ctrl+z"
        },
        redo: {
            mac: "shift+cmd+z",
            other: "ctrl+y"
        },
        cancel: {
            mac: "esc",
            other: "esc"
        },
        save: {
            mac: "cmd+s",
            other: "ctrl+s"
        },
        done: {
            mac: "cmd+enter",
            other: "ctrl+enter"
        },
        toggleMode: {
            mac: "cmd+m",
            other: "ctrl+m"
        },
        bold: {
            mac: "cmd+b",
            other: "ctrl+b"
        },
        italicize: {
            mac: "cmd+i",
            other: "ctrl+i"
        },
        underline: {
            mac: "cmd+u",
            other: "ctrl+u"
        },
        link: {
            mac: "cmd+k",
            other: "ctrl+k"
        }
    };
    KeyboardResolver.MAC_META_KEY_MAP_ = {
        esc: "\u238b",
        cmd: "\u2318",
        shift: "\u21e7",
        ctrl: "^"
    };
    window.LocalFileStorage = BaseClass.extend({
        fs_: null,
        loaded_: !1,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            Patches.polyfillFileAPI(this.win_);
            this.onError = this.onError.bind(this)
        },
        isLoaded: function() {
            return this.loaded_
        },
        setup: function(a) {
            var a = a || {},
            b = a.requestQuota === void 0 ? !0 : !!a.requestQuota,
            c = function(a) {
                return function() {
                    this.loaded_ = !0;
                    this.trigger("loaded");
                    a && a()
                }.bind(this)
            }.bind(this),
            d = c(a.success),
            e = c(a.noPermission),
            a = c(a.incognitoMode);
            this.win_.requestFileSystem(this.win_.PERSISTENT, LocalFileStorage.QUOTA_SIZE_,
            function(a) {
                this.fs_ = a;
                b ? this.requestQuota({
                    success: d,
                    noPermission: e
                }) : d()
            }.bind(this), a)
        },
        requestQuota: function(a) {
            this.fs_ ? this.win_.persistentStorage.requestQuota(LocalFileStorage.QUOTA_SIZE_,
            function(b) {
                b !== LocalFileStorage.QUOTA_SIZE_ ? a.noPermission() : a.success()
            },
            this.onError) : this.win_.setTimeout(function() {
                a.incognitoMode()
            },
            1)
        },
        getFileSystem: function() {
            return this.fs_
        },
        onError: function(a) {
            console.log("Error: ", a)
        },
        expandDirectory: function(a, b, c) {
            return Q.promise(function(d, e) {
                var f = c || this.fs_.root;
                b = b || {};
                var g = {
                    create: b.create === void 0 ? !0 : !!b.create,
                    exclusive: !!b.exclusive
                },
                h = a.split("/");
                h.pop();
                h.reverse(); (function l() {
                    if (h.length === 0) d(f);
                    else {
                        var a = h.pop();
                        a === "" || a === "." ? l() : f.getDirectory(a, g,
                        function(a) {
                            f = a;
                            l()
                        },
                        e)
                    }
                })()
            }.bind(this))
        },
        getProjectDirectory: function(a, b) {
            var c = FileUtils.getProjectRoot() + (a || ""),
            d = b || {};
            d.create = !!d.create;
            return this.expandDirectory(c, d)
        },
        readDirectoryEntries: function(a) {
            return Q.promise(function(b, c) {
                var d = [],
                e = a.createReader(); (function g() {
                    e.readEntries(function(a) {
                        a.length === 0 ? b(d) : (d = d.concat(Array.prototype.slice.call(a)), g())
                    },
                    c)
                })()
            })
        },
        readAllFiles: function(a) {
            return this.readDirectoryEntries(a).then(function(a) {
                return Q.all(a.map(function(a) {
                    var b = null;
                    a.isDirectory ? b = this.readAllFiles(a) : a.isFile && (b = a);
                    return b
                },
                this)).then(function(a) {
                    return a.reduce(function(a, b) {
                        Array.isArray(b) ? a = a.concat(b) : b && a.push(b);
                        return a
                    },
                    [])
                })
            }.bind(this))
        },
        readAllFilesFromDataTransfer: function(a) {
            return Q.all(Array.prototype.map.call(a.items,
            function(a) {
                a = BrowserFeatures.getItemEntry(a);
                if (a.isFile) return a;
                else if (a.isDirectory) return this.readAllFiles(a)
            },
            this)).then(function(a) {
                return _.flatten(a)
            })
        },
        convertFileEntries: function(a) {
            return Q.all(a.map(function(a) {
                return Q.promise(function(c, d) {
                    a.file(c, d)
                })
            }))
        }
    });
    LocalFileStorage.QUOTA_SIZE_ = 8192E5;
    window.ImportedPageSaverLocal = ImportedPageSaver.extend({
        save: function(a) {
            var b = a.pages,
            c = a.callback,
            d = 0,
            e = app.getLocalFileStorage().onError;
            app.getLocalFileStorage().getProjectDirectory().then(function(a) {
                var g = function() {
                    var h = b.at(d),
                    i = h.get("filePath");
                    a.getFile(i, {
                        create: !0,
                        exclusive: !1
                    },
                    function(a) {
                        a.createWriter(function(a) {
                            a.onwriteend = function() {
                                d++;
                                d === b.length ? c && c() : g()
                            };
                            a.onerror = e;
                            var f = this.cleanup_(h, !0, !1),
                            f = new Blob([f], {
                                type: "text/html"
                            });
                            a.write(f)
                        }.bind(this), e)
                    }.bind(this), e)
                }.bind(this);
                g()
            }.bind(this), e)
        }
    });
    window.ZipDownloadHelper = BaseClass.extend({
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document
        },
        save: function(a, b, c) { (new ImportedPageSaverZip).save({
                pages: a,
                project: null,
                progressCallback: c,
                callback: function(a) {
                    var c = this.doc_.createElement("a"),
                    f = this.win_.URL.createObjectURL(a);
                    c.href = f;
                    c.download = "book.zip";
                    c.click();
                    this.win_.setTimeout(function() {
                        this.win_.URL.revokeObjectURL(f)
                    }.bind(this), 1);
                    b && b()
                }.bind(this)
            })
        }
    });
    window.ListUtilities = {
        toListItems: function(a, b, c, d, e) { ! c && e && b && b.classList.add("list-bold");
            for (var f = a.ownerDocument,
            g = f.createDocumentFragment(), h = 0; h < a.childNodes.length; h++) {
                var i = a.childNodes[h],
                l = f.createElementNS(XHTML_NS, "li");
                l.setAttribute("x-finished", !0);
                if (i.nodeType === Node.ELEMENT_NODE) {
                    HTMLContent.hasPageNumber(i) && l.setAttribute("sourcepage", i.getAttribute("sourcepage"));
                    l.setAttribute("s9id", i.getAttribute("s9id"));
                    c ? this.reparentStepListItem_(l, i) : l.innerHTML = i.innerHTML;
                    if (!c && e) i = f.createElementNS(XHTML_NS, "p"),
                    i.setAttribute("x-finished", !0),
                    i.setAttribute("s9id", UUID()),
                    i.innerHTML = l.innerHTML,
                    l.innerHTML = "",
                    l.appendChild(i);
                    g.appendChild(l)
                } else i.nodeValue.trim() && (c ? console.warn("Step list could not parent text node") : (l.setAttribute("s9id", UUID()), d && (i.parentNode.removeChild(i), l.appendChild(i))))
            }
            d && b.appendChild(g);
            return g
        },
        stripListDecorations: function(a) { / ^<ul / .test(a) || (a = a.replace(/(<li[^>]*>)\s*<([a-z]+)[^>]*>\s*\(?[0-9\.]+\)?\s*<\/\2>\s*/g, "$1"), a = a.replace(/(<li[^>]*>)\s*<([a-z]+)([^>]*)>\s*\(?[0-9\.]+\)?\s*/g, "$1<$2$3>"), a = a.replace(/(<li[^>]*>)\s*<([a-z]+)[^>]*>\s*\(?[a-zA-Z]+\.?[a-zA-Z\.]*\.\)?\s*<\/\2>\s*/g, "$1"), a = a.replace(/(<li[^>]*>)\s*<([a-z]+)[^>]*>\s*\(?[IVXLCDM]+\.?[IVXLCDM\.]*\)?\s*<\/\2>\s*/gi, "$1"), a = a.replace(/(<li[^>]*>\s*\s*<([a-z]+)[^>]*>)\s*\(?[IVXLCDM]+\.?[IVXLCDM\.]*\.\)?\s*/gi, "$1"), a = a.replace(/(<li[^>]*>)\s*\(?[0-9]\.?[0-9.]*\)?\s*/g, "$1"), /(<li[^>]*>)\s*\(?[a-zA-Z]+\.\s*</.test(a) === !1 && (a = a.replace(/(<li[^>]*>)\s*\(?[a-zA-Z]\.?[a-zA-Z\.]*(\.|\))\s*/g, "$1")));
            a = a.replace(/(<li[^>]*>)\s*<([a-z]+)[^>]*>\s*\(?\u2022\)?\s*<\/\2>\s*/g, "$1");
            return a = a.replace(/(<li[^>]*>)\s*\(?\u2022\)?\s*/g, "$1")
        },
        reparentStepListItem_: function(a, b) {
            var c = !1;
            b.childElementCount === 0 ? c = !0 : b.childNodes.length && b.childNodes[0].nodeType === Node.TEXT_NODE && b.childNodes[0].nodeValue.trim() !== "" && (c = !0);
            if (c) console.warn("Unable to create step list item for: " + b.outerHTML),
            a.innerHTML = b.innerHTML;
            else {
                var c = a.ownerDocument,
                d = b.children[0],
                e = c.createElementNS(XHTML_NS, "span");
                e.setAttribute("class", "step-title");
                e.setAttribute("s9id", d.getAttribute("s9id"));
                e.setAttribute("x-finished", !0);
                e.innerHTML = d.innerHTML;
                d.parentNode.removeChild(d);
                a.appendChild(e);
                c = c.createElementNS(XHTML_NS, "span");
                c.setAttribute("class", "step-info");
                c.setAttribute("s9id", UUID());
                c.setAttribute("x-finished", !0);
                c.innerHTML = b.innerHTML;
                a.appendChild(c)
            }
        }
    };
    window.Markdown = BaseClass.extend({
        initialize: function() {
            marked.setOptions({
                gfm: !0,
                sanitize: !0,
                tables: !0,
                breaks: !0,
                smartypants: !0
            })
        },
        toHTML: function(a) {
            return marked(a)
        }
    });
    window.MathPreviewGenerator = BaseClass.extend({
        iframe_: null,
        mathjaxLoaded_: !1,
        mathNodeObjs_: null,
        timeoutID_: null,
        initialize: function(a) {
            a = a || {};
            this.iframeLoadedEventBound_ = this.iframeLoadedEvent_.bind(this);
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.mathNodeObjs_ = {}
        },
        isLoaded: function() {
            return Object.keys(this.mathNodeObjs_).every(function(a) {
                return this.mathNodeObjs_[a].isLoaded
            },
            this)
        },
        generatePreviews: function(a, b) {
            this.reset_();
            var c = this.generateMathNodeObjs_(a);
            this.mathNodeObjs_ = b ? _.extend({},
            this.mathNodeObjs_, c) : c;
            this.typesetMath_()
        },
        getLoadedPreviews: function() {
            return Object.keys(this.mathNodeObjs_).filter(function(a) {
                return this.mathNodeObjs_[a].isLoaded
            },
            this).map(function(a) {
                a = this.mathNodeObjs_[a];
                return {
                    s9id: a.s9id,
                    previewNode: a.previewNode
                }
            },
            this)
        },
        remove: function() {
            this.reset_();
            this.mathNodeObjs_ = {};
            if (this.iframe_) this.iframe_.removeEventListener("load", this.iframeLoadedEventBound_),
            DOMUtils.detachElement(this.iframe_),
            this.iframe_ = null;
            MathPreviewGenerator.__super__.remove.call(this)
        },
        reset_: function() {
            if (this.timeoutID_ !== null) this.win_.clearTimeout(this.timeoutID_),
            this.timeoutID_ = null
        },
        generateMathNodeObjs_: function(a) {
            return a.reduce(function(a, c) {
                var d = XMLUtilities.getS9ID(c),
                e = this.getLatexIfLatexOnly_(c) || XMLUtilities.serializeElement(c),
                f = this.getMathNodeObj_(d, e);
                a[d] = f || {
                    node: c.cloneNode(!0),
                    s9id: d,
                    isLoaded: !1,
                    mathString: e,
                    wrapper: null,
                    previewNode: null
                };
                return a
            }.bind(this), {})
        },
        getMathNodeObj_: function(a, b) {
            var c = this.mathNodeObjs_[a];
            return ! c || b && c.mathString !== b ? null: c
        },
        typesetMath_: function() {
            if (this.isLoaded()) this.timeoutID_ = this.win_.setTimeout(function() {
                this.timeoutID_ = null;
                this.trigger("loaded")
            }.bind(this), 1);
            else if (this.ensureIframeInitialized_()) {
                var a = this.iframe_.contentDocument,
                b = this.iframe_.contentWindow;
                if (! (a.body.querySelectorAll("." + MathPreviewGenerator.EQUATION_WRAPPER_CLASS_).length > 0)) {
                    var c = Object.keys(this.mathNodeObjs_).reduce(function(a, b) {
                        var c = this.mathNodeObjs_[b];
                        c && !c.isLoaded && a.push(c);
                        return a
                    }.bind(this), []);
                    c.forEach(function(b) {
                        var c = a.createElement("div");
                        c.classList.add(MathPreviewGenerator.EQUATION_WRAPPER_CLASS_);
                        c.innerHTML = b.mathString;
                        b.wrapper = c;
                        a.body.appendChild(c)
                    },
                    this);
                    b.MathJax.Hub.Typeset(a.body,
                    function() {
                        c.forEach(function(a) {
                            a.isLoaded = !0;
                            a.previewNode = this.getPreviewNode_(a);
                            DOMUtils.detachElement(a.wrapper);
                            a.wrapper = null
                        },
                        this);
                        this.typesetMath_()
                    }.bind(this))
                }
            }
        },
        ensureIframeInitialized_: function() {
            if (!this.iframe_) this.iframe_ = this.doc_.createElement("iframe"),
            this.iframe_.style.display = "none",
            this.doc_.body.appendChild(this.iframe_),
            this.iframe_.contentDocument.open(),
            this.iframe_.contentDocument.write(this.getIframeHTML_()),
            this.iframe_.addEventListener("load", this.iframeLoadedEventBound_),
            this.iframe_.contentDocument.close(),
            Patches.patchDOM(this.iframe_.contentWindow);
            return this.mathjaxLoaded_
        },
        iframeLoadedEvent_: function() {
            this.mathjaxLoaded_ = !0;
            this.typesetMath_()
        },
        getLatexIfLatexOnly_: function(a) {
            a = a.querySelector(":scope > semantics");
            if (!a) return null;
            if (a.querySelector(":scope > :first-child:not(annotation)")) return null;
            a = a.querySelector(':scope > annotation[encoding="application/x-tex"]');
            return ! a ? null: "\\(" + a.textContent.trim() + "\\)"
        },
        getIframeHTML_: function() {
            return '<html><head><script src="' + URLUtils.expand("{+staticHost}/js/MathJax/MathJax.js") + '?config=TeX-AMS-MML_SVG"><\/script></head><body></body></html>'
        },
        getPreviewNode_: function(a) {
            var b = this.iframe_.contentDocument,
            c = a.node,
            d = a.wrapper.querySelector(".MathJax_SVG");
            if (!d) return console.error("Unable to find a preview node in the document!", d),
            null;
            d = d.cloneNode(!0);
            if (a = b.querySelector("#MathJax_SVG_Hidden + svg")) {
                a.style.display = "none";
                var a = a.cloneNode(!0),
                e = {};
                d.xpathAll('//svg:use/@xlink:href[starts-with(., "#")]').forEach(function(a) {
                    a = a.value.slice(1);
                    e[a] = !0
                },
                this);
                a.xpathAll("//svg:path[@id]").forEach(function(a) {
                    var b = a.getAttribute("id");
                    e[b] || DOMUtils.detachElement(a)
                },
                this);
                d.insertBefore(a, d.firstChild)
            } ["id", "class", "role", "aria-readonly"].forEach(function(a) {
                d.removeAttribute(a)
            },
            this);
            Array.prototype.slice.call(c.attributes).forEach(function(a) {
                a.name.indexOf(":") !== -1 || a.name === "xmlns" || d.hasAttribute(a.name) && a.name !== "data-uuid" || d.setAttribute(a.name, a.value)
            },
            this);
            d.classList.add(MathPreviewGenerator.MATH_PREVIEW_CLASS);
            d.setAttribute("contenteditable", "false");
            d.insertAdjacentHTML("afterbegin", "&#8203;");
            d.insertAdjacentHTML("beforeend", "&#8203;");
            return d
        }
    });
    MathPreviewGenerator.MATH_PREVIEW_CLASS = "s9-math";
    MathPreviewGenerator.EQUATION_WRAPPER_CLASS_ = "s9-habitat-math-wrapper";
    window.MathUtils = {
        round: function(a, b) {
            var c = Math.pow(10, b);
            return Math.round(a * c) / c
        }
    };
    window.MultiStepProgressManager = BaseClass.extend({
        steps_: null,
        totalWeight_: 0,
        initialize: function(a) {
            this.steps_ = a.map(function(a) {
                return _.extend({
                    progress: 0
                },
                a)
            });
            this.totalWeight_ = this.steps_.reduce(function(a, c) {
                return a + c.weight
            },
            0)
        },
        incrementStepProgress: function(a) {
            a = this.steps_[a];
            a.progress = Math.min(a.total, a.progress + 1);
            this.trigger("progress", 100 * this.steps_.reduce(function(a, c) {
                return a + c.weight * c.progress / c.total
            },
            0) / this.totalWeight_)
        }
    });
    window.BackboneLoader = BaseClass.extend({
        queue_: null,
        count_: 0,
        callbackOnLoad_: function() {},
        callbackOnError_: function() {},
        initialize: function() {
            this.queue_ = []
        },
        add: function(a) {
            typeof a.isLoaded === "undefined" ? console.error("Programming error: Backbone resources passed to BackboneLoader.add must have isLoaded method; resource does not: ", a) : this.queue_.push(a)
        },
        start: function(a) {
            a = a || {};
            this.callbackOnLoad_ = a.onLoad || this.callbackOnLoad_;
            this.callbackOnError_ = a.onError || this.callbackOnError_;
            this.count_ = 0;
            this.queue_.forEach(function(a) {
                if (a.isLoaded()) this.onLoad_(a);
                else a.on("loaded", this.onLoad_, this),
                a.on("error", this.onError_, this),
                a.fetch()
            },
            this)
        },
        onLoad_: function() {
            this.count_++;
            this.count_ === this.queue_.length && (this.cleanUp_(), this.callbackOnLoad_())
        },
        onError_: function(a, b) {
            this.cleanUp_();
            this.callbackOnError_(a, b)
        },
        cleanUp_: function() {
            this.queue_.forEach(function(a) {
                a.off("loaded", this.onLoad_, this);
                a.off("error", this.onError_, this)
            },
            this)
        }
    });
    window.ChunkableUploadRequest = BaseClass.extend({
        parts_: null,
        uploadId_: null,
        totalProgress_: 0,
        progressPerRequest_: 0,
        callbacks_: null,
        filename_: null,
        data_: null,
        type_: null,
        shortName_: null,
        initialize: function(a) {
            a = a || {};
            this.filename_ = a.filename;
            this.data_ = a.data;
            this.type_ = a.type;
            this.shortName_ = a.shortName;
            this.parts_ = {};
            this.callbacks_ = {
                onSuccess: a.onSuccess ||
                function() {},
                onProgress: a.onProgress ||
                function() {},
                onFailure: a.onFailure ||
                function() {}
            }
        },
        send: function() {
            this.retrieveCredentials_()
        },
        triggerProgress_: function() {
            this.totalProgress_ += this.progressPerRequest_;
            this.callbacks_.onProgress({
                lengthComputable: !0,
                total: ChunkableUploadRequest.MAX_PROGRESS,
                loaded: this.totalProgress_
            })
        },
        triggerFailure_: function() {
            Object.keys(this.parts_).forEach(function(a) {
                a = this.parts_[a];
                a.request && !a.request.isComplete() && a.request.abort()
            },
            this);
            this.callbacks_.onFailure()
        },
        retrieveCredentials_: function() { (new SimpleRequest({
                url: URLUtils.expand("{+apiHost}/s3credentials/sn-{shortName}", {
                    shortName: this.shortName_
                }),
                queryParams: {
                    fileType: this.type_,
                    fileName: this.filename_
                },
                onSuccess: this.storeCredentialsAndContinue_.bind(this),
                onFailure: this.triggerFailure_.bind(this)
            })).send();
            this.chunkRequest_()
        },
        chunkRequest_: function() {
            for (var a = this.data_.size,
            b = 1,
            c = ChunkableUploadRequest.CHUNK_SIZE_; (b - 1) * c < a;) {
                var d = this.data_.slice((b - 1) * c, b * c, "binary/octet-stream");
                this.parts_[b] = {
                    data: d,
                    etag: null,
                    percentComplete: 0
                };
                b += 1
            }
            this.progressPerRequest_ = ChunkableUploadRequest.MAX_PROGRESS / (b + 2)
        },
        storeCredentialsAndContinue_: function(a) {
            try {
                this.credentials_ = JSON.parse(a).result,
                this.credentials_.url = ChunkableUploadRequest.makeUploadURL(this.credentials_.bucket, this.credentials_.key, this.credentials_.region),
                this.triggerProgress_(),
                this.initiateMultipartUpload_()
            } catch(b) {
                this.triggerFailure_()
            }
        },
        initiateMultipartUpload_: function() { (new S3SignedRequest(_.extend(this.credentials_, {
                method: "POST",
                responseType: "document",
                headers: {
                    "Content-Type": this.data_.type || "binary/octet-stream"
                },
                queryParams: {
                    uploads: ""
                },
                onSuccess: this.beginSendingParts_.bind(this),
                onFailure: this.triggerFailure_.bind(this)
            }))).send()
        },
        beginSendingParts_: function(a) {
            this.triggerProgress_();
            try {
                this.uploadId_ = a.xpath("//axml:UploadId").textContent
            } catch(b) {
                this.triggerFailure_()
            }
            for (a = 0; a < ChunkableUploadRequest.SIMULTANEOUS_UPLOADS_; a++) this.sendNextPart_()
        },
        sendNextPart_: function() {
            var a = Object.keys(this.parts_).find(function(a) {
                var a = this.parts_[a],
                c = a.request && !a.request.isComplete();
                return ! (a.etag || c)
            },
            this);
            a ? this.sendPart_(a) : this.completeUpload_()
        },
        sendPart_: function(a) {
            var b = this.parts_[a],
            a = new S3SignedRequest(_.extend(this.credentials_, {
                method: "PUT",
                data: b.data,
                queryParams: {
                    partNumber: a,
                    uploadId: this.uploadId_
                },
                onSuccess: this.partComplete_.bind(this, a),
                onFailure: this.triggerFailure_.bind(this)
            }));
            a.send();
            b.request = a
        },
        partComplete_: function(a, b, c) {
            this.parts_[a].etag = c.getResponseHeader("ETag");
            this.triggerProgress_();
            this.sendNextPart_()
        },
        completeUpload_: function() {
            if (!Object.keys(this.parts_).find(function(a) {
                return ! this.parts_[a].etag
            },
            this)) {
                var a = "<CompleteMultipartUpload>";
                a += Object.keys(this.parts_).map(function(a) {
                    return "<Part><PartNumber>" + a + "</PartNumber><ETag>" + this.parts_[a].etag + "</ETag></Part>"
                },
                this).join("");
                a += "</CompleteMultipartUpload>"; (new S3SignedRequest(_.extend(this.credentials_, {
                    method: "POST",
                    responseType: "document",
                    data: a,
                    queryParams: {
                        uploadId: this.uploadId_
                    },
                    headers: {
                        "Content-Type": "text/plain;charset=UTF-8"
                    },
                    onSuccess: this.finish_.bind(this),
                    onFailure: this.triggerFailure_.bind(this)
                }))).send()
            }
        },
        finish_: function(a) {
            var b;
            try {
                b = {
                    bucket: a.xpath("//axml:Bucket").textContent,
                    key: a.xpath("//axml:Key").textContent,
                    url: this.credentials_.url
                }
            } catch(c) {
                this.triggerFailure_()
            }
            b && (this.triggerProgress_(), this.callbacks_.onSuccess(b))
        }
    });
    ChunkableUploadRequest.makeUploadURL = function(a, b, c) {
        var d = "";
        return d = app.getConfig().get("environment") === "local" ? URLUtils.expand("{+apiHost}/amazonaws/{+bucket}/{+key}", {
            bucket: a,
            key: b
        }) : URLUtils.expand("https://s3{region}.amazonaws.com/{+bucket}/{+key}", {
            region: c ? "-" + c: null,
            bucket: a,
            key: b
        })
    };
    ChunkableUploadRequest.MAX_PROGRESS = 100;
    ChunkableUploadRequest.CHUNK_SIZE_ = 5242880;
    ChunkableUploadRequest.SIMULTANEOUS_UPLOADS_ = 2;
    ChunkableUploadRequest.FILE_TYPE = {
        VIDEO: "video",
        MAPPER: "mapper"
    };
    window.DocumentModel = Backbone.Model.extend({
        docReq_: null,
        documentModelLoaded_: !1,
        issuesCollectionLoaded_: !1,
        errorLoading_: !1,
        loadIssues_: !0,
        initialize: function(a, b) {
            b = b || {};
            if (!b.isSubclass) throw Error("DocumentModel is an abstract class");
            this.setDefaults(); ! this.get("issuesCollection") && this.get("supportsIssues") && this.set("issuesCollection", new IssuesCollection)
        },
        setDefaults: function() {
            var a = this.get("supportsIssues"),
            b = this.get("supportsSaving"),
            c = this.get("dirtyContent");
            this.set({
                project: this.get("project") || null,
                content: this.get("content") || null,
                contentMimeType: this.get("contentMimeType") || "text/html",
                dirtyContent: typeof c !== "undefined" ? c: !1,
                editing: typeof this.get("editing") !== "undefined" ? this.get("editing") : !1,
                supportsIssues: typeof a !== "undefined" ? a: !0,
                supportsSaving: typeof b !== "undefined" ? b: !1,
                issuesCollection: this.get("issuesCollection") || null
            })
        },
        isDirty: function() {
            return !! this.get("dirtyContent")
        },
        fetch: function(a) {
            a = a || {};
            if (typeof a.loadIssues !== "undefined") this.loadIssues_ = a.loadIssues;
            return DocumentModel.__super__.fetch.call(this, a)
        },
        sync: function(a) {
            a === "read" && this.read_()
        },
        cancel: function() {
            this.docReq_ && (this.docReq_.abort(), delete this.docReq_)
        },
        url: function() {
            throw "DocumentModel.url() is an abstract method";
        },
        errorLoading: function() {
            return this.errorLoading_
        },
        isDocumentLoaded: function() {
            return this.documentModelLoaded_
        },
        areIssuesLoaded: function() {
            return this.issuesCollectionLoaded_
        },
        isLoaded: function() {
            return this.loadIssues_ && this.get("supportsIssues") ? this.isDocumentLoaded() && this.areIssuesLoaded() : this.isDocumentLoaded()
        },
        isNew: function() {
            return ! 0
        },
        toJSON: function() {
            var a = _.clone(this.attributes);
            delete a.project;
            Object.keys(a).forEach(function(b) {
                a[b] && a[b].toJSON && (a[b] = a[b].toJSON(!0))
            },
            this);
            return a
        },
        read_: function() {
            this.documentModelLoaded_ = !1;
            if (this.loadIssues_ && this.get("supportsIssues")) this.issuesCollectionLoaded_ = !1;
            this.errorLoading_ = !1;
            this.trigger("loading", this);
            this.fetchDocumentModel_();
            this.loadIssues_ && this.get("supportsIssues") && this.fetchIssuesCollection_()
        },
        onContentLoaded_: function() {},
        fetchDocumentModel_: function() {
            var a = new HabitatRequest({
                url: this.url(),
                method: "get",
                onSuccess: function(b) {
                    try {
                        this.onContentLoaded_(b, a.xhr)
                    } catch(c) {
                        this.errorLoading_ = !0;
                        this.trigger("error", this, c.toString());
                        return
                    }
                    this.documentModelLoaded_ = !0;
                    this.isLoaded() && this.trigger("loaded", this)
                }.bind(this),
                onFailure: function(a) {
                    this.errorLoading_ = !0;
                    this.trigger("error", this, a)
                }.bind(this)
            });
            a.send();
            this.docReq_ = a
        },
        fetchIssuesCollection_: function() {
            var a = function() {
                this.issuesCollectionLoaded_ = !0;
                this.isLoaded() && this.trigger("loaded", this)
            }.bind(this);
            this.get("issuesCollection").fetch({
                success: function() {
                    a()
                },
                error: function(b, c) {
                    HabitatRequest.isTemporaryFailure(c) ? a() : (this.trigger("error", b, c), this.errorLoading_ = !0)
                }.bind(this)
            })
        }
    });
    window.FileDocumentModel = DocumentModel.extend({
        idAttribute: "filePath",
        loadIssues_: !1,
        revisionInfoCollection_: null,
        documentSaver_: null,
        initialize: function(a, b) {
            a = a || {};
            b = b || {};
            b.isSubclass = !0;
            FileDocumentModel.__super__.initialize.call(this, a, b);
            this.documentSaver_ = new FileDocumentSaver({
                model: this
            });
            this.revisionInfoCollection_ = new RevisionInfoCollection([], {
                path: this.get("filePath"),
                onHead: this.isOnHead()
            })
        },
        setDefaults: function() {
            FileDocumentModel.__super__.setDefaults.call(this);
            this.set({
                filePath: this.get("filePath") || null,
                revision: this.get("revision") || null,
                content: this.get("content") || null,
                originalContent: this.get("originalContent") || null,
                contentMimeType: this.get("contentMimeType") || "text/plain",
                contentRevision: this.get("contentRevision") || null,
                documentType: this.get("documentType") || null
            })
        },
        isNew: function() {
            return ! this.has("filePath")
        },
        isOnHead: function() {
            return ! this.get("revision")
        },
        supportsComparison: function() {
            return ! 1
        },
        getRevisions: function() {
            return this.revisionInfoCollection_
        },
        url: function(a) {
            var b = this.get("project");
            if (!b) return null;
            var b = b.get("shortName"),
            c = this.get("filePath");
            return FileDocumentModel.url(b, c, this.get("revision"), a)
        },
        sync: function(a, b, c) {
            FileDocumentModel.__super__.sync.apply(this, arguments);
            if (a === "read" && (!this.revisionInfoCollection_.isLoaded() || this.isOnHead())) this.isOnHead() && this.revisionInfoCollection_.reset(),
            this.revisionInfoCollection_.fetch({
                reverse: !0,
                pageStart: this.get("revision")
            });
            if (a === "update") c.isUpdateRequest = !0,
            this.documentSaver_.update(function() {
                this.revisionInfoCollection_.reset();
                this.revisionInfoCollection_.fetch({
                    reverse: !0
                });
                c.success && c.success.apply(null, arguments)
            }.bind(this), c.error)
        },
        onContentLoaded_: function(a, b) {
            var c = parseInt(b.getResponseHeader("X-Subversion-Revision"), 10),
            d = b.getResponseHeader("Content-Type"),
            e = this.rewriteInitialContent_(a);
            this.set({
                content: e,
                originalContent: e,
                contentRevision: c,
                contentMimeType: (d || "text/plain").split(";")[0].trim()
            });
            this.get("project").setRevision(c)
        },
        getFilename: function() {
            var a = this.get("filePath");
            return URI(a || "").filename() || null
        },
        getFileExtension: function() {
            return FileDocumentModel.getFileExtensionForPath(this.get("filePath"))
        },
        rewriteInitialContent_: function(a) {
            return a
        }
    });
    FileDocumentModel.url = function(a, b, c, d) {
        d = d || {};
        if (!a || !b) return null;
        var e = !!d.returnContent;
        return URLUtils.expand("{+apiHost}/files/{shortName}/trunk/{revision}/{+path}{?show}", {
            shortName: a,
            revision: d.onHead || !c ? "head": "r" + c,
            path: (typeof d.addFilename !== "undefined" ? d.addFilename: 1) ? URI(b).pathname() : URI(b).directory() + "/",
            show: e ? "true": null
        })
    };
    FileDocumentModel.parseURL = function(a) {
        var b = URI(a).normalize(),
        c = b.segmentCoded(),
        d = c.indexOf("files");
        if (d === -1 || c[d + 2] !== "trunk") return null;
        a = c[d + 1];
        if (c[d + 3] === void 0) return null;
        var e = c[d + 3].match(/^(?:head|r([0-9]+))$/);
        if (!e) return null;
        e = parseInt(e[1]) || null;
        c = c.slice(d + 4).join("/");
        b = b.search(!0);
        return {
            shortName: a,
            revision: e,
            filePath: c,
            params: b
        }
    };
    FileDocumentModel.newForType = function(a, b, c) {
        return new(a === "html" ? HTMLDocumentModel: a === "glossary" ? GlossaryDocumentModel: a === "remarks" ? RemarksDocumentModel: a === "config" ? ConfigDocumentModel: /^file:/.test(a) ? FileDocumentModel: S9MLDocumentModel)(b, c)
    };
    FileDocumentModel.getFileExtensionForPath = function(a) {
        return (a = a && a.match(/\.([^\/.]+)$/)) && a[1] || null
    };
    window.FileDocumentMultipostSaver = Backbone.Collection.extend({
        model: FileDocumentModel,
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window
        },
        save: function(a) {
            var a = a || {},
            b = this.min(function(a) {
                return a.get("contentRevision")
            },
            this).get("contentRevision");
            b || (b = app.getProjectModel().get("revision"));
            var c = {};
            this.forEach(function(a) {
                var b = this.createMultipostPath_(a);
                c[b] = {
                    content: a.get("content")
                }
            },
            this);
            var d = new HabitatRequest({
                url: URLUtils.expand("{+apiHost}/files/multiput"),
                method: "POST",
                data: JSON.stringify(c),
                headers: {
                    "Content-Type": "application/json",
                    "X-Subversion-Revision": b
                },
                onSuccess: function(b) {
                    var c = null;
                    try {
                        c = JSON.parse(b).result
                    } catch(g) {}
                    c && "revision" in c ? this.saveSuccess_(a.success, d.xhr, c) : this.saveError_(a.error, d.xhr, c)
                }.bind(this),
                onFailure: a.error && a.error.bind(a, this)
            });
            d.send();
            this.req_ = d
        },
        createMultipostPath_: function(a) {
            return ! a.has("filePath") ? null: app.getProjectModel().get("shortName") + "/trunk/head/" + a.get("filePath")
        },
        saveSuccess_: function(a, b, c) {
            var d = app.getProjectModel(),
            e = d.get("revision"),
            f = parseInt(b.getResponseHeader("X-Subversion-Revision"), 10) || null;
            this.forEach(function(a) {
                a.set({
                    revision: a.get("revision") ? f: null,
                    contentRevision: f
                })
            },
            this);
            var g = function() {
                d.get("toc").off("loaded", g, this);
                this.forEach(function(a) {
                    a.trigger("validationComplete", null)
                });
                a(this, c)
            };
            d.get("toc").on("loaded", g, this);
            f === e ? this.win_.setTimeout(g.bind(this), 1) : d.setRevision(f)
        },
        saveError_: function(a, b, c) {
            var d = !1;
            console.error("FileDocumentMultipostSaver failed to save! xhr:", b);
            var e = Object.keys(c).find(function(a) {
                return c[a].status.statusCode === "ContentConflictException"
            },
            this),
            f = Object.keys(c).filter(function(a) {
                return c[a].status.statusCode === "ContentValidationError"
            });
            e && (d = this.showConflictUI_(parseInt(c[e].status.statusDetails.revision, 10)));
            this.forEach(function(a) {
                var b = this.createMultipostPath_(a);
                b && f.indexOf(b) !== -1 ? a.trigger("validationComplete", FileDocumentSaver.formatValidationErrors(c[b].status.statusDetails)) : a.trigger("validationComplete", null)
            },
            this);
            a && a(this, b, {
                retry: d
            })
        },
        showConflictUI_: function(a) {
            app.getMessageView().hide();
            return this.win_.confirm(FileDocumentMultipostSaver.CONFLICT_MESSAGE_) ? (this.forEach(function(b) {
                b.set("contentRevision", a)
            },
            this), !0) : !1
        }
    });
    FileDocumentMultipostSaver.CONFLICT_MESSAGE_ = "A newer version of at least one of the files you are saving exists on the server; your changes will overwrite them. Proceed anyway?";
    window.FileDocumentSaver = BaseClass.extend({
        model: null,
        docReq_: null,
        initialize: function(a) {
            a = a || {};
            this.model = a.model;
            this.win_ = a.window || window
        },
        update: function(a, b) {
            var c = this.model.get("contentRevision") || app.getProjectModel().get("revision");
            /\.scss$/.test(this.model.get("filePath")) && (c = app.getProjectModel().get("revision"));
            app.getProjectModel();
            var d = new HabitatRequest({
                url: this.model.url({
                    onHead: !0,
                    returnContent: !0
                }),
                data: this.model.get("content"),
                method: "put",
                headers: {
                    "Content-Type": this.model.get("contentMimeType"),
                    "X-Subversion-Revision": c
                },
                onSuccess: function(b, c) {
                    this.updateSuccess_(a, d.xhr, b, c)
                }.bind(this),
                onFailure: this.updateFailure_.bind(this, b)
            });
            d.send();
            this.docReq_ = d
        },
        updateSuccess_: function(a, b, c) {
            var d = app.getProjectModel(),
            e = d.get("revision"),
            b = parseInt(b.getResponseHeader("X-Subversion-Revision"), 10) || null;
            this.model.set({
                revision: this.model.get("revision") ? b: null,
                contentRevision: b,
                content: c,
                originalContent: c
            });
            var f = function() {
                d.get("toc").off("loaded", f, this);
                this.model.trigger("validationComplete", null);
                a({})
            };
            d.get("toc").on("loaded", f, this);
            b === e ? this.win_.setTimeout(f.bind(this), 1) : d.setRevision(b)
        },
        updateFailure_: function(a, b) {
            var c;
            console.error("FileDocumentSaver failed to save document! xhr:", b);
            var d = null;
            try {
                c = JSON.parse(b.responseText),
                d = c.status.statusCode
            } catch(e) {}
            var f = !1,
            g = null;
            if (b.status == 409 && d == "ContentConflictException") f = b.getResponseHeader("X-Subversion-Revision"),
            f = parseInt(f, 10),
            f = this.showConflictUI_(f);
            else if (b.status == 400 && d == "ContentValidationError" && (g = c.status.statusDetails) && g.errors) c = c.status.statusDetails.errors.map(function(a) {
                return a.msg
            }),
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.CONTENT_VALIDATION_ERROR,
                eventInfo: {
                    errorType: "schema",
                    repoName: this.model.get("project").get("shortName"),
                    numberOfValidationErrors: c.length,
                    validationErrorMsg: c.join(","),
                    invalidHTML: this.model.get("content")
                }
            });
            this.model.trigger("validationComplete", g ? FileDocumentSaver.formatValidationErrors(g) : null); ! f && a && a()
        },
        showConflictUI_: function(a) {
            app.getMessageView().hide();
            return this.win_.confirm(FileDocumentSaver.CONFLICT_MESSAGE) ? (this.model.set("contentRevision", a), a = app.getSaveHandler(), a.resetEntry(this.model), a.save(), !0) : !1
        }
    });
    FileDocumentSaver.formatValidationErrors = function(a) {
        return a.errors.map(function(a) {
            return {
                message: a.msg,
                line: a.line - 1,
                character: a.ch,
                filePath: a.filename,
                isSchemaError: !0
            }
        })
    };
    FileDocumentSaver.CONFLICT_MESSAGE = "A newer version of this file exists on the server; your changes will overwrite them. Proceed anyway?";
    window.HabitatAuthentication = BaseClass.extend({
        req_: null,
        initialize: function(a) {
            a = a || {};
            this.location_ = a.location || window.location;
            this.userAgent_ = a.userAgent || navigator.userAgent
        },
        signIn: function(a, b, c, d, e) {
            this.deleteAccessTokenCookie_(!1);
            this.req_ = new HabitatRequest({
                url: this.getSignInPostURL_(a, b, e),
                urlEncoded: !1,
                method: "post",
                publishAuthErrors: !1,
                onSuccess: function() {
                    var a = arguments,
                    b = new CurrentUserModel,
                    d = function() {
                        a = Array.prototype.slice.call(a);
                        a.unshift(b);
                        c.apply(null, a)
                    };
                    b.on("loaded",
                    function() {
                        ia("ga", "sendEvent", {
                            eventCategory: "Account",
                            eventAction: "log_in",
                            eventLabel: "inkling-habitat"
                        });
                        ia("inkling", "sendEvent", {
                            eventType: Analytics.EVENTS.LOG_IN,
                            currentUser: b,
                            async: !1
                        });
                        d()
                    });
                    b.fetch({
                        failure: d
                    })
                },
                onFailure: this.signInFailure_.bind(this, d)
            });
            this.req_.send()
        },
        signOut: function() {
            this.deleteRemoteAccessToken_()
        },
        enforceSignedIn: function(a) {
            a = a || {};
            a = a.onSuccess; ! app.getConfig().get("localDevelopment") && !this.getAccessToken() ? this.redirectToLoginPage() : (new CurrentUserModel).fetch({
                success: a
            })
        },
        redirectToLoginPage: function() {
            this.location_.href = "/login?" + ObjectUtils.serialize({
                redirect: this.location_.href
            })
        },
        getAccessToken: function() {
            var a = this.getCookieName_(),
            a = CookieUtils.read(a);
            if (!a) return null;
            a = a.replace(/"(.*?)"/, "$1");
            a = a.match(/^([^|]*)/);
            if (!a || a.length > 2) return null;
            a = a[1];
            return a = atob(a)
        },
        signInFailure_: function(a, b) {
            var c = null;
            try {
                c = JSON.parse(b.responseText).status.statusCode
            } catch(d) {}
            c === "InvalidCredentials" || c === "InvalidEmailAddress" ? (app.getMessageView().error("Your username or password was incorrect."), console.error("Sign-in failed due to invalid credentials.")) : c === "PasswordNotSet" ? (app.getMessageView().error("Your password is invalid. Please reset your password."), console.error("Sign-in failed because password is not set.")) : (app.getMessageView().error("There was a problem with your request. Please try again."), console.error("Sign-in failed. XHR: ", b));
            a && a(b, c)
        },
        getSignInPostURL_: function(a, b, c) {
            return URLUtils.expand("{+apiHost}/oauth/access_token{?params*}", {
                params: {
                    grant_type: "password",
                    device_type: "WEB_CLIENT",
                    username: a,
                    password: c ? b: SHA1(b)
                }
            })
        },
        deleteRemoteAccessToken_: function() {
            var a = URLUtils.expand("{+apiHost}/accesstokens/{token}", {
                token: this.getAccessToken()
            });
            this.req_ = new HabitatRequest({
                url: a,
                method: "delete",
                publishAuthErrors: !1,
                onSuccess: function() {
                    this.deleteAccessTokenCookie_()
                }.bind(this),
                onFailure: function(a) {
                    app.getMessageView().error("Failure signing out. Please retry.");
                    console.error("Failure signing out: ", a)
                }
            });
            this.req_.send()
        },
        deleteAccessTokenCookie_: function(a) {
            typeof a === "undefined" && (a = !0);
            CookieUtils.dispose(this.getCookieName_(), {
                domain: ".inkling.com"
            });
            if (a) this.location_.href = "/login"
        },
        getCookieName_: function() {
            return app.getConfig().get("cookieName")
        }
    });
    window.SimpleRequest = BaseClass.extend({
        options_: {
            url: "",
            data: null,
            method: "GET",
            responseType: "text",
            queryParams: null,
            headers: {},
            async: !0,
            skipCredentials: !1,
            onSuccess: function() {},
            onProgress: function() {},
            onFailure: function() {}
        },
        initialize: function(a) {
            var b = _.extend({},
            this.options_.headers, a && a.headers || {});
            this.options_ = _.extend({},
            this.options_, a);
            this.options_.headers = b
        },
        isComplete: function() {
            return !! (this.xhr && this.xhr.readyState === XMLHttpRequest.DONE)
        },
        abort: function() {
            this.xhr && this.isRunning() && this.xhr.abort()
        },
        send: function() {
            var a = this.xhr = new XMLHttpRequest,
            b = this.options_.url;
            this.options_.queryParams && (b += "?" + ObjectUtils.serialize(this.options_.queryParams));
            a.open(this.options_.method.toUpperCase(), b, this.options_.async);
            a.withCredentials = !0;
            if (this.options_.skipCredentials) a.withCredentials = !1;
            if (this.options_.async) a.responseType = this.options_.responseType;
            a.onprogress = this.progress_.bind(this);
            a.upload.onprogress = this.progress_.bind(this);
            a.onload = function() {
                try {
                    this.response = {},
                    this.response.text = this.xhr.response,
                    this.response.xml = this.xhr.responseXML
                } catch(b) {
                    this.response.xml = null
                }
                if (a.status >= 200 && a.status < 300) this.options_.onSuccess(this.xhr.response, this.xhr);
                else this.options_.onFailure(this.xhr)
            }.bind(this);
            a.onerror = function() {
                this.options_.onFailure(this.xhr)
            }.bind(this);
            this.addHeaders_();
            a.send(this.options_.data);
            return this
        },
        isRunning: function() {
            return ! (!this.xhr || !(this.xhr.readyState !== XMLHttpRequest.UNSENT && this.xhr.readyState !== XMLHttpRequest.DONE))
        },
        addHeaders_: function() {
            this.setContentType_();
            var a = this.options_.headers;
            Object.keys(a).forEach(function(b) {
                try {
                    this.xhr.setRequestHeader(b, a[b])
                } catch(c) {
                    console.warn("Invalid Request header", c, b, a[b])
                }
            },
            this)
        },
        setContentType_: function() {
            var a = this.options_.data;
            if (a && a.type) this.options_.headers["Content-Type"] = a.type
        },
        progress_: function(a) {
            this.options_.onProgress(a, this.xhr)
        }
    });
    window.HabitatRequest = SimpleRequest.extend({
        initialize: function(a) {
            a = a || {};
            a.method = (a.method || "GET").toUpperCase();
            this.win_ = a.window || window;
            this.origErrorCallback_ = a.onFailure;
            a.onFailure = this.onFailure_.bind(this);
            this.origSuccessCallback_ = a.onSuccess;
            a.onSuccess = this.onSuccess_.bind(this);
            a.headers = _.extend({
                Accept: "text/javascript, text/html, application/xml, text/xml, */*"
            },
            a.headers);
            if (a.urlEncoded && (a.method === "POST" || a.method === "PUT")) a.headers["Content-Type"] = "application/x-www-form-urlencoded; charset=utf-8";
            this.shouldSendAnalyticsHeader_(a.url) && (a.headers["X-AnalyticsContext"] = '{"agent": "inkling-habitat"}');
            a.responseType = a.responseType || "";
            HabitatRequest.__super__.initialize.call(this, a);
            this.publishAuthErrors_ = !0;
            if (a.publishAuthErrors !== void 0) this.publishAuthErrors_ = !!a.publishAuthErrors
        },
        isSuccess: function() {
            return this.isComplete() && this.xhr.status >= 200 && this.xhr.status < 300
        },
        send: function() {
            if (this.mightHaveInlineData_()) {
                var a = this.getAPIURL_();
                if (a = a ? app.readAndClearInlineData(a) : null) {
                    var b = a,
                    c;
                    if (/^\s*</.test(a)) try {
                        c = XMLUtilities.parseDocument(a, XMLUtilities.DOCUMENT_TYPE.XML)
                    } catch(d) {}
                    this.win_.setTimeout(function() {
                        this.onSuccessHelper_(b, c)
                    }.bind(this), 1);
                    return this
                }
            }
            return HabitatRequest.__super__.send.apply(this, arguments)
        },
        mightHaveInlineData_: function() {
            var a = this.getAPIURL_();
            if (!a) return ! 1;
            var b = this.options_.method.toUpperCase();
            return b === "GET" || b === "POST" && /^\/multiget/.test(a)
        },
        getAPIURL_: function() {
            if (this.options_.url) {
                var a = this.options_.url.replace(/^https?:\/\/[^\/]+\/api(-[a-z]+)?/i, "");
                return a = a.replace(/^https?:\/\/[^\/]+\/redpub(-[a-z]+)?/i, "")
            }
        },
        onFailure_: function(a) {
            this.publishAuthErrors_ && this.isAuthError_(a) ? app.trigger("authenticationError", {
                xhr: a,
                origErrorCallback: this.origErrorCallback_
            }) : this.origErrorCallback_ && this.origErrorCallback_(a)
        },
        onSuccess_: function() {
            this.onSuccessHelper_(this.response.text, this.response.xml)
        },
        onSuccessHelper_: function(a, b) {
            this.origSuccessCallback_ && this.origSuccessCallback_(a, b)
        },
        isAuthError_: function(a) {
            var b = !1,
            c = (new ServerError(a)).getServerStatusCode();
            if (a.status === 401) b = !0;
            else if (a.status === 400 && (c === "InvalidAccessToken" || c === "AccessTokenExpired")) b = !0;
            return b
        },
        shouldSendAnalyticsHeader_: function(a) {
            return ! this.win_.app || !a ? !1 : ConfigurationModel.INKLING_HOSTS.some(function(b) {
                return a.indexOf(app.getConfig().get(b)) === 0
            })
        }
    });
    HabitatRequest.sync = function(a, b, c) {
        var d = b.url(a, c),
        e = c.methodOverride || HabitatRequest.HTTP_MAPPINGS[a];
        if (!d || !e) return null;
        d = URI(d);
        d.addSearch({
            pageStart: c.pageStart,
            count: c.count,
            reverse: c.reverse
        });
        var f = null;
        if (e === "PUT" || e === "POST") f = c.data || JSON.stringify(b.toJSON(c, a));
        var g = c.complete ||
        function() {},
        a = new(c.simpleRequest ? SimpleRequest: HabitatRequest)({
            url: d.toString(),
            method: e,
            data: f,
            publishAuthErrors: c.publishAuthErrors,
            headers: c.headers,
            onSuccess: function(a) {
                var b = null;
                try {
                    b = JSON.parse(a)
                } catch(d) {}
                g();
                b ? (c.paging = b.info && b.info.paging, c.status = b.status, c.success(b.result || b)) : a || a === "" ? c.success(a) : c.error()
            },
            onFailure: function(a) {
                g();
                var b = null;
                try {
                    b = JSON.parse(a.responseText)
                } catch(d) {}
                if (b) c.paging = b.info && b.info.paging,
                c.status = b.status;
                a.status === 404 && c.expectNotFound ? c.success(b && b.result || a.responseText) : c.error(b && b.result)
            },
            onProgress: c.onProgress ||
            function() {}
        });
        a.send();
        return a
    };
    HabitatRequest.HTTP_MAPPINGS = {
        create: "POST",
        read: "GET",
        update: "PUT",
        "delete": "DELETE"
    };
    HabitatRequest.STATUS_CODES = {
        NOT_FOUND: "ResourceNotFound",
        OK: "HTTPOk",
        EMAIL_EXISTS: "EmailAlreadyExists",
        CREATED: "HTTPCreated"
    };
    HabitatRequest.isTemporaryFailure = function(a) {
        if (a && a.status === 404) try {
            return !! JSON.parse(a.responseText).status.statusDetails.temporary
        } catch(b) {}
        return ! 1
    };
    HabitatRequest.isFailureWithStatusCodeAndReason = function(a, b, c) {
        if (a && a.status === b) try {
            return JSON.parse(a.responseText).status.statusDetails.reason === c
        } catch(d) {}
        return ! 1
    };
    window.S3SignedRequest = SimpleRequest.extend({
        options_: _.extend({},
        SimpleRequest.prototype.options_, {
            accessKey: null,
            secretKey: null,
            bucket: null,
            key: null,
            securityToken: null,
            region: null
        }),
        addHeaders_: function() {
            this.setContentType_();
            this.options_.headers.Authorization = this.calculateAuthorization_();
            Object.keys(this.options_.headers).forEach(function(a) {
                var b = this.options_.headers[a];
                try {
                    this.xhr.setRequestHeader(a, b)
                } catch(c) {
                    console.error("Invalid Request Header", c, a, b)
                }
            },
            this)
        },
        calculateAuthorization_: function() {
            return "AWS " + this.options_.accessKey + ":" + CryptoJS.HmacSHA1(this.getSignature_(), this.options_.secretKey).toString(CryptoJS.enc.Base64)
        },
        getSignature_: function() {
            var a = this.options_.method,
            b = this.options_.headers["Content-MD5"] || "",
            c = this.options_.headers["Content-Type"] || "";
            this.options_.headers["x-amz-date"] = (new Date).toUTCString();
            this.options_.headers["x-amz-security-token"] = this.options_.securityToken;
            return a + "\n" + b + "\n" + c + "\n\n" + this.getAmazonHeaders_() + this.getResourceName_()
        },
        getAmazonHeaders_: function() {
            var a = Object.keys(this.options_.headers).filter(function(a) {
                return /^x-amz-/.test(a.toLowerCase())
            }),
            a = a.map(function(a) {
                return a.toLowerCase() + ":" + this.options_.headers[a] + "\n"
            },
            this);
            return a.sort().join("")
        },
        getResourceName_: function() {
            var a = "/" + this.options_.bucket + "/" + this.options_.key;
            if (this.options_.queryParams) {
                var b = ObjectUtils.clone(this.options_.queryParams);
                Object.keys(b).forEach(function(a) {
                    S3SignedRequest.SUB_RESOURCE_PARAMS_.indexOf(a) === -1 && delete b[a]
                });
                a = a + "?" + ObjectUtils.serialize(b, _.extend({
                    trimEquals: !0
                },
                ObjectUtils.ENCODINGS.URL))
            }
            return encodeURI(a)
        }
    });
    S3SignedRequest.SUB_RESOURCE_PARAMS_ = "acl,lifecycle,location,logging,notification,partNumber,policy,requestPayment,torrent,uploadId,uploads,versionId,versioning,versions,website".split(",");
    window.ServerError = BaseClass.extend({
        initialize: function(a) {
            this.xhr_ = a;
            this.response_ = this.prepareResponse_()
        },
        getServerStatusCode: function() {
            return this.response_ && this.response_.status && this.response_.status.statusCode ? this.response_.status.statusCode: null
        },
        toString: function() {
            var a, b;
            this.response_ && this.response_.status && this.response_.status.statusDetails ? (b = this.response_.status, a = b.statusMsg, b = b.statusDetails.exception) : (a = this.xhr_.statusText, b = this.xhr_.status);
            return a + ": " + b
        },
        prepareResponse_: function() {
            var a = this.xhr_.response;
            if (a) {
                if (typeof a === "string") try {
                    a = JSON.parse(a)
                } catch(b) {
                    return null
                }
            } else return null;
            return a
        }
    });
    window.WaitFor = BaseClass.extend({
        waitFor_: null,
        showSpinnerOn_: null,
        whenLoaded_: function() {},
        initialize: function(a) {
            a = a || {};
            this.waitFor_ = a.waitFor;
            this.waitFor_.isLoaded ? (this.showSpinnerOn_ = a.showSpinnerOn, this.whenLoaded_ = a.whenLoaded || this.whenLoaded_, this.waitFor_.isLoaded() ? this.done_() : (this.showSpinnerOn_.classList.add("ui-spinner"), this.listenTo(this.waitFor_, "loaded", this.done_))) : console.error("Programming error: the WaitsFor class only works for Backbone classes with an isLoaded() method.")
        },
        done_: function() {
            this.remove();
            this.showSpinnerOn_.classList.remove("ui-spinner");
            this.whenLoaded_()
        }
    });
    window.ObjectUtils = {
        serialize: function(a, b) {
            if (! (a instanceof Object)) return "";
            var b = b || ObjectUtils.ENCODINGS.URL,
            c = b.delimiter || "&",
            d = b.encoder ||
            function(a) {
                return a
            },
            e = b.includeNulls !== void 0 ? b.includeNulls: !0,
            f = !!b.trimEquals;
            return Object.keys(a).map(function(b) {
                var c = a[b];
                if (!e && c === null) return null;
                c instanceof Object && console.warn("Serializing object value for object: ", c);
                b = d(b) + "=" + d(c || "");
                f && (b = b.replace(/\=$/, ""));
                return b
            }).filter(function(a) {
                return a !== null
            }).join(c)
        },
        clone: function(a) {
            if (Array.isArray(a)) return a.map(function(a) {
                return ObjectUtils.clone(a)
            });
            else if (Object.prototype.toString.call(a) === "[object Object]") {
                var b = {};
                Object.keys(a).forEach(function(c) {
                    b[c] = ObjectUtils.clone(a[c])
                });
                return b
            } else return a instanceof Date ? new Date(a) : a instanceof RegExp ? RegExp(a) : a
        },
        ENCODINGS: {
            IDENTITY: {},
            URL: {
                encoder: encodeURIComponent
            },
            COOKIE: {
                encoder: encodeURIComponent,
                delimiter: ";"
            }
        }
    };
    window.PasswordStrengthChecker = BaseClass.extend({
        points_: 0,
        compute: function(a) {
            this.points_ = 0;
            if (!a) return PasswordStrengthChecker.STRENGTH.WEAK;
            /[A-Z]/.test(a) && (this.points_ += 2);
            /[a-z]/.test(a) && (this.points_ += 2);
            a.length >= 5 && (this.points_ += 1);
            a.length >= 8 && (this.points_ += 2);
            a.length >= 12 && (this.points_ += 2);
            a.length >= 15 && (this.points_ += 2);
            var b = a.match(/([\~`!@#$%\^&\*\(\)_\+\-={}\[\]:";'<>\?\,\.\/\|\\])/g) || [],
            b = Math.min(b.length || 0, 4);
            this.points_ += b * 2;
            a = a.match(/[0-9]/g) || [];
            a = Math.min(a.length || 0, 4);
            this.points_ += a * 2;
            return this.points_ < 5 ? PasswordStrengthChecker.STRENGTH.WEAK: this.points_ < 9 ? PasswordStrengthChecker.STRENGTH.MEDIUM: this.points_ < 15 ? PasswordStrengthChecker.STRENGTH.STRONG: PasswordStrengthChecker.STRENGTH.VERY_STRONG
        }
    });
    PasswordStrengthChecker.STRENGTH = {
        WEAK: "weak",
        MEDIUM: "medium",
        STRONG: "strong",
        VERY_STRONG: "very-strong"
    };
    window.Patches = {
        patchNodeList: function(a) {
            a && "reduce,forEach,some,reduceRight,indexOf,lastIndexOf,slice,filter,splice,every,map,join,find".split(",").forEach(function(b) {
                a.Array.prototype.hasOwnProperty(b) && (a.NodeList.prototype[b] = a.Array.prototype[b])
            })
        },
        polyfillElement: function(a) {
            if (a) a = a.Element.prototype,
            a.matchesSelector = a.matchesSelector || a.webkitMatchesSelector
        },
        patchDOM: function(a) {
            a && (Patches.patchNodeList(a), Patches.polyfillElement(a), XMLUtilities.setupXPathMethods(a))
        },
        polyfillFileAPI: function(a) {
            a.URL = a.URL || a.webkitURL;
            a.resolveLocalFileSystemURL = a.resolveLocalFileSystemURL || a.webkitResolveLocalFileSystemURL || a.resolveLocalFileSystemURI;
            a.requestFileSystem = a.requestFileSystem || a.webkitRequestFileSystem;
            a.persistentStorage = a.persistentStorage || a.navigator.webkitPersistentStorage
        }
    }; (function() {
        for (var a = 0,
        b = ["ms", "moz", "webkit", "o"], c = 0; c < b.length && !window.requestAnimationFrame; ++c) window.requestAnimationFrame = window[b[c] + "RequestAnimationFrame"],
        window.cancelAnimationFrame = window[b[c] + "CancelAnimationFrame"] || window[b[c] + "CancelRequestAnimationFrame"];
        if (!window.requestAnimationFrame) window.requestAnimationFrame = function(b) {
            var c = (new Date).getTime(),
            f = Math.max(0, 16 - (c - a)),
            g = window.setTimeout(function() {
                b(c + f)
            },
            f);
            a = c + f;
            return g
        };
        if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(a) {
            clearTimeout(a)
        }
    })();
    window.PatternSnippetsParser = {
        parse: function(a, b) {
            var c = (b || document).createElement("div");
            c.innerHTML = a;
            var d = [];
            c.querySelectorAll('script[type="' + PatternSnippetsParser.SNIPPET_MIME_TYPE + '"]').forEach(function(a) {
                var b = {
                    id: a.id,
                    label: a.dataset.label,
                    html: a.innerHTML
                };
                if (a.dataset.category) b.category = a.dataset.category;
                Object.keys(b).forEach(function(a) {
                    typeof b[a] === "string" && (b[a] = b[a].trim())
                });
                b.isCustom = !!a.dataset.custom && a.dataset.custom.toLowerCase() === "true";
                b.isRecommended = !!a.dataset.recommended && a.dataset.recommended.toLowerCase() === "true";
                d.push(b)
            },
            this);
            return d
        }
    };
    PatternSnippetsParser.SNIPPET_MIME_TYPE = "application/inkling+patternsnippet";
    window.PatternSnippetsSerializer = {
        serialize: function(a) {
            if (a) return a = a.map(function(a) {
                return this.serializePattern_(a)
            },
            this),
            a = a.join("\n\n"),
            a + "\n"
        },
        serializePattern_: function(a) {
            var b = {
                type: PatternSnippetsParser.SNIPPET_MIME_TYPE,
                id: a.id || "",
                "data-label": a.label || ""
            };
            if (a.category) b["data-category"] = a.category;
            a.isCustom && (b["data-custom"] = "true");
            a.isRecommended && (b["data-recommended"] = "true");
            var c = Object.keys(b).map(function(a) {
                return a + '="' + StringUtils.escapeXML(b[a]) + '"'
            },
            this),
            d = [];
            d.push("<\!-- " + (StringUtils.escapeXML(a.label) || "(Untitled)") + " --\>");
            a.validationError && d.push("<\!-- Invalid pattern: " + a.validationError + " --\>");
            d.push("<script " + c.join(" ") + ">");
            d.push(a.html);
            d.push("<\/script>");
            return d.join("\n")
        }
    };
    window.PersistentNodeReference = BaseClass.extend({
        nodePath_: null,
        isWithinContent_: !1,
        initialize: function(a) {
            a = a || {};
            this.isWithinContent_ = !!a.isWithinContent
        },
        setNode: function(a) {
            this.nodePath_ = DOMUtils.getPathToNode(a, {
                isWithinContent: this.isWithinContent_
            })
        },
        getNode: function(a) {
            return ! this.nodePath_ ? null: DOMUtils.getNodeFromPath(a, this.nodePath_) || null
        },
        getNearbyS9ID: function() {
            return this.isWithinContent_ ? this.nodePath_ ? this.nodePath_.test(/^s9id=/) ? this.nodePath_.match(/^s9id=(\w+)\/?/)[1] : null: null: (console.error("Programming error: PersistentNodeReference.getNearbyS9ID should not be called on nodes that are not within content"), null)
        }
    });
    window.PrettyPrinter = {
        prettify: function(a) {
            DOMPrettifier.prettify(a, {
                indent: PrettyPrinter.INDENTATION_,
                formatter: PrettyPrinter.FORMATTER_
            })
        },
        INDENTATION_: 4,
        FORMATTER_: {
            indent: function(a) {
                return a.namespaceURI !== XHTML_NS && a.namespaceURI !== S9ML_NS ? !0 : a.nodeName.toLowerCase() !== "pre"
            },
            whitespace: function(a) {
                if (a.namespaceURI !== XHTML_NS && a.namespaceURI !== S9ML_NS) return ! 1;
                a = a.tagName.toLowerCase();
                return DOMPrettifier.WHITESPACE_SENSITIVE_ELEMENTS.indexOf(a) !== -1
            },
            content: function(a) {
                if (a.nodeType !== Node.ELEMENT_NODE) return ! 0;
                if (a.namespaceURI !== XHTML_NS) return !! a.firstElementChild;
                a = a.tagName.toLowerCase();
                return DOMPrettifier.WRAP_ELEMENT_CONTENT.indexOf(a) !== -1 || a === "epub:switch" || a === "epub:case" || a === "epub:default"
            },
            wrapper: function(a, b) {
                if (a.nodeType !== Node.ELEMENT_NODE) return ! 0;
                if (a.namespaceURI !== XHTML_NS) return ! 0;
                var c = a.tagName.toLowerCase();
                return c === "br" ? b === DOMPrettifier.DIRECTION.END: DOMPrettifier.WRAP_ELEMENTS.indexOf(c) !== -1 || c === "epub:switch" || c === "epub:case" || c === "epub:default" || c === "epub:trigger"
            }
        }
    };
    window.PromiseUtils = {
        map: function(a, b, c) {
            var c = c || null,
            d = [];
            return a.reduce(function(a, f) {
                return a.then(function() {
                    b.call(c, f).then(function(a) {
                        d.push(a)
                    })
                })
            },
            Q.resolve(0)).then(function() {
                return d
            })
        }
    };
    window.RepositoryLayout = {
        S9ML_DIRECTORY: "s9ml",
        TOC_PATH: "s9ml/toc.s9ml",
        TEMPLATE_DIRECTORY: "s9ml/.templates",
        GLOSSARY_PATH: "s9ml/glossary.s9ml",
        IMG_DIRECTORY: "img",
        TEMPLATE_THUMBNAIL_DIRECTORY: "template_covers",
        SHARED_CHAPTER_IMAGES_PATH: "img/shared",
        CHAPTER_THUMBNAIL_PATH: "img/toc_thumbs/ch_thumb.png",
        CLASS_GROUPS_PATH: "s9ml/.templates/class-groups.text.tpl",
        CONTENT_CONFIG_PATH: "s9ml/.templates/habitat-configuration.json",
        ASSETS_DIRECTORY: "assets",
        SASS_CUSTOM_DIRECTORY: "assets/sass/custom",
        WIDGETS_DIRECTORY: "assets/widgets",
        WIDGETS_IMAGE_DIRECTORY: "assets/widget_data/images",
        WIDGETS_CONFIG_DIRECTORY: "assets/widget_data/config",
        CSS_DIRECTORY: "assets/css",
        CSS_MAIN_PATH: "assets/css/main.css"
    };
    window.Resize = BaseClass.extend({
        previous_: null,
        element: null,
        handle: null,
        directions_: null,
        limits_: null,
        contentPane_: null,
        preventDefault_: !1,
        onComplete_: null,
        onStart_: null,
        stopPropagation_: !1,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.element = a.element;
            this.handle = a.handle || a.element;
            this.contentPane_ = a.contentPane;
            this.preventDefault_ = !!a.preventDefault;
            this.stopPropagation_ = !!a.stopPropagation;
            this.directions_ = a.directions || {
                x: !0,
                y: !0
            };
            this.limits_ = a.limits || {
                x: 0,
                y: 0
            };
            this.onComplete_ = a.onComplete || null;
            this.onStart_ = a.onStart || null;
            this.startEventBound_ = this.startEvent_.bind(this);
            this.dragEventBound_ = this.dragEvent_.bind(this);
            this.completeEventBound_ = this.completeEvent_.bind(this);
            this.handle.addEventListener("mousedown", this.startEventBound_)
        },
        remove: function() {
            this.handle.removeEventListener("mousedown", this.startEventBound_);
            Resize.__super__.remove.call(this)
        },
        updateSize_: function(a, b) {
            if (this.directions_[a]) {
                var c = this.calculateSize_(a, b);
                c && this.applySize_(a, c.origin, c.size)
            }
        },
        calculateSize_: function(a, b) {
            var c = Math.round(b[{
                x: "pageX",
                y: "pageY"
            } [a]]),
            d = DOMUtils.getOffset(this.element),
            e = a === "x",
            f = e ? d.left: d.top,
            d = c - f,
            g = e ? this.element.offsetWidth: this.element.offsetHeight,
            f = this.previous_[a] - f < (e ? this.handle.offsetWidth: this.handle.offsetHeight),
            h = DOMUtils.getOffset(this.element, this.contentPane_),
            e = {
                origin: e ? h.left: h.top
            };
            f ? (e.origin += d, e.size = g - d) : e.size = d;
            this.previous_[a] = c;
            return e.size < this.limits_[a] ? null: e
        },
        applySize_: function(a, b, c) {
            var d = {};
            a === "x" ? (d.left = b + "px", d.width = c + "px") : (d.top = b + "px", d.height = c + "px");
            DOMUtils.setStyles(this.element, d)
        },
        startEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a) && (this.preventDefault_ && a.preventDefault(), this.stopPropagation_ && a.stopPropagation(), this.previous_ = {
                x: Math.round(a.pageX),
                y: Math.round(a.pageX)
            },
            this.win_.addEventListener("mousemove", this.dragEventBound_), this.win_.addEventListener("mouseup", this.completeEventBound_), this.onStart_)) this.onStart_()
        },
        dragEvent_: function(a) {
            this.preventDefault_ && a.preventDefault();
            this.stopPropagation_ && a.stopPropagation();
            this.updateSize_("x", a);
            this.updateSize_("y", a)
        },
        completeEvent_: function(a) {
            this.preventDefault_ && a.preventDefault();
            this.stopPropagation_ && a.stopPropagation();
            this.previous_ = null;
            this.win_.removeEventListener("mousemove", this.dragEventBound_);
            this.win_.removeEventListener("mouseup", this.completeEventBound_);
            if (this.onComplete_) this.onComplete_()
        }
    });
    window.RestorableRange = BaseClass.extend({
        startContainer_: null,
        startOffset_: 0,
        startOffsetS9ID_: null,
        endContainer_: null,
        endOffset_: 0,
        endOffsetS9ID_: null,
        collapsed_: !1,
        save: function(a) {
            this.reset_();
            if (a) {
                this.startContainer_ = this.nodeToPath_(a.startContainer, a.startOffset);
                this.startOffset_ = this.computeOffset_(a.startContainer, a.startOffset);
                this.startOffsetS9ID_ = this.getOffsetS9ID_(a.startContainer, this.startOffset_);
                this.endContainer_ = this.nodeToPath_(a.endContainer, a.endOffset);
                this.endOffset_ = this.computeOffset_(a.endContainer, a.endOffset);
                this.endOffsetS9ID_ = this.getOffsetS9ID_(a.endContainer, this.endOffset_);
                this.collapsed_ = a.collapsed;
                var a = a.commonAncestorContainer.ownerDocument,
                b = this.startContainer_.split("/")[0];
                DOMUtils.getNodeFromPath(a, b).normalize();
                var c = this.endContainer_.split("/")[0];
                c !== b && DOMUtils.getNodeFromPath(a, c).normalize()
            }
        },
        getRange: function(a) {
            if (this.startContainer_ && this.endContainer_) {
                var b = DOMUtils.getNodeFromPath(a, this.startContainer_),
                c = DOMUtils.getNodeFromPath(a, this.endContainer_);
                if (b && c) {
                    var a = a.createRange(),
                    d = this.getSavedOffset_(b, this.startOffset_, this.startOffsetS9ID_);
                    try {
                        a.setStart(b, d)
                    } catch(e) {
                        console.warn("Unable to restore RestorableRange for start: " + this.toString());
                        return
                    }
                    b = this.getSavedOffset_(c, this.endOffset_, this.endOffsetS9ID_);
                    try {
                        a.setEnd(c, b)
                    } catch(f) {
                        console.warn("Unable to restore RestorableRange for end: " + this.toString());
                        return
                    }
                    this.collapsed_ && a.collapse();
                    return a
                }
            }
        },
        restore: function(a, b) {
            var b = b !== void 0 ? b: !0,
            c = this.getRange(a);
            if (c) {
                var d = a.defaultView;
                if (d) {
                    b && DOMUtils.focusWindow(d);
                    var e = DOMUtils.getRange(a);
                    if (DOMUtils.isSameRange(c, e)) return e;
                    d = d.getSelection();
                    d.removeAllRanges();
                    d.addRange(c)
                }
                return c
            }
        },
        getNearbyS9ID: function() {
            return ! this.startContainer_ && !this.endContainer_ ? null: this.startContainer_.test(/^s9id=/) ? this.startContainer_.match(/^s9id=([^\/]+)\/?/)[1] : this.startOffsetS9ID_ ? this.startOffsetS9ID_: this.endContainer_.test(/^s9id=/) ? this.endContainer_.match(/^s9id=([^\/]+)\/?/)[1] : this.endOffsetS9ID_ ? this.endOffsetS9ID_: null
        },
        getStart: function(a) {
            var b = {
                container: null,
                offset: null
            };
            if (this.startContainer_ && (a = DOMUtils.getNodeFromPath(a, this.startContainer_))) b.container = a,
            b.offset = this.getSavedOffset_(a, this.startOffset_, this.startOffsetS9ID_);
            return b
        },
        getEnd: function(a) {
            var b = {
                container: null,
                offset: null
            };
            if (this.endContainer_ && (a = DOMUtils.getNodeFromPath(a, this.endContainer_))) b.container = a,
            b.offset = this.getSavedOffset_(a, this.endOffset_, this.endOffsetS9ID_);
            return b
        },
        wasCollapsed: function() {
            return this.collapsed_
        },
        toString: function() {
            return JSON.stringify({
                startContainer: this.startContainer_,
                startOffset: this.startOffset_,
                startOffsetS9ID: this.startOffsetS9ID_,
                endContainer: this.endContainer_,
                endOffset: this.endOffset_,
                endOffsetS9ID: this.endOffsetS9ID_,
                collapsed: this.collapsed_
            })
        },
        reset_: function() {
            this.startContainer_ = null;
            this.startOffset_ = 0;
            this.endContainer_ = this.startOffsetS9ID_ = null;
            this.endOffset_ = 0;
            this.endOffsetS9ID_ = null;
            this.collapsed_ = !1
        },
        nodeToPath_: function(a, b) {
            var c = this.getChildAt_(a, b),
            c = this.normalizePointingToTextNodeChild_(a, c, b);
            return DOMUtils.getPathToNode(c.node, {
                isWithinContent: !0
            })
        },
        computeOffset_: function(a, b) {
            var c = this.getChildAt_(a, b);
            if (a.nodeType === Node.ELEMENT_NODE && c && c.nodeType === Node.ELEMENT_NODE) return DOMUtils.getNormalizedPositionInParent(c);
            else if (a.nodeType === Node.ELEMENT_NODE && !c) return b;
            c = this.normalizePointingToTextNodeChild_(a, c, b);
            a = c.node;
            b = c.offset;
            if (c.justWhitespace) return b;
            for (var c = DOMUtils.getFirstFragmentedTextNode(a), d = 0; c && c !== a;) d += c.nodeValue.length,
            c = c.nextSibling;
            d += b;
            return d
        },
        getSavedOffset_: function(a, b, c) {
            if (c && (c = XMLUtilities.getNodeByS9ID(a.ownerDocument, c))) if (c = c.parentElement.childNodes.indexOf(c), c !== -1) return c;
            return a.nodeType === Node.TEXT_NODE && b > a.nodeValue.length ? a.nodeValue.length: a.nodeType === Node.ELEMENT_NODE && a.childNodes.length && b > a.childNodes.length ? a.childNodes.length: b
        },
        getOffsetS9ID_: function(a, b) {
            if (a) {
                if (a.nodeType !== Node.ELEMENT_NODE) return null
            } else return null;
            return XMLUtilities.getS9ID(a.childNodes[b])
        },
        getChildAt_: function(a, b) {
            return a.nodeType !== Node.ELEMENT_NODE ? null: a.childNodes.length ? b > a.childNodes.length - 1 ? null: a.childNodes[b] : null
        },
        normalizePointingToTextNodeChild_: function(a, b, c) {
            c = {
                node: a,
                offset: c,
                justWhitespace: !1
            };
            if (a.nodeType === Node.ELEMENT_NODE && b && b.nodeType === Node.TEXT_NODE) DOMUtils.isWhitespaceNode(b) ? c.justWhitespace = !0 : (c.node = b, c.offset = 0);
            return c
        }
    });
    window.RewritePlugin = BaseClass.extend({
        initialize: function() {},
        remove: function() {
            RewritePlugin.__super__.remove.call(this)
        },
        rewrite: function() {
            throw Error("Programming Error: Must override rewrite method.");
        },
        rewritePartial: function() {
            throw Error("Programming Error: Must override rewritePartial method.");
        },
        restore: function() {
            throw Error("Programming Error: Must override restore method.");
        }
    });
    window.ImageRewritePlugin = RewritePlugin.extend({
        originalImageElements_: null,
        contentView_: null,
        initialize: function(a) {
            this.originalImageElements_ = {};
            this.contentView_ = a.contentView
        },
        rewrite: function(a) {
            this.originalImageElements_ = this.getImageElements_(a);
            this.rewriteImageElements_(a)
        },
        rewritePartial: function(a) {
            _.extend(this.originalImageElements_, this.getImageElements_(a));
            this.rewriteImageElements_(a)
        },
        restore: function(a) {
            a.querySelectorAll("img").forEach(function(a) {
                var c = XMLUtilities.getS9ID(a);
                c && this.originalImageElements_[c] && (c = this.originalImageElements_[c].cloneNode(!0), DOMUtils.replaceNode(a, c))
            },
            this)
        },
        getImageElements_: function(a) {
            return a.querySelectorAll("img").reduce(function(a, c) {
                var d = XMLUtilities.getS9ID(c);
                d && (a[d] = c.cloneNode(!0));
                return a
            },
            {})
        },
        rewriteImageElements_: function(a) {
            var b = this.contentView_.getRevision();
            URLUtils.rewriteImageElements(app.getProjectModel(), a, {
                revision: b
            })
        }
    });
    window.MathRewritePlugin = RewritePlugin.extend({
        mathTagCache_: null,
        rewrite: function(a) {
            this.mathTagCache_ = this.generateMathTagMap_(a)
        },
        rewritePartial: function(a) {
            if (!this.mathTagCache_) throw Error("Programming Error: must call rewrite before rewritePartial!");
            _.extend(this.mathTagCache_, this.generateMathTagMap_(a));
            a.querySelectorAll("math").forEach(function(b) {
                var c = XMLUtilities.getS9ID(b),
                d = a.ownerDocument.createElement("div");
                d.classList.add(MathRewritePlugin.MATH_SPINNER_CLASS);
                XMLUtilities.setS9ID(d, c);
                DOMUtils.replaceNode(b, d)
            },
            this)
        },
        restore: function(a) {
            if (!this.mathTagCache_) throw Error("Programming Error: must call rewrite before restore!");
            a.querySelectorAll("." + MathPreviewGenerator.MATH_PREVIEW_CLASS + ", ." + MathRewritePlugin.MATH_SPINNER_CLASS).forEach(function(a) {
                var c = XMLUtilities.getS9ID(a);
                c && this.mathTagCache_[c] && DOMUtils.replaceNode(a, this.mathTagCache_[c].cloneNode(!0))
            },
            this)
        },
        generateMathTagMap_: function(a) {
            return a.querySelectorAll("math").reduce(function(a, c) {
                var d = XMLUtilities.getS9ID(c);
                d && (a[d] = c.cloneNode(!0));
                return a
            },
            {})
        }
    });
    MathRewritePlugin.MATH_SPINNER_CLASS = "s9-habitat-math-spinner";
    window.S9ScrollableRewritePlugin = RewritePlugin.extend({
        rewrite: function() {},
        rewritePartial: function() {},
        restore: function(a) {
            a.querySelectorAll(".s9-is-scrollable").forEach(function(a) {
                a.classList.remove("s9-is-scrollable")
            },
            this)
        }
    });
    window.WidgetRewritePlugin = RewritePlugin.extend({
        originalWidgetElements_: null,
        widgetAPIView_: null,
        contentView_: null,
        initialize: function(a) {
            this.contentView_ = a.contentView;
            this.originalWidgetElements_ = {};
            this.listenTo(this.contentView_, "ready", this.contentViewReadyEvent_)
        },
        remove: function() {
            this.widgetAPIView_ && this.widgetAPIView_.remove();
            WidgetRewritePlugin.__super__.remove.call(this)
        },
        getWidgetAPI: function() {
            return this.widgetAPIView_
        },
        rewrite: function(a) {
            this.originalWidgetElements_ = this.getWidgetElements_(a);
            this.rewriteWidgetElements_(a)
        },
        rewritePartial: function(a) {
            _.extend(this.originalWidgetElements_, this.getWidgetElements_(a));
            this.rewriteWidgetElements_(a)
        },
        restore: function(a) {
            a.querySelectorAll("iframe." + WidgetRewritePlugin.WIDGET_MARKER_CLASS).forEach(function(a) {
                var c = XMLUtilities.getS9ID(a);
                c && this.originalWidgetElements_[c] && (c = this.originalWidgetElements_[c].cloneNode(!0), c.tagName.toLowerCase() === "object" && c.getAttribute("type") === "text/html" && this.convertSrcToParams_(a, c), DOMUtils.replaceNode(a, c))
            },
            this)
        },
        getWidgetElements_: function(a) {
            return a.querySelectorAll("object, iframe").reduce(function(a, c) {
                var d = XMLUtilities.getS9ID(c);
                d && (a[d] = c.cloneNode(!0));
                return a
            },
            {})
        },
        rewriteWidgetElements_: function(a) {
            var b = a.ownerDocument || a;
            a.querySelectorAll('object[type="text/html"]').forEach(function(a) {
                var d = b.createElement("iframe");
                XMLUtilities.setS9ID(d, XMLUtilities.getS9ID(a)); ["class", "width", "height"].forEach(function(b) {
                    a.hasAttribute(b) && d.setAttribute(b, a.getAttribute(b))
                },
                this);
                var e = URI(a.getAttribute("data") || "");
                a.xpathAll("./xhtml:param").forEach(function(a) {
                    var b = a.getAttribute("name"),
                    a = a.getAttribute("value");
                    b !== null && a !== null && e.setSearch(b, a)
                },
                this);
                var f, g, h = app.getConfig();
                e.is("relative") && h.get("environment") !== "local" && h.get("widgetHost") && (f = this.contentView_.getBaseHref() || b.baseURI, f = URI(f).search(""), g = e.absoluteTo(f).toString(), f = WidgetUtils.getWidgetDomainPath(g));
                f ? (d.dataset.s9HabitatWidgetFileURL = URI(g).search("").toString(), d.setAttribute("src", f)) : d.setAttribute("src", e.toString());
                d.classList.add(WidgetRewritePlugin.WIDGET_MARKER_CLASS);
                DOMUtils.replaceNode(a, d)
            },
            this);
            a.querySelectorAll("iframe").forEach(function(a) {
                var b = a.getAttribute("src");
                URLUtils.onInklingOrigin(b) ? a.setAttribute("sandbox", "allow-scripts") : a.setAttribute("sandbox", "allow-scripts allow-forms allow-same-origin")
            },
            this)
        },
        convertSrcToParams_: function(a, b) {
            var c = URI(a.getAttribute("src") || ""),
            d = b.xpathAll("./xhtml:param").reduce(function(a, b) {
                var c = b.getAttribute("name");
                c && (a[c] = b);
                return a
            },
            {}),
            e = Object.keys(d),
            f = c.query(!0),
            c = Object.keys(f);
            _.difference(e, c).forEach(function(a) {
                DOMUtils.detachElement(d[a])
            },
            this);
            _.intersection(e, c).forEach(function(a) {
                d[a].setAttribute("value", f[a])
            },
            this);
            _.difference(c, e).forEach(function(a) {
                var c = b.ownerDocument.createElement("param");
                c.setAttribute("name", a);
                c.setAttribute("value", f[a]);
                b.appendChild(c)
            },
            this)
        },
        contentViewReadyEvent_: function() {
            this.widgetAPIView_ && this.widgetAPIView_.remove();
            this.widgetAPIView_ = new WidgetAPIView({
                iframeDocument: this.contentView_.getIframeDocument()
            })
        }
    });
    WidgetRewritePlugin.WIDGET_MARKER_CLASS = "s9-habitat-widget";
    window.RightClickManager = BaseClass.extend({
        menuViews_: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.doc || document;
            this.win_ = a.win || window;
            this.menuViews_ = [];
            this.dismissMenusBound_ = this.dismissMenus_.bind(this);
            this.doc_.addEventListener("click", this.dismissMenusBound_);
            this.doc_.addEventListener("contextmenu", this.dismissMenusBound_);
            this.win_.addEventListener("blur", this.dismissMenusBound_)
        },
        remove: function() {
            for (; this.menuViews_.length;) this.removeMenu(this.menuViews_[this.menuViews_.length - 1]);
            this.doc_.removeEventListener("click", this.dismissMenusBound_);
            this.doc_.removeEventListener("contextmenu", this.dismissMenusBound_);
            this.win_.removeEventListener("blur", this.dismissMenusBound_);
            RightClickManager.__super__.remove.apply(this, arguments)
        },
        createMenu: function(a) {
            a = new RightClickMenuView(a);
            this.menuViews_.push(a);
            return a
        },
        removeMenu: function(a) {
            var b = this.menuViews_.indexOf(a);
            b >= 0 && this.menuViews_.splice(b, 1);
            a.remove()
        },
        dismissMenus_: function() {
            this.menuViews_.forEach(function(a) {
                a.dismiss()
            },
            this)
        }
    });
    window.SaveHandler = BaseClass.extend({
        needSaveList_: null,
        currentlySaving_: null,
        shortName_: null,
        initialize: function(a) {
            a = a || {};
            this.needSaveList_ = [];
            this.currentlySaving_ = [];
            this.shortName_ = a.shortName;
            this.win_ = a.window || window;
            this.docBody_ = a.docBody || document.body;
            _.extend(this, Backbone.Events)
        },
        add: function(a) {
            this.needSaveList_.indexOf(a) === -1 && this.needSaveList_.push(a);
            this.updateBodyClasses_()
        },
        remove: function(a) {
            a = this.needSaveList_.indexOf(a);
            a !== -1 && (this.needSaveList_.splice(a, 1), this.updateBodyClasses_())
        },
        resetEntry: function(a) {
            this.remove(a);
            this.add(a)
        },
        isSaveRequired: function() {
            return this.needSaveList_.length > 0 || this.currentlySaving_.length > 0
        },
        save: function(a) {
            if (this.needSaveList_.length !== 0) {
                var b = !1;
                this.trigger("save", {
                    preventDefault: function() {
                        b = !0
                    }
                });
                if (!b) {
                    this.needSaveList_.length && (app.getMessageView().show(SaveHandler.SAVING_MESSAGE), ia("timing", "start", Analytics.TIMING_TAGS.SAVE_MESSAGE_DURATION, {
                        shortName: this.shortName_
                    }));
                    this.currentlySaving_ = [];
                    for (var c = 0; c < this.needSaveList_.length; c++) this.currentlySaving_.push("saving");
                    var d = 0;
                    this.needSaveList_.forEach(function(b) {
                        b.save(null, {
                            success: this.successfulSave_.bind(this, d, a),
                            error: this.failedSave_.bind(this, d, a),
                            silent: !0
                        });
                        d++
                    },
                    this);
                    this.needSaveList_ = []
                }
            }
        },
        clear: function() {
            this.currentlySaving_ = [];
            this.needSaveList_ = [];
            this.updateBodyClasses_()
        },
        canNavigateAway: function() {
            if (this.isSaveRequired()) if (this.win_.confirm(SaveHandler.PROMPT_UNSAVED_DATA)) this.clear();
            else return ! 1;
            return ! 0
        },
        updateBodyClasses_: function() {
            var a = this.needSaveList_.length !== 0,
            b = this.needSaveList_.some(function(a) {
                return a instanceof FileDocumentModel
            });
            this.docBody_.classList.toggle("dirty", a);
            this.docBody_.classList.toggle("dirty-content", b)
        },
        successfulSave_: function(a, b, c) {
            this.currentlySaving_[a] = "success";
            this.trigger("save_successful", c);
            this.saveCompleted_(b)
        },
        failedSave_: function(a, b, c, d) {
            this.currentlySaving_[a] = "fail";
            this.add(c);
            console.error("Error saving:", d);
            d && console.error("Error details: " + (new ServerError(d)).toString());
            app.getMessageView().error(SaveHandler.ERROR_SAVING_MESSAGE);
            ia("timing", "end", Analytics.TIMING_TAGS.SAVE_MESSAGE_DURATION, {
                success: !1
            });
            this.trigger("save_failed", c);
            this.currentlySaving_.indexOf("saving") === -1 && b && b()
        },
        saveCompleted_: function(a) {
            if (this.currentlySaving_.indexOf("saving") === -1) this.updateBodyClasses_(),
            app.getMessageView().show(SaveHandler.SAVE_SUCCESS, 2E3),
            this.currentlySaving_ = [],
            ia("timing", "end", Analytics.TIMING_TAGS.SAVE_MESSAGE_DURATION, {
                success: !0
            }),
            this.trigger("save_completed"),
            this.shortName_ && ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.SAVE_PROJECT,
                eventInfo: {
                    shortName: this.shortName_
                }
            }),
            a && a()
        }
    });
    SaveHandler.SAVING_MESSAGE = "Saving...";
    SaveHandler.SAVE_SUCCESS = "Save successful";
    SaveHandler.PROMPT_UNSAVED_DATA = "If you leave you will lose your changes; are you sure?";
    SaveHandler.ERROR_SAVING_MESSAGE = "Error saving. Please retry.";
    window.ScalableImage = Backbone.View.extend({
        scroller: null,
        img_: null,
        zoomFactor_: 1,
        loaded_: !1,
        zoomControls_: null,
        mouseDown_: !1,
        initialPosition_: null,
        contentWidth_: 0,
        contentHeight_: 0,
        padding_: {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        },
        previousZoom_: 0,
        disableUserScaling_: !1,
        events: {
            "mousedown img": "mouseDownEvent_",
            mouseup: "mouseUpEvent_",
            mouseleave: "mouseUpEvent_",
            mousemove: "mouseMoveEvent_",
            mousewheel: "mouseWheelEvent_",
            "click .scalable-zoom-controls .zoom-in": "zoomInEvent_",
            "click .scalable-zoom-controls .zoom-out": "zoomOutEvent_",
            "click .scalable-zoom-controls .zoom-level": "zoomResetEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.img_ = a.img || this.el.querySelector("img");
            this.disableUserScaling_ = !!a.disableUserScaling;
            this.padding_ = ObjectUtils.clone(this.padding_);
            this.scrollMoveBound_ = this.scrollMove_.bind(this);
            this.onLoadBound_ = this.onLoad_.bind(this);
            this.onErrorBound_ = this.onError_.bind(this);
            this.resizeEventBound_ = this.resizeEvent_.bind(this);
            this.scroller = new Scroller(this.scrollMoveBound_, {
                locking: !1,
                zooming: typeof a.zoom === "undefined" ? !0 : a.zoom,
                minZoom: typeof a.minZoom === "undefined" ? 0.2 : a.minZoom,
                maxZoom: a.maxZoom || 2
            });
            this.updateContainer_();
            this.img_.style.opacity = 0
        },
        getPosition: function() {
            if (!this.isLoaded()) return this.initialPosition_;
            var a = this.scroller.getValues();
            a.left -= this.padding_.left * a.zoom;
            a.top -= this.padding_.top * a.zoom;
            a.contentWidth = this.contentWidth_;
            a.contentHeight = this.contentHeight_;
            a.zoomFactor = this.zoomFactor_;
            return a
        },
        setPosition: function(a, b) {
            b = !!b;
            if (a) if (this.isLoaded()) a.left += this.padding_.left * a.zoom,
            a.top += this.padding_.top * a.zoom,
            this.scroller.getValues().zoom !== a.zoom && (a.left /= a.zoom, a.top /= a.zoom),
            this.scroller.scrollTo(a.left, a.top, b, a.zoom);
            else if (this.initialPosition_ = a, a.contentWidth && a.contentHeight && a.zoomFactor) this.contentWidth_ = a.contentWidth,
            this.contentHeight_ = a.contentHeight,
            this.zoomFactor_ = a.zoomFactor,
            this.scrollMove_(a.left, a.top, a.zoom),
            this.img_.style.opacity = 1
        },
        adopt: function(a, b) {
            if (a) {
                var b = b || {},
                c = b.left || 0,
                d = b.top || 0;
                a.dataset.rawX = c;
                a.dataset.rawY = d;
                a.classList.add("scalable");
                this.el.appendChild(a);
                c = this.toScaledCoordinates({
                    left: c,
                    top: d
                });
                DOMUtils.setStyles(a, {
                    left: c.left + "px",
                    top: c.top + "px"
                })
            }
        },
        applyOffset_: function(a) {
            var b = this.container_,
            c = this.padding_,
            d = (b.width - (this.contentWidth_ + c.left + c.right) * a.zoom) / 2,
            b = (b.height - (this.contentHeight_ + c.top + c.bottom) * a.zoom) / 2;
            d < 0 && (d = 0);
            b < 0 && (b = 0);
            return {
                left: a.left - Math.round(d + c.left * a.zoom),
                top: a.top - Math.round(b + c.top * a.zoom),
                zoom: a.zoom
            }
        },
        getContainer: function() {
            return this.container_
        },
        fitToFrame: function(a, b, c, d) {
            this.isLoaded() && (c = Math.min(this.container_.width / c, this.container_.height / d), this.setPosition({
                left: a * c,
                top: b * c,
                zoom: c
            },
            !0))
        },
        fitToContainer: function() {
            this.fitToFrame(0, 0, this.contentWidth_, this.contentHeight_)
        },
        scrollToContain: function(a, b, c, d) {
            var e = this.container_,
            f = this.getPosition(),
            c = Math.max(f.left, (a + c) * f.zoom - e.width),
            c = Math.min(c, a * f.zoom),
            a = Math.max(f.top, (b + d) * f.zoom - e.height),
            a = Math.min(a, b * f.zoom);
            this.setPosition({
                left: Math.round(c),
                top: Math.round(a),
                zoom: f.zoom
            },
            !0)
        },
        updateContents: function() {
            var a = this.scroller.getValues();
            this.scrollMove_(a.left, a.top, a.zoom)
        },
        setPadding: function(a, b) {
            var c = this.padding_;
            this.padding_ = ObjectUtils.clone(a);
            var d = this.padding_.left - c.left,
            c = this.padding_.top - c.top;
            this.scroller.setDimensions(null, null, this.contentWidth_ + this.padding_.left + this.padding_.right, this.contentHeight_ + this.padding_.top + this.padding_.bottom, !1, !0);
            b && this.scroller.scrollBy(d, c, !1)
        },
        scrollMove_: function(a, b, c) {
            a = this.applyOffset_({
                left: a,
                top: b,
                zoom: c
            });
            this.img_.style.webkitTransform = "translate3d(" + -a.left + "px," + -a.top + "px, 0) scale(" + a.zoom / this.zoomFactor_ + ")";
            this.repositionScalableElements_( - a.left, -a.top, a.zoom);
            if (this.zoomControls_) this.zoomControls_.querySelector(".zoom-level").textContent = Math.round(a.zoom * 100) + "%";
            b = this.previousZoom_ !== c;
            this.previousZoom_ = c;
            this.trigger("scale", a, b)
        },
        mouseDownEvent_: function(a) {
            if (!this.disableUserScaling_) a.preventDefault(),
            this.scroller.doTouchStart([{
                pageX: a.pageX,
                pageY: a.pageY
            }], a.timeStamp),
            this.mouseDown_ = !0
        },
        mouseMoveEvent_: function(a) {
            this.mouseDown_ && !this.disableUserScaling_ && (a.preventDefault(), this.scroller.doTouchMove([{
                pageX: a.pageX,
                pageY: a.pageY
            }], a.timeStamp))
        },
        mouseUpEvent_: function(a) {
            this.mouseDown_ && !this.disableUserScaling_ && (a.preventDefault(), this.scroller.doTouchEnd(a.timeStamp))
        },
        mouseWheelEvent_: function(a) {
            this.disableUserScaling_ || (a.preventDefault(), this.scroller.doMouseZoom(a.wheelDelta < 0 ? 1 : -1, a.timeStamp, a.pageX, a.pageY))
        },
        zoomInEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (a = this.scroller.getValues()) && this.scroller.zoomTo(a.zoom + ScalableImage.ZOOM_IN_OUT_FACTOR_, !0))
        },
        zoomOutEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (a = this.scroller.getValues()) && this.scroller.zoomTo(a.zoom - ScalableImage.ZOOM_IN_OUT_FACTOR_, !0))
        },
        zoomResetEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.scroller.zoomTo(ScalableImage.ZOOM_DEFAULT_, !0))
        },
        updateContainer_: function() {
            this.container_ = this.el.getBoundingClientRect()
        },
        resizeEvent_: function() {
            this.updateContainer_();
            var a = this.setupScroller_();
            a + 0.0010 < this.getPosition().zoom ? this.scroller.zoomTo(a) : this.updateContents()
        },
        render: function() {
            this.zoomControls_ = Templates["project/document/exhibit/scalableImageZoom"]();
            this.el.insertBefore(this.zoomControls_, this.el.firstElementChild);
            this.hideScalable();
            this.img_.complete ? _.defer(this.onLoadBound_) : (this.img_.addEventListener("error", this.onErrorBound_), this.img_.addEventListener("load", this.onLoadBound_))
        },
        remove: function() {
            DOMUtils.detachElement(this.zoomControls_);
            app.off("contentPaneResized", this.resizeEvent_, this);
            this.win_.removeEventListener("resize", this.resizeEventBound_);
            this.img_.removeEventListener("error", this.onErrorBound_);
            this.img_.removeEventListener("load", this.onLoadBound_)
        },
        hideScalable: function() {
            var a = this.el.querySelectorAll(".scalable");
            a.length && a.forEach(function(a) {
                a.hide()
            })
        },
        repositionScalableElements_: function(a, b, c) {
            this.el.querySelectorAll(".scalable").forEach(function(d) {
                d.dataset.rawX && d.dataset.rawY ? DOMUtils.setStyles(d, {
                    left: a + d.dataset.rawX * c + "px",
                    top: b + d.dataset.rawY * c + "px"
                }) : DOMUtils.setStyles(d, {
                    zoom: Math.round(c * 100) + "%",
                    left: a + "px",
                    top: b + "px"
                })
            },
            this)
        },
        onLoad_: function() {
            if (this.el.ownerDocument.contains(this.el)) {
                this.loaded_ = !0;
                this.img_.style.opacity = 1;
                this.updateContainer_();
                var a = this.el.querySelectorAll(".scalable");
                a.length && a.forEach(function(a) {
                    a.show()
                });
                this.win_.addEventListener("resize", this.resizeEventBound_);
                app.on("contentPaneResized", this.resizeEvent_, this);
                this.trigger("loaded");
                a = this.setupScroller_();
                a < 1 && this.scroller.zoomTo(a);
                if (this.initialPosition_) this.setPosition(this.initialPosition_),
                this.initialPosition_ = null
            }
        },
        onError_: function() {
            var a = ScalableImage.getPlaceholderImage();
            if (this.img_.src !== a) this.img_.src = a
        },
        setupScroller_: function() {
            var a = this.el.getBoundingClientRect();
            this.contentWidth_ = this.img_.naturalWidth;
            this.contentHeight_ = this.img_.naturalHeight;
            this.scroller.setDimensions(a.width, a.height, this.contentWidth_, this.contentHeight_, !1);
            this.scroller.setPosition(a.left, a.top);
            this.zoomFactor_ = this.img_.height / this.contentHeight_;
            return Math.min(a.width / this.contentWidth_, a.height / this.contentHeight_)
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScaledBounds: function() {
            if (!this.isLoaded()) return null;
            var a = this.toScaledCoordinates({
                left: 0,
                top: 0
            }),
            b = this.toScaledCoordinates({
                left: this.contentWidth_,
                top: this.contentHeight_
            });
            return {
                left: Math.round(a.left),
                top: Math.round(a.top),
                width: Math.round(b.left - a.left),
                height: Math.round(b.top - a.top)
            }
        },
        getRawMidpoint: function() {
            var a = this.container_,
            a = this.toRawCoordinates({
                left: a.width / 2,
                top: a.height / 2
            });
            return {
                left: Math.round(a.left),
                top: Math.round(a.top)
            }
        },
        toRawCoordinates: function(a) {
            var a = a || {},
            b = this.applyOffset_(this.scroller.getValues());
            return {
                left: (a.left + b.left) / b.zoom,
                top: (a.top + b.top) / b.zoom
            }
        },
        toScaledCoordinates: function(a) {
            var a = a || {},
            b = this.applyOffset_(this.scroller.getValues());
            return {
                left: a.left * b.zoom - b.left,
                top: a.top * b.zoom - b.top
            }
        }
    });
    ScalableImage.getPlaceholderImage = function() {
        return URLUtils.expand("{+staticHost}/{+asset}", {
            asset: ScalableImage.PLACEHOLDER_IMAGE_ASSET_
        })
    };
    ScalableImage.ZOOM_DEFAULT_ = 1;
    ScalableImage.ZOOM_IN_OUT_FACTOR_ = 0.1;
    ScalableImage.PLACEHOLDER_IMAGE_ASSET_ = "images/image_placeholder.png";
    window.StringUtils = {
        redmineIdRegex: /(#(\d{2,7}))([^\d]|$)/g,
        activateLinks: function(a) {
            if (typeof a !== "string") return a;
            var b = URLUtils.expand("{+redmineHost}/issues/");
            return a = a.replace(this.redmineIdRegex, '<a target="redmine" href="' + b + '$2">$1</a>$3')
        },
        escapeHTML: function(a) {
            if (typeof a !== "string") return a;
            a = a.replace(/&/g, "&amp;");
            a = a.replace(/</g, "&lt;");
            return a = a.replace(/>/g, "&gt;")
        },
        escapeXML: function(a) {
            if (!a) return a;
            a = a.replace(/&/g, "&amp;");
            a = a.replace(/</g, "&lt;");
            a = a.replace(/>/g, "&gt;");
            a = a.replace(/'/g, "&apos;");
            return a = a.replace(/"/g, "&quot;")
        },
        escapeRegExp: function(a) {
            return a.replace(/([\-.*+?\^${}()|\[\]\/\\])/g, "\\$1")
        },
        stripTags: function(a) {
            return XMLUtilities.parseFragment(a || "", XMLUtilities.DOCUMENT_TYPE.HTML).textContent.trim()
        },
        convertSpacesForHTML: function(a) {
            return a.replace(/\s\s/g, " &#160;")
        },
        splitOnLineBreak: function(a) {
            return ! a ? null: a.split(/\n|\r\n/)
        },
        titleToId: function(a) {
            return ! a ? "": a.trim().toLowerCase().replace(/[ #,\.\&\/]/g, "_").replace(/[^a-z0-9_]/g, "")
        },
        normalizeFilename: function(a) {
            return a.toLowerCase().replace(/\s+/g, "_").replace(/[^a-z0-9_\.]/g, "")
        },
        normalizePath: function(a) {
            for (var a = a.split("/"), b = 0; b < a.length;) a[b] === "." ? a.splice(b, 1) : a[b] === ".." && b !== 0 ? (a.splice(b - 1, 2), b -= 1) : b += 1;
            return a.join("/")
        },
        parseRelativeHref: function(a) {
            a = a.match(/([^#]*)(.*)/);
            return {
                pathname: a[1],
                fragment: a[2]
            }
        },
        specialCharactersToEntities: function(a) {
            return a.replace(/[\u0080-\u02AE\u20A0-\u2C7F\uFFFC\uFFFD]/g,
            function(a) {
                return "&#" + a.charCodeAt(0) + ";"
            })
        },
        isValidEmail: function(a) {
            return StringUtils.EMAIL_MATCHER.test(a)
        },
        capitalize: function(a) {
            return ! a || typeof a !== "string" ? a: a.replace(/\b\w/g,
            function(a) {
                return a.toUpperCase()
            })
        },
        EMAIL_MATCHER: /^([A-Za-z0-9_\-\.\+])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/
    };
    RegExp.separator = RegExp.compile(/(?:[\p{Z}\p{Cc}]+)/);
    RegExp.newlines = RegExp.compile(/[\p{Cc}\p{Zl}\p{Zp}]+/, "g");
    RegExp.onlyNewlines = RegExp.compile(/^[\p{Cc}\p{Zl}\p{Zp}]+$/);
    URI.escapeQuerySpace = !1;
    window.URLUtils = {
        IMAGE_SIZES: {
            THUMBNAIL_SMALL: 50,
            THUMBNAIL_MEDIUM: 120,
            THUMBNAIL_LARGE: 240,
            DEFAULT: 1E3,
            FULL: -1
        },
        EXPRESSIONS_: {
            HTML_IMG_TAG: /(<img [^>]*src=)"([^"]+)"/gi,
            HTTP_TEST: /^https?:\/\//
        },
        onInklingOrigin: function(a) {
            a = URI(a).hostname();
            return ! a || /(^|\.)inkling\.com$/.test(a)
        },
        getParsedQueryString: function(a) {
            return URI.parseQuery(a.search)
        },
        getImageURL: function(a, b, c) {
            c = c || {};
            if (!a || !b) return null;
            var d = c.revision,
            d = d ? "r" + d: "head",
            e = c.format || "auto",
            a = a.replace(/^(?:\.{0,2}\/)*/, ""),
            b = {
                s: URLUtils.expand("content:///{env}/{shortName}/trunk/{revision}/{+path}", {
                    env: app.getConfig().get("environment"),
                    shortName: b.get("shortName"),
                    revision: d,
                    path: a
                })
            };
            if (!a.test(/\.svg$/i)) {
                b.o = "r";
                if (c.width !== URLUtils.IMAGE_SIZES.FULL) b.w = c.width || URLUtils.IMAGE_SIZES.DEFAULT;
                b.f = e;
                if (c.quality) b.q = c.quality
            }
            if (c.exact === !0) b.e = "true";
            return URLUtils.expand("{+mediaHost}/img{?params*}", {
                params: b
            })
        },
        rewriteImageTags: function(a, b, c) {
            c = c || {};
            return b.replace(URLUtils.EXPRESSIONS_.HTML_IMG_TAG,
            function(b, e, f) {
                b = f;
                URLUtils.EXPRESSIONS_.HTTP_TEST.test(b) || (b = URLUtils.getImageURL(b, a, {
                    exact: !0,
                    revision: c.revision || null
                }));
                return e + '"' + b + '"'
            })
        },
        rewriteImageElements: function(a, b, c) {
            c = c || {};
            b.querySelectorAll("img").forEach(function(b) {
                var e = b.getAttribute("src");
                URLUtils.EXPRESSIONS_.HTTP_TEST.test(e) || (e = URLUtils.getImageURL(e, a, {
                    exact: !0,
                    revision: c.revision || null
                }), b.setAttribute("src", e))
            })
        },
        isUNCPath: function(a) {
            return /^\\\\/.test(a)
        },
        isBracketLink: function(a) {
            return /^\s*\[[\s\S]*\]\s*$/.test(a)
        },
        getBracketLinkDetails: function(a) {
            a = /^\s*\[(?:([^:]*):)?([^\]]*)\]\s*$/.exec(a);
            return {
                type: a[1] || "",
                value: a[2] || ""
            }
        },
        looksLikeSchemelessURL: function(a) {
            if (URI(a).scheme() || UUID.isUUID(a) || URLUtils.isBracketLink(a) || URLUtils.isUNCPath(a)) return ! 1;
            a = URI("scheme://" + a).host();
            return URLUtils.LINKABLE_FILE_EXTENSION_RE_.test(a) ? !1 : /^[^\.]+\.[^\.]+/.test(a)
        },
        expand: function(a, b) {
            var c = app.getConfig(),
            b = _.extend({
                habitatHost: c.get("habitatHost"),
                middlewareHost: c.get("habitatHost") + "/middleware",
                apiHost: c.get("apiHost"),
                redpubHost: c.get("redpubAPIHost"),
                reposHost: c.get("reposAPIHost"),
                mediaHost: c.get("mediaHost"),
                redmineHost: c.get("redmineHost"),
                staticHost: c.get("staticAssetURL").replace(/\/$/, ""),
                widgetHost: c.get("widgetHost"),
                wwwHost: c.get("wwwHost")
            },
            b);
            return (new URITemplate(a)).expand(b)
        }
    };
    URLUtils.LINKABLE_FILE_EXTENSION_RE_ = /\.(?:x?html?|s9ml|js|css|jpe?g|png|gif|svg)$/i;
    window.UUID = function() {
        return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,
        function(a) {
            var b = Math.random() * 16 | 0;
            return (a == "x" ? b: b & 3 | 8).toString(16)
        }).toLowerCase()
    };
    UUID.isUUID = function(a) {
        return ! a ? !1 : /^[0-9a-f]{12}4[0-9a-f]{19}$/i.test(a)
    };
    window.WidgetUtils = {
        getEditorPath: function(a) {
            return URI(a).filename("editor.html").toString()
        },
        getWidgetName: function(a) {
            if (!a) return null;
            a = WidgetUtils.getWidgetPath_(a);
            if (!a) return null;
            a = URI(a).segmentCoded(0);
            return StringUtils.capitalize(a.replace(/[_\-]/g, " "))
        },
        getWidgetRelativePath: function(a, b) {
            var c = FileDocumentModel.url(app.getProjectModel().get("shortName"), b),
            c = URI(c).relativeTo(a);
            return c.is("relative") ? c.toString() : null
        },
        getWidgetDomainPath: function(a) {
            if (a.indexOf(app.getConfig().get("apiHost")) !== 0) return null;
            var b = FileDocumentModel.parseURL(a);
            if (!b) return console.error("Programming error: tried to convert bad URL to widget domain: ", a),
            null;
            b.revision = b.revision ? "r" + b.revision: "head";
            return URLUtils.expand("{+widgetHost}/files/{shortName}/trunk/{revision}/{+filePath}{?params*}", b)
        },
        getWidgetPath_: function(a) {
            a = URI(a);
            if (a.is("relative")) return null;
            var b = app.getProjectModel().get("shortName"),
            b = FileDocumentModel.url(b, RepositoryLayout.WIDGETS_DIRECTORY + "/"),
            a = a.relativeTo(b);
            return ! a.is("relative") || a.segment(0) === ".." ? null: a.toString()
        }
    };
    window.WidgetEditorAPI = BaseClass.extend({
        apiManager_: null,
        widgetFileURL_: null,
        removed_: !1,
        initialize: function(a) {
            WidgetReadAPI.__super__.initialize.apply(this, arguments);
            this.apiManager_ = a.manager;
            this.widgetFileURL_ = a.widgetFileURL;
            this.listenTo(this.apiManager_, {
                "configuration:set": this.setConfigurationEvent_,
                "configuration:file": this.fileConfigurationEvent_,
                "asset:image": this.assetImageEvent_
            })
        },
        remove: function() {
            WidgetReadAPI.__super__.remove.apply(this, arguments);
            this.removed_ = !0
        },
        setConfigurationEvent_: function(a, b) {
            this.trigger("configuration", a, b)
        },
        fileConfigurationEvent_: function(a, b) {
            this.widgetFileURL_ && this.trigger("fileConfiguration", a, b)
        },
        assetImageEvent_: function(a, b) {
            if (this.widgetFileURL_) if (b.data) {
                var c = new ImageAssetModel(null, {
                    file: b.data
                });
                c.set("filePath", RepositoryLayout.WIDGETS_IMAGE_DIRECTORY + "/" + URI(c.get("filePath")).filename());
                c.save();
                this.sendImageProgress_(a, c, b.id, b.progress)
            } else console.warn("Programmer error: Received an image asset request with no data.")
        },
        sendImageProgress_: function(a, b, c, d) {
            b.ready().then(function() {
                if (!this.removed_) {
                    var d = WidgetUtils.getWidgetRelativePath(this.widgetFileURL_, b.get("filePath"));
                    this.apiManager_.sendMessage("asset:image", {
                        id: c || null,
                        progress: 1,
                        path: d
                    },
                    a.contentWindow)
                }
            }.bind(this),
            function() {
                this.removed_ || this.apiManager_.sendMessage("asset:image", {
                    id: c || null,
                    progress: 1,
                    path: null
                },
                a.contentWindow)
            }.bind(this),
            function(b) {
                this.removed_ || d && b !== 1 && this.apiManager_.sendMessage("asset:image", {
                    id: c || null,
                    progress: b,
                    path: null
                },
                a.contentWindow)
            }.bind(this)).done()
        }
    });
    window.WidgetMessageManager = BaseClass.extend({
        contentDocument_: null,
        rewriteObserver_: null,
        widgetIframe_: null,
        initialize: function(a) {
            WidgetMessageManager.__super__.initialize.apply(this, arguments);
            a.target.ownerDocument ? (this.contentDocument_ = a.target.ownerDocument, this.widgetIframe_ = a.target) : (this.contentDocument_ = a.target, this.widgetIframe_ = null);
            this.messageEventListenerBound_ = this.messageEventListener_.bind(this);
            this.contentDocument_.defaultView.addEventListener("message", this.messageEventListenerBound_);
            this.rewriteObserver_ = new DocumentWriteObserver({
                document: this.contentDocument_
            });
            this.listenTo(this.rewriteObserver_, "rewrite", this.documentWriteEvent_)
        },
        remove: function() {
            this.contentDocument_.defaultView.removeEventListener("message", this.messageEventListenerBound_);
            this.rewriteObserver_.remove();
            WidgetMessageManager.__super__.remove.apply(this, arguments)
        },
        sendMessage: function(a, b, c, d) {
            var a = a.split(":"),
            e = a[0],
            f = a[1];
            c && !Array.isArray(c) && (c = [c]);
            c = c || _.pluck(this.getAllWidgetIframes_(), "contentWindow");
            c = d ? _.without(c, d) : c;
            c.forEach(function(a) {
                a.postMessage({
                    type: e,
                    method: f,
                    payload: b
                },
                "*")
            })
        },
        documentWriteEvent_: function() {
            this.contentDocument_.defaultView.addEventListener("message", this.messageEventListenerBound_)
        },
        messageEventListener_: function(a) {
            var b = a.data || {},
            c = b.type + ":" + b.method,
            d = b.payload;
            if (a = this.findWidgetIframe_(a.source)) {
                if (c === "size:set") c = "view:set",
                d = b.data;
                d ? this.trigger(c, a, d) : console.warn("No payload provided for event", c)
            }
        },
        findWidgetIframe_: function(a) {
            for (var b = this.getAllWidgetIframes_(), c = 0; c < b.length; c++) if (a === b[c].contentWindow) return b[c];
            return null
        },
        getAllWidgetIframes_: function() {
            if (this.widgetIframe_) return [this.widgetIframe_];
            var a = this.contentDocument_.querySelectorAll("iframe." + WidgetRewritePlugin.WIDGET_MARKER_CLASS);
            return Array.prototype.slice.call(a)
        }
    });
    window.WidgetReadAPI = BaseClass.extend({
        topics_: null,
        apiManager_: null,
        initialize: function(a) {
            WidgetReadAPI.__super__.initialize.apply(this, arguments);
            this.apiManager_ = a.manager;
            this.topics_ = {};
            this.listenTo(this.apiManager_, {
                "message:subscribe": this.subscribe_,
                "message:publish": this.publish_,
                "data:saveGlobal": this.saveGlobalData_,
                "view:set": this.resize_
            })
        },
        sendLoaded: function() {
            _.defer(function() {
                this.publish_(null, {
                    topic: WidgetReadAPI.LOAD_EVENT_TOPIC_,
                    message: {}
                })
            }.bind(this))
        },
        subscribe_: function(a, b) {
            var c = b.topic;
            c ? (c = c.toString(), this.topics_[c] || (this.topics_[c] = []), this.topics_[c].indexOf(a.contentWindow) >= 0 || this.topics_[c].push(a.contentWindow)) : console.warn("No topic provided for subscribe event ", b)
        },
        publish_: function(a, b) {
            var c = b.topic;
            c ? (c = c.toString(), this.topics_[c] && this.apiManager_.sendMessage("message:publish", {
                topic: c,
                message: b.message
            },
            this.topics_[c], a && a.contentWindow)) : console.warn("No topic provided for publish event ", b)
        },
        saveGlobalData_: function(a, b) {
            this.apiManager_.sendMessage("data:restoreGlobal", {
                storage: b.storage
            },
            null, a.contentWindow)
        },
        resize_: function(a, b) { ["width", "height"].forEach(function(c) {
                var d = b[c];
                d !== void 0 && (typeof d === "number" && (d += "px"), a.style[c] = d)
            },
            this)
        }
    });
    WidgetReadAPI.LOAD_EVENT_TOPIC_ = "__system_pageLoaded";
    window.WidgetStateTracker = BaseClass.extend({
        document_: null,
        mutationSummary_: null,
        iframeStates_: null,
        initialize: function(a) {
            WidgetStateTracker.__super__.initialize.apply(this, arguments);
            this.document_ = a.document;
            this.iframeStates_ = {};
            this.iframeLoadEventBound_ = this.iframeLoadEvent_.bind(this);
            this.iframeErrorEventBound_ = this.iframeErrorEvent_.bind(this);
            this.mutationSummary_ = new MutationSummary({
                rootNode: this.document_,
                queries: [{
                    element: "iframe." + WidgetRewritePlugin.WIDGET_MARKER_CLASS
                },
                {
                    element: "iframe." + WidgetRewritePlugin.WIDGET_MARKER_CLASS,
                    elementAttributes: "src"
                }],
                callback: this.documentMutationEvent_.bind(this)
            })
        },
        remove: function() {
            if (this.mutationSummary_) this.mutationSummary_.disconnect(),
            this.mutationSummary_ = null;
            this.getAllWidgetIframes_().forEach(function(a) {
                this.unwatchIframe_(a)
            },
            this);
            WidgetStateTracker.__super__.remove.apply(this, arguments)
        },
        documentMutationEvent_: function(a) {
            var b = a[0],
            a = a[1],
            c = b.added.concat(a.attributeChanged.src);
            c.length > 0 && this.reloadWidgets_(_.difference(this.getAllWidgetIframes_(), c));
            b.removed.forEach(function(a) {
                this.unwatchIframe_(a)
            },
            this);
            b.added.forEach(function(a) {
                this.watchIframe_(a)
            },
            this);
            a.attributeChanged.src.forEach(function(a) {
                this.watchIframe_(a)
            },
            this)
        },
        reloadWidgets_: function(a) {
            a.forEach(function(a) {
                this.watchIframe_(a);
                a.setAttribute("src", a.getAttribute("src"))
            },
            this)
        },
        watchIframe_: function(a) {
            a.addEventListener("load", this.iframeLoadEventBound_);
            a.addEventListener("error", this.iframeErrorEventBound_);
            if (a = XMLUtilities.getS9ID(a)) this.iframeStates_[a] = WidgetStateTracker.IFRAME_STATES_.LOADING
        },
        unwatchIframe_: function(a) {
            a.removeEventListener("load", this.iframeLoadEventBound_);
            a.removeEventListener("error", this.iframeErrorEventBound_); (a = XMLUtilities.getS9ID(a)) && delete this.iframeStates_[a]
        },
        iframeLoadEvent_: function(a) {
            a = a.target;
            this.unwatchIframe_(a);
            this.iframeStates_[XMLUtilities.getS9ID(a)] = WidgetStateTracker.IFRAME_STATES_.LOADED;
            this.maybeFireLoaded_()
        },
        iframeErrorEvent_: function(a) {
            a = a.target;
            this.unwatchIframe_(a);
            this.iframeStates_[XMLUtilities.getS9ID(a)] = WidgetStateTracker.IFRAME_STATES_.ERROR;
            this.maybeFireLoaded_()
        },
        maybeFireLoaded_: function() {
            Object.keys(this.iframeStates_).every(function(a) {
                a = this.iframeStates_[a];
                return a === WidgetStateTracker.IFRAME_STATES_.LOADED || a === WidgetStateTracker.IFRAME_STATES_.ERROR
            },
            this) && this.trigger("loaded")
        },
        getAllWidgetIframes_: function() {
            if (!this.document_) return [];
            var a = this.document_.querySelectorAll("iframe." + WidgetRewritePlugin.WIDGET_MARKER_CLASS);
            return Array.prototype.slice.call(a)
        }
    });
    WidgetStateTracker.IFRAME_STATES_ = {
        LOADING: "loading",
        ERROR: "error",
        LOADED: "loaded"
    };
    window.XMLBackboneCollection = Backbone.Collection.extend({
        xmlNode_: null,
        documentModel_: null,
        initialize: function(a, b) {
            b = b || {};
            b.cloneNode = typeof b.cloneNode !== "undefined" ? b.cloneNode: !0;
            this.setDocumentModel(b.documentModel);
            var c = app.getXMLTemplates();
            if (b.xmlNode && b.cloneNode) b.xmlNode = XMLUtilities.cloneNode(b.xmlNode);
            var d = this.getDocumentModel();
            this.xmlNode_ = b.xmlNode || c.newXML(this.constructor, a, d);
            c.setupCollectionAttributes(this, this.xmlNode_, d)
        },
        add: function(a, b) {
            this.xmlNode_ && (Array.isArray(a) || (a = a ? [a] : []), a.forEach(function(a) {
                if (a instanceof XMLBackboneModel === !1) throw Error("Models added to an XMLBackboneCollection must subclass XMLBackboneModel");
                app.getXMLTemplates().addToCollectionXML(a.getXMLNode({
                    raw: !0
                }), this.xmlNode_);
                this.getDocumentModel() && a.setDocumentModel(this.getDocumentModel())
            },
            this), XMLBackboneCollection.__super__.add.apply(this, arguments))
        },
        remove: function(a, b) {
            this.xmlNode_ && (Array.isArray(a) || (a = [a]), a.forEach(function(a) {
                a instanceof XMLBackboneModel !== !1 && app.getXMLTemplates().removeFromCollectionXML(a.getXMLNode({
                    raw: !0
                }))
            },
            this), XMLBackboneCollection.__super__.remove.apply(this, arguments))
        },
        reset: function(a, b) {
            this.remove(this.models, {
                silent: !0
            });
            XMLBackboneCollection.__super__.reset.apply(this, arguments)
        },
        getXMLNode: function(a) {
            a = a || {};
            return a.raw ? this.xmlNode_: app.getXMLTemplates().trimXML(this.xmlNode_)
        },
        setDocumentModel: function(a) {
            if (a) {
                this.documentModel_ = a;
                for (var b = 0; b < this.length; b++) this.at(b).setDocumentModel(a)
            }
        },
        getDocumentModel: function() {
            return this.documentModel_
        }
    });
    window.XMLBackboneModel = Backbone.Model.extend({
        xmlNode_: null,
        documentModel_: null,
        isConstructed_: !1,
        initialize: function(a, b) {
            b = b || {};
            b.cloneNode = typeof b.cloneNode !== "undefined" ? b.cloneNode: !0;
            this.setDocumentModel(b.documentModel);
            var c = app.getXMLTemplates();
            if (b.xmlNode && b.cloneNode) b.xmlNode = XMLUtilities.cloneNode(b.xmlNode);
            var d = this.getDocumentModel();
            this.xmlNode_ = b.xmlNode || c.newXML(this.constructor, this.attributes, d);
            this.isConstructed_ = !0
        },
        set: function(a, b, c) {
            var d;
            typeof a === "object" || !a ? (d = a, c = b) : (d = {},
            d[a] = b);
            c = c || {};
            if (!this.isConstructed_) return XMLBackboneModel.__super__.set.apply(this, arguments),
            this;
            c.validate = c.validate === void 0 ? !0 : c.validate;
            for (var e in d) if (d.hasOwnProperty(e)) try {
                var f = d[e],
                g = app.getXMLTemplates();
                g.getDefinition(this.xmlNode_, e) && g.setAttribute(e, f, this.xmlNode_, this.getDocumentModel());
                XMLBackboneModel.__super__.set.call(this, e, f, c)
            } catch(h) {
                console.error(h),
                c.error ? c.error(this, h) : this.trigger("invalid", h)
            }
            return this
        },
        validate: function(a) {
            var b = app.getXMLTemplates();
            try {
                for (var c in a) a.hasOwnProperty(c) && b.getDefinition(this.xmlNode_, c) && b.validateAttribute(c, a[c], this.xmlNode_)
            } catch(d) {
                return d
            }
        },
        getXMLNode: function(a) {
            a = a || {};
            return a.raw ? this.xmlNode_: app.getXMLTemplates().trimXML(this.xmlNode_)
        },
        setDocumentModel: function(a) {
            if (a) {
                this.documentModel_ = a;
                for (var b in this.attributes) if (this.attributes.hasOwnProperty(b)) {
                    var c = this.attributes[b]; (c instanceof XMLBackboneCollection || c instanceof XMLBackboneModel) && c.setDocumentModel(a)
                }
            }
        },
        getDocumentModel: function() {
            return this.documentModel_
        },
        clone: function() {
            var a = app.getXMLTemplates(),
            b = this.getXMLNode();
            return a.newModel(b)
        }
    });
    window.XMLTemplateParser = BaseClass.extend({
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window
        },
        parse: function(a) {
            var b = a.innerHTML.trim();
            if (!b) throw "Error parsing XML template: No contents given";
            var b = this.parseTemplateXML_(b),
            c = b.nodeName,
            a = this.parseModelInfo_(a, c);
            if (!a) return null;
            var d = this.parseAttributes_(b, c),
            e = this.isCollectionWithAttrs_(a, d);
            return {
                templateName: c,
                model: a.modelClass,
                collection: a.collectionClass,
                collectionWithAttrs: e,
                templateXML: b,
                attributes: d
            }
        },
        parseTemplateXML_: function(a) {
            var b = a,
            a = a.replace(/(<[^>\s]*)(\s*)/, '$1 xmlns="' + S9ML_NS + '"$2'),
            c;
            try {
                c = XMLUtilities.parseDocument('<?xml version="1.0"?>\n' + a, XMLUtilities.DOCUMENT_TYPE.S9ML)
            } catch(d) {
                throw "Error parsing XML template: " + d.toString() + ", template: " + b;
            }
            return c.documentElement
        },
        parseModelInfo_: function(a) {
            var b = a.dataset.model || null,
            a = a.dataset.collection || null;
            if (!b) return null;
            if (this.win_[b]) {
                if (a && !this.win_[a]) return null
            } else return null;
            return {
                modelClass: this.win_[b],
                collectionClass: a ? this.win_[a] : void 0
            }
        },
        parseAttributes_: function(a, b) {
            var c = [];
            a.xpathAll('((//@*)|(//text()))[contains(., "{{")]').forEach(function(a) {
                var e = a.nodeValue.match(XMLTemplateParser.EXPRESSIONS_.DEFINITION);
                e || (e = [a.nodeValue]);
                e.forEach(function(e) {
                    e = e.trim(); (e = this.parseAttribute_(a, e, b)) && c.push(e)
                },
                this)
            },
            this);
            return c
        },
        parseAttribute_: function(a, b, c) {
            if (b.indexOf("}}") === -1) throw "Invalid attribute definition for " + c + ": " + b;
            b = this.parseAttributeTokens_(b, c);
            if (!b) return null;
            a = this.parseAttributeXPath_(a, b.imports, b.orderMattersFor, b.showOnlyMembers, b.valueType);
            return {
                attrName: b.attrName,
                xpath: a.xpath,
                isRequired: b.isRequired,
                showOnlyMembers: b.showOnlyMembers,
                memberXPath: a.memberXPath,
                valueType: b.valueType,
                imports: b.imports,
                orderMattersFor: b.orderMattersFor,
                hideIfEmpty: b.hideIfEmpty
            }
        },
        parseAttributeTokens_: function(a, b) {
            var c = XMLTemplateParser.EXPRESSIONS_,
            d = a,
            a = a.replace(c.BRACES, ""),
            e,
            f,
            g = !1,
            h = "@string",
            i = !1,
            l = [],
            j = "Invalid attribute definition for " + b + ": " + d,
            o = a.match(c.ATTRIBUTE);
            if (!o.length || !a) throw j;
            if (o[0] === "@s9id") return null;
            d = o[0];
            if (/^@/.test(d)) throw j;
            for (var q = 1; q < o.length; q++) if (o[q] === "@required") g = !0;
            else if (o[q] === "@hideIfEmpty") i = !0;
            else if (XMLTemplates.VALID_TYPES.indexOf(o[q]) !== -1) h = o[q];
            else if (c.HAS_PARAMETERS.test(o[q])) {
                var m = o[q].match(c.ATTRIBUTE_COMPONENTS),
                p = m[1],
                m = m[2];
                p === "@import" ? (m = m.replace(c.SPACES, ""), l = m.split(/,/g)) : p === "@orderMattersFor" ? f = m: p === "@showOnlyMembers" && (e = m)
            } else throw j;
            return {
                attrName: d,
                isRequired: g,
                showOnlyMembers: e,
                valueType: h,
                imports: l,
                orderMattersFor: f,
                hideIfEmpty: i
            }
        },
        parseAttributeXPath_: function(a, b, c, d, e) {
            var f = "",
            g;
            if (b.length) {
                var h = []; (a = this.walkUpwards_(a, !0, c, e)) && (f = a + "/");
                b.forEach(function(a) {
                    h.push('local-name()="' + a + '"')
                },
                this);
                f += "s9ml:*[" + h.join(" or ") + "]";
                d && (g = "." + (a ? "/" + a: "") + "/s9ml:" + d)
            } else f = this.walkUpwards_(a, !1, c, e);
            return {
                xpath: f,
                memberXPath: g
            }
        },
        walkUpwards_: function(a, b, c, d) {
            var e = [];
            if (a.nodeType === Node.ATTRIBUTE_NODE) e.push("@" + a.nodeName),
            a = DOMUtils.getOwnerElement(a);
            else if (b) a = a.parentNode;
            else if (a.nodeType === Node.TEXT_NODE) a = a.parentNode,
            d !== "@html" ? e.push("text()") : (a.nodeType !== Node.ELEMENT_NODE || a.parentNode.nodeType !== Node.ELEMENT_NODE) && e.push(".");
            for (; a.nodeType === Node.ELEMENT_NODE && a.parentNode.nodeType === Node.ELEMENT_NODE;) b = "s9ml:" + a.nodeName,
            c === a.nodeName && (d = a.xpathAll("preceding-sibling::*").length + 1, b += "[" + d + "]"),
            e.push(b),
            a = a.parentNode;
            return e.reverse().join("/")
        },
        isCollectionWithAttrs_: function(a, b) {
            var c = b.filter(function(a) {
                return a.valueType !== "@collectionModel"
            });
            return !! a.collectionClass && c.length !== 0
        }
    });
    XMLTemplateParser.EXPRESSIONS_ = {
        ATTRIBUTE: /@*[\w-]+(\([^\)]*\))*/g,
        ATTRIBUTE_COMPONENTS: /^(@\w+)\(([^\)]+)\)$/,
        BRACES: /(^\{\{)|(\}\}$)/g,
        DEFINITION: /\{\{[^\}\}]*\}\}/g,
        HAS_PARAMETERS: /^@(import|orderMattersFor|showOnlyMembers)\([^\)]+\)$/,
        SPACES: /\s+/g
    };
    _.extend(Element.prototype, {
        getHTML: function() {
            return XMLUtilities.serializeElementContent(this, this)
        },
        setHTML: function(a) {
            for (a = XMLUtilities.parseFragment(a, XMLUtilities.DOCUMENT_TYPE.XML, this); this.hasChildNodes();) this.removeChild(this.firstChild);
            this.appendChild(this.ownerDocument.importNode(a, !0))
        }
    });
    window.XMLTemplates = BaseClass.extend({
        templates_: null,
        initialize: function(a) {
            a = a || {};
            this.templates_ = {};
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            this.parseTemplates_()
        },
        newModel: function(a, b) {
            b = b || {};
            b.cloneNode = typeof b.cloneNode !== "undefined" ? b.cloneNode: !0;
            if (a.nodeType === Node.DOCUMENT_NODE) a = a.documentElement;
            var c = this.templates_[a.nodeName];
            if (!c) return null;
            if (b.cloneNode) a = XMLUtilities.cloneNode(a),
            b.cloneNode = !1;
            c.collection || this.initShowOnlyMembersXML_(a, c);
            var d;
            d = c.collection ? this.initCollectionModelsFromXML_(a, c, b) : this.initAttributesFromXML_(a, c, b);
            var e = c.collection ? c.collection: c.model;
            b.xmlNode = a;
            e = new e(d, b);
            if (c.collection && c.collectionWithAttrs) b.cloneNode = !1,
            d = this.initAttributesFromXML_(a, c, b),
            e.collectionAttributes = new XMLBackboneModel(d, b);
            return e
        },
        newXML: function(a, b, c) {
            var d = this.getTemplateForClass_(a),
            a = this.cloneTemplateXML_(d, b);
            b && d.collection ? this.initXMLFromCollectionModels_(a, b, c) : b && this.initXMLFromAttributes_(a, b, c);
            b = XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.S9ML);
            a = b.adoptNode(a);
            b.appendChild(a);
            a = this.fillOutS9IDs_(a);
            return a = this.stripXMLDefinitions_(a)
        },
        setAttribute: function(a, b, c, d, e) { (typeof e !== "undefined" ? e: 1) && this.validateAttribute(a, b, c);
            var f = c.nodeName,
            e = this.getDefinition_(f, a);
            if (!e) throw "No XML template definition for " + f + " for the attribute " + a;
            a = c.xpath(e.xpath);
            if (!a && !e.imports.length) a = this.getTemplateForName_(f),
            a = this.createDataNodeFor_(c, e.xpath, a);
            else if (!a && e.imports && !b) return;
            e.valueType === "@html" ? a.setHTML(b) : e.valueType === "@collection" ? a = this.setCollectionAttribute_(b, c, a, e, d) : e.valueType !== "@collection" && e.imports.length ? a = this.setImportAttribute_(b, c, a, e, d) : a.nodeValue = b === null ? "": "" + b;
            this.hideIfEmpty_(e, a, b)
        },
        addToCollectionXML: function(a, b) {
            if (a.parentElement !== b) {
                if (b.nodeType === Node.DOCUMENT_NODE) b = b.documentElement;
                if (a.nodeType === Node.DOCUMENT_NODE) a = a.documentElement;
                var c = b.nodeName,
                d = this.templates_[c];
                if (!d) throw "No XML template definition for " + c;
                var e;
                d.attributes.forEach(function(a) {
                    a.valueType === "@collectionModel" && (e = a)
                });
                var c = b.ownerDocument.adoptNode(a),
                f = !1,
                d = this.cloneTemplateXML_(d, null, !0).xpath(e.xpath),
                g;
                d ? g = d.nextElementSibling: f = !0;
                g ? (g = b.xpath("//s9ml:" + g.tagName)) ? b.insertBefore(c, g) : f = !0 : f = !0;
                f && b.appendChild(c);
                this.stripNamespace_(c)
            }
        },
        removeFromCollectionXML: function(a) {
            if (a.nodeType === Node.DOCUMENT_NODE) a = a.documentElement;
            a.parentNode && a.parentNode.removeChild(a)
        },
        validateAttribute: function(a, b, c) {
            if (c.nodeType === Node.DOCUMENT_NODE) c = c.documentElement;
            var c = c.nodeName,
            d = this.getDefinition_(c, a);
            if (!d) throw "No XML template definition for " + c + " for the attribute " + a;
            if (d.isRequired) {
                var e = "The attribute " + a + " must have a value for <" + c + ">";
                if (b === null || b === void 0) throw e;
                else if (typeof b === "string" && !b.trim()) throw e;
            }
            if (d.valueType === "@number" && b && (d = parseFloat(b), isNaN(d))) throw "The attribute " + a + " for <" + c + "> must be a number. Value provided: " + b;
        },
        trimXML: function(a) {
            a = XMLUtilities.cloneNode(a);
            a = this.trimOptionalNodes_(a);
            a = this.trimHiddenCollections_(a);
            return a = this.trimHideIfEmpty_(a)
        },
        setupCollectionAttributes: function(a, b, c) {
            var d = this.getTemplateForClass_(a.constructor);
            if (d.collection && d.collectionWithAttrs) {
                var e = ObjectUtils.clone(a.collectionAttributes || {}),
                d = this.initAttributesFromXML_(b, d),
                d = _.extend(e, d);
                a.collectionAttributes = new XMLBackboneModel({},
                {
                    xmlNode: b,
                    documentModel: c,
                    cloneNode: !1
                });
                a.collectionAttributes.set(d)
            }
        },
        getDefinition: function(a, b) {
            return this.getDefinition_(a.nodeName, b)
        },
        getDefinition_: function(a, b) {
            var c = this.templates_[a];
            return ! c ? null: c.attributes.find(function(a) {
                return a.attrName === b
            }) || null
        },
        getTemplateForClass_: function(a) {
            var b, c;
            for (c in this.templates_) if (this.templates_.hasOwnProperty(c)) {
                var d = this.templates_[c];
                if (d.collection === a) {
                    b = d;
                    break
                } else if (!d.collection && d.model === a) {
                    b = d;
                    break
                }
            }
            if (!b) throw "No XML template to handle class given to getTemplateForClass_";
            return b
        },
        getTemplateForName_: function(a) {
            var b, c;
            for (c in this.templates_) if (this.templates_.hasOwnProperty(c)) {
                var d = this.templates_[c];
                if (d.templateName === a) {
                    b = d;
                    break
                }
            }
            if (!b) throw 'No XML template to handle "' + a + '"';
            return b
        },
        parseTemplates_: function() {
            this.doc_.querySelectorAll('script[type="text/xml"]').forEach(function(a) { (a = (new XMLTemplateParser({
                    window: this.win_
                })).parse(a)) && (this.templates_[a.templateName] = a)
            },
            this)
        },
        initAttributesFromXML_: function(a, b, c) {
            var d = {};
            b.attributes.forEach(function(e) {
                var g = null;
                if (! (b.collection && e.valueType === "@collectionModel")) {
                    var h = a.xpathAll(e.xpath),
                    h = h.length ? h[0] : null;
                    if (e.isRequired && h === null) throw "The property " + e.attrName + " is required but not present for <" + b.templateName + ">";
                    e.imports.length && h !== null ? (e.valueType === "@collection" && !e.isRequired && (this.markOptional_(h), this.collectionHasChildren_(h) || this.markInitiallyPresent_(h)), g = this.newModel(h, c)) : h !== null && (g = this.convertValueType_(h, e.valueType));
                    d[e.attrName] = g
                }
            },
            this);
            for (var e in d) d.hasOwnProperty(e) && this.validateAttribute(e, d[e], a);
            return d
        },
        initCollectionModelsFromXML_: function(a, b, c) {
            var d = !1,
            e = [];
            b.attributes.forEach(function(b) {
                if (b.valueType === "@collectionModel") {
                    d = !0;
                    var g = null,
                    h = a.xpathAll(b.xpath);
                    if (b.isRequired && !h.length) throw "Required XML not present for collection model " + b.attrName + ": " + b.xpath;
                    if (b.imports.length && h.length) for (b = 0; b < h.length; b++) g = this.newModel(h[b], c),
                    e.push(g)
                }
            },
            this);
            if (!d) throw "Backbone collections must an @collectionModel in its XML template definition";
            return e
        },
        initXMLFromAttributes_: function(a, b, c) {
            for (var d in b) b.hasOwnProperty(d) && this.setAttribute(d, b[d], a, c, !1)
        },
        initXMLFromCollectionModels_: function(a, b, c) {
            b.forEach(function(b) {
                this.addToCollectionXML(b.getXMLNode({
                    raw: !0
                }), a);
                c && b.setDocumentModel(c)
            },
            this)
        },
        convertValueType_: function(a, b) {
            var c = a.nodeValue;
            if (XMLTemplates.VALID_TYPES.indexOf(b) === -1) throw "Invalid XML template type given: " + b;
            if (b !== "@html" && c === "") return null;
            switch (b) {
            case "@string":
                return c;
            case "@number":
                if (c === "" || c === null) return c;
                c = parseFloat(c);
                if (isNaN(c)) throw "Number required, but invalid value provided: " + a.nodeValue;
                return c;
            case "@html":
                return a.getHTML() || null
            }
        },
        cloneTemplateXML_: function(a, b, c) {
            for (var c = typeof c !== "undefined" ? c: !1, d = XMLUtilities.cloneNode(a.templateXML), e = 0; e < a.attributes.length; e++) {
                var f = a.attributes[e];
                if ((f.valueType !== "@collectionModel" || c) && f.imports.length) {
                    var g = f.imports[0],
                    h = this.templates_[g];
                    if (!h) throw "Unknown template: " + g;
                    g = this.cloneTemplateXML_(h);
                    f.valueType !== "@collection" && f.valueType !== "@collectionModel" ? (f = d.xpath(f.xpath), g = d.ownerDocument.adoptNode(g), d.insertBefore(g, f)) : (f.valueType === "@collection" && !Array.isArray(b) && (h = b ? b[f.attrName] : [], (!h || !h.length) && this.markOptional_(g)), h = f.xpath.replace(/\/?[^\/]+$/, "") || ".", h = d.xpath(h), g = h.ownerDocument.adoptNode(g), f = "import(" + f.imports.join(",") + ")", this.replaceDefinitionWith_(h, g, f));
                    this.stripNamespace_(g)
                }
            }
            return d
        },
        fillOutS9IDs_: function(a) {
            a.xpathAll('((//@*)|(//text()))[contains(., "{{@s9id}}")]').forEach(function(a) {
                a.nodeValue = UUID()
            },
            this);
            return a
        },
        stripXMLDefinitions_: function(a) {
            for (var b = a.xpathAll('((//@*)|(//text()))[contains(., "{{")]'), c = 0; c < b.length; c++) {
                var d = b[c];
                d.nodeType === Node.ATTRIBUTE_NODE ? d.nodeValue = "": d.parentNode.removeChild(d)
            }
            return a
        },
        stripNamespace_: function(a) {
            for (var b = 0; b < a.attributes.length; b++) {
                var c = a.attributes[b].name;
                c === "xmlns" && a.removeAttribute(c)
            }
        },
        setCollectionAttribute_: function(a, b, c, d, e) {
            var f;
            f = a ? a.getXMLNode({
                raw: !0
            }) : this.stripXMLDefinitions_(this.cloneTemplateXML_(this.templates_[c.nodeName]));
            b.ownerDocument.adoptNode(f); (!a || !a.length) && !d.isRequired && this.markOptional_(f);
            d.showOnlyMembers && this.markHideCollection_(f);
            if (c) DOMUtils.replaceNode(c, f);
            else {
                c = d.xpath.replace(/\/?[^\/]+$/, "") || ".";
                c = b.xpath(c);
                if (!c) return;
                c.appendChild(f)
            }
            this.stripNamespace_(f);
            e && a && a.setDocumentModel(e);
            return f
        },
        setImportAttribute_: function(a, b, c, d, e) {
            var f;
            a ? f = a.getXMLNode({
                raw: !0
            }) : (f = this.stripXMLDefinitions_(this.cloneTemplateXML_(this.templates_[c.nodeName])), this.markImportPlaceholder_(f));
            f = b.ownerDocument.adoptNode(f);
            if (c) DOMUtils.replaceNode(c, f);
            else {
                c = d.xpath.replace(/\/?[^\/]+$/, "") || ".";
                c = b.xpath(c);
                if (!c) return;
                c.appendChild(f)
            }
            this.stripNamespace_(f);
            e && a && a.setDocumentModel(e);
            return f
        },
        collectionHasChildren_: function(a) {
            return a.xpathAll("./*").length !== 0
        },
        markOptional_: function(a) {
            a.setAttributeNS(XMLTEMPLATES_NS, "xmltemplates:optional-collection", !0)
        },
        markHideCollection_: function(a) {
            a.setAttributeNS(XMLTEMPLATES_NS, "xmltemplates:show-only-members", !0)
        },
        markHideIfEmpty_: function(a) {
            if (a.nodeType === Node.TEXT_NODE) a = a.parentNode;
            a.setAttributeNS(XMLTEMPLATES_NS, "xmltemplates:hide-if-empty", !0)
        },
        markImportPlaceholder_: function(a) {
            a.setAttributeNS(XMLTEMPLATES_NS, "xmltemplates:import-placeholder", !0)
        },
        markInitiallyPresent_: function(a) {
            a.setAttributeNS(XMLTEMPLATES_NS, "xmltemplates:retain-optional-collection", !0)
        },
        trimOptionalNodes_: function(a) {
            a.xpathAll("//*[@xmltemplates:optional-collection='true']").forEach(function(a) {
                var c = !!a.getAttributeNS(XMLTEMPLATES_NS, "retain-optional-collection"); ! this.collectionHasChildren_(a) && !c ? a.parentNode.removeChild(a) : (a.removeAttributeNS(XMLTEMPLATES_NS, "optional-collection"), a.removeAttributeNS(XMLTEMPLATES_NS, "retain-optional-collection"))
            },
            this);
            return a
        },
        trimHiddenCollections_: function(a) {
            a.xpathAll("//*[@xmltemplates:show-only-members='true']").forEach(function(a) {
                var c = DOMUtils.createChildFragment(a);
                DOMUtils.replaceNode(a, c)
            });
            return a
        },
        trimHideIfEmpty_: function(a) {
            a.xpathAll("//*[@xmltemplates:hide-if-empty]").forEach(function(a) {
                a.getAttributeNS(XMLTEMPLATES_NS, "import-placeholder") ? a.parentNode.removeChild(a) : a.getHTML() === "" && a.parentNode.removeChild(a);
                a.removeAttributeNS(XMLTEMPLATES_NS, "hide-if-empty");
                a.removeAttributeNS(XMLTEMPLATES_NS, "import-placeholder")
            });
            return a
        },
        initShowOnlyMembersXML_: function(a, b) {
            b.attributes.forEach(function(b) {
                if (b.showOnlyMembers) {
                    var d = a.xpathAll(b.memberXPath + "|" + b.member);
                    if (d.length) {
                        var e = [];
                        d.forEach(function(a) {
                            e.push(a);
                            for (a = a.nextSibling; a && a.nodeType === Node.TEXT_NODE;) e.push(a),
                            a = a.nextSibling
                        },
                        this);
                        var f = a.ownerDocument,
                        d = f.createElementNS(XMLTEMPLATES_NS, "collection-marker");
                        e[0].parentNode.insertBefore(d, e[0]);
                        b = f.createElementNS(S9ML_NS, b.imports[0]);
                        this.markHideCollection_(b);
                        for (f = 0; f < e.length; f++) e[f].parentNode.removeChild(e[f]),
                        b.appendChild(e[f]);
                        DOMUtils.replaceNode(d, b)
                    }
                }
            },
            this)
        },
        createDataNodeFor_: function(a, b, c) { / @ [a - zA - Z_0 - 9] + $ / .test(b) ? this.createDataNodeForXMLAttribute_(a, b, c) : this.createDataNodeForXMLElement_(a, b, c);
            return a.xpath(b)
        },
        createDataNodeForXMLAttribute_: function(a, b, c) {
            var d = b.match(/(.*?)\/?@([a-zA-Z_0-9]+)$/),
            b = d[1],
            d = d[2],
            e = b ? a.xpath(b) : a;
            e || (e = this.createDataNodeFor_(a, b, c));
            e.setAttribute(d, "")
        },
        createDataNodeForXMLElement_: function(a, b, c) {
            var d = this.cloneTemplateXML_(c, null, !0),
            c = b.match(/(.*?)\/?([a-zA-Z_0-9-:]+)$/)[1] || ".",
            e = XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.S9ML),
            d = e.adoptNode(d);
            e.appendChild(d);
            b = d.xpath(b);
            b.getAttribute("data-uuid") === "{{@s9id}}" && XMLUtilities.setS9ID(b, UUID());
            for (var b = this.stripXMLDefinitions_(b), d = b.previousElementSibling, f; d;) {
                e = "s9ml:" + d.nodeName;
                e = c + "/" + e;
                e = a.xpathAll(e);
                if (e = e.length ? e[e.length - 1] : null) {
                    f = e;
                    break
                }
                d = d.previousElementSibling
            }
            a.ownerDocument.adoptNode(b);
            f ? DOMUtils.insertSibling(b, "before", f.nextSibling) : (a = a.xpath(c), DOMUtils.insertSibling(b, "before", a.firstChild))
        },
        hideIfEmpty_: function(a, b, c) {
            if (a.hideIfEmpty) {
                var d = !1;
                if (a.valueType === "@html" && b.getHTML() === "") d = !0;
                else if (a.valueType === "@collection" && (!c || !c.length)) d = !0;
                else if (a.valueType !== "@html" && a.valueType !== "@collection" && (b.nodeValue === null || b.nodeValue === "")) d = !0;
                d && (b.nodeType === Node.ATTRIBUTE_NODE ? DOMUtils.getOwnerElement(b).removeAttribute(b.name) : this.markHideIfEmpty_(b))
            }
        },
        replaceDefinitionWith_: function(a, b, c) {
            if (a.childNodes.length) {
                for (var d, e = 0; e < a.childNodes.length; e++) if ((a.childNodes[e].nodeValue || "").indexOf(c) !== -1) {
                    d = a.childNodes[e];
                    break
                }
                if (d) {
                    if (d.nodeValue.match(/\}\}/g).length > 1) {
                        for (var e = d,
                        f = e.nodeValue,
                        g = f.indexOf("}}"); f.match(/\}\}/g).length > 1 && g + 2 < f.length;) e = e.splitText(g + 2),
                        f = e.nodeValue,
                        g = f.indexOf("}}");
                        for (; d;) {
                            if (d.nodeValue.indexOf(c) !== -1) break;
                            d = d.nextSibling
                        }
                    }
                    a.replaceChild(b, d)
                } else console.error("Programming error: unable to find XML text node with " + c)
            } else a.appendChild(b)
        }
    });
    XMLTemplates.VALID_TYPES = ["@string", "@number", "@html", "@collectionModel", "@collection"];
    window.S9ML_NS = "http://www.standardnine.com/s9ml";
    window.XHTML_NS = "http://www.w3.org/1999/xhtml";
    window.CONFIG_NS = "http://www.standardnine.com/config";
    window.AMAZON_XML_NS = "http://s3.amazonaws.com/doc/2006-03-01/";
    window.SVG_NS = "http://www.w3.org/2000/svg";
    window.MATHML_NS = "http://www.w3.org/1998/Math/MathML";
    window.XLINK_NS = "http://www.w3.org/1999/xlink";
    window.EPUB_NS = "http://www.idpf.org/2007/ops";
    window.XLINK_NS = "http://www.w3.org/1999/xlink";
    window.XMLNS_NS = "http://www.w3.org/2000/xmlns/";
    window.XML_NS = "http://www.w3.org/XML/1998/namespace";
    window.SSML_NS = "http://www.w3.org/2001/10/synthesis";
    window.XMLEVENTS_NS = "http://www.w3.org/2001/xml-events";
    window.XMLTEMPLATES_NS = "http://www.standardnine.com/xmltemplates";
    window.XMLUtilities = {
        setupXPathMethods: function(a) {
            a.Node.prototype.xpathAll = function(a) {
                for (var c = new XPathEvaluator,
                d = function() {
                    return function(a) {
                        return {
                            s9ml: S9ML_NS,
                            xhtml: XHTML_NS,
                            xmltemplates: XMLTEMPLATES_NS,
                            config: CONFIG_NS,
                            axml: AMAZON_XML_NS,
                            epub: EPUB_NS,
                            math: MATHML_NS,
                            ssml: SSML_NS,
                            svg: SVG_NS,
                            xmlns: XMLNS_NS,
                            xml: XML_NS,
                            xlink: XLINK_NS
                        } [a] || null
                    }
                } (), a = c.evaluate(a, this, d, XPathResult.ANY_TYPE, null), c = [], d = a.iterateNext(); d;) c.push(d),
                d = a.iterateNext();
                return c
            };
            a.Node.prototype.xpath = function(a) {
                return this.xpathAll(a)[0]
            }
        },
        validateXML: function(a) {
            try {
                XMLUtilities.parseDocument(a, XMLUtilities.DOCUMENT_TYPE.XML)
            } catch(b) {
                return XMLUtilities.prettifyValidationError(b)
            }
        },
        getXMLParseError: function(a) {
            return (a = a.xpath("//xhtml:parsererror")) ? (a = a.xpath(".//xhtml:div").innerText.replace("\n", ""), a = XMLUtilities.getUserFriendlyError(a)) : !1
        },
        getUserFriendlyError: function(a) {
            var b = a.match(/([^:]*: )(.*)/);
            if (b) {
                var c = XMLUtilities.PARSE_ERROR_LOOKUP_[b[2]];
                if (c) return b[1] + c
            }
            return a
        },
        parseValidationError: function(a) {
            var b = a.toString(),
            c = b.match(/line (\d+)/),
            a = c && c.length > 1 ? parseInt(c[1], 10) - 1 : null,
            c = (c = b.match(/column (\d+)/)) && c.length > 1 ? parseInt(c[1], 10) - 1 : null,
            b = b.replace(/error[^\:]*:\s*/, "");
            return {
                line: a,
                character: c,
                message: b
            }
        },
        prettifyValidationError: function(a) {
            if (a) {
                var a = XMLUtilities.parseValidationError(a),
                b = "";
                typeof a.line === "number" && (b += " line " + a.line);
                typeof a.character === "number" && (b += " character " + a.character);
                a = a.message;
                b && (a += " at" + b);
                return a
            }
        },
        getInnerXHTML: function(a) {
            if (a.childNodes.length === 0) return "";
            for (var b = XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.XHTML), b = b.appendChild(b.createElementNS(XHTML_NS, "root")), c = 0; c < a.childNodes.length; c++) b.appendChild(a.childNodes[c].cloneNode(!0));
            return XMLUtilities.serializeElementContent(b, a)
        },
        getNodeByS9ID: function(a, b) {
            return a.xpath("//*[@data-uuid='" + b + "']") || a.xpath("//*[@id='" + b + "']") || null
        },
        isDuplicateS9ID: function(a, b) {
            return a.xpathAll("//*[@data-uuid='" + b + "']|//*[@id='" + b + "']").length > 1
        },
        getS9ID: function(a) {
            return a ? a.nodeType !== Node.ELEMENT_NODE ? null: a.getAttribute("data-uuid") ? a.getAttribute("data-uuid") : a.getAttribute("id") && UUID.isUUID(a.getAttribute("id")) ? a.getAttribute("id") : null: null
        },
        setS9ID: function(a, b) {
            a && a.setAttribute("data-uuid", b)
        },
        getS9IDFromString: function(a) {
            if (!a) return null;
            var b = a.match(/\sdata-uuid\s*=\s*(['"])([\s\S]*?)\1/);
            return b && b[2] ? b[2] : (a = a.match(/\sid\s*=\s*(['"])([\s\S]*?)\1/)) && UUID.isUUID(a[2]) ? a[2] : null
        },
        getParentWithS9ID: function(a) {
            for (; a && (a.nodeType !== Node.ELEMENT_NODE || !XMLUtilities.getS9ID(a));) a = a.parentNode;
            return a || null
        },
        modifyS9IDs: function(a, b) {
            var c = /\sid=(["'])(.*?)\1/,
            d = /\sdata-uuid=(["'])(.*?)\1/;
            return a.replace(/<([a-zA-Z0-9]+)(?:(\s[\s\S]*?))?(\/?>)/g,
            function(a, f, g, h) {
                var g = g || "",
                i = g.match(c),
                l = i && i[2],
                j = (i = g.match(d)) && i[2];
                return (l = b(f.toLowerCase(), l, j)) ? (g = i ? g.replace(d, ' data-uuid="' + l + '"') : g.replace(/(\s*)$/, ' data-uuid="' + l + '"$1'), "<" + f + g + h) : a
            }.bind(this))
        },
        cloneNode: function(a) {
            var a = a.nodeType === Node.DOCUMENT_NODE ? a.documentElement: a,
            b = a.cloneNode(!0),
            a = a.ownerDocument.implementation.createDocument(S9ML_NS, null, null),
            b = a.adoptNode(b);
            a.appendChild(b);
            return b
        },
        addProcessingInstruction: function(a) {
            return XMLUtilities.DEFAULT_XML_DECLARATION_ + XMLUtilities.stripXMLProlog(a || "")
        },
        stripXMLProlog: function(a) {
            return a.replace(XMLUtilities.PROLOG_REGEX_, "")
        },
        setHTML5Doctype: function(a) {
            var b = a.implementation.createDocumentType("html", "", "");
            a.doctype ? a.doctype.isEqualNode(b) || a.replaceChild(b, a.doctype) : a.insertBefore(b, a.firstChild)
        },
        getDocumentType: function(a) {
            if (a.toString() === "[object HTMLDocument]") return XMLUtilities.DOCUMENT_TYPE.HTML;
            else if (a.createElement("div").namespaceURI === XHTML_NS) return XMLUtilities.DOCUMENT_TYPE.XHTML;
            else {
                var b = Object.keys(XMLUtilities.DOCUMENT_TYPE_NAMESPACE_).filter(function(a) {
                    return [XMLUtilities.DOCUMENT_TYPE.HTML, XMLUtilities.DOCUMENT_TYPE.XHTML].indexOf(a) === -1
                },
                this),
                c = a.documentElement && a.documentElement.namespaceURI;
                return b.find(function(a) {
                    return XMLUtilities.DOCUMENT_TYPE_NAMESPACE_[a] === c
                },
                this) || XMLUtilities.DOCUMENT_TYPE.XML
            }
        },
        createDocument: function(a) {
            for (a = a === XMLUtilities.DOCUMENT_TYPE.HTML ? XMLUtilities.parseDocument("<html></html>", a) : XMLUtilities.parseDocument(XMLUtilities.DEFAULT_XML_DECLARATION_ + "<root></root>", a); a.firstChild;) a.removeChild(a.firstChild);
            return a
        },
        parseDocument: function(a, b, c) {
            c = c || document;
            a = XMLUtilities.stripXMLProlog(a);
            if ((b === XMLUtilities.DOCUMENT_TYPE.HTML || b === XMLUtilities.DOCUMENT_TYPE.XHTML) && !/^\s*<!DOCTYPE[^>]*>/.test(a)) a = "<!DOCTYPE html>\n" + a;
            b === XMLUtilities.DOCUMENT_TYPE.HTML ? (b = c.implementation.createHTMLDocument(""), b.open(), b.write(a), b.close(), !/<head[\s>]/.test(a) && !b.head.hasChildNodes() && b.head.parentElement.removeChild(b.head), !/<body[\s>]/.test(a) && !b.body.hasChildNodes() && b.body.parentElement.removeChild(b.body)) : (b !== XMLUtilities.DOCUMENT_TYPE.XHTML && (a = XMLUtilities.addProcessingInstruction(a)), b = XMLUtilities.parseFromString_(a, XMLUtilities.DOCUMENT_TYPE_MIME_[b]));
            return b
        },
        parseFragment: function(a, b, c) {
            a = a || "";
            c = c || null;
            if (b === XMLUtilities.DOCUMENT_TYPE.HTML) {
                var c = /<html[\s>]/.test(a),
                d = /<head[\s>]/.test(a),
                e = /<body[\s>]/.test(a);
                c ? (a = XMLUtilities.parseDocument(a, b), a.removeChild(a.doctype)) : a = d || e ? XMLUtilities.parseDocument("<html>" + a + "</html>", b).documentElement: XMLUtilities.parseDocument("<html><body>" + a + "</body></html>", b).body
            } else {
                d = "";
                if (c) var f = XMLUtilities.getContextNamespaces_(c),
                d = Object.keys(f).reduce(function(a, b) {
                    var c = b ? "xmlns:" + b: "xmlns",
                    d = StringUtils.escapeXML(f[b]);
                    return a + " " + c + '="' + d + '"'
                },
                "");
                a = XMLUtilities.DEFAULT_XML_DECLARATION_ + "<root" + d + ">" + a + "</root>";
                a = XMLUtilities.parseDocument(a, b).documentElement
            }
            for (b = (a.ownerDocument || a).createDocumentFragment(); a.firstChild;) b.appendChild(a.firstChild);
            return b
        },
        serializeDocument: function(a) {
            var b = XMLUtilities.createDocument(XMLUtilities.getDocumentType(a));
            XMLUtilities.cloneDocumentChildren(a, b);
            a = XMLUtilities.serializeToString_(b);
            b = XMLUtilities.isHTMLDocument_(b);
            a = a.replace(/^\s*<\?xml\s[^>]*>/, b ? "": "$&\n");
            return a = a.replace(/<!DOCTYPE[^>]*>/, "$&\n")
        },
        serializeFragment: function(a, b) {
            return XMLUtilities.serializeWithContext_(a.cloneNode(!0), b)
        },
        serializeElement: function(a, b) {
            return XMLUtilities.serializeWithContext_(a.cloneNode(!0), b)
        },
        serializeElementContent: function(a, b) {
            var c = a.ownerDocument.createDocumentFragment();
            a.childNodes.forEach(function(a) {
                c.appendChild(a.cloneNode(!0))
            },
            this);
            return XMLUtilities.serializeWithContext_(c, b)
        },
        cloneDocumentChildren: function(a, b) {
            Array.prototype.slice.call(a.childNodes).forEach(function(a) {
                a = a.nodeType === Node.DOCUMENT_TYPE_NODE ? Hacks.cloneDocumentType(b, a) : a.cloneNode(!0);
                b.appendChild(a)
            },
            this)
        },
        getNamespaceForPrefixInContent: function(a) {
            return XMLUtilities.PREFIX_TO_NAMESPACE_[a] || null
        },
        getPrefixForNamespaceInContent: function(a) {
            return XMLUtilities.NAMESPACE_TO_PREFIX_[a] || null
        },
        isAllowedPrefixInContent: function(a) {
            return a === XMLUtilities.getPrefixForNamespaceInContent(EPUB_NS) || a === XMLUtilities.getPrefixForNamespaceInContent(SSML_NS) || a === XMLUtilities.getPrefixForNamespaceInContent(XLINK_NS) || a === XMLUtilities.getPrefixForNamespaceInContent(XML_NS) || a === XMLUtilities.getPrefixForNamespaceInContent(XMLEVENTS_NS)
        },
        serializeWithContext_: function(a, b) {
            var c = b ? XMLUtilities.getContextNamespaces_(b) : {},
            d = a.ownerDocument.createElementNS(c[""] || null, "root");
            d.appendChild(a);
            XMLUtilities.applyNamespaces_(c, d);
            return ! d.hasChildNodes() ? "": XMLUtilities.serializeToString_(d).replace(/^<[^>]*>([\s\S]*)<\/[^>]*>$/, "$1")
        },
        serializeToString_: function(a) {
            XMLUtilities.isHTMLDocument_(a.ownerDocument || a) && XMLUtilities.expandHTMLSelfClosing_(a);
            return (new XMLSerializer).serializeToString(a)
        },
        parseFromString_: function(a, b) {
            var c = Hacks.parseDocumentFromString(a, b),
            d = XMLUtilities.getXMLParseError(c);
            if (d) throw d;
            return c
        },
        expandHTMLSelfClosing_: function(a) { (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? a.childNodes: [a]).forEach(function(a) {
                a.xpathAll("descendant-or-self::*[not(node())]").forEach(function(a) {
                    a.namespaceURI !== XHTML_NS && a.appendChild(a.ownerDocument.createTextNode(""))
                })
            })
        },
        getContextNamespaces_: function(a) {
            for (var b = {}; a;) {
                if (!b.hasOwnProperty(a.prefix || "")) b[a.prefix || ""] = a.namespaceURI;
                Array.prototype.forEach.call(a.attributes,
                function(a) {
                    if (a.prefix === "xmlns" && !b.hasOwnProperty(a.localName)) b[a.localName] = a.value;
                    else if (!a.prefix && a.localName === "xmlns" && !b.hasOwnProperty("")) b[""] = a.value;
                    else if (a.prefix && a.prefix !== "xmlns" && !b.hasOwnProperty(a.prefix) && a.namespaceURI) b[a.prefix] = a.namespaceURI
                });
                a = a.parentElement
            }
            return b
        },
        applyNamespaces_: function(a, b) {
            Object.keys(a).forEach(function(c) {
                b.setAttributeNS(XMLNS_NS, c ? "xmlns:" + c: "xmlns", a[c])
            },
            this)
        },
        isHTMLDocument_: function(a) {
            a = XMLUtilities.getDocumentType(a);
            return a === XMLUtilities.DOCUMENT_TYPE.HTML || a === XMLUtilities.DOCUMENT_TYPE.XHTML
        }
    };
    XMLUtilities.PARSE_ERROR_LOOKUP_ = {
        "EntityRef: expecting ';'": "You need to use XHTML entities e.g., '&amp;' instead of '&'.",
        "xmlParseEntityRef: no name": "You need to use XHTML entities e.g., '&amp;' instead of '&'."
    };
    XMLUtilities.DOCUMENT_TYPE = {
        HTML: "html",
        XHTML: "xhtml",
        SVG: "svg",
        MATHML: "mathml",
        S9ML: "s9ml",
        XML: "xml"
    };
    XMLUtilities.DOCUMENT_TYPE_MIME_ = {
        html: "text/html",
        xhtml: "application/xhtml+xml",
        svg: "image/svg+xml",
        mathml: "text/xml",
        s9ml: "text/xml",
        xml: "text/xml"
    };
    XMLUtilities.DOCUMENT_TYPE_NAMESPACE_ = {
        html: XHTML_NS,
        xhtml: XHTML_NS,
        svg: SVG_NS,
        mathml: MATHML_NS,
        s9ml: S9ML_NS,
        xml: null
    };
    XMLUtilities.DEFAULT_XML_DECLARATION_ = '<?xml version="1.0" encoding="UTF-8"?>\n';
    XMLUtilities.PROLOG_REGEX_ = /^\s*<\?xml\s[^>]*\?>\s*/;
    XMLUtilities.PREFIX_TO_NAMESPACE_ = {
        epub: EPUB_NS,
        ssml: SSML_NS,
        xlink: XLINK_NS,
        xml: XML_NS,
        ev: XMLEVENTS_NS
    };
    XMLUtilities.NAMESPACE_TO_PREFIX_ = {};
    XMLUtilities.NAMESPACE_TO_PREFIX_[EPUB_NS] = "epub";
    XMLUtilities.NAMESPACE_TO_PREFIX_[SSML_NS] = "ssml";
    XMLUtilities.NAMESPACE_TO_PREFIX_[XLINK_NS] = "xlink";
    XMLUtilities.NAMESPACE_TO_PREFIX_[XML_NS] = "xml";
    XMLUtilities.NAMESPACE_TO_PREFIX_[XMLEVENTS_NS] = "ev";
    window.DOMWatcher = BaseClass.extend({
        enable: function() {},
        disable: function() {},
        updateTarget: function() {},
        stopWatchingChanges: function() {},
        startWatchingChanges: function() {}
    });
    window.Flushable = Backbone.View.extend({
        flush: function() {}
    });
    window.PatternInsertionTransformer = BaseClass.extend({
        canTransform: function() {},
        transform: function() {}
    });
    window.Proofable = Backbone.View.extend({
        getWidth: function() {},
        setWidth: function() {},
        getFontSize: function() {},
        setFontSize: function() {},
        getSelection: function() {},
        getContentDocument: function() {},
        isLoaded: function() {},
        getScalableImage: function() {}
    });
    window.ReaderDisplayable = Backbone.Model.extend({
        defaults: {
            content: null,
            contentMimeType: null,
            editing: !1
        },
        url: function() {}
    });
    window.WidthTogglable = Backbone.View.extend({
        getWidth: function() {},
        getFontSize: function() {},
        setWidth: function() {},
        setFontSize: function() {}
    });
    window.Zoomable = Backbone.View.extend({
        getZoom: function() {},
        setZoom: function() {}
    });
    window.APICollection = Backbone.Collection.extend({
        loaded_: !1,
        request_: null,
        moreResults_: null,
        pageNext_: 0,
        pollingEnabled_: !1,
        pollTimeoutID_: null,
        pollInterval_: null,
        initialize: function(a, b) {
            b = b || {};
            this.pollingEnabled_ = !!b.enablePolling;
            this.pollInterval_ = b.pollInterval || APICollection.POLL_INTERVAL_;
            this.win_ = b.window || window
        },
        startPolling: function() {
            this.pollingEnabled_ = !0;
            this.isLoaded() && this.schedulePoll_()
        },
        stopPolling: function() {
            this.pollingEnabled_ = !1;
            this.abort();
            if (this.pollTimeoutID_) this.win_.clearTimeout(this.pollTimeoutID_),
            this.pollTimeoutID_ = null
        },
        isLoaded: function() {
            return this.loaded_
        },
        setLoaded: function() {
            if (!this.loaded_) this.loaded_ = !0,
            this.trigger("loaded", this)
        },
        abort: function() {
            if (this.request_) this.request_.abort(),
            this.request_ = null
        },
        url: function() {
            throw Error("Programming Error: Must override url in APICollection subclass");
        },
        fetch: function(a) {
            a = a || {};
            this.loaded_ = !1;
            var b = a.success;
            a.success = function(a, c, f) {
                this.loaded_ = !0;
                f.paging ? (this.moreResults_ = f.paging.moreResults, this.pageNext_ = f.paging.pageNext) : (this.moreResults_ = !1, this.pageNext_ = null);
                b && b.apply(null, arguments);
                this.trigger("loaded", this)
            }.bind(this);
            var c = a.complete;
            a.complete = function() {
                a.preventPolling || this.schedulePoll_();
                c && c()
            }.bind(this);
            return APICollection.__super__.fetch.call(this, a)
        },
        save: function(a) {
            var b = this.models.length,
            c = [],
            d = [],
            e = function(e) {
                c.push(e);
                b -= 1;
                b || a(c, d)
            },
            f = function(e) {
                d.push(e);
                b -= 1;
                b || a(c, d)
            };
            this.models.forEach(function(a) {
                a.save(null, {
                    success: e,
                    error: f
                })
            })
        },
        hasMore: function() {
            return !! this.moreResults_
        },
        fetchMore: function(a) {
            this.hasMore() && (a = _.extend({
                count: APICollection.FETCH_COUNT_
            },
            a, {
                remove: !1,
                pageStart: this.pageNext_,
                preventPolling: !0
            }), this.fetch(a))
        },
        fetchAll: function(a) {
            a = a || {};
            this.moreResults_ = !0;
            var b = a.success;
            a.success = function() {
                this.hasMore() ? this.fetchMore(a) : b && b.apply(null, arguments)
            }.bind(this);
            this.fetchMore(a)
        },
        sync: function(a, b, c) {
            this.abort();
            var d = c.complete;
            c.complete = function() {
                this.request_ = null;
                d && d()
            }.bind(this);
            return this.request_ = HabitatRequest.sync(a, b, c)
        },
        parse: function(a) {
            Array.isArray(a) || (a = []);
            return a
        },
        schedulePoll_: function() {
            if (this.pollingEnabled_ && !this.pollTimeoutID_ && !this.request_) this.pollTimeoutID_ = this.win_.setTimeout(function() {
                this.pollTimeoutID_ = null;
                this.fetch()
            }.bind(this), this.pollInterval_)
        }
    });
    APICollection.FETCH_COUNT_ = 500;
    APICollection.POLL_INTERVAL_ = 3E4;
    window.APIModel = Backbone.Model.extend({
        loaded_: !1,
        request_: null,
        defaults: null,
        isLoaded: function() {
            return this.loaded_
        },
        abort: function() {
            if (this.request_) this.request_.abort(),
            this.request_ = null
        },
        url: function() {
            throw Error("Programming Error: Must override url in APIModel subclass.");
        },
        fetch: function(a) {
            a = a || {};
            this.loaded_ = !1;
            var b = a.success;
            a.success = function(a, c, f) {
                this.loaded_ = !0;
                b && b.apply(null, arguments);
                this.trigger("loaded", this)
            }.bind(this);
            var c = a.error;
            a.error = function(a, b, f) {
                this.loaded_ = !0;
                c && c.apply(null, arguments);
                this.trigger("loaded", this)
            }.bind(this);
            return APIModel.__super__.fetch.call(this, a)
        },
        sync: function(a, b, c) {
            this.abort();
            var d = c.complete;
            c.complete = function() {
                this.request_ = null;
                d && d()
            }.bind(this);
            return this.request_ = HabitatRequest.sync(a, b, c)
        },
        toJSON: function(a) {
            var a = a || {},
            a = a.saveAttrs || Object.keys(this.defaults),
            b = APIModel.__super__.toJSON.call(this);
            return _.pick(b, a)
        },
        parse: function(a) {
            var a = a || {},
            b = Object.keys(this.defaults);
            return _.pick(a, b)
        }
    });
    window.AssetCollection = APICollection.extend({
        getDisplayName: function() {
            throw Error("Programming Error: Must override getDisplayName in AssetCollection subclass");
        },
        getSupportedTypes: function() {
            return null
        }
    });
    window.AssetModel = APIModel.extend({
        defaults: {
            id: null,
            size: 0,
            progress: 0,
            status: "new",
            lastModifiedTimestamp: 0,
            lastAuthor: null,
            data: null
        },
        onProgress_: function(a) {
            a.lengthComputable && this.set("progress", a.loaded / a.total * AssetModel.MAX_PROGRESS)
        },
        isSaved: function() {
            return this.get("progress") === AssetModel.MAX_PROGRESS
        },
        isPending: function() {
            if (this.isSaved()) return ! 1;
            var a = this.get("status"),
            b = this.get("progress");
            return a === AssetModel.STATUS.COMPLETED ? !1 : b === AssetModel.MAX_PROGRESS ? !1 : a === AssetModel.STATUS.UPLOADING || a === AssetModel.STATUS.ENCODING || b < AssetModel.MAX_PROGRESS
        },
        getName: function() {
            throw Error("Programming Error: Must override getName in AssetModel subclass");
        },
        getThumbnailURL: function() {
            throw Error("Programming Error: Must override getThumbnailURL in AssetModel subclass");
        },
        ready: function() {
            return Q.promise(function(a, b, c) {
                var d = function(a, b) {
                    c(b / AssetModel.MAX_PROGRESS)
                },
                e = function(c, g) {
                    g === AssetModel.STATUS.COMPLETED ? (this.off("change:status", e), this.off("change:progress", d), a()) : g === AssetModel.STATUS.FAILED && (this.off("change:status", e), this.off("change:progress", d), b())
                }.bind(this);
                this.on("change:status", e);
                this.on("change:progress", d);
                d(this, this.get("progress"));
                e(this, this.get("status"))
            }.bind(this))
        }
    });
    AssetModel.MAX_PROGRESS = 100;
    AssetModel.STATUS = {
        NEW: "new",
        UPLOADING: "uploading",
        ENCODING: "encoding",
        COMPLETED: "completed",
        FAILED: "failed"
    };
    window.ImageAssetModel = AssetModel.extend({
        defaults: _.extend({},
        AssetModel.prototype.defaults, {
            filePath: null,
            revision: null
        }),
        initialize: function(a, b) {
            var b = b || {},
            c = b.file;
            if (c) {
                var d = RepositoryLayout.IMG_DIRECTORY + "/" + (b.directory ? b.directory + "/": "") + StringUtils.normalizeFilename(c.name);
                this.set({
                    size: c.size,
                    data: c,
                    filePath: d,
                    lastAuthor: app.getCurrentUser().get("uid"),
                    revision: app.getProjectModel().get("revision")
                })
            }
            ImageAssetModel.__super__.initialize.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/files/{shortName}/trunk/head/{+path}", {
                shortName: app.getProjectModel().get("shortName"),
                path: this.get("filePath")
            })
        },
        save: function(a, b) {
            b = b || {};
            this.set("status", AssetModel.STATUS.UPLOADING);
            var c = b.success,
            d;
            b.success = function(a, b, e) {
                a.set("status", AssetModel.STATUS.COMPLETED);
                var i = parseInt(d.xhr.getResponseHeader("X-Subversion-Revision"), 10);
                i && (a.set("revision", i), app.getProjectModel().setRevision(i));
                c && c.apply(null, arguments)
            };
            var e = b.error;
            b.error = function(a, b, c) {
                a.set("status", AssetModel.STATUS.FAILED);
                e && e.apply(null, arguments)
            };
            b.headers = {
                "X-Subversion-Revision": this.get("revision")
            };
            b.data = this.get("data");
            b.onProgress = this.onProgress_.bind(this);
            return d = ImageAssetModel.__super__.save.call(this, a, b)
        },
        parse: function(a, b) {
            var c = ImageAssetModel.__super__.parse.call(this, a, b);
            if (b.status && b.status.statusCode === HabitatRequest.STATUS_CODES.CREATED) return c;
            c.lastModifiedTimestamp *= 1E3;
            c.progress = AssetModel.MAX_PROGRESS;
            c.status = AssetModel.STATUS.COMPLETED;
            var d = a.path.replace(/^\/trunk\//, "");
            c.id = d;
            c.filePath = d;
            return c
        },
        relativePath: function(a) {
            a = a.replace(ImageAssetModel.FILENAME_, "");
            if (a === "/") return this.get("filePath");
            for (var b = this.get("filePath").split("/"), a = a.replace(ImageAssetModel.SURROUNDING_SLASHES_, "").split("/"), c = [], d = 0, e = 0; b[d] === a[d];) d++;
            for (e = d; e < a.length; e++) c.push("..");
            for (e = d; e < b.length; e++) c.push(b[e]);
            return c.join("/")
        },
        getName: function() {
            return this.get("filePath").replace(/img\//, "")
        },
        getThumbnailURL: function() {
            return URLUtils.getImageURL(this.get("filePath"), app.getProjectModel(), {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_MEDIUM,
                revision: this.get("revision")
            })
        }
    });
    ImageAssetModel.FILENAME_ = /[^\/]+\..+$/;
    ImageAssetModel.SURROUNDING_SLASHES_ = /^\/|\/$/g;
    window.CopiedImageAssetModel = ImageAssetModel.extend({
        defaults: _.extend({},
        ImageAssetModel.prototype.defaults, {
            remoteURL: null
        }),
        copyComplete_: !1,
        pendingSave_: null,
        initialize: function() {
            this.set({
                revision: app.getProjectModel().get("revision")
            });
            this.on("change:remoteURL", this.copyRemoteImage_, this);
            this.get("remoteURL") && this.copyRemoteImage_()
        },
        save: function(a, b) {
            if (this.copyComplete_) return CopiedImageAssetModel.__super__.save.call(this, a, b);
            else this.pendingSave_ = this.save.bind(this, a, b)
        },
        copyRemoteImage_: function() {
            this.copyComplete_ = !1;
            this.copyReq_ && this.copyReq_.abort();
            var a = this.get("remoteURL");
            this.get("remoteURL") !== VideoAssetModel.getDefaultPosterLocation() && (a += "&breakCacheForCORS=true");
            this.copyReq_ = new XMLHttpRequest;
            this.copyReq_.open("GET", a, !0);
            this.copyReq_.responseType = "blob";
            this.copyReq_.onload = function() {
                this.copyReq_.status >= 200 && this.copyReq_.status < 300 ? (this.set("data", this.copyReq_.response), this.copyComplete_ = !0, this.executePendingSave_()) : app.getMessageView().error("Poster frame could not be changed; please try again", MessageView.DEFAULT_DISPLAY_TIME)
            }.bind(this);
            this.copyReq_.send()
        },
        executePendingSave_: function() {
            if (this.pendingSave_) this.pendingSave_(),
            this.pendingSave_ = null
        }
    });
    window.ImageAssetCollection = AssetCollection.extend({
        model: ImageAssetModel,
        project_: null,
        initialize: function(a, b) {
            b = b || {};
            this.project_ = b.project || app.getProjectModel();
            ImageAssetCollection.__super__.initialize.call(this, a, b)
        },
        url: function(a, b) {
            var c = this.project_.get("shortName");
            return ! c ? null: URLUtils.expand("{+reposHost}/repoentries/sn-{shortName}{+path}", {
                shortName: c,
                path: ImageAssetCollection.DEFAULT_IMAGE_LOCATION_ + (b.filePath ? "/" + b.filePath: "")
            })
        },
        fetch: function(a) {
            a = a || {};
            a.count = ImageAssetCollection.RESULTS_PER_PAGE_;
            return ImageAssetCollection.__super__.fetch.call(this, a)
        },
        parse: function(a) {
            return ImageAssetCollection.__super__.parse.call(this, a).filter(function(a) {
                return a.type !== "directory" && ImageAssetCollection.IMAGE_EXTENSION_REGEXP_.test(a.path)
            })
        },
        getDisplayName: function() {
            return "Image"
        },
        getSupportedTypes: function() {
            return "image/png, image/gif, image/jpeg, image/svg+xml"
        }
    });
    ImageAssetCollection.DEFAULT_IMAGE_LOCATION_ = "/trunk/" + RepositoryLayout.IMG_DIRECTORY;
    ImageAssetCollection.IMAGE_EXTENSION_REGEXP_ = RegExp(/\.(png|gif|jpe?g|svg)$/);
    ImageAssetCollection.RESULTS_PER_PAGE_ = 1E4;
    window.VideoAssetModel = AssetModel.extend({
        defaults: _.extend({},
        AssetModel.prototype.defaults, {
            thumbnails: null,
            encodings: null,
            streamName: null,
            duration: null,
            width: null,
            height: null,
            url: null
        }),
        pollingIntervalId_: null,
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            var c = b.file;
            c && this.set({
                size: c.size,
                data: c,
                streamName: StringUtils.normalizeFilename(c.name).replace(/\.[^\.]+$/, "")
            });
            VideoAssetModel.__super__.initialize.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/videoassets/{shortName}-{streamName}", {
                shortName: app.getProjectModel().get("shortName"),
                streamName: this.get("streamName")
            })
        },
        sync: function(a, b, c) {
            if (a === "create") {
                b.set("status", AssetModel.STATUS.UPLOADING);
                var d = app.getProjectModel().get("shortName"),
                e = b.get("data");
                this.req_ = new ChunkableUploadRequest({
                    filename: StringUtils.normalizeFilename(e.name),
                    data: e,
                    type: ChunkableUploadRequest.FILE_TYPE.VIDEO,
                    shortName: d,
                    onSuccess: function(a) {
                        this.startEncoding_(a.url, c)
                    }.bind(b),
                    onProgress: b.onProgress_.bind(b),
                    onFailure: function() {
                        c.error();
                        this.set("status", AssetModel.STATUS.FAILED)
                    }.bind(b)
                });
                this.req_.send()
            } else VideoAssetModel.__super__.sync.apply(this, arguments)
        },
        parse: function(a) {
            var b = VideoAssetModel.__super__.parse.call(this, a);
            if (a.endTime) b.lastModifiedTimestamp = a.endTime * 1E3;
            if (b.status === "succeeded") b.encodings ? b.status = AssetModel.STATUS.COMPLETED: (console.warn("videoasset in inconsistent state", a), b.status = AssetModel.STATUS.ENCODING);
            return b
        },
        getName: function() {
            return this.get("streamName")
        },
        getThumbnailURL: function() {
            return ! this.get("thumbnails") || this.get("thumbnails").length === 0 ? VideoAssetModel.getDefaultPosterLocation() : this.get("thumbnails")[0]
        },
        isUploading: function() {
            return this.get("status") === AssetModel.STATUS.UPLOADING || this.get("status") === AssetModel.STATUS.ENCODING
        },
        startEncoding_: function(a, b) {
            this.set({
                status: "encoding",
                progress: 0
            });
            var c = JSON.stringify({
                sourceUrl: a,
                projectId: app.getProjectModel().get("shortName"),
                streamName: this.get("streamName")
            });
            this.req_ = new HabitatRequest({
                url: URLUtils.expand("{+apiHost}/videojobs/"),
                data: c,
                method: "POST",
                onSuccess: function(a) {
                    a = JSON.parse(a).result;
                    b.success(a);
                    this.pollingIntervalId_ = this.win_.setInterval(this.pollResource_.bind(this), VideoAssetModel.POLLING_INTERVAL_)
                }.bind(this),
                onFailure: function(a) {
                    this.set("status", AssetModel.STATUS.FAILED);
                    b.error(a)
                }.bind(this)
            });
            this.req_.send()
        },
        pollResource_: function() {
            this.get("status") !== AssetModel.STATUS.ENCODING ? this.win_.clearInterval(this.pollingIntervalId_) : this.fetch()
        }
    });
    VideoAssetModel.getDefaultPosterLocation = function() {
        return URLUtils.expand("{+staticHost}/{+asset}", {
            asset: VideoAssetModel.DEFAULT_POSTER_ASSET_LOCATION_
        })
    };
    VideoAssetModel.DEFAULT_POSTER_ASSET_LOCATION_ = "images/video_poster_default.png";
    VideoAssetModel.POLLING_INTERVAL_ = 5E3;
    window.VideoAssetCollection = AssetCollection.extend({
        model: VideoAssetModel,
        url: function() {
            return URLUtils.expand("{+apiHost}/videoassets/{?projectId}", {
                projectId: app.getProjectModel().get("shortName")
            })
        },
        getDisplayName: function() {
            return VideoAssetCollection.TYPE
        },
        getSupportedTypes: function() {
            return "*"
        }
    });
    VideoAssetCollection.TYPE = "Video";
    window.ChapterDocumentModel = DocumentModel.extend({
        requests_: [],
        previousResults_: [],
        defaults: {
            projectModel: null,
            chapterS9ID: null,
            results: null,
            moreResults: !1,
            loaded: !1,
            error: null
        },
        initialize: function(a, b) {
            b = b || {};
            b.isSubclass = !0;
            this.set("results", []);
            this.requests_ = [];
            this.previousResults_ = [];
            ChapterDocumentModel.__super__.initialize.call(this, a, b)
        },
        setDefaults: function() {
            ChapterDocumentModel.__super__.setDefaults.call(this);
            var a = this.get("projectModel").get("toc").getChapterMetadata(this.get("chapterS9ID")),
            b;
            a ? (b = ((a.designation || "") + " " + (a.enumeration || "")).trim()) && a.title ? b += ": " + a.title: b = a.title || "Untitled Chapter": b = "Unknown Chapter";
            this.set("title", b)
        },
        search: function() {
            this.trigger("loading");
            this.set("loaded", !1);
            var a = this.generateChapterResults_(),
            b = this.get("results").length,
            c = b + ChapterDocumentModel.PAGE_SIZE_;
            this.loadResults_(a.slice(b, c), c < a.length)
        },
        url: function() {
            return URLRouter.getChapterPath(this.get("projectModel").get("shortName"), this.get("chapterS9ID"))
        },
        errorLoading: function() {
            if (this.get("loaded")) return this.get("results").length === 0;
            else ChapterDocumentModel.__super__.errorLoading.call(this)
        },
        loadResults_: function(a, b) {
            this.requests_.forEach(function(a) {
                a.abort()
            },
            this);
            this.requests_ = [];
            if (a.length > 0) {
                var c = [],
                d = this.get("projectModel").get("shortName");
                this.requests_ = a.map(function(e, f) {
                    var g = ExhibitDocumentModel.getFilePathFromSourceLocation(e.path),
                    g = new HabitatRequest({
                        url: FileDocumentModel.url(d, g),
                        method: "GET",
                        onSuccess: this.requestSuccess_.bind(this, a, f, c, b),
                        onFailure: this.requestFailure_.bind(this, a, f, c, b)
                    });
                    g.send();
                    return g
                },
                this)
            } else this.maybeDoneWithRequests_([], [], b)
        },
        generateChapterResults_: function() {
            var a = this.get("projectModel").get("toc").getChapter(this.get("chapterS9ID"));
            return ! a ? (console.error("No chapter found!"), []) : a.xpathAll('.//s9ml:exhibit[@type="html"]').map(function(a) {
                var c = a.getAttribute("path");
                return {
                    url: URLRouter.getURLForPath(this.get("projectModel").get("shortName"), ExhibitDocumentModel.getFilePathFromSourceLocation(c)),
                    title: TableOfContentsModel.getTitle(a),
                    path: c
                }
            },
            this)
        },
        requestSuccess_: function(a, b, c, d, e) {
            c[b] = {
                title: a[b].title,
                url: a[b].url,
                content: e
            };
            this.maybeDoneWithRequests_(a, c, d)
        },
        requestFailure_: function(a, b, c, d, e) {
            console.error("Error loading file content: ", e);
            c[b] = {
                error: !0,
                title: a[b].title,
                url: a[b].url
            };
            this.maybeDoneWithRequests_(a, c, d)
        },
        maybeDoneWithRequests_: function(a, b, c) {
            if (a.length > 0 ? a.every(function(a, c) {
                return !! b[c]
            },
            this) : 1) b.length > 0 && b.every(function(a) {
                return !! a.error
            },
            this) ? this.set({
                error: "Request Failed",
                loaded: !0
            }) : (a = this.previousResults_.concat(b), this.previousResults_ = a = a.slice(0), this.set({
                results: a,
                moreResults: c,
                loaded: !0
            }))
        }
    });
    ChapterDocumentModel.PAGE_SIZE_ = 5;
    window.ChapterOverviewContentModel = Backbone.Model.extend({
        defaults: {
            content: null,
            contentMimeType: "text/html"
        },
        url: function() {
            return null
        }
    });
    window.ExhibitDocumentModel = FileDocumentModel.extend({
        loadIssues_: !0,
        linkResolver_: null,
        initialize: function(a, b) {
            var b = b || {},
            c;
            this.has("sourceLocation") && (c = this.get("sourceLocation"), (c = ExhibitDocumentModel.getFilePathFromSourceLocation(c)) && this.set("filePath", c));
            this.has("filename") && (c = RepositoryLayout.S9ML_DIRECTORY + "/", this.has("chapter") && (c += this.get("chapter") + "/"), c += this.get("filename"), this.set("filePath", c));
            this.unset("sourceLocation");
            this.unset("filename");
            this.unset("chapter");
            ExhibitDocumentModel.__super__.initialize.call(this, a, b);
            this.get("issuesCollection") && this.get("issuesCollection").setFilterParams({
                chapter: this.getChapter(),
                filename: this.getFilename()
            });
            if (this.get("supportsLinks")) this.linkResolver_ = new LinkResolverModel(null, {
                documentModel: this
            })
        },
        setDefaults: function() {
            var a = this.get("supportsSaving");
            ExhibitDocumentModel.__super__.setDefaults.call(this);
            this.set({
                xml: this.get("xml") || null,
                content: this.get("content") || null,
                rootPiece: this.get("rootPiece") || null,
                designation: this.get("designation") || null,
                enumeration: this.get("enumeration") || null,
                title: this.get("title") || null,
                supportsSaving: a !== void 0 ? a: !0,
                supportsLinks: this.get("supportsLinks") !== void 0 ? this.get("supportsLinks") : !0
            })
        },
        getChapter: function() {
            var a = this.getSourceLocation(),
            a = a && a.split("/");
            return ! a || a.length < 2 ? null: a[0]
        },
        getSourceLocation: function() {
            return ExhibitDocumentModel.getSourceLocationFromPath(this.get("filePath"))
        },
        getLinkResolver: function() {
            return this.linkResolver_
        },
        set: function(a, b, c) {
            var d;
            typeof a === "object" || !a ? (d = a, c = b) : (d = {},
            d[a] = b);
            c = c || {};
            if (d.sourceLocation && d.sourceLocation.split("/").pop().indexOf(".") !== -1) d.filePath = RepositoryLayout.S9ML_DIRECTORY + "/" + d.sourceLocation;
            if (d.filename) a = d.chapter ? d.chapter: this.getChapter(),
            b = RepositoryLayout.S9ML_DIRECTORY + "/",
            a && (b += a + "/"),
            d.filePath = b + d.filename;
            delete d.sourceLocation;
            delete d.filename;
            delete d.chapter;
            if (d.xml && !d.content) d.content = XMLUtilities.serializeDocument(d.xml);
            var e = null;
            if (d.content && !d.xml) try {
                d.xml = XMLUtilities.parseDocument(d.content, this.getXMLDocumentType())
            } catch(f) {
                e = XMLUtilities.parseValidationError(f)
            }
            if (d.xml && d.xml !== this.get("xml")) try {
                _.extend(d, this.attrsFromXML_(d.xml))
            } catch(g) {
                e = {
                    line: null,
                    character: null,
                    message: g instanceof Error ? g.message: g
                }
            }
            if (e && c.validate !== !1) c.validate = !0,
            this.validate = function() {
                this.validate = function() {};
                return e
            };
            ExhibitDocumentModel.__super__.set.call(this, d, c);
            e && c.validate !== !1 && c.error && c.error(this, e, c);
            return this
        },
        setContentFragment: function(a, b) {
            var c = this.get("xml"),
            d = XMLUtilities.getNodeByS9ID(c, a);
            if (!d) throw Error("S9ID not found in content");
            try {
                d.setHTML(b)
            } catch(e) {
                throw XMLUtilities.parseValidationError(e);
            }
            this.set("xml", c)
        },
        setAttributeOnNode: function(a, b, c) {
            var d = this.get("xml"),
            a = XMLUtilities.getNodeByS9ID(d, a);
            if (!a) throw Error("S9ID not found in content");
            a.setAttribute(b, c);
            this.set("xml", d)
        },
        getXMLDocumentType: function() {
            return XMLUtilities.DOCUMENT_TYPE.XML
        },
        sync: function(a, b, c) {
            if (a === "update" && this.get("supportsLinks")) {
                var d = c.success;
                c.success = function() {
                    d && d.apply(this, arguments);
                    this.fetchLinkResolver_()
                }.bind(this)
            }
            ExhibitDocumentModel.__super__.sync.call(this, a, b, c)
        },
        read_: function() {
            ExhibitDocumentModel.__super__.read_.call(this);
            this.get("supportsLinks") && this.fetchLinkResolver_()
        },
        fetchLinkResolver_: function() {
            this.linkResolver_.fetch({
                error: this.trigger.bind(this, "error")
            })
        },
        rewriteInitialContent_: function(a) {
            return XMLUtilities.modifyS9IDs(a,
            function(a, c, d) {
                return this.get("documentType") === "html" && !HTMLContent.shouldHaveS9ID(a) ? null: d ? d: c && UUID.isUUID(c) ? c: null
            }.bind(this))
        },
        attrsFromXML_: function(a) {
            var a = a.documentElement,
            b = a.xpath("//*[local-name()='title']");
            b && (b = StringUtils.stripTags(b.getHTML()));
            return {
                documentType: a.tagName || null,
                designation: a.getAttribute("designation") || null,
                enumeration: a.getAttribute("enumeration") || null,
                title: b || null
            }
        }
    });
    ExhibitDocumentModel.getSourceLocationFromPath = function(a) {
        return ! /^s9ml\//.test(a) ? null: a.replace(/^s9ml\//, "")
    };
    ExhibitDocumentModel.getFilePathFromSourceLocation = function(a) {
        return a.split("/").pop().indexOf(".") !== -1 ? RepositoryLayout.S9ML_DIRECTORY + "/" + a: null
    };
    ExhibitDocumentModel.getPathParts = function(a) {
        a = a.split("/");
        if (a.length === 0 && a[0] !== RepositoryLayout.S9ML_DIRECTORY) return {};
        a = a.length === 2 ? {
            filename: a[1]
        }: {
            chapter: a[1],
            filename: a[2]
        };
        return a.filename && a.filename.indexOf(".") !== -1 ? a: {}
    };
    window.ConfigDocumentModel = ExhibitDocumentModel.extend({
        initialize: function(a, b) {
            b = b || {};
            b.isSubclass = !0;
            ConfigDocumentModel.__super__.initialize.call(this, a, b)
        },
        setDefaults: function() {
            ConfigDocumentModel.__super__.setDefaults.call(this);
            this.set("supportsIssues", !1)
        },
        isNew: function() {
            return ! 1
        }
    });
    window.ConfigurationModel = Backbone.Model.extend({
        defaults: {
            environment: null,
            habitatHost: null,
            localAPI: !1,
            localDevelopment: !1,
            apiPrefix: null,
            redpubAPIPrefix: null,
            reposAPIPrefix: null,
            apiHost: null,
            redpubAPIHost: null,
            reposAPIHost: null,
            mediaHost: null,
            documentationURL: null,
            redmineHost: null,
            contentHost: null,
            wwwHost: null,
            fileVersion: null,
            versionString: null,
            cookieName: null,
            staticAssetHost: null,
            staticAssetURL: null,
            widgetHost: null,
            sentryDSN: null,
            fontsURL: null,
            fontsURLContent: null
        },
        initialize: function(a, b) {
            a = a || {};
            b = b || {};
            a.features = a.features || {};
            this.window_ = b.window || window;
            a.habitatHost || this.setHabitatHost_();
            a.apiHost || this.setApiHost_();
            a.versionString || this.setVersionString_(); (!a.mediaHost || this.get("environment") === "local") && this.updateMediaHostLocal_();
            a.redpubHost || this.setRedpubAPIHost_();
            a.reposHost || this.setReposAPIHost_();
            a.staticAssetURL || this.setStaticAssetURL_()
        },
        setHabitatHost_: function() {
            var a = this.window_.location;
            this.set("habitatHost", a.origin ? a.origin: a.protocol + "//" + a.host)
        },
        setApiHost_: function() {
            this.set("apiHost", this.get("habitatHost") + this.get("apiPrefix"))
        },
        updateMediaHostLocal_: function() {
            this.set("mediaHost", this.get("habitatHost") + this.get("apiPrefix") + "/media")
        },
        setRedpubAPIHost_: function() {
            this.set("redpubAPIHost", this.get("habitatHost") + this.get("redpubAPIPrefix"))
        },
        setReposAPIHost_: function() {
            this.set("reposAPIHost", this.get("habitatHost") + this.get("reposAPIPrefix"))
        },
        setStaticAssetURL_: function() {
            this.set("staticAssetURL", this.has("staticAssetHost") ? this.get("staticAssetHost") + this.get("fileVersion") + "/": this.get("habitatHost") + "/Resources/Assets/")
        },
        setVersionString_: function() {
            this.set("versionString", this._versionStringFromFileVersion(this.get("fileVersion") || ""))
        },
        _versionStringFromFileVersion: function(a) {
            return a.replace(/^(\d{4})(\d{2})(\d{2})\.(\d{2})(\d{2}).*z\.(.*)$/, "$2/$3/$1 $4:$5 ($6)")
        }
    });
    ConfigurationModel.INKLING_HOSTS = ["apiHost", "redpubAPIHost", "reposAPIHost", "mediaHost", "widgetHost"];
    ConfigurationModel.FEATURES = {
        NATIVE_VIDEO_PATTERN: "nativeVideo"
    };
    window.ContentConfigurationModel = APIModel.extend({
        defaults: {
            fileFormatVersion: 0.1,
            contentButtons: {}
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/files/{shortName}/trunk/head/{+contentConfigPath}", {
                shortName: app.getProjectModel().get("shortName"),
                contentConfigPath: RepositoryLayout.CONTENT_CONFIG_PATH
            })
        },
        parse: function(a) {
            a = a || {};
            this.parseContentButtons_(a);
            return ContentConfigurationModel.__super__.parse.call(this, a)
        },
        parseContentButtons_: function(a) {
            if (a.contentButtons) for (var b in a.contentButtons) {
                var c = a.contentButtons[b];
                c.options ? c.options.forEach(function(c) {
                    if (!c.title || !c.classes || !c.classes.length || !c.icon) console.warn("Content error: " + RepositoryLayout.CONTENT_CONFIG_PATH + ' has incorrect options for the selector "' + b + '"'),
                    delete a.contentButtons[b];
                    else {
                        var e = URLUtils.expand("{+apiHost}/files/{shortName}/trunk/head/{+icon}", {
                            shortName: app.getProjectModel().get("shortName"),
                            icon: c.icon
                        });
                        c.icon = e
                    }
                }) : (console.warn("Content error: " + RepositoryLayout.CONTENT_CONFIG_PATH + ' requires options for the selector "' + b + '"'), delete a.contentButtons[b])
            }
        }
    });
    window.UserModel = APIModel.extend({
        idAttribute: "s9id",
        defaults: {
            s9id: null,
            firstName: null,
            lastName: null,
            uid: null
        },
        getDisplayName: function() {
            return UserModel.generateDisplayName(this.get("firstName"), this.get("lastName"), this.get("uid"))
        }
    });
    UserModel.requestPasswordReset = function(a) {
        var b = window.location.href.match(/^(https?\:\/\/.*?)\//i)[1] + "/changepassword"; (new HabitatRequest({
            url: URLUtils.expand("{+apiHost}/forgottenpassword"),
            method: "POST",
            data: JSON.stringify({
                email: a,
                callbackURL: b
            })
        })).send()
    };
    UserModel.resetPassword = function(a, b, c, d, e) { (new HabitatRequest({
            url: URLUtils.expand("{+apiHost}/forgottenpassword"),
            method: "PUT",
            data: JSON.stringify({
                userId: a,
                token: b,
                hashedPassword: SHA1(c)
            }),
            onSuccess: d,
            onFailure: e
        })).send()
    };
    UserModel.generateDisplayName = function(a, b, c) {
        a = a || "";
        b = b || "";
        c = c || "";
        return a || b ? (a + " " + b).trim() : c || null
    };
    window.CurrentUserModel = UserModel.extend({
        projectMemberships_: null,
        defaults: _.extend({},
        UserModel.prototype.defaults, {
            habitatUser: null,
            email: null,
            receiveEmail: !0,
            hashedPassword: null,
            passwordExpiration: null,
            prefs: null,
            permissions: null,
            widgetAccessToken: null
        }),
        initialize: function(a, b) {
            b = b || {};
            this.get("permissions") || this.set("permissions", new PermissionsModel);
            this.get("widgetAccessToken") || this.set("widgetAccessToken", new WidgetAccessTokenModel);
            this.on("loaded",
            function() {
                var a = new UserPreferencesModel(null, {
                    uid: this.get("uid")
                });
                this.set("prefs", a);
                a.fetch()
            },
            this);
            this.projectMemberships_ = {};
            CurrentUserModel.__super__.initialize.call(this, a, b)
        },
        url: function(a, b) {
            var c = "{+apiHost}/me?view=cached";
            a === "create" ? c = "{+apiHost}/accounts/{id}": a === "update" && !b.useHabitantsAPI ? c = "{+apiHost}/accounts/{id}?show=true": a === "update" && b.useHabitantsAPI && (c = "{+apiHost}/habitants/{id}?show=true");
            return URLUtils.expand(c, {
                id: this.id || null
            })
        },
        fetch: function(a) {
            var a = a || {},
            b = a.success;
            a.success = function(a, d, e) {
                var f = new UserPreferencesModel(null, {
                    uid: this.get("uid")
                });
                this.set("prefs", f);
                f.fetch();
                b && b.apply(null, arguments)
            }.bind(this);
            return CurrentUserModel.__super__.fetch.call(this, a)
        },
        save: function(a, b) {
            a = a || {};
            b = b || {};
            if (a.oldPassword && a.newPassword) {
                a.oldHashedPassword = SHA1(a.oldPassword);
                a.password = a.newPassword;
                var c = b.success ||
                function() {},
                d = b.error ||
                function() {};
                b.success = function() {
                    app.getAuthenticator().signIn(this.get("uid"), a.password, c, d)
                }.bind(this)
            }
            delete a.oldPassword;
            delete a.newPassword;
            var e = CurrentUserModel.__super__.save.call(this, a, b);
            this.unset("password");
            this.unset("oldHashedPassword");
            this.unset("password");
            return e
        },
        sync: function(a, b, c) {
            if (a === "create") c.simpleRequest = !0;
            CurrentUserModel.__super__.sync.call(this, a, b, c)
        },
        parse: function(a) {
            var a = CurrentUserModel.__super__.parse.call(this, a),
            b = a.passwordExpiration;
            a.passwordExpiration = typeof b === "number" ? b * 1E3: null;
            a.uid = a.email;
            return a
        },
        isPasswordChangeRequired: function() {
            var a = this.get("passwordExpiration");
            return a === null ? !1 : a - Date.now() < 6048E5
        },
        fetchUserMembership: function(a, b) {
            var b = b || {},
            c = new UserMembershipModel({
                userID: this.get("s9id"),
                userGroupID: a.get("userGroupID")
            });
            c.fetch({
                success: function() {
                    this.projectMemberships_[a.id] = c;
                    b.success && b.success.apply(null, arguments)
                }.bind(this),
                error: function() {
                    b.error && b.error.apply(null, arguments)
                }
            })
        },
        hasWidgetDomainAccess: function() {
            return this.get("widgetAccessToken").loadedSuccessfully()
        },
        hasRole: function(a, b) {
            var c = this.projectMemberships_[a.id];
            return !! c && c.get("role") === b
        }
    });
    window.DirectoryListingModel = Backbone.Model.extend({
        defaults: {
            filePath: null,
            relativePath: null,
            lastModifiedTimestamp: null,
            lastAuthor: null,
            size: null,
            type: null,
            revision: null
        }
    });
    DirectoryListingModel.ENTRY_TYPE = {
        DIRECTORY: "directory",
        FILE: "file"
    };
    window.DirectoryListingCollection = APICollection.extend({
        model: DirectoryListingModel,
        projectModel_: null,
        directory_: null,
        initialize: function(a, b) {
            b = b || {};
            this.projectModel_ = b.projectModel;
            this.directory_ = b.directory;
            DirectoryListingCollection.__super__.initialize.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+reposHost}/repoentries/sn-{shortName}/trunk/{+directory}", {
                shortName: this.projectModel_.get("shortName"),
                directory: this.directory_
            })
        },
        fetch: function(a) {
            var a = a || {},
            b = a.error;
            a.error = function(a, d, e) { (e.status && e.status.statusCode) === HabitatRequest.STATUS_CODES.NOT_FOUND ? e.success([]) : b && b(a, d, e)
            };
            return DirectoryListingCollection.__super__.fetch.call(this, a)
        },
        parse: function(a) {
            var a = DirectoryListingCollection.__super__.parse.call(this, a),
            b = /^\/trunk\/?/,
            c = RegExp("^" + this.directory_ + "/?");
            return a.reduce(function(a, e) {
                if (e.type !== DirectoryListingModel.ENTRY_TYPE.FILE) return a;
                e.filePath = e.path.replace(b, "");
                e.relativePath = e.filePath.replace(c, "");
                delete e.path;
                a.push(e);
                return a
            },
            [])
        }
    });
    window.ExhibitTemplateCollection = Backbone.Collection.extend({
        model: FileDocumentModel,
        loaded_: !1,
        isLoaded: function() {
            return this.loaded_
        },
        hasTemplate: function(a) {
            return !! this.findTemplate_(a)
        },
        getTemplateContent: function(a, b) {
            var c = this.findTemplate_(a);
            if (!c || !c.isLoaded()) return null;
            var d = c.get("content");
            Object.keys(b).forEach(function(a) {
                d = d.replace("{{" + a + "}}", b[a] ? StringUtils.escapeXML(b[a]) : "")
            },
            this);
            return d
        },
        getOrderedLabels: function() {
            var a = ExhibitTemplateCollection.EXHIBIT_ORDERING,
            a = a.filter(function(a) {
                return this.hasTemplate(a)
            },
            this);
            return a.map(function(a) {
                var c = ExhibitDocumentView.getTypeName(a);
                return {
                    type: a,
                    title: c
                }
            },
            this)
        },
        fetch: function(a) {
            a = a || {};
            this.loaded_ = !1;
            var b = new DirectoryListingCollection(null, {
                projectModel: app.getProjectModel(),
                directory: RepositoryLayout.TEMPLATE_DIRECTORY
            }),
            c = function() {
                a.error && a.error(this)
            }.bind(this);
            b.fetchAll({
                success: function() {
                    this.loadFiles_(b,
                    function() {
                        a.success && a.success(this);
                        this.loaded_ = !0;
                        this.trigger("loaded", this)
                    }.bind(this), c)
                }.bind(this),
                error: c
            })
        },
        loadFiles_: function(a, b, c) {
            var d = /\/([^\/]+)\.(?:s9ml|html).tpl$/,
            a = a.filter(function(a) {
                return a.get("type") === DirectoryListingModel.ENTRY_TYPE.FILE && d.test(a.get("filePath"))
            });
            if (a.length) {
                this.reset(a.map(function(a) {
                    var b = a.get("filePath").match(d)[1];
                    return new FileDocumentModel({
                        project: app.getProjectModel(),
                        filePath: a.get("filePath"),
                        documentType: b
                    })
                }));
                var e = new BackboneLoader;
                this.forEach(function(a) {
                    e.add(a)
                });
                e.start({
                    onLoad: b,
                    onError: c
                })
            } else b()
        },
        findTemplate_: function(a) {
            return this.find(function(b) {
                return b.get("documentType") === a
            },
            this)
        }
    });
    ExhibitTemplateCollection.EXHIBIT_ORDERING = "html,imagefigure,multifigure,guidedtour,layeredfigure,sliderfigure,hotspotfigure,molecule,videofigure,audiofigure,assessment".split(",");
    window.HTMLDocumentModel = ExhibitDocumentModel.extend({
        getXMLDocumentType: function() {
            return XMLUtilities.DOCUMENT_TYPE.XHTML
        },
        setDefaults: function() {
            HTMLDocumentModel.__super__.setDefaults.call(this);
            this.set({
                documentType: this.get("documentType") || "html"
            })
        },
        supportsComparison: function() {
            return ! 0
        }
    });
    window.AnnotationModel = XMLBackboneModel.extend({
        defaults: {
            orientation: null,
            x: null,
            y: null,
            text: null,
            snippet: null,
            destinations: null,
            answers: null,
            label: null
        },
        initialize: function(a, b) {
            AnnotationModel.__super__.initialize.call(this, a, b);
            this.get("destinations") || this.set("destinations", new DestinationCollection, {
                validate: !1
            });
            this.get("answers") || this.set("answers", new AnswerCollection, {
                validate: !1
            });
            if (!this.get("snippet")) {
                var c = this.get("text") || "";
                this.set({
                    snippet: new SnippetContentModel({
                        xml: "<text>" + c + "</text>"
                    }),
                    text: null
                },
                {
                    validate: !1
                })
            }
            this.set("isActive", !1, {
                validate: !1
            });
            this.changed = {};
            this._previousAttributes = _.clone(this.attributes);
            this._pending = {};
            this._silent = {};
            this.get("snippet").on("change", this.snippetChangeEvent_, this);
            this.on("change:snippet", this.snippetReplacedEvent_, this)
        },
        set: function(a, b, c) {
            var d;
            typeof a === "object" || !a ? (d = a, c = b) : (d = {},
            d[a] = b);
            c = c || {};
            return this.isConstructed_ && d.text ? (d = Error("'text' on the AnnotationModel has been deprecated."), console.error(d), c.error ? c.error(this, d) : this.trigger("invalid", d), this) : AnnotationModel.__super__.set.apply(this, arguments)
        },
        toJSON: function() {
            var a = AnnotationModel.__super__.toJSON.call(this);
            a.cid = this.cid;
            if ([AnnotationModel.TAIL_UP, AnnotationModel.TAIL_DOWN, AnnotationModel.TAIL_LEFT, AnnotationModel.TAIL_RIGHT].indexOf(a.orientation) === -1) a.orientation = AnnotationModel.TAIL_DOWN;
            return a
        },
        snippetReplacedEvent_: function(a, b) {
            var c = this.previous("snippet");
            c && c.off("change", this.snippetChangeEvent_, this);
            if (b) b.on("change", this.snippetChangeEvent_, this)
        },
        snippetChangeEvent_: function(a) {
            this.trigger("change:snippet", this, a);
            this.trigger("change", this)
        }
    });
    AnnotationModel.TAIL_UP = "tailup";
    AnnotationModel.TAIL_DOWN = "taildown";
    AnnotationModel.TAIL_LEFT = "tailleft";
    AnnotationModel.TAIL_RIGHT = "tailright";
    window.AnnotationCollection = XMLBackboneCollection.extend({
        model: AnnotationModel
    });
    window.FigureModel = XMLBackboneModel.extend({});
    window.QuestionFigureModel = FigureModel.extend({
        className: "QuestionFigureModel",
        defaults: {
            question: null,
            hint: null,
            video: null,
            image: null,
            audio: null
        }
    });
    window.ChoiceFigureModel = QuestionFigureModel.extend({
        className: "ChoiceFigureModel",
        defaults: {
            choices: null
        },
        initialize: function(a, b) {
            b = b || {};
            ChoiceFigureModel.__super__.initialize.call(this, a, b);
            this.get("choices") || this.set("choices", new ChoiceCollection)
        }
    });
    window.AnswerModel = XMLBackboneModel.extend({
        className: "AnswerModel",
        defaults: {
            text: null
        }
    });
    window.AnswerCollection = XMLBackboneCollection.extend({
        className: "AnswerCollection",
        model: AnswerModel
    });
    window.AssessmentMediaModel = XMLBackboneModel.extend({
        className: "AssessmentMediaModel",
        defaults: {
            src: null
        }
    });
    window.AudioMediaModel = AssessmentMediaModel.extend({
        className: "AudioMediaModel",
        toJSON: function() {
            var a = AudioMediaModel.__super__.toJSON.call(this),
            b = this.getDocumentModel().url({
                addFilename: !1
            });
            a.src = b + a.src;
            return a
        }
    });
    window.ChoiceModel = XMLBackboneModel.extend({
        className: "ChoiceModel",
        defaults: {
            correct: null,
            options: null,
            text: null,
            choiceImage: null,
            feedback: null
        }
    });
    window.ChoiceCollection = XMLBackboneCollection.extend({
        className: "ChoiceCollection",
        model: ChoiceModel
    });
    window.FeedbackModel = XMLBackboneModel.extend({
        className: "FeedbackModel",
        defaults: {
            text: null,
            feedbackVideo: null,
            feedbackImage: null,
            feedbackAudio: null
        }
    });
    window.CorrectFeedbackModel = FeedbackModel.extend({
        className: "CorrectFeedbackModel"
    });
    window.DestinationModel = XMLBackboneModel.extend({
        className: "DestinationModel",
        defaults: {
            x: null,
            y: null
        }
    });
    window.DestinationCollection = XMLBackboneCollection.extend({
        className: "DestinationCollection",
        model: DestinationModel
    });
    window.HintModel = FeedbackModel.extend({
        className: "HintModel"
    });
    window.ImageMediaModel = AssessmentMediaModel.extend({
        className: "ImageMediaModel",
        defaults: {
            alt: null
        },
        toJSON: function() {
            var a = ImageMediaModel.__super__.toJSON.call(this),
            b = this.getDocumentModel().url({
                addFilename: !1
            });
            a.src = b + a.src;
            return a
        }
    });
    window.IncorrectFeedbackModel = FeedbackModel.extend({
        className: "IncorrectFeedbackModel"
    });
    window.OptionModel = XMLBackboneModel.extend({
        className: "OptionModel",
        defaults: {
            text: null
        }
    });
    window.OptionCollection = XMLBackboneCollection.extend({
        className: "OptionCollection",
        model: OptionModel
    });
    window.RegionModel = XMLBackboneModel.extend({
        className: "RegionModel",
        defaults: {
            correct: null,
            regionImage: null,
            feedback: null
        }
    });
    window.RegionCollection = XMLBackboneCollection.extend({
        className: "RegionCollection",
        model: RegionModel
    });
    window.VideoMediaModel = AssessmentMediaModel.extend({
        className: "VideoMediaModel",
        defaults: {
            poster: null
        },
        toJSON: function() {
            var a = VideoMediaModel.__super__.toJSON.call(this),
            b = this.getDocumentModel(),
            c = app.getProjectModel();
            if (a.poster) a.poster = URLUtils.getImageURL(a.poster, c, {
                revision: b.get("revision"),
                width: URLUtils.IMAGE_SIZES.FULL,
                exact: !0
            });
            return a
        }
    });
    window.ImageFillInFigureModel = QuestionFigureModel.extend({
        className: "ImageFillInFigureModel",
        defaults: {
            correct: null,
            incorrect: null,
            annotations: null
        },
        initialize: function(a, b) {
            b = b || {};
            ImageFillInFigureModel.__super__.initialize.call(this, a, b);
            this.get("annotations") || this.set("annotations", new AnnotationCollection)
        }
    });
    window.ImageRegionFigureModel = QuestionFigureModel.extend({
        className: "ImageRegionFigureModel",
        defaults: {
            incorrect: null,
            regions: null
        },
        initialize: function(a, b) {
            b = b || {};
            ImageRegionFigureModel.__super__.initialize.call(this, a, b);
            this.get("regions") || this.set("regions", new RegionCollection)
        }
    });
    window.MatchingFigureModel = ChoiceFigureModel.extend({
        className: "MatchingFigureModel",
        defaults: {
            randomorder: null,
            correct: null,
            incorrect: null,
            options: null,
            choices: null
        },
        initialize: function(a, b) {
            b = b || {};
            MatchingFigureModel.__super__.initialize.call(this, a, b);
            this.get("options") || this.set("options", new OptionCollection)
        },
        toJSON: function() {
            var a = MatchingFigureModel.__super__.toJSON.call(this);
            a.choices.forEach(function(b) {
                var c = b.options;
                b.answer = a.options[c] ? a.options[c].text: ""
            });
            return a
        }
    });
    window.MultiAnswerFigureModel = ChoiceFigureModel.extend({
        className: "MultiAnswerFigureModel",
        defaults: {
            randomorder: null,
            correct: null,
            incorrect: null,
            choices: null
        },
        initialize: function(a, b) {
            b = b || {};
            MultiAnswerFigureModel.__super__.initialize.call(this, a, b);
            this.get("choices") || this.set("choices", new ChoiceCollection)
        }
    });
    window.MultiChoiceFigureModel = ChoiceFigureModel.extend({
        className: "MultiChoiceFigureModel",
        defaults: {
            randomorder: null,
            choices: null
        },
        initialize: function(a, b) {
            b = b || {};
            MultiChoiceFigureModel.__super__.initialize.call(this, a, b);
            this.get("choices") || this.set("choices", new ChoiceCollection)
        }
    });
    window.OrderedChoiceFigureModel = ChoiceFigureModel.extend({
        className: "OrderedChoiceFigureModel",
        defaults: {
            correct: null,
            incorrect: null,
            choices: null
        },
        initialize: function(a, b) {
            b = b || {};
            OrderedChoiceFigureModel.__super__.initialize.call(this, a, b);
            this.get("choices") || this.set("choices", new ChoiceCollection)
        }
    });
    window.QuestionFigureCollection = XMLBackboneCollection.extend({
        className: "QuestionFigureCollection",
        model: QuestionFigureModel
    });
    window.ShortAnswerFigureModel = QuestionFigureModel.extend({
        className: "ShortAnswerFigureModel",
        defaults: {
            feedback: null
        }
    });
    window.TrueFalseFigureModel = QuestionFigureModel.extend({
        className: "TrueFalseFigureModel",
        defaults: {
            isTrue: null,
            trueFeedback: null,
            isFalse: null,
            falseFeedback: null
        }
    });
    window.AssessmentFigureModel = FigureModel.extend({
        className: "AssessmentFigureModel",
        defaults: {
            designation: null,
            enumeration: null,
            title: null,
            questions: null
        },
        initialize: function(a, b) {
            b = b || {};
            AssessmentFigureModel.__super__.initialize.call(this, a, b);
            this.get("questions") || this.set("questions", new QuestionFigureCollection)
        }
    });
    window.SnippetContentModel = XMLBackboneModel.extend({
        defaults: {
            xml: null
        }
    });
    window.DefinitionModel = SnippetContentModel.extend({});
    window.FigureCollection = XMLBackboneCollection.extend({
        model: FigureModel
    });
    window.GuidedTourModel = XMLBackboneModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            title: null,
            image: null,
            caption: null,
            cite: null,
            steps: null
        },
        initialize: function(a, b) {
            b = b || {};
            GuidedTourModel.__super__.initialize.call(this, a, b);
            this.get("steps") || this.set("steps", new StepCollection)
        },
        getXMLNode: function(a) {
            var b = GuidedTourModel.__super__.getXMLNode.call(this, a),
            a = a || {};
            a.raw || b.xpathAll("//s9ml:step/s9ml:img").forEach(function(a) {
                var b = a.nextSibling;
                a.parentNode.removeChild(a);
                b && b.nodeType === Node.TEXT_NODE && /^\s+$/.test(b.nodeValue) && b.parentNode.removeChild(b)
            });
            return b
        },
        toJSON: function() {
            var a = GuidedTourModel.__super__.toJSON.apply(this, arguments),
            b = this.getDocumentModel(),
            c = b.get("project");
            a.image = URLUtils.getImageURL(a.image, c, {
                revision: b.get("revision") || null,
                width: URLUtils.IMAGE_SIZES.FULL,
                exact: !0
            });
            return a
        }
    });
    window.HotspotModel = XMLBackboneModel.extend({
        defaults: {
            frameX: null,
            frameY: null,
            frameWidth: null,
            frameHeight: null,
            imagefigure: null,
            layeredfigure: null
        },
        getFigure: function() {
            return this.get("imagefigure") || this.get("layeredfigure")
        }
    });
    window.HotspotCollection = XMLBackboneCollection.extend({
        model: HotspotModel
    });
    window.HotspotFigureModel = XMLBackboneModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            title: null,
            caption: null,
            cite: null,
            imagefigure: null,
            layeredfigure: null
        },
        getFigure: function() {
            return this.get("imagefigure") || this.get("layeredfigure")
        },
        findHotspot_: function(a) {
            for (var b = null,
            c = [this]; c.length;) {
                b = c.pop();
                if (a(b)) return b; (b.getFigure().get("hotspots") || []).forEach(function(a) {
                    c.push(a)
                },
                this)
            }
            return null
        },
        findHotspotByCid_: function(a) {
            return this.findHotspot_(function(b) {
                return b.cid === a
            }.bind(this))
        },
        findHotspotByS9ID_: function(a) {
            return this.findHotspot_(function(b) {
                return XMLUtilities.getS9ID(b.getFigure().getXMLNode()) === a
            }.bind(this))
        }
    });
    window.ImageFigureModel = FigureModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            annotations: null,
            image: null,
            caption: null,
            cite: null,
            title: null,
            thumbnailPath: null,
            previewImg: null,
            hotspots: null
        },
        initialize: function(a, b) {
            b = b || {};
            ImageFigureModel.__super__.initialize.call(this, a, b);
            this.get("annotations") || this.set("annotations", new AnnotationCollection)
        },
        toJSON: function() {
            var a = ImageFigureModel.__super__.toJSON.call(this),
            b = this.getDocumentModel(),
            c = app.getProjectModel(),
            d = a.image;
            a.image = URLUtils.getImageURL(a.image, c, {
                revision: b.get("revision"),
                width: URLUtils.IMAGE_SIZES.FULL,
                exact: !0
            });
            if (a.thumbnailPath) a.thumbnailPath = URLUtils.getImageURL(a.thumbnailPath, c, {
                revision: b.get("revision"),
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE
            });
            if (a.previewImg) a.previewImg = URLUtils.getImageURL(a.previewImg, c, {
                revision: b.get("revision"),
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE
            });
            if (!a.thumbnailPath) a.thumbnailPath = URLUtils.getImageURL(d, c, {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE,
                revision: b.get("revision")
            });
            return a
        }
    });
    window.LayeredFigureModel = FigureModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            annotations: null,
            labeledImage: null,
            unlabeledImage: null,
            caption: null,
            cite: null,
            title: null,
            thumbnailPath: null,
            previewImg: null,
            hotspots: null
        },
        initialize: function(a, b) {
            b = b || {};
            LayeredFigureModel.__super__.initialize.call(this, a, b);
            this.get("annotations") || this.set("annotations", new AnnotationCollection, {
                validate: !1
            })
        },
        toJSON: function() {
            var a = LayeredFigureModel.__super__.toJSON.call(this),
            b = app.getProjectModel(),
            c = this.getDocumentModel(),
            d = a.unlabeledImage || a.labeledImage;
            a.labeledImage = URLUtils.getImageURL(a.labeledImage, b, {
                revision: c.get("revision"),
                width: URLUtils.IMAGE_SIZES.FULL,
                exact: !0
            });
            a.unlabeledImage = URLUtils.getImageURL(a.unlabeledImage, b, {
                revision: c.get("revision"),
                width: URLUtils.IMAGE_SIZES.FULL,
                exact: !0
            });
            if (a.thumbnailPath) a.thumbnailPath = URLUtils.getImageURL(a.thumbnailPath, b, {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE,
                revision: c.get("revision")
            });
            if (a.previewImg) a.previewImg = URLUtils.getImageURL(a.previewImg, b, {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE,
                revision: c.get("revision")
            });
            if (!a.thumbnailPath) a.thumbnailPath = URLUtils.getImageURL(d, b, {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE,
                revision: c.get("revision")
            });
            return a
        }
    });
    window.MultiFigureModel = FigureModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            figures: null,
            enumerationType: "nothing",
            caption: null,
            cite: null,
            title: null
        },
        initialize: function(a, b) {
            b = b || {};
            MultiFigureModel.__super__.initialize.call(this, a, b);
            this.get("figures") || this.set("figures", new FigureCollection)
        }
    });
    window.SliderFigureModel = XMLBackboneModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            title: null,
            caption: null,
            legend: null,
            startStep: null,
            startContents: null,
            steps: null,
            endStep: null,
            endContents: null,
            cite: null
        },
        initialize: function(a, b) {
            b = b || {};
            SliderFigureModel.__super__.initialize.call(this, a, b);
            this.get("steps") || this.set("steps", new StepCollection);
            this.ensureStepAnnotations()
        },
        ensureStepAnnotations: function() {
            this.get("steps").forEach(function(a) {
                a.get("annotations") || a.set("annotations", new AnnotationCollection)
            },
            this)
        },
        getXMLNode: function(a) {
            var b = SliderFigureModel.__super__.getXMLNode.call(this, a),
            a = a || {};
            a.raw || b.xpathAll("//s9ml:step/s9ml:frame").forEach(function(a) {
                var b = a.nextSibling;
                a.parentNode.removeChild(a);
                b && b.nodeType === Node.TEXT_NODE && /^\s+$/.test(b.nodeValue) && b.parentNode.removeChild(b)
            });
            return b
        }
    });
    window.StepModel = XMLBackboneModel.extend({
        defaults: {
            number: null,
            image: null,
            label: null,
            caption: null,
            annotations: null,
            annotation: null,
            frameX: null,
            frameY: null,
            frameWidth: null,
            frameHeight: null
        },
        toJSON: function() {
            var a = StepModel.__super__.toJSON.call(this);
            a.cid = this.cid;
            if (a.image) {
                var b = this.getDocumentModel(),
                c = b.get("project");
                a.image = URLUtils.getImageURL(a.image, c, {
                    revision: b.get("revision") || null,
                    width: URLUtils.IMAGE_SIZES.FULL,
                    exact: !0
                })
            }
            return a
        }
    });
    window.StepCollection = XMLBackboneCollection.extend({
        model: StepModel,
        collectionAttributes: {
            enumerationType: null,
            enumerationStart: null,
            stepsInterface: null,
            legend: null,
            startStep: null,
            startContents: null,
            endStep: null,
            endContents: null
        }
    });
    window.TOCComponentModel = XMLBackboneModel.extend({
        initialize: function(a, b) {
            TOCComponentModel.__super__.initialize.call(this, a, b);
            this.set({
                isSelected: !1,
                isNew: !1,
                isDeleted: !1
            })
        },
        insertModel: function() {
            throw "TOCComponentView.insertModel() is an abstract method";
        },
        nestModel: function() {
            throw "TOCComponentView.nestModel() is an abstract method";
        }
    });
    window.TOCChapterModel = TOCComponentModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            thumbnailPath: null,
            sandbox: null,
            alias: null,
            title: null,
            exhibits: null
        },
        initialize: function(a, b) {
            TOCChapterModel.__super__.initialize.call(this, a, b);
            this.get("exhibits") || this.set("exhibits", new TOCExhibitCollection);
            this.set({
                isOpen: !0
            });
            this.on("change:exhibits", this.changeExhibitsEvent_, this);
            this.get("exhibits").on("change", this.exhibitChangeEvent_, this)
        },
        toJSON: function() {
            var a = TOCChapterModel.__super__.toJSON.call(this),
            b = this.documentModel_.url({
                addFilename: !1
            }),
            c = app.getProjectModel().get("shortName"),
            d = this.getXMLNode().dataset.uuid;
            if (d) a.overviewURL = URLRouter.getChapterPath(c, d);
            if (a.thumbnailPath) a.thumbnailPath = b + a.thumbnailPath;
            a.sandbox = a.sandbox === "true" || a.sandbox === "1";
            return a
        },
        insertModel: function(a) {
            var b = a.getXMLNode({
                raw: !0
            }).tagName;
            if (b === "chapter") return this.insertChapter_(a);
            else if (b === "exhibit") return this.insertExhibit_(a);
            else if (b === "unit") return this.insertUnit_(a)
        },
        nestModel: function(a) {
            if (a.getXMLNode({
                raw: !0
            }).tagName === "exhibit") {
                var b = this.get("exhibits");
                if (! (b.length === 1 && b.indexOf(a) === 0)) return a.collection && a.collection.remove(a),
                b.add(a),
                b
            }
        },
        insertChapter_: function(a) {
            a.removeFromCollection();
            var b = this.collection.models.slice();
            b.splice(b.indexOf(this) + 1, 0, a);
            this.collection.reset(b);
            return this.collection
        },
        removeFromCollection: function() {
            if (this.collection) {
                var a = this.collection.getParentUnit();
                this.collection.remove(this);
                if (a.isBlank() && a.get("chapters").length === 0 && a.collection.indexOf(a) === 0) {
                    var b = a.collection.at(1);
                    a.collection.remove(a);
                    b && b.set("isForcedVisible", !0)
                }
            }
        },
        insertExhibit_: function(a) {
            var b = this.get("exhibits");
            if (! (b.length === 1 && b.indexOf(a) === 0)) {
                a.collection && a.collection.remove(a);
                var c = b.models.slice();
                c.splice(0, 0, a);
                b.reset(c);
                return b
            }
        },
        insertUnit_: function(a) {
            a.removeFromCollection();
            var b = this.collection.getParentUnit(),
            c = this.collection.toArray(),
            d = c.indexOf(this);
            this.collection.reset(c.slice(0, d + 1));
            a.get("chapters").reset(c.slice(d + 1));
            c = b.collection.indexOf(b);
            d = b.collection.toArray();
            d.splice(c + 1, 0, a);
            b.collection.reset(d);
            return b.collection
        },
        changeExhibitsEvent_: function(a, b) {
            var c = this.previous("exhibits");
            c && c.off("change", this.exhibitChangeEvent_, this);
            if (b) b.on("change", this.exhibitChangeEvent_, this)
        },
        exhibitChangeEvent_: function(a) {
            this.trigger("change", a)
        }
    });
    TOCChapterModel.DEFAULT_THUMBNAIL_PATH = "../img/.templates/chapter_thumbnail.png";
    window.TOCChapterCollection = XMLBackboneCollection.extend({
        model: TOCChapterModel,
        parentUnit_: null,
        setParentUnit: function(a) {
            this.parentUnit_ = a
        },
        getParentUnit: function() {
            return this.parentUnit_
        }
    });
    window.TOCExhibitModel = TOCComponentModel.extend({
        defaults: {
            path: null,
            sandbox: null,
            spineHeight: null,
            exhibits: null
        },
        initialize: function(a, b) {
            TOCExhibitModel.__super__.initialize.call(this, a, b);
            this.get("exhibits") || this.set("exhibits", new TOCExhibitCollection);
            this.set({
                designation: null,
                enumeration: null,
                title: null,
                type: null
            });
            this.on("change:exhibits", this.changeExhibitsEvent_, this);
            this.get("exhibits").on("change", this.subexhibitChangeEvent_, this)
        },
        toJSON: function() {
            var a = TOCExhibitModel.__super__.toJSON.call(this);
            a.fullPath = URLRouter.getURLForPath(this.documentModel_.get("project").get("shortName"), ExhibitDocumentModel.getFilePathFromSourceLocation(a.path || "") || "", this.documentModel_.get("revision"));
            a.fileName = a.path ? URI(a.path).filename() : null;
            return a
        },
        insertSiblingExhibit: function(a, b) {
            a.collection && a.collection.remove(a);
            var c = this.collection.models.slice(),
            d = c.indexOf(this) + 1;
            b && (d -= 1);
            c.splice(d, 0, a);
            this.collection.reset(c)
        },
        insertModel: function(a) {
            if (a.getXMLNode({
                raw: !0
            }).tagName === "exhibit") {
                var b, c = this.get("exhibits");
                if (! (c.length === 1 && c.indexOf(a) === 0)) return c.length > 0 ? (a.collection && a.collection.remove(a), b = c.models.slice(), b.splice(0, 0, a), c.reset(b), c) : (a.collection && a.collection.remove(a), b = this.collection.models.slice(), b.splice(b.indexOf(this) + 1, 0, a), this.collection.reset(b), this.collection)
            }
        },
        nestModel: function(a) {
            if (a.getXMLNode({
                raw: !0
            }).tagName === "exhibit") {
                var b = this.get("exhibits");
                if (! (b.length === 1 && b.indexOf(a) === 0)) return a.collection && a.collection.remove(a),
                b.add(a),
                b
            }
        },
        changeExhibitsEvent_: function(a, b) {
            var c = this.previous("exhibits");
            c && c.off("change", this.subexhibitChangeEvent_, this);
            if (b) b.on("change", this.subexhibitChangeEvent_, this)
        },
        subexhibitChangeEvent_: function(a) {
            this.trigger("change", a)
        }
    });
    window.TOCExhibitCollection = XMLBackboneCollection.extend({
        model: TOCExhibitModel
    });
    window.TOCFigureModel = XMLBackboneModel.extend({
        defaults: {
            thumbnailPath: null,
            title: null,
            subtitle: null,
            edition: null,
            isbn: null,
            author: null,
            publisher: null,
            publishDate: null,
            productId: null,
            version: null,
            s9version: null,
            revision: null,
            shortName: null,
            searchIndex: null,
            glossaryPath: null,
            configPath: null,
            mapPath: null,
            remarksPath: null,
            reflowable: null,
            webkitOnly: null,
            units: null
        },
        initialize: function(a, b) {
            TOCFigureModel.__super__.initialize.call(this, a, b);
            this.get("units") || this.set("units", new TOCUnitCollection);
            this.get("viewMode") || this.set("viewMode", "title");
            this.on("change:units", this.changeUnitsEvent_, this);
            this.get("units").on("change", this.unitChangeEvent_, this)
        },
        changeUnitsEvent_: function(a, b) {
            var c = this.previous("units");
            c && c.off("change", this.unitChangeEvent_, this);
            if (b) b.on("change", this.unitChangeEvent_, this)
        },
        unitChangeEvent_: function(a) {
            this.trigger("change", a)
        },
        flattenTypes: function() {
            var a = [],
            b = [],
            c = [],
            d = {};
            this.get("units").forEach(function(e) {
                a.push(e);
                e.get("chapters").forEach(function(a) {
                    b.push(a);
                    d[a.cid] = e;
                    a.get("exhibits").forEach(function h(a) {
                        c.push(a); (a = a.get("exhibits")) && a.forEach(h, this)
                    },
                    this)
                },
                this)
            },
            this);
            return {
                units: a,
                chapters: b,
                exhibits: c,
                unitsByChapterCid: d
            }
        },
        removeDeletedItems: function() {
            var a = [],
            b = [],
            c = [];
            this.get("units").forEach(function(d) {
                d.get("isDeleted") && c.push(d);
                d.get("chapters").forEach(function(c) {
                    c.get("isDeleted") ? b.push(c) : c.get("exhibits").forEach(function g(b) {
                        b.get("isDeleted") ? a.push(b) : (b = b.get("exhibits")) && b.forEach(g, this)
                    },
                    this)
                },
                this)
            },
            this);
            a.forEach(function(a) {
                a.collection.remove(a)
            },
            this);
            b.forEach(function(a) {
                a.removeFromCollection()
            },
            this);
            c.forEach(function(a) {
                a.removeFromCollection()
            },
            this)
        },
        getTransientMetadata: function() {
            var a = this.flattenTypes(),
            b = {
                viewMode: this.get("viewMode")
            },
            c = {};
            a.units.forEach(function(a) {
                var b = XMLUtilities.getS9ID(a.getXMLNode({
                    raw: !0
                }));
                c[b] = {
                    isSelected: a.get("isSelected"),
                    isNew: a.get("isNew"),
                    isDeleted: a.get("isDeleted"),
                    isForcedVisible: a.get("isForcedVisible")
                }
            },
            this);
            var d = {};
            a.chapters.forEach(function(a) {
                var b = XMLUtilities.getS9ID(a.getXMLNode({
                    raw: !0
                }));
                d[b] = {
                    isSelected: a.get("isSelected"),
                    isNew: a.get("isNew"),
                    isDeleted: a.get("isDeleted"),
                    isOpen: a.get("isOpen")
                }
            },
            this);
            var e = {};
            a.exhibits.forEach(function(a) {
                var b = a.get("path");
                e[b] = {
                    isSelected: a.get("isSelected"),
                    isNew: a.get("isNew"),
                    isDeleted: a.get("isDeleted"),
                    designation: a.get("designation"),
                    enumeration: a.get("enumeration"),
                    title: a.get("title"),
                    type: a.get("type")
                }
            },
            this);
            return {
                figure: b,
                units: c,
                chapters: d,
                exhibits: e
            }
        },
        applyTransientMetadata: function(a) {
            var b = this.flattenTypes();
            this.set(a.figure);
            b.units.forEach(function(b) {
                var d = XMLUtilities.getS9ID(b.getXMLNode({
                    raw: !0
                })); (d = a.units[d]) && b.set(d)
            },
            this);
            b.chapters.forEach(function(b) {
                var d = XMLUtilities.getS9ID(b.getXMLNode({
                    raw: !0
                })); (d = a.chapters[d]) && b.set(d)
            },
            this);
            b.exhibits.forEach(function(b) {
                var d = b.get("path"); (d = a.exhibits[d]) && b.set(d)
            },
            this)
        },
        getXMLNode: function(a) {
            var a = a || {},
            b = TOCFigureModel.__super__.getXMLNode.call(this, a);
            a.raw || [{
                backbone: "glossaryPath",
                s9ml: "glossary"
            },
            {
                backbone: "configPath",
                s9ml: "bundleconfig"
            },
            {
                backbone: "mapPath",
                s9ml: "map"
            },
            {
                backbone: "remarksPath",
                s9ml: "remarks"
            },
            {
                backbone: "reflowable",
                s9ml: "reflowable"
            },
            {
                backbone: "webkitOnly",
                s9ml: "webkit-only"
            }].forEach(function(a) {
                this.get(a.backbone) === null && (a = b.xpath("//s9ml:" + a.s9ml)) && a.parentNode.removeChild(a)
            },
            this);
            return b
        }
    });
    window.TOCUnitModel = TOCComponentModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            alias: null,
            title: null,
            chapters: null
        },
        initialize: function(a, b) {
            TOCUnitModel.__super__.initialize.call(this, a, b);
            this.set("isForcedVisible", !1);
            this.get("chapters") || this.set("chapters", new TOCChapterCollection);
            this.on("change:chapters", this.changeChaptersEvent_, this);
            this.get("chapters").on("change", this.chapterChangeEvent_, this);
            this.get("chapters").setParentUnit(this)
        },
        isBlank: function() {
            return ["designation", "enumeration", "title", "isForcedVisible", "isNew"].every(function(a) {
                return ! this.get(a)
            },
            this)
        },
        toJSON: function() {
            var a = TOCUnitModel.__super__.toJSON.call(this);
            a.isBlank = this.isBlank();
            return a
        },
        insertModel: function(a) {
            var b = a.getXMLNode({
                raw: !0
            }).tagName;
            if (b === "chapter") return this.insertChapter_(a);
            else if (b === "unit") return this.insertUnit_(a)
        },
        nestModel: function() {},
        insertChapter_: function(a) {
            var b = this.get("chapters");
            if (! (b.length === 1 && b.indexOf(a) === 0)) {
                a.removeFromCollection();
                var c = b.models.slice();
                c.splice(0, 0, a);
                b.reset(c);
                return b
            }
        },
        insertUnit_: function(a) {
            a.removeFromCollection();
            var b = this.collection.toArray();
            b.splice(b.indexOf(this) + 1, 0, a);
            this.collection.reset(b);
            b = this.get("chapters").toArray();
            this.get("chapters").reset();
            a.get("chapters").reset(b);
            return this.collection
        },
        removeFromCollection: function() {
            if (this.collection) {
                var a = this.collection,
                b = a.indexOf(this),
                c = this.get("chapters").toArray();
                this.get("chapters").reset();
                c.length > 0 ? b === 0 ? (b = new TOCUnitModel({
                    chapters: new TOCChapterCollection(c)
                }), a.reset([b].concat(a.toArray()))) : a.at(b - 1).get("chapters").add(c) : b === 0 && a.length > 1 && a.at(1).set("isForcedVisible", !0);
                a.remove(this)
            }
        },
        changeChaptersEvent_: function(a, b) {
            var c = this.previous("chapters");
            c && (c.off("change", this.chapterChangeEvent_, this), c.setParentUnit(null));
            b && (b.on("change", this.chapterChangeEvent_, this), b.setParentUnit(this))
        },
        chapterChangeEvent_: function(a) {
            this.trigger("change", a)
        }
    });
    window.TOCUnitCollection = XMLBackboneCollection.extend({
        model: TOCUnitModel
    });
    window.VideoFigureModel = FigureModel.extend({
        defaults: {
            designation: null,
            enumeration: null,
            video: null,
            videoWidth: null,
            videoHeight: null,
            image: null,
            caption: null,
            cite: null
        },
        initialize: function() {
            VideoFigureModel.__super__.initialize.apply(this, arguments);
            var a = app.getAssetManager();
            if (a.isLoaded("video")) this.set("videoAsset", a.getVideoAsset(this.getStreamName()));
            else a.on("loaded:videos",
            function c() {
                this.set("videoAsset", a.getVideoAsset(this.getStreamName()));
                a.off("loaded:videos", c, this)
            },
            this)
        },
        copyNewFrame: function(a) {
            var a = {
                remoteURL: a,
                filePath: RepositoryLayout.IMG_DIRECTORY + "/video_thumb/" + this.getStreamName() + ".png"
            },
            b = this.get("posterAsset");
            b ? (b.set(a), this.set("image", b.relativePath(this.getDocumentModel().url())), this.trigger("change:posterAsset", this)) : (b = new CopiedImageAssetModel(a), this.set({
                posterAsset: b,
                image: b.relativePath(this.getDocumentModel().url())
            }), app.getSaveHandler().add(b))
        },
        getStreamName: function() {
            var a = this.get("video").match(VideoFigureModel.STREAM_NAME_REGEX_);
            return a ? a[1] : null
        },
        setStream: function(a) {
            this.set({
                video: "[videostream:" + a.get("streamName") + "]",
                videoAsset: a
            });
            if (a.get("status") !== AssetModel.STATUS.COMPLETED) a.on("change:status", this.videoStatusChange_, this)
        },
        videoStatusChange_: function(a, b) {
            b === AssetModel.STATUS.COMPLETED && a.off("change:status", this.videoStatusChange_, this);
            this.set("videoAsset", null, {
                silent: !0
            });
            this.set("videoAsset", a)
        },
        isVideoUploading: function() {
            var a = this.get("videoAsset");
            return a ? a.isUploading() : !1
        },
        toJSON: function() {
            var a = VideoFigureModel.__super__.toJSON.call(this);
            a.streamName = this.getStreamName();
            a.imagePath = this.getImagePath();
            return a
        },
        getImagePath: function() {
            if (this.get("posterAsset")) return this.get("posterAsset").get("remoteURL");
            var a = this.get("image");
            return a ? this.getDocumentModel().url({
                addFilename: !1
            }) + a: null
        }
    });
    VideoFigureModel.STREAM_NAME_REGEX_ = /^\[videostream\:(.*)\]$/;
    VideoFigureModel.DEFAULT_SOURCE = "[default:video]";
    window.S9MLDocumentModel = ExhibitDocumentModel.extend({
        updateFromXML: function() {
            var a = XMLUtilities.serializeElement(this.get("rootPiece").getXMLNode()),
            a = XMLUtilities.addProcessingInstruction(a);
            this.set({
                xml: XMLUtilities.parseDocument(a, this.getXMLDocumentType()),
                content: a
            })
        },
        ensureXMLSerialized: function() {
            this.get("dirtyContent") && this.updateFromXML()
        },
        toJSON: function() {
            var a = S9MLDocumentModel.__super__.toJSON.call(this),
            b = this.get("rootPiece");
            b && _.extend(a, b.toJSON());
            return a
        },
        attrsFromXML_: function(a) {
            var b = a.documentElement,
            b = app.getXMLTemplates().newModel(b, {
                documentModel: this
            }),
            a = S9MLDocumentModel.__super__.attrsFromXML_.call(this, a);
            return _.extend(a, {
                rootPiece: b
            })
        }
    });
    window.FetchDocumentModel = DocumentModel.extend({
        fetchModel_: null,
        defaults: {
            projectModel: null,
            query: null,
            filter: null,
            queryType: null,
            fileType: null,
            results: null,
            moreResults: !1,
            loaded: !1,
            error: null
        },
        initialize: function(a, b) {
            b = b || {};
            b.isSubclass = !0;
            this.set("title", "Fetch Query: " + this.get("query"));
            this.set("results", []);
            this.fetchModel_ = new FetchModel({
                projectModel: this.get("projectModel"),
                query: this.get("query"),
                queryType: this.get("queryType"),
                filter: this.get("filter"),
                fileType: this.get("fileType")
            });
            this.setupChangeProxying_();
            FetchDocumentModel.__super__.initialize.call(this, a, b)
        },
        search: function() {
            this.fetchModel_.search()
        },
        url: function() {
            var a = this.get("projectModel");
            if (!a) return null;
            var b = {},
            c = this.get("query");
            if (c) b.q = c; ["queryType", "fileType", "filter"].forEach(function(a) {
                var c = this.get(a);
                c && (b[a] = c)
            },
            this);
            return URLUtils.expand("{+apiHost}/files/{shortName}/{?params*}", {
                shortName: a.get("shortName"),
                params: b
            })
        },
        errorLoading: function() {
            if (this.get("loaded")) return this.get("results").length === 0;
            else FetchDocumentModel.__super__.errorLoading.call(this)
        },
        setupChangeProxying_: function() {
            this.on("change:projectModel change:query change:filter change:queryType change:fileType", this.updateFetchModel_, this);
            this.fetchModel_.on("change:results change:moreResults change:loaded change:error", this.fetchModelUpdated_, this);
            this.fetchModel_.on("loading", this.fetchModelLoading_, this)
        },
        updateFetchModel_: function() {
            this.fetchModel_.set({
                projectModel: this.get("projectModel"),
                query: this.get("query"),
                queryType: this.get("queryType"),
                filter: this.get("filter"),
                fileType: this.get("fileType")
            })
        },
        fetchModelUpdated_: function() {
            this.set({
                results: this.fetchModel_.get("results"),
                moreResults: this.fetchModel_.get("moreResults"),
                loaded: this.fetchModel_.get("loaded"),
                error: this.fetchModel_.get("error")
            })
        },
        fetchModelLoading_: function() {
            this.trigger("loading")
        }
    });
    FetchDocumentModel.QUERY_TYPES = {
        SELECTOR: "selector",
        TEXT: "text",
        REGEX: "regex"
    };
    FetchDocumentModel.FILE_TYPES = {
        ALL: "all",
        S9ML: "s9ml",
        HTML: "html"
    };
    window.FetchModel = Backbone.Model.extend({
        request_: null,
        nextPageKey_: null,
        defaults: {
            projectModel: null,
            query: null,
            filter: null,
            queryType: null,
            fileType: null,
            results: null,
            moreResults: !1,
            loaded: !1,
            error: null
        },
        initialize: function() {
            this.set("results", [])
        },
        search: function() {
            var a = this.get("results");
            if (a && a.length > 0 && !this.get("moreResults")) console.warn("Attempted a Fetch search when there are no more results!");
            else {
                this.trigger("loading");
                this.set("loaded", !1);
                a = this.get("queryType");
                a || (this.set({
                    queryType: FetchDocumentModel.QUERY_TYPES.TEXT
                },
                {
                    silent: !0
                }), a = this.get("queryType"));
                var b = this.get("query"); (b = this.validateQuery_(b, a)) ? (this.request_ && this.request_.abort(), a = this.getQueryURL_(), this.request_ = new HabitatRequest({
                    url: a,
                    method: "GET",
                    onSuccess: this.fetchRequestSuccess_.bind(this),
                    onFailure: function(a) {
                        console.error("Error making fetch request: ", a);
                        this.set({
                            error: "Request Failed",
                            loaded: !0
                        })
                    }.bind(this)
                }), this.request_.send()) : this.set({
                    error: "Invalid Query",
                    loaded: !0
                })
            }
        },
        isValidXPathRegex_: function(a) {
            try {
                return RegExp(a).test("asdf"),
                !0
            } catch(b) {
                return ! 1
            }
        },
        validateQuery_: function(a, b) {
            switch (b) {
            case FetchDocumentModel.QUERY_TYPES.REGEX:
                return this.isValidXPathRegex_(a) ? a: null;
            case FetchDocumentModel.QUERY_TYPES.SELECTOR:
                break;
            case FetchDocumentModel.QUERY_TYPES.TEXT:
                break;
            default:
                console.error("FetchDocumentModel.validateQuery_: Unknown query type! queryType: ", b)
            }
            return a
        },
        getQueryURL_: function() {
            return URLUtils.expand("{+apiHost}/fetchedxml/{shortName}/{filter}{?params*}", {
                shortName: this.get("projectModel").get("shortName"),
                filter: this.get("filter"),
                params: {
                    query: this.get("query") || "",
                    queryType: this.get("queryType") || FetchDocumentModel.QUERY_TYPES.TEXT,
                    fileType: this.get("fileType") || FetchDocumentModel.FILE_TYPES.ALL,
                    pageStart: this.nextPageKey_ || "",
                    stopTag: "body",
                    replacementTag: "div"
                }
            })
        },
        fetchRequestSuccess_: function(a) {
            var b;
            try {
                b = JSON.parse(a)
            } catch(c) {
                console.error("Response was not valid JSON. ", a);
                this.set({
                    error: "Invalid Response",
                    loaded: !0
                });
                return
            }
            if (!b || !Array.isArray(b.result)) console.error("Response was empty or was missing results. ", b),
            this.set({
                error: "Invalid Response",
                loaded: !0
            });
            else {
                a = !1;
                this.nextPageKey_ = null;
                if (b.info && b.info.paging) a = !!b.info.paging.moreResults,
                this.nextPageKey_ = b.info.paging.pageNext;
                b = b.result.map(function(a) {
                    var b = a.content.replace(/src="\.\.\/\.\.\//gi, 'src="');
                    return {
                        path: a.path,
                        content: b,
                        id: a.id
                    }
                },
                this);
                var d = this.get("results") || [],
                d = d.concat(b);
                this.set({
                    results: d.slice(0),
                    moreResults: a,
                    loaded: !0
                })
            }
        }
    });
    window.GlossEntryModel = XMLBackboneModel.extend({
        defaults: {
            thumbnailPath: null,
            key: null,
            term: null,
            pronunciation: null,
            abbreviation: null,
            definition: null
        },
        initialize: function(a, b) {
            GlossEntryModel.__super__.initialize.call(this, a, b);
            this.get("definition") || this.set("definition", new DefinitionModel, {
                silent: !0
            })
        }
    });
    window.GlossEntryCollection = XMLBackboneCollection.extend({
        model: GlossEntryModel
    });
    window.GlossaryDocumentModel = S9MLDocumentModel.extend({
        initialize: function(a, b) {
            b = b || {};
            b.isSubclass = !0;
            GlossaryDocumentModel.__super__.initialize.call(this, a, b)
        },
        getEntry: function(a) {
            var b = this.get("rootPiece");
            return ! b ? null: b.find(function(b) {
                return b.get("key") === a
            }) || null
        },
        setDefaults: function() {
            GlossaryDocumentModel.__super__.setDefaults.call(this);
            this.set({
                project: this.get("project") || null,
                supportsIssues: !1
            })
        },
        isNew: function() {
            return ! 1
        },
        onContentLoaded_: function(a, b) {
            this.set("filePath", ExhibitDocumentModel.getFilePathFromSourceLocation(this.get("project").get("toc").get("glossaryPath")));
            GlossaryDocumentModel.__super__.onContentLoaded_.call(this, a, b)
        }
    });
    window.ImportedPageModel = Backbone.Model.extend({
        idAttribute: "filePath",
        defaults: {
            filePath: null,
            content: null,
            xml: null,
            localFileURL: null,
            type: null
        },
        initialize: function(a, b) {
            a = a || {};
            b = b || {};
            this.win_ = b.window || window;
            this.set({
                filePath: a.filePath || null,
                content: a.content || null,
                xml: a.xml || null,
                localFileURL: a.localFileURL || this.generateLocalFileURL_(),
                type: a.type || ImportedPageModel.Type.SECTION
            });
            this.get("content") ? this.updateFromContent() : this.get("xml") && this.updateFromXML();
            this.determineType_()
        },
        updateFromXML: function() {
            if (this.get("xml")) {
                var a = XMLUtilities.serializeDocument(this.get("xml")),
                a = a.replace(/<link(.*?)\s*\/>/g, "<link$1></link>"),
                a = a.replace(/ xmlns="http:\/\/www\.w3\.org\/1999\/xhtml"/g, ""),
                a = a.replace(/<html/, '<html xmlns="http://www.w3.org/1999/xhtml"');
                this.set("content", a);
                this.determineType_()
            } else this.set("content", null)
        },
        updateFromContent: function() {
            this.get("content") === null ? this.set("xml", null) : (this.set("xml", XMLUtilities.parseDocument(this.get("content"), XMLUtilities.DOCUMENT_TYPE.XHTML)), this.determineType_())
        },
        getFileName: function() {
            if (this.get("filePath") === null) return null;
            var a = this.get("filePath").match(/([^\/\\]+)$/);
            return (a = a && a.length ? a[0] : null) ? a: null
        },
        getRelativeTo: function(a) {
            var b = this.get("localFileURL");
            if (b) if (a.trim() === "") return "";
            else {
                if (/[^:]+:/.test(a)) return a
            } else return "";
            a.charAt(0) === "/" ? (b = b.match(/^(filesystem.*?\/persistent\/)/)[0], a = a.substring(1)) : b = b.replace(/\/[^\/]*$/, "/");
            return b + a
        },
        clone: function() {
            var a = this.get("xml");
            if (a) {
                var b = a.documentElement.cloneNode(!0),
                a = XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.XHTML),
                b = a.adoptNode(b);
                a.appendChild(b)
            }
            return new ImportedPageModel({
                filePath: this.get("filePath"),
                content: this.get("content"),
                xml: a,
                localFileURL: this.get("localFileURL"),
                type: this.get("type")
            })
        },
        addTracking: function() {
            var a = this.get("xml"),
            b = this.get("content");
            if (!a && b) this.updateFromContent(),
            a = this.get("xml");
            else if (!a) return;
            a.xpathAll("//*").forEach(function(a) {
                a.hasAttribute("s9id") || a.setAttribute("s9id", UUID())
            });
            this.set("xml", a);
            this.updateFromXML()
        },
        removeTracking: function() {
            var a = this.get("xml"),
            b = this.get("content");
            if (!a && b) this.updateFromContent(),
            a = this.get("xml");
            else if (!a) return;
            a.xpathAll("//*[@s9id]").forEach(function(a) {
                a.removeAttribute("s9id")
            });
            this.set("xml", a);
            this.updateFromXML()
        },
        generateLocalFileURL_: function() {
            return this.get("localFileURL") ? this.get("localFileURL") : this.get("filePath") ? FileUtils.getFileURL(this.get("filePath")) : null
        },
        determineType_: function() {
            var a = this.get("type"),
            b = this.get("xml");
            if (b) {
                var c = b.xpath("//xhtml:body");
                if (c) if (c.classList.contains("card-chapter-introduction")) a = ImportedPageModel.Type.CHAPTER_START;
                else if (c.classList.contains("front-matter")) a = ImportedPageModel.Type.FRONT_MATTER;
                else if (c.classList.contains("card-appendix")) a = ImportedPageModel.Type.APPENDIX
            }
            if (!a && !b) a = ImportedPageModel.Type.SECTION;
            this.set("type", a)
        }
    });
    ImportedPageModel.Type = {
        SECTION: "Section",
        FRONT_MATTER: "Front Matter",
        CHAPTER_START: "Chapter Start",
        APPENDIX: "Appendix"
    };
    window.ImportedPageCollection = Backbone.Collection.extend({
        model: ImportedPageModel,
        ordering_: null,
        initialize: function(a, b) {
            b = b || {};
            this.document_ = b.document || document
        },
        comparator: function(a) {
            a = a.get("filePath");
            if (this.ordering_) {
                var b = Object.keys(this.ordering_).length + 1;
                return this.ordering_[a] || b
            }
            return a
        },
        clone: function() {
            var a = new ImportedPageCollection;
            this.forEach(function(b) {
                a.add(b.clone())
            });
            return a
        },
        updateFromXML: function() {
            this.forEach(function(a) {
                a.updateFromXML()
            })
        },
        getGroupings: function() {
            var a = [],
            b = {
                groupType: ImportedPageCollection.Group.UNNAMED,
                title: "Imported Files",
                designation: "Imported Files",
                enumeration: "",
                pages: []
            },
            c = {
                groupType: ImportedPageCollection.Group.FRONT_MATTER,
                title: "Front Matter",
                designation: "Front Matter",
                enumeration: "",
                pages: []
            },
            d = [],
            e,
            f = 1,
            g = {
                groupType: ImportedPageCollection.Group.APPENDIX,
                title: "Appendix",
                designation: "Appendix",
                enumeration: "",
                pages: []
            },
            h = !1;
            this.forEach(function(a) {
                a = a.clone();
                a.get("type") === ImportedPageModel.Type.FRONT_MATTER ? (e && (d.push(e), e = null), c.pages.push(a), h = !1) : a.get("type") === ImportedPageModel.Type.APPENDIX ? (e && (d.push(e), e = null), g.pages.push(a), h = !1) : a.get("type") === ImportedPageModel.Type.CHAPTER_START ? (e && (d.push(e), e = null), e = {
                    groupType: ImportedPageCollection.Group.CHAPTER,
                    designation: "Chapter",
                    enumeration: f,
                    pages: []
                },
                e.title = e.designation + " " + e.enumeration, e.pages.push(a), h = !0, f++) : h && a.get("type") === ImportedPageModel.Type.SECTION ? e.pages.push(a) : h || b.pages.push(a)
            },
            this);
            e && d.push(e);
            b.pages.length && a.push(b);
            c.pages.length && a.push(c);
            d.length && (a = a.concat(d));
            g.pages.length && a.push(g);
            return a
        },
        setOrdering: function(a) {
            this.ordering_ = a
        },
        toChapterPath_: function(a, b) {
            b.toString().length <= 3 && (b = ("00" + b).slice( - 3));
            return a + "/chapter" + b
        }
    });
    ImportedPageCollection.Group = {
        UNNAMED: "Unnamed",
        FRONT_MATTER: "front_matter",
        CHAPTER: "chapter",
        APPENDIX: "appendix"
    };
    window.IssueCommentModel = Backbone.Model.extend({
        defaults: {
            parentIssue: null,
            id: null,
            author: null,
            creationTime: null,
            notes: null,
            statusChange: {},
            priorityChange: {},
            assigneeChange: {},
            isEditing: !1
        },
        req_: null,
        originalDescription: null,
        initialize: function() {
            this.get("author") || this.set({
                author: app.getCurrentUser().get("uid")
            });
            this.get("creationTime") || this.set("creationTime", Date.now());
            this.originalNotes_ = this.get("notes");
            this.on("change", this.updateSaveStatus_, this)
        },
        updateSaveStatus_: function() {
            var a = app.getSaveHandler(); ! this.isNew() && this.isDirty() ? a.add(this) : a.remove(this)
        },
        isDirty: function() {
            return this.originalNotes_ !== this.get("notes")
        },
        setChange: function(a) {
            var b = a.from,
            c = a.to,
            d = {};
            d[a.attribute + "Change"] = b !== c ? {
                from: b,
                to: c
            }: {};
            this.set(d)
        },
        isTrackingChange: function() {
            return this.get("notes") !== null || Object.keys(this.get("priorityChange")).length > 0 || Object.keys(this.get("statusChange")).length > 0 || Object.keys(this.get("assigneeChange")).length > 0
        },
        sync: function(a, b, c) {
            var d = function() {
                this.originalNotes_ = this.get("notes");
                c.success()
            }.bind(this);
            a === "update" ? (this.req_ = new HabitatRequest({
                url: b.url(),
                method: "put",
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                },
                urlEncoded: !1,
                data: JSON.stringify({
                    notes: b.get("notes")
                }),
                onSuccess: d,
                onFailure: c.error
            }), this.req_.send()) : console.error('Sync method "', a, '" not supported on IssueCommentModel.')
        },
        url: function() {
            return URLUtils.expand("{+redpubHost}/redpub_issuechanges/{id}", {
                id: this.get("id") || ""
            })
        },
        toJSON: function(a) {
            typeof a === "undefined" && (a = !1);
            var b = ObjectUtils.clone(IssueCommentModel.__super__.toJSON.call(this));
            if (!a) return b;
            if (this.isNew()) b.id = this.cid;
            b.creationTime = FormatTime.format(b.creationTime);
            a = this.escape("notes");
            b.notesHtml = StringUtils.activateLinks(a);
            for (var c in b) if (b.hasOwnProperty(c)) {
                var a = "comment" + StringUtils.capitalize(c),
                d = b[c];
                delete b[c];
                b[a] = d
            }
            return b
        }
    });
    window.IssueCommentsCollection = Backbone.Collection.extend({
        model: IssueCommentModel,
        comparator: "creationTime",
        toJSON: function(a) {
            return this.map(function(b) {
                return b.toJSON(a)
            })
        },
        save: function() {
            this.forEach(function(a) { ! a.isNew() && a.isDirty() && a.save()
            })
        }
    });
    window.IssueCountsModel = Backbone.Model.extend({
        defaults: {
            chapters: null,
            totals: null,
            totalsByType: null
        },
        loaded_: !1,
        sync: function(a, b, c) {
            if (a == "read") {
                var d = function(a) {
                    c.success(a);
                    this.loaded_ = !0;
                    this.trigger("loaded", this)
                }.bind(this); (new HabitatRequest({
                    url: b.url(),
                    method: "get",
                    onSuccess: function(a) {
                        d(a)
                    }.bind(this),
                    onFailure: function(a) {
                        HabitatRequest.isTemporaryFailure(a) ? d("{}") : c.error(a)
                    }.bind(this)
                })).send()
            }
        },
        url: function() {
            return URLUtils.expand("{+redpubHost}/redpub_issuecounts/{shortName}", {
                shortName: this.get("shortName")
            })
        },
        isLoaded: function() {
            return this.loaded_
        },
        parse: function(a) {
            if ((a = JSON.parse(a).result) && a.chapters) {
                var b = {
                    me: {},
                    totals: {}
                };
                a.chapters = this.collectChapters_(a.chapters, b);
                a.totals = b;
                return a
            }
        },
        collectChapters_: function(a, b) {
            var c = {};
            Object.keys(a).forEach(function(d) {
                var e = a[d],
                f = {
                    files: e,
                    totals: {}
                };
                this.addChapterTotals_(f.totals, b, e);
                c[d] = f
            },
            this);
            return c
        },
        addChapterTotals_: function(a, b, c) {
            a.me = {};
            a.totals = {};
            Object.keys(c).forEach(function(d) {
                d = c[d];
                this.objectAdd_(a.me, d.me);
                this.objectAdd_(a.totals, d.totals);
                this.objectAdd_(b.me, d.me);
                this.objectAdd_(b.totals, d.totals)
            },
            this)
        },
        objectAdd_: function(a, b) {
            Object.keys(b).forEach(function(c) {
                a[c] || (a[c] = 0);
                a[c] += b[c]
            },
            this)
        },
        getCountsFor: function(a, b) {
            if (this.get("chapters")) return a = this.get("chapters")[a],
            !a ? void 0 : typeof b === "undefined" ? a.totals: a.files[b]
        }
    });
    IssueCountsModel.formatCountsForDisplay = function(a) {
        return a.map(function(a) {
            a.me ? (a.meValue = a.me, a.meString = a.me.toString()) : (a.meValue = 0, a.meString = "-");
            return a
        })
    };
    window.IssueModel = Backbone.Model.extend({
        defaults: {
            id: null,
            description: "",
            author: null,
            assignee: null,
            status: null,
            priority: null,
            subExhibitId: null,
            creationTime: null,
            dueDate: null,
            project: null,
            chapter: null,
            filename: null,
            revision: null,
            width: null,
            fontSize: null,
            s9id: null,
            indicatorX: null,
            indicatorY: null,
            highlight: null,
            minimized: !1,
            comments: null,
            sets: null,
            userWidth: null,
            isNew: !0,
            isEditing: !1,
            clientSideComment: null,
            recovery: !1
        },
        req_: null,
        clientSideOnly_: "comments,minimized,isNew,isEditing,clientSideComment,recovery".split(","),
        jsonDataAttributes_: ["userWidth"],
        initialize: function(a, b) {
            b = b || {};
            this.get("comments") || this.set({
                comments: new IssueCommentsCollection
            });
            this.get("sets") || this.set({
                sets: new IssueSetsCollection
            });
            this.set({
                status: this.get("status") || IssueModel.Status.OPEN,
                priority: this.get("priority") || IssueModel.Priority.NORMAL
            });
            this.originalAttributes_ = _.clone(this.attributes);
            this.on("change", this.updateSaveStatus_, this);
            if (!b.ignoreEvents) {
                this.on("change:status", this.updateClientSideComment_.bind(this, "status"), this);
                this.on("change:assignee", this.updateClientSideComment_.bind(this, "assignee"), this);
                this.on("change:priority", this.updateClientSideComment_.bind(this, "priority"), this);
                this.on("change:notes", this.updateClientSideComment_.bind(this, "notes"), this);
                this.get("sets").on("all", this.updateSaveStatus_, this);
                this.boundSetsAllEvent_ = this.trigger.bind(this, "sets:all");
                this.get("sets").on("all", this.boundSetsAllEvent_, this);
                this.boundTriggerCommentsEvent_ = this.trigger.bind(this, "comments:all");
                var c = this.get("comments");
                if (c) c.on("all", this.boundTriggerCommentsEvent_, this)
            }
        },
        unsavedAttributes: function() {
            var a = [],
            b = function(a) {
                var b = this.get(a),
                a = this.originalAttributes_[a];
                return a === void 0 ? !0 : !_.isEqual(b, a) ? !0 : b && b.isDirty && b.isDirty() ? !0 : !1
            }.bind(this),
            c;
            for (c in this.attributes) this.clientSideOnly_.indexOf(c) === -1 && b(c) && a.push(c);
            return a
        },
        addComment: function() {
            var a = this.get("clientSideComment") || new IssueCommentModel;
            a.set({
                parentIssue: this.get("id"),
                isEditing: !0
            },
            {
                silent: !0
            });
            this.get("clientSideComment") || (this.set("clientSideComment", a, {
                silent: !0
            }), this.get("comments").add(a));
            return a
        },
        url: function(a) {
            var a = a || {},
            b = typeof a.issueTrackingURL != "undefined" ? a.issueTrackingURL: !1,
            a = this.get("id") !== null ? this.get("id") : "";
            app.getConfig();
            if (b) {
                if (a === "") return null;
                a = URLUtils.expand("{+redmineHost}/issues/{id}", {
                    id: a
                })
            } else {
                b = this.get("project");
                if (!b && this.collection) b = (b = this.collection.project) ? b.get("shortName") : null;
                if (!b) return null;
                a = URLUtils.expand("{+redpubHost}/redpub_issues/{shortName}/{id}?show=true", {
                    shortName: b,
                    id: a
                })
            }
            return a
        },
        sync: function(a, b, c) {
            c = {
                url: b.url(),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                },
                urlEncoded: !1,
                data: JSON.stringify(b.toJSON()),
                onSuccess: this.successCallback_.bind(this, c.success),
                onFailure: c.error ||
                function() {
                    console.log(a, "fail", arguments)
                }
            };
            a === "create" ? (c.method = "POST", this.req_ = new HabitatRequest(c), this.req_.send()) : a === "update" ? (b.get("comments").save(), c.method = "PUT", this.req_ = new HabitatRequest(c), this.req_.send()) : console.error('Sync method "', a, '" not supported on IssueModel.')
        },
        toJSON: function(a, b) {
            typeof a === "undefined" && (a = !1);
            var c = IssueModel.__super__.toJSON.call(this);
            c.comments = this.get("comments").toJSON(a);
            b ? (c.creationTime = b(c.creationTime), c.dueDate = b(c.dueDate)) : (c.creationTime = FormatTime.format(c.creationTime), c.dueDate = FormatTime.format(c.dueDate));
            var d = this.escape("description");
            c.descriptionHtml = StringUtils.activateLinks(d);
            if (!a) {
                var e = {},
                f = !1;
                this.unsavedAttributes().forEach(function(a) {
                    e[a] = c[a];
                    f = this.jsonDataAttributes_.indexOf(a) !== -1
                },
                this);
                c = e;
                f && this.packJsonData_(c)
            }
            return c
        },
        parse: function(a) {
            if (typeof a === "string") a = JSON.parse(a).result;
            this.explodeJsonData_(a);
            a.isNew = !1;
            a.comments = this.parseComments_(a);
            a.sets = this.parseSets_(a);
            if (a.highlight) a.highlight = TextSelectionModel.createFromHighlight(a.highlight);
            return a
        },
        getIssueType: function() {
            return this.get("s9id") ? IssueModel.Type.ON_ELEMENT: this.get("highlight") ? IssueModel.Type.ON_HIGHLIGHT: IssueModel.Type.FREEFLOATING
        },
        getOriginalAttributes: function() {
            return this.originalAttributes_
        },
        getAssigneeForStatus: function(a) {
            var b = app.getCurrentUser().get("prefs"),
            c = app.getProjectModel().get("shortName"),
            b = b.get("defaultAssignees") || {},
            b = b[c] || {}; (a = b[a]) ? (c = IssueModel.DynamicAssignees[a]) && (c == IssueModel.DynamicAssignees.CREATOR ? a = this.get("author") : c == IssueModel.DynamicAssignees.CURRENT && (a = this.get("assignee"))) : a = this.get("assignee");
            return a
        },
        updateSaveStatus_: function() {
            var a = app.getSaveHandler();
            this.unsavedAttributes().length !== 0 ? a.add(this) : a.remove(this)
        },
        updateClientSideComment_: function(a) {
            if (!this.isNew()) {
                var b = this.get("clientSideComment");
                b || (b = new IssueCommentModel({
                    parentIssue: this.get("id"),
                    author: app.getCurrentUser().get("uid")
                }), this.get("comments").add(b), this.set("clientSideComment", b, {
                    silent: !0
                }));
                a === "notes" ? b.set("notes", this.get("notes")) : (b.setChange({
                    attribute: a,
                    from: this.originalAttributes_[a],
                    to: this.get(a)
                }), b.isTrackingChange() || (this.get("comments").remove(b), this.set("clientSideComment", null, {
                    silent: !0
                })))
            }
        },
        successCallback_: function(a, b) {
            this.get("comments").off("all", this.boundTriggerCommentsEvent_);
            this.get("sets").off();
            var c = this.isNew(),
            d = !!this.get("clientSideComment");
            a(b);
            this.set("clientSideComment", null);
            this.originalAttributes_ = _.clone(this.attributes);
            c ? this.logNewIssueAnalytics_() : d && this.logUpdateIssueAnalytics_();
            this.get("comments").on("all", this.boundTriggerCommentsEvent_, this);
            this.get("sets").on("all", this.updateSaveStatus_, this);
            this.get("sets").on("all", this.boundSetsAllEvent_, this);
            this.trigger("change")
        },
        logNewIssueAnalytics_: function() {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.NEW_ISSUE,
                eventInfo: {
                    issueId: this.get("id"),
                    status: this.get("status"),
                    priority: this.get("priority"),
                    assignee: this.get("assignee"),
                    width: this.get("width"),
                    fontSize: this.get("fontSize"),
                    description: this.get("description")
                }
            })
        },
        logUpdateIssueAnalytics_: function() {
            var a = _.last(this.get("comments").models);
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.UPDATE_ISSUE,
                eventInfo: {
                    issueId: this.get("id"),
                    oldStatus: a.get("statusChange").from || this.get("status"),
                    newStatus: a.get("statusChange").to || this.get("status"),
                    oldPriority: a.get("priorityChange").from || this.get("priority"),
                    newPriority: a.get("priorityChange").to || this.get("priority"),
                    oldAssignee: a.get("assigneeChange").from || this.get("assignee"),
                    newAssignee: a.get("assigneeChange").to || this.get("assignee"),
                    commentText: a.get("notes") || null
                }
            })
        },
        explodeJsonData_: function(a) {
            var b, c;
            if (a.jsonData) {
                try {
                    c = JSON.parse(a.jsonData)
                } catch(d) {}
                if (c) {
                    for (b in c) this.jsonDataAttributes_.indexOf(b) !== -1 && (a[b] = c[b]);
                    delete a.jsonData
                }
            }
        },
        packJsonData_: function(a) {
            var b = {};
            this.jsonDataAttributes_.forEach(function(c) {
                b[c] = this.get(c);
                delete a[c]
            },
            this);
            a.jsonData = JSON.stringify(b)
        },
        parseComments_: function(a) {
            var b = [];
            a.changes && (b = a.changes.map(function(b) {
                return new IssueCommentModel(b, {
                    parentIssue: a.id
                })
            }), delete a.changes);
            return new IssueCommentsCollection(b)
        },
        parseSets_: function(a) {
            var b = [];
            if (a.sets) {
                var c = app.getProjectModel().get("issueSets");
                a.sets.forEach(function(a) { (a = c.get(a)) && b.push(a.clone())
                });
                delete a.sets
            }
            return new IssueSetsCollection(b)
        }
    });
    IssueModel.DynamicAssignees = {
        CURRENT: "current assignee",
        CREATOR: "creator"
    };
    IssueModel.Type = {
        ON_HIGHLIGHT: "on-highlight",
        ON_ELEMENT: "on-element",
        FREEFLOATING: "freefloating"
    };
    IssueModel.Status = {
        OPEN: "open",
        FIXED: "fixed",
        PUNT: "punt",
        STET: "stet",
        CLOSED: "closed"
    };
    IssueModel.getDisplayStatus = function(a) {
        return StringUtils.capitalize(a)
    };
    IssueModel.getStatusID = function() {
        var a = {
            open: 1,
            fixed: 3,
            closed: 5,
            stet: 7,
            inprogress: 8,
            resolved: 12,
            cantfix: 13
        };
        return function(b) {
            return a[b]
        }
    } ();
    IssueModel.Tracker = {
        TODO: "todo",
        PHASE: "phase",
        BUG: "bug",
        SET: "set",
        DELIVERABLE: "deliverable"
    };
    IssueModel.getTrackerID = function() {
        var a = {
            bug: 1,
            todo: 2,
            phase: 3,
            set: 4,
            deliverable: 5
        };
        return function(b) {
            return a[b]
        }
    } ();
    IssueModel.Priority = {
        LOW: "low",
        NORMAL: "normal",
        HIGH: "high",
        URGENT: "urgent",
        IMMEDIATE: "immediate"
    };
    IssueModel.getDisplayPriority = function() {
        var a = {
            low: "Low",
            normal: "Normal",
            high: "High",
            urgent: "Urgent",
            immediate: "Immediate"
        };
        return function(b) {
            return a[b]
        }
    } ();
    IssueModel.generateIssueDBQueryURL = function(a) {
        var a = a || {},
        b = {
            status_id: a.status ? IssueModel.getStatusID(a.status) : null,
            assigned_to_id: a.assignedToId || null,
            tracker_id: a.tracker ? IssueModel.getTrackerID(a.tracker) : null,
            set_filter: null
        };
        if (b.status_id || b.assigned_to_id || b.tracker_id) b.set_filter = 1;
        return a.shortName ? URLUtils.expand("{+redmineHost}/projects/{shortName}/issues{?params*}", {
            shortName: a.shortName,
            params: b
        }) : URLUtils.expand("{+redmineHost}/issues{?params*}", {
            params: b
        })
    };
    window.IssueSetModel = Backbone.Model.extend({
        defaults: {
            id: null,
            subject: "",
            description: "",
            author: null,
            assignee: null,
            status: null,
            creationTime: null,
            project: null
        },
        getDisplayName: function() {
            var a = this.get("id"),
            b = this.get("subject");
            return "#" + a + " " + b
        },
        getRedmineUrl: function() {
            return URLUtils.expand("{+redmineHost}/issues/{id}", {
                id: this.get("id")
            })
        }
    });
    window.IssueSetsCollection = APICollection.extend({
        model: IssueSetModel,
        comparator: "id",
        redpubAvailable_: !0,
        originalJSON_: null,
        projectModel_: null,
        initialize: function(a, b) {
            b = b || {};
            this.reset(a);
            this.originalJSON_ = JSON.stringify(this.toJSON());
            this.projectModel_ = b.projectModel;
            IssueSetsCollection.__super__.initialize.call(this, a, b)
        },
        fetch: function(a) {
            var a = a || {},
            b = a.error,
            c;
            a.error = function(a, e, f) {
                HabitatRequest.isTemporaryFailure(c.xhr) ? (this.redpubAvailable_ = !1, f.success([])) : b && b(a, e, f)
            }.bind(this);
            return c = IssueSetsCollection.__super__.fetch.call(this, a)
        },
        url: function() {
            var a = this.projectModel_ || app.getProjectModel();
            return URLUtils.expand("{+redpubHost}/redpub_issues/{shortName}/?tracker=set", {
                shortName: a.get("shortName")
            })
        },
        parse: function(a) {
            return IssueSetsCollection.__super__.parse.call(this, a).filter(function(a) {
                return a.status !== IssueModel.Status.CLOSED
            })
        },
        getDisplayName: function(a) {
            if (a = this.get(a)) return a.getDisplayName()
        },
        isDirty: function() {
            return this.originalJSON_ !== JSON.stringify(this.toJSON())
        },
        isRedpubAvailable: function() {
            return this.redpubAvailable_
        },
        toJSON: function() {
            return this.pluck("id")
        }
    });
    window.IssuesCollection = APICollection.extend({
        model: IssueModel,
        filterParams_: null,
        setFilterParams: function(a) {
            this.filterParams_ = a
        },
        save: function() {
            this.forEach(function(a) {
                a.isNew() || a.unsavedAttributes().length ? a.save() : a.get("comments").save()
            })
        },
        url: function() {
            return URLUtils.expand("{+redpubHost}/redpub_issues/{shortName}/{?params*}", {
                shortName: app.getProjectModel().get("shortName"),
                params: this.filterParams_
            })
        }
    });
    window.TextSelectionLegacyModel = Backbone.Model.extend({
        defaults: {
            text: null,
            startId: null,
            startIndex: null,
            endId: null,
            endIndex: null
        },
        initialize: function() {
            this.set({
                text: this.cleanText_(this.get("text"))
            })
        },
        toRange: function(a) {
            if ((a = this.currentRange_(a)) && this.cleanText_(a.toString()) == this.get("text")) return a
        },
        currentRange_: function(a) {
            var b = XMLUtilities.getNodeByS9ID(a, this.get("startId")),
            c = XMLUtilities.getNodeByS9ID(a, this.get("endId"));
            if (b && c && (b = (new DOMWalker(b)).toCharOffsetLegacy(this.get("startIndex")), c = (new DOMWalker(c)).toCharOffsetLegacy(this.get("endIndex"), !0), b.node && c.node)) return a = a.createRange(),
            a.setStart(b.node, b.offset),
            a.setEnd(c.node, c.offset),
            a
        },
        cleanText_: function(a) {
            return a ? a.replace(RegExp.newlines, "").trim() : null
        }
    });
    window.TextSelectionModel = Backbone.Model.extend({
        defaults: {
            text: null,
            startId: null,
            startOffset: null,
            endId: null,
            endOffset: null
        },
        initialize: function(a, b) {
            b && this.fromRange_(b);
            this.set({
                text: TextSelectionModel.cleanText(this.get("text"))
            })
        },
        toRange: function(a) {
            if ((a = this.currentRange_(a)) && TextSelectionModel.cleanText(a.toString()) === this.get("text")) return a
        },
        fromRange_: function(a) {
            var b = (new DOMWalker(a.startContainer)).toParentOffset(a.startOffset),
            c = (new DOMWalker(a.endContainer)).toParentOffset(a.endOffset);
            this.set({
                text: TextSelectionModel.cleanText(a.toString()),
                startId: XMLUtilities.getS9ID(b.node),
                startOffset: b.offset,
                endId: XMLUtilities.getS9ID(c.node),
                endOffset: c.offset
            },
            {
                silent: !0
            })
        },
        currentRange_: function(a) {
            var b = XMLUtilities.getNodeByS9ID(a, this.get("startId")),
            c = XMLUtilities.getNodeByS9ID(a, this.get("endId"));
            if (b && c && (b = (new DOMWalker(b)).fromParentOffset(this.get("startOffset")), c = (new DOMWalker(c)).fromParentOffset(this.get("endOffset")), b.node && c.node)) return a = a.createRange(),
            a.setStart(b.node, b.offset),
            a.setEnd(c.node, c.offset),
            a
        }
    });
    TextSelectionModel.cleanText = function(a) {
        return a ? a.replace(RegExp.newlines, "") : null
    };
    TextSelectionModel.createFromHighlight = function(a) {
        return a.hasOwnProperty("startIndex") ? new TextSelectionLegacyModel(a) : new TextSelectionModel(a)
    };
    window.LinkResolverModel = APIModel.extend({
        defaults: {
            links: null
        },
        documentModel_: null,
        initialize: function(a, b) {
            b = b || {};
            this.documentModel_ = b.documentModel || null;
            LinkResolverModel.__super__.initialize.call(this, a, b)
        },
        resolve: function(a, b) {
            var b = b || 0,
            c, d, e = this.documentModel_.get("project"),
            f = URI(a);
            if (URLUtils.isBracketLink(a) || UUID.isUUID(a)) if (d = this.getTargets(a), this.loaded_) if (Array.isArray(d)) if (d.length) if (d[b]) return f = ExhibitDocumentModel.getFilePathFromSourceLocation(d[b].path),
            URLRouter.getFilePath(e.get("shortName"), f, null, {
                s9id: d[b].id
            });
            else d = "Index does not exist.";
            else d = "It points at a nonexistent page.";
            else d = "This type is not supported yet.";
            else d = "They are not loaded yet.";
            else if (/^https?$/.test(f.scheme())) c = a;
            else if (f.is("relative") && /\.(s9ml|html)$/.test(f.filename())) {
                c = this.documentModel_.get("revision");
                var g = f.hash(),
                h = URI(this.documentModel_.get("filePath"));
                h.filename(f.pathname());
                c = URLRouter.getURLForPath(e.get("shortName"), h.toString(), c) + g
            } else if (/^#./.test(a)) c = f.hash();
            else if (f.scheme() === "mailto") c = a;
            else if (f.scheme() === "maps") return "https://maps.google.com/?" + a.replace(/^maps:\??/, "");
            else d = "Unknown type of link.";
            if (d) throw "Link could not be resolved: " + d;
            return c
        },
        getTargets: function(a) {
            if (!this.loaded_) return null;
            var b = (this.get("links") || []).find(function(b) {
                return b.link === a
            });
            return ! b || !b.targets ? null: b.targets.map(function(a) {
                var b = a.filePath.match(/^trunk\/s9ml\/(.+)$/);
                return {
                    path: b && b[1],
                    id: a.nodeId
                }
            })
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/links/{shortName}/{?sourceFilePath}", {
                shortName: app.getProjectModel().get("shortName"),
                sourceFilePath: "trunk/head/" + this.documentModel_.get("filePath")
            })
        },
        parse: function(a) {
            a = a || [];
            return {
                links: a
            }
        }
    });
    window.BookModel = Backbone.Model.extend({
        initialized_: !1,
        defaults: {
            pages: null,
            currentPage: null,
            currentPattern: null,
            selection: null,
            search: null,
            patterns: null
        },
        initialize: function(a) {
            a = a || {};
            this.localStorage_ = a.localStorage || window.localStorage;
            this.initialized_ = !0;
            this.set({
                pages: a.pages || new ImportedPageCollection,
                currentPage: a.currentPage || this.getDefaultPage(),
                search: new SearchModel(void 0, {
                    book: this
                }),
                selection: new SelectionModel(void 0, {
                    book: this
                }),
                patterns: new MapperPatternCollection
            })
        },
        getDefaultPage: function() {
            var a = null,
            b = this.localStorage_[BookModel.CURRENT_PAGE_LOCAL_STORAGE_];
            b && this.get("pages") && (a = this.get("pages").get(b)); ! a && this.get("pages") && this.get("pages").length && (a = this.get("pages").at(0));
            return a || null
        },
        clearDefaultPage: function() {
            delete this.localStorage_[BookModel.CURRENT_PAGE_LOCAL_STORAGE_]
        },
        set: function(a, b, c) {
            BookModel.__super__.set.apply(this, arguments);
            if (this.initialized_) {
                var d;
                typeof a === "object" || !a ? (d = a, c = b) : (d = {},
                d[a] = b);
                d.currentPage && this.persistDefaultPage_()
            }
        },
        getNextUnmapped: function() {
            var a = this.get("currentPage"),
            b = this.getNextUnmappedOnCurrentPage_();
            if (b) return b;
            for (var c = this.get("pages"), d = c.indexOf(a), e = d + 1; e < c.length; e++) if (a = c.at(e), b = this.getNextUnmappedOnPage_(a)) return b;
            for (e = 0; e < d; e++) if (a = c.at(e), b = this.getNextUnmappedOnPage_(a)) return b;
            return null
        },
        getNextUnmappedOnCurrentPage_: function() {
            var a = this.get("currentPage"),
            b = null;
            if (!a) return b;
            var c = a.get("xml"),
            d = c.querySelector("body").getAttribute("s9id"),
            e = this.get("selection").getSelectedS9IDs();
            e.length && (d = e[e.length - 1]);
            for (var c = c.xpathAll('//*[@s9id="' + d + '"]|//*[@s9id="' + d + '"]//descendant::*|//*[@s9id="' + d + '"]//following::*'), f = null, g = 0; g < c.length; g++) if (! (e.length && c[g].getAttribute("s9id") === d) && !c[g].hasAttribute("x-finished")) {
                f = c[g];
                break
            }
            f && (b = {
                s9id: f.getAttribute("s9id"),
                page: a,
                currentPage: !0
            });
            return b
        },
        getNextUnmappedOnPage_: function(a) {
            var b = null,
            c = a.get("xml").querySelector("body:not([x-finished]),body *:not([x-finished])");
            c && (b = {
                s9id: c.getAttribute("s9id"),
                page: a,
                currentPage: !1
            });
            return b
        },
        persistDefaultPage_: function() {
            this.localStorage_[BookModel.CURRENT_PAGE_LOCAL_STORAGE_] = this.get("currentPage").get("filePath")
        }
    });
    BookModel.CURRENT_PAGE_LOCAL_STORAGE_ = "defaultFilePath";
    window.MapperModel = Backbone.Model.extend({
        defaults: {
            book: null,
            project: null
        }
    });
    window.MapperPatternModel = Backbone.Model.extend({
        defaults: {
            id: null,
            name: null,
            options: null
        },
        initialize: function() {
            this.set("options", new MapperPatternOptionCollection)
        },
        map: function(a, b, c, d) {
            b = b.getEnabled();
            b.forEach(function(a) {
                var b = a.get("page"),
                g = b.get("xml"),
                a = a.get("chunk")[0],
                b = this.filterHTML_(this.transform_(a, b, c, d), g, a);
                this.replaceOldWithNew_(a, b)
            }.bind(this));
            a.get("pages").updateFromXML()
        },
        failsValidation: function() {
            return null
        },
        transform_: function() {},
        toTag_: function(a, b) {
            var c = "";
            c += "<" + b + ' xmlns="' + XHTML_NS + '"';
            HTMLContent.hasPageNumber(a) && (c += ' sourcepage="' + a.getAttribute("sourcepage") + '"');
            c += ">";
            c += a.innerHTML;
            c += "</" + b + ">";
            return c
        },
        filterHTML_: function(a, b, c) {
            a = a.replace(/class="\s*([^"]+?)\s*"/g, 'class="$1"');
            a = XMLUtilities.parseFragment(a, XMLUtilities.DOCUMENT_TYPE.XHTML, b.documentElement).firstElementChild;
            PrettyPrinter.prettify(a);
            a = b.adoptNode(a);
            a.hasAttribute("s9id") || a.setAttribute("s9id", c.getAttribute("s9id"));
            a.setAttribute("x-finished", !0);
            return a
        },
        replaceOldWithNew_: function(a, b) {
            var c = a.parentNode;
            c.tagName.toLowerCase() === "p" && !HTMLContent.canNest(b, c) ? this.reparentBlockLevel_(a, b) : DOMUtils.replaceNode(a, b)
        },
        reparentBlockLevel_: function(a, b) {
            for (var c = a.parentNode,
            d = a.ownerDocument.createDocumentFragment(), e = c.getAttribute("sourcepage"), f, g = c.firstChild; g;) {
                f = null;
                g.parentNode.removeChild(g);
                if (g.nodeType === Node.TEXT_NODE) {
                    if (g.nodeValue.trim() === "") {
                        g = c.firstChild;
                        continue
                    }
                    f = c.cloneNode(!1);
                    f.setAttribute("s9id", UUID());
                    d.appendChild(f);
                    f.appendChild(g)
                } else b.getAttribute("s9id") === g.getAttribute("s9id") ? d.appendChild(b) : (f = c.cloneNode(!1), f.setAttribute("s9id", UUID()), d.appendChild(f), f.appendChild(g));
                f && HTMLContent.hasPageNumber(c) && f.setAttribute("sourcepage", e);
                g = c.firstChild
            }
            DOMUtils.replaceNode(c, d)
        }
    });
    window.MultiMapPatternModel = MapperPatternModel.extend({
        defaults: {
            container: null
        },
        getMappableOptions: function() {
            var a = [];
            this.get("options").forEach(function(b) {
                b.get("mapsToElement") && a.push(b)
            });
            return new MapperPatternOptionCollection(a)
        },
        getNonMappableOptions: function() {
            var a = [];
            this.get("options").forEach(function(b) {
                b.get("mapsToElement") || a.push(b)
            });
            return new MapperPatternOptionCollection(a)
        },
        toJSON: function() {
            var a = MultiMapPatternModel.__super__.toJSON.call(this);
            a.multiMapPattern = !0;
            return a
        },
        map: function(a, b, c, d) {
            MultiMapPatternModel.__super__.map.apply(this, arguments);
            var e = a.get("pages");
            e.forEach(function(a) {
                a.get("xml").querySelectorAll("[x-temporary]").forEach(function(a) {
                    var b = DOMUtils.createChildFragment(a);
                    DOMUtils.replaceNode(a, b)
                })
            });
            e.updateFromXML()
        },
        handleExtraMultiMapElements_: function(a) {
            for (var b = "",
            c, d = a.ownerDocument,
            e = 0; e < a.childNodes.length; e++) {
                var f = a.childNodes[e];
                f.nodeType === Node.ELEMENT_NODE && f.getAttribute("x-visited") || (HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, f) ? (c || (c = d.createElementNS(XHTML_NS, "p"), c.setAttribute("s9id", UUID())), c.appendChild(f.cloneNode(!0)), HTMLContent.hasPageNumber(a) && !HTMLContent.hasPageNumber(c) && c.setAttribute("sourcepage", a.getAttribute("sourcepage"))) : c && (b += XMLUtilities.serializeElement(c), c = null), c || (b += XMLUtilities.serializeElement(f)))
            }
            c && (b += XMLUtilities.serializeElement(c));
            return b
        }
    });
    window.ListPatternModel = MultiMapPatternModel.extend({
        selectListItems: function(a) {
            this.ignoreDisabledSearchResults_(a);
            var b = this.getMatchingNodes_(a),
            c = a.get("search"),
            d = c.get("results");
            d.getEnabled().length > 1 && (d = this.recreateSearchResults_(a, b));
            this.removeIgnored_(a, d);
            c.set("results", d)
        },
        getMatchingNodes_: function(a) {
            var b = [],
            c = a.get("selection"),
            a = c.getSingleElemNode(),
            d = c.getMultipleNodes(); (a ? [a] : d).forEach(function(a) {
                a = c.getSelectorFor(a, a.parentNode, !0);
                b["_" + a] || (b.push(a), b["_" + a] = !0)
            });
            return b
        },
        recreateSearchResults_: function(a, b) {
            var c = b.join(", ").replace(/, $/, ""),
            d = new SearchResultCollection,
            e = a.get("selection");
            a.get("pages").forEach(function(a) {
                var g = a.get("xml").querySelectorAll(c);
                if (g.length) for (var h = 0; h < g.length; h++) {
                    var i = g[h],
                    l = null;
                    if (!i.getAttribute("x-ignore")) {
                        var j = [];
                        j.push(i);
                        i.setAttribute("x-ignore", !0);
                        for (var o = i.nextElementSibling; o && !o.getAttribute("x-ignore");) {
                            l = e.getSelectorFor(o, o.parentNode, !0);
                            if (b["_" + l]) j.push(o),
                            o.setAttribute("x-ignore", !0);
                            else break;
                            o = o.nextElementSibling
                        }
                        for (o = i.previousElementSibling; o && !o.getAttribute("x-ignore");) {
                            l = e.getSelectorFor(o, o.parentNode, !0);
                            if (b["_" + l]) j.splice(0, 1, o),
                            o.setAttribute("x-ignore", !0);
                            else break;
                            o = o.previousElementSibling
                        }
                        var q = "";
                        j.forEach(function(a) {
                            q += XMLUtilities.serializeElement(a) + "\n";
                            q = q.replace(/ x\-ignored="true"/g, "")
                        });
                        i = new SearchResultModel({
                            enabled: !0,
                            page: a,
                            content: q,
                            chunk: j
                        });
                        d.add(i)
                    }
                }
            });
            return d
        },
        removeIgnored_: function(a, b) {
            var c = a.get("pages");
            c.forEach(function(a) {
                for (var a = a.get("xml").querySelectorAll("[x-ignore]"), b = 0; a && b < a.length; b++) a[b].removeAttribute("x-ignore")
            });
            b.forEach(function(a) {
                a.get("chunk").forEach(function(a) {
                    a.removeAttribute("x-ignore");
                    a.querySelectorAll("[x-ignore]").forEach(function(a) {
                        a.removeAttribute("x-ignore")
                    })
                });
                var b = a.get("content"),
                b = b.replace(/ x\-ignore="true"/g, "");
                a.set("content", b)
            });
            c.updateFromXML()
        },
        doListMapping_: function(a, b, c) {
            var d = this.get("options"),
            b = a.ownerDocument.createElementNS(XHTML_NS, b);
            b.setAttribute("s9id", a.getAttribute("s9id"));
            b.setAttribute("x-finished", !0);
            var e = [];
            c && e.push("list-step");
            var f;
            d.get("bulletType") && (f = d.get("bulletType").get("value"));
            var g;
            d.get("parenthesis") && (g = d.get("parenthesis").get("value"));
            f && e.push(f);
            g && e.push(g);
            e.length && b.setAttribute("class", e.join(" "));
            f = !1;
            d.get("bulletsBolded") && (f = d.get("bulletsBolded").get("value") === "yes");
            ListUtilities.toListItems(a, b, c, !0, f);
            this.handlePageNumber_(b);
            a = XMLUtilities.serializeElement(b);
            c || (a = ListUtilities.stripListDecorations(a));
            return a
        },
        ignoreDisabledSearchResults_: function(a) {
            a.get("search").get("results").forEach(function(a) {
                a.get("enabled") || a.get("chunk").forEach(function(a) {
                    a.setAttribute("x-ignore", !0)
                })
            })
        },
        handlePageNumber_: function(a) {
            HTMLContent.hasPageNumber(a.firstElementChild) && a.setAttribute("sourcepage", a.firstElementChild.getAttribute("sourcepage"))
        }
    });
    window.MapperPatternCollection = Backbone.Collection.extend({
        model: MapperPatternModel,
        initialize: function(a, b) {
            b = b || {};
            this.window_ = b.window || window;
            this.add([new CardTypePatternModel, new CalloutPatternModel, new FigurePatternModel, new HeaderPatternModel, new HeadingPatternModel, new OrderedListPatternModel, new UnorderedListPatternModel, new StepListPatternModel, new ParagraphPatternModel, new SectionPatternModel, new BlockquotePatternModel, new InlineBoldPatternModel, new InlineItalicPatternModel, new InlineSubscriptPatternModel, new InlineSuperscriptPatternModel])
        }
    });
    window.MapperPatternOptionModel = Backbone.Model.extend({
        defaults: {
            id: null,
            name: null,
            isList: null,
            value: null,
            defaultValue: null,
            values: null,
            mapsToElement: null,
            isImage: null,
            allowedOn: null,
            selector: null
        },
        initialize: function(a) {
            a = a || {};
            this.set({
                isList: typeof a.isList !== "undefined" && a.isList !== null ? a.isList: !1,
                mapsToElement: typeof a.mapsToElement !== "undefined" && a.mapsToElement !== null ? a.mapsToElement: !1,
                isImage: typeof a.isImage !== "undefined" && a.isImage !== null ? a.isImage: !1,
                values: a.values || [],
                allowedOn: a.allowedOn || {}
            })
        }
    });
    window.MapperPatternOptionCollection = Backbone.Collection.extend({
        model: MapperPatternOptionModel,
        applyDefaults: function() {
            this.forEach(function(a) {
                a.get("mapsToElement") || a.get("defaultValue") === null || a.set("value", a.get("defaultValue"))
            })
        }
    });
    window.BlockquotePatternModel = MultiMapPatternModel.extend({
        initialize: function(a, b) {
            BlockquotePatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "blockquotePattern",
                name: "blockquote"
            });
            this.get("options").add([new MapperPatternOptionModel({
                id: "blockquoteLayout",
                name: "layout",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "fullWidth",
                    name: "full width",
                    value: ""
                },
                {
                    id: "halfWidth",
                    name: "half width",
                    value: "width-half-right"
                }]
            }), new MapperPatternOptionModel({
                id: "blockquoteImage",
                name: "image",
                isImage: !0,
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "creditTitle",
                name: "credit title",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "creditInfo",
                name: "credit info",
                mapsToElement: !0
            })])
        },
        transform_: function(a) {
            var b = this.get("options"),
            c = {
                blockquoteS9ID: a.getAttribute("s9id")
            },
            d = [],
            e = b.get("blockquoteLayout");
            e.get("value") && d.push(e.get("value"));
            b.get("blockquoteImage").get("selector") && d.push("blockquote-image");
            c.blockquoteClass = d.join(" ");
            b = a.querySelector(b.get("blockquoteImage").get("selector"));
            c.imgSrc = "";
            if (b) c.blockquoteImage = !0,
            c.figureS9ID = UUID(),
            c.imgSrc = b.getAttribute("src"),
            c.imgS9ID = b.getAttribute("s9id"),
            b.setAttribute("x-visited", !0),
            b.parentNode.removeChild(b);
            this.doBlockquoteCreditMapping_(a, c);
            c.contents = this.doBlockquoteContent_(a, c);
            return Templates["mapper/pattern/blockquotePatternTemplate"](c, {
                raw: !0
            })
        },
        doBlockquoteCreditMapping_: function(a, b) {
            var c = this.get("options"),
            d;
            b.credit = !1;
            b.creditS9ID = UUID();
            if ((d = c.get("creditTitle").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            b.credit = !0,
            b.creditTitle = d.innerHTML,
            b.creditTitleS9ID = d.getAttribute("s9id"),
            d.parentNode.removeChild(d),
            d.setAttribute("x-visited", !0);
            if ((d = c.get("creditInfo").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            b.credit = !0,
            b.creditInfo = d.innerHTML,
            b.creditInfoS9ID = d.getAttribute("s9id"),
            d.parentNode.removeChild(d),
            d.setAttribute("x-visited", !0)
        },
        doBlockquoteContent_: function(a, b) {
            var c = "",
            d = a.ownerDocument,
            e = !1;
            if (HTMLContent.hasPageNumber(a)) b.hasBlockquotePageNumber = !0,
            b.blockquotePageNumber = a.getAttribute("sourcepage"),
            e = !0;
            for (var f = !0,
            g = !1,
            h = 0; h < a.childNodes.length++; h++) {
                var i = a.childNodes[h];
                if (! (i.nodeType === Node.ELEMENT_NODE && i.getAttribute("x-visited"))) {
                    HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, i) || (f = !1);
                    var l = i.nodeType === Node.TEXT_NODE || HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, i);
                    f && !g && l ? (c += '<p s9id="' + UUID() + '" x-finished="true"><q s9id="' + UUID() + '" x-finished="true">', g = !0) : f && g && !l && (c += "</q></p>", f = !1);
                    i.nodeType === Node.ELEMENT_NODE && (i.setAttribute("x-finished", !0), i.querySelectorAll("*").forEach(function(a) {
                        a.setAttribute("x-finished", !0)
                    }));
                    if (!f && i.nodeType === Node.ELEMENT_NODE && i.tagName === "p") {
                        if (l = d.createElementNS(XHTML_NS, "q"), l.setAttribute("s9id", UUID()), l.setAttribute("x-finished", !0), l.innerHTML = i.innerHTML, i.innerHTML = l.outerHTML, c += XMLUtilities.serializeElement(i), !e && HTMLContent.hasPageNumber(i)) b.hasBlockquotePageNumber = !0,
                        b.blockquotePageNumber = i.getAttribute("sourcepage"),
                        e = !0
                    } else f && g && h === a.childNodes.length - 1 ? (c += XMLUtilities.serializeElement(i), c += "</q></p>", f = !1) : c += XMLUtilities.serializeElement(i)
                }
            }
            return c
        }
    });
    window.CalloutPatternModel = MultiMapPatternModel.extend({
        initialize: function(a, b) {
            CalloutPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "calloutPattern",
                name: "callout"
            });
            var c = this.createNonMappableOptions_(),
            d = this.createMappableOptions_();
            this.get("options").add(c.concat(d))
        },
        failsValidation: function() {
            var a = this.get("options");
            if (a.get("navigateTo").get("value") === "callout") if (a.get("title").get("selector")) {
                if (!a.get("subTitle").get("selector")) return "Select a subtitle for this Basic Callout"
            } else return "Select a title for this Basic Callout";
            else return null
        },
        transform_: function(a) {
            var b = this.get("options"),
            c = {},
            d = b.get("navigateTo").get("value"),
            d = d.replace(/^callout\s?(?:callout\-)?/g, "") || "basic";
            c.rootS9ID = a.getAttribute("s9id");
            c.calloutClasses = b.get("navigateTo").get("value");
            c.addHref = d !== "inline-audio";
            c.inlineAudio = d === "inline-audio";
            var e;
            if ((e = b.get("title").get("selector")) && a.querySelector(e)) e = a.querySelector(e),
            c.title = e.innerHTML,
            c.titleS9ID = e.getAttribute("s9id"),
            e.setAttribute("x-visited", !0),
            e.parentNode.removeChild(e),
            c.hasTitlePageNumber = HTMLContent.hasPageNumber(e),
            c.titlePageNumber = e.getAttribute("sourcepage");
            if (e = (e = b.get("image").get("selector")) ? a.querySelector(e) : null) c.image = e.getAttribute("src"),
            c.imageS9ID = e.getAttribute("s9id"),
            c.imageFigureS9ID = UUID(),
            e.setAttribute("x-visited", !0),
            e.parentNode.removeChild(e);
            if ((e = b.get("subTitle").get("selector")) && a.querySelector(e)) e = a.querySelector(e),
            c.subTitle = e.innerHTML,
            c.subTitleS9ID = e.getAttribute("s9id"),
            e.setAttribute("x-visited", !0),
            e.parentNode.removeChild(e),
            c.hasSubtitlePageNumber = HTMLContent.hasPageNumber(e),
            c.subtitlePageNumber = e.getAttribute("sourcepage");
            if ((e = b.get("secondSubTitle").get("selector")) && a.querySelector(e)) e = a.querySelector(e),
            c.secondSubTitle = e.innerHTML,
            c.secondSubTitleS9ID = e.getAttribute("s9id"),
            e.setAttribute("x-visited", !0),
            e.parentNode.removeChild(e),
            c.hasSecondSubtitlePageNumber = HTMLContent.hasPageNumber(e),
            c.secondSubtitlePageNumber = e.getAttribute("sourcepage");
            e = b.get("inlineAudioDetails").get("selector");
            if (d === "inline-audio" && e && a.querySelector(e)) e = a.querySelector(e),
            c.inlineAudioDetails = e.innerHTML,
            c.inlineAudioDetailsS9ID = e.getAttribute("s9id"),
            c.inlineAudioDetailsLinkS9ID = UUID(),
            e.setAttribute("x-visited", !0),
            e.parentNode.removeChild(e),
            c.hasAudioPageNumber = HTMLContent.hasPageNumber(e),
            c.audioPageNumber = e.getAttribute("sourcepage");
            c.nonMappedContent = this.handleExtraMultiMapElements_(a);
            return Templates["mapper/pattern/calloutPatternTemplate"](c, {
                raw: !0
            })
        },
        createNonMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "navigateTo",
                name: "navigate to",
                isList: !0,
                defaultValue: "callout",
                values: [{
                    id: "basic",
                    name: "basic",
                    value: "callout"
                },
                {
                    id: "web",
                    name: "web",
                    value: "callout callout-web"
                },
                {
                    id: "audio",
                    name: "audio",
                    value: "callout callout-audio"
                },
                {
                    id: "video",
                    name: "video",
                    value: "callout callout-video"
                },
                {
                    id: "custom",
                    name: "custom",
                    value: "callout callout-custom"
                },
                {
                    id: "threed",
                    name: "3D",
                    value: "callout callout-threed"
                },
                {
                    id: "molecule",
                    name: "molecule",
                    value: "callout callout-molecule"
                },
                {
                    id: "simple",
                    name: "simple",
                    value: "callout callout-simple"
                },
                {
                    id: "assessment",
                    name: "assessment",
                    value: "callout callout-assessment"
                },
                {
                    id: "keyTerms",
                    name: "key terms",
                    value: "callout callout-key-term"
                },
                {
                    id: "table",
                    name: "table",
                    value: "callout callout-table"
                },
                {
                    id: "transcript",
                    name: "transcript",
                    value: "callout callout-transcript"
                },
                {
                    id: "inlineAudio",
                    name: "inline audio",
                    value: "callout callout-inline-audio"
                }]
            })]
        },
        createMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "title",
                name: "title",
                mapsToElement: !0,
                allowedOn: {
                    field: "navigateTo",
                    values: "callout,callout callout-web,callout callout-audio,callout callout-video,callout callout-custom,callout callout-threed,callout callout-molecule".split(",")
                }
            }), new MapperPatternOptionModel({
                id: "subTitle",
                name: "subtitle",
                mapsToElement: !0,
                allowedOn: {
                    field: "navigateTo",
                    values: "callout,callout callout-web,callout callout-audio,callout callout-video,callout callout-custom,callout callout-threed,callout callout-molecule,callout callout-simple,callout callout-assessment,callout callout-key-term,callout callout-table,callout callout-transcript,callout callout-inline-audio".split(",")
                }
            }), new MapperPatternOptionModel({
                id: "secondSubTitle",
                name: "second subtitle",
                mapsToElement: !0,
                allowedOn: {
                    field: "navigateTo",
                    values: "callout,callout callout-web,callout callout-audio,callout callout-video,callout callout-custom,callout callout-threed,callout callout-molecule".split(",")
                }
            }), new MapperPatternOptionModel({
                id: "image",
                name: "image",
                isImage: !0,
                mapsToElement: !0,
                allowedOn: {
                    field: "navigateTo",
                    values: ["callout", "callout callout-web", "callout callout-audio", "callout callout-video", "callout callout-custom"]
                }
            }), new MapperPatternOptionModel({
                id: "inlineAudioDetails",
                name: "inline audio details",
                mapsToElement: !0,
                allowedOn: {
                    field: "navigateTo",
                    values: ["callout callout-inline-audio"]
                }
            })]
        }
    });
    window.CardTypePatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            CardTypePatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "cardTypePattern",
                name: "card type"
            });
            this.get("options").add([new MapperPatternOptionModel({
                id: "cardType",
                isList: !0,
                values: [{
                    id: "section",
                    name: "section",
                    value: ImportedPageModel.Type.SECTION
                },
                {
                    id: "frontMatter",
                    name: "front matter",
                    value: ImportedPageModel.Type.FRONT_MATTER
                },
                {
                    id: "chapterStart",
                    name: "chapter start",
                    value: ImportedPageModel.Type.CHAPTER_START
                },
                {
                    id: "appendix",
                    name: "appendix",
                    value: ImportedPageModel.Type.APPENDIX
                }]
            })])
        },
        transform_: function(a, b, c, d) {
            b.set("type", d);
            a.classList.remove("card-chapter-introduction", "card-appendix", "front-matter");
            switch (d) {
            case ImportedPageModel.Type.CHAPTER_START:
                a.classList.add("card-chapter-introduction");
                break;
            case ImportedPageModel.Type.FRONT_MATTER:
                a.classList.add("front-matter");
                break;
            case ImportedPageModel.Type.APPENDIX:
                a.classList.add("card-appendix")
            }
            a.setAttribute("x-finished", !0);
            return XMLUtilities.serializeElement(a)
        }
    });
    window.FigurePatternModel = MultiMapPatternModel.extend({
        initialize: function(a, b) {
            FigurePatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "figurePattern",
                name: "figure"
            });
            var c = this.createNonMappableOptions_(),
            d = this.createMappableOptions_();
            this.get("options").add(c.concat(d))
        },
        failsValidation: function() {
            return this.get("options").get("image").get("selector") ? null: "Select an image to map"
        },
        transform_: function(a) {
            var b = this.get("options"),
            c = {
                layout: b.get("layout").get("value"),
                badgeType: b.get("badgeType").get("value"),
                hasLink: b.get("hasLink").get("value") === "yes" ? !0 : !1
            };
            if (c.hasLink) c.linkS9ID = UUID();
            c.addClass = c.layout || c.badgeType;
            c.figureS9ID = a.getAttribute("s9id");
            b = a.querySelector(b.get("image").get("selector"));
            c.imgSrc = "";
            if (b) c.imgSrc = b.getAttribute("src"),
            c.href = c.imgSrc,
            c.imgS9ID = b.getAttribute("s9id"),
            b.setAttribute("x-visited", !0),
            b.parentNode.removeChild(b);
            this.doFigureInformationMapping_(a, c);
            c.nonMappedContent = this.handleExtraMultiMapElements_(a);
            return Templates["mapper/pattern/figurePatternTemplate"](c, {
                raw: !0
            })
        },
        createNonMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "layout",
                name: "layout",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "full",
                    name: "full",
                    value: ""
                },
                {
                    id: "half",
                    name: "half",
                    value: "width-half-right"
                },
                {
                    id: "centered",
                    name: "centered",
                    value: "center"
                },
                {
                    id: "captionLeft",
                    name: "caption left",
                    value: "caption-left"
                },
                {
                    id: "captionRight",
                    name: "caption right",
                    value: "caption-right"
                }]
            }), new MapperPatternOptionModel({
                id: "badgeType",
                name: "badge type",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "none",
                    name: "none",
                    value: ""
                },
                {
                    id: "guidedTour",
                    name: "guided tour",
                    value: "guidedtour"
                },
                {
                    id: "testYourself",
                    name: "test yourself",
                    value: "testyourself"
                },
                {
                    id: "slideline",
                    name: "slideline",
                    value: "slideline"
                },
                {
                    id: "slideshow",
                    name: "slideshow",
                    value: "slideshow"
                },
                {
                    id: "hotspot",
                    name: "hotspot",
                    value: "hotspot"
                },
                {
                    id: "threed",
                    name: "3D",
                    value: "threed"
                }]
            }), new MapperPatternOptionModel({
                id: "hasLink",
                name: "linked",
                isList: !0,
                defaultValue: "yes",
                values: [{
                    id: "yes",
                    name: "yes",
                    value: "yes"
                },
                {
                    id: "no",
                    name: "no",
                    value: "no"
                }]
            })]
        },
        createMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "image",
                name: "image",
                isImage: !0,
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "figureNumber",
                name: "figure number",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "title",
                name: "title",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "caption",
                name: "caption",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "citation",
                name: "citation",
                mapsToElement: !0
            })]
        },
        doFigureInformationMapping_: function(a, b) {
            var c = this.get("options"),
            d;
            b.figureInfo = !1;
            b.figureInfoS9ID = UUID();
            b.pageNumber = null;
            if ((d = c.get("figureNumber").get("selector")) && a.querySelector(d)) if (d = a.querySelector(d), this.markFinished_(d), b.figureInfo = !0, b.figureNumber = d.innerHTML, b.figureNumberS9ID = d.getAttribute("s9id"), d.parentNode.removeChild(d), d.setAttribute("x-visited", !0), HTMLContent.hasPageNumber(d)) b.pageNumber = d.getAttribute("sourcepage");
            if ((d = c.get("title").get("selector")) && a.querySelector(d)) if (d = a.querySelector(d), this.markFinished_(d), b.figureInfo = !0, b.title = d.innerHTML, b.titleS9ID = d.getAttribute("s9id"), d.parentNode.removeChild(d), d.setAttribute("x-visited", !0), b.pageNumber === null && HTMLContent.hasPageNumber(d)) b.pageNumber = d.getAttribute("sourcepage");
            if ((d = c.get("caption").get("selector")) && a.querySelector(d)) if (d = a.querySelector(d), this.markFinished_(d), b.figureInfo = !0, b.caption = d.innerHTML, b.captionS9ID = d.getAttribute("s9id"), d.parentNode.removeChild(d), d.setAttribute("x-visited", !0), b.pageNumber === null && HTMLContent.hasPageNumber(d)) b.pageNumber = d.getAttribute("sourcepage");
            if ((d = c.get("citation").get("selector")) && a.querySelector(d)) if (d = a.querySelector(d), this.markFinished_(d), b.figureInfo = !0, b.citation = d.innerHTML, b.citationS9ID = d.getAttribute("s9id"), d.parentNode.removeChild(d), d.setAttribute("x-visited", !0), b.pageNumber === null && HTMLContent.hasPageNumber(d)) b.pageNumber = d.getAttribute("sourcepage");
            b.hasPageNumber = b.pageNumber !== null
        },
        markFinished_: function(a) {
            a.setAttribute("x-finished", !0);
            a.querySelectorAll("*").forEach(function(a) {
                a.setAttribute("x-finished", !0)
            })
        }
    });
    window.HeaderPatternModel = MultiMapPatternModel.extend({
        initialize: function(a, b) {
            HeaderPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "headerPattern",
                name: "header"
            });
            var c = this.createMappableOptions_();
            this.get("options").add(c)
        },
        createMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "headerNumber",
                name: "header number",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "headerTitle",
                name: "title",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "headerTitleEnumeration",
                name: "title enumeration",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "headerSubtitle",
                name: "subtitle",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "headerSubtitleEnumeration",
                name: "subtitle enumeration",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "headerImage",
                name: "header image",
                mapsToElement: !0,
                isImage: !0
            })]
        },
        failsValidation: function() {
            return this.get("options").get("headerTitle").get("selector") ? null: "Select a header title"
        },
        transform_: function(a) {
            var e;
            var b = this.get("options"),
            c = {};
            c.headerS9ID = a.getAttribute("s9id");
            c.titleInfoS9ID = UUID();
            var d;
            if ((d = b.get("headerNumber").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.headerNumber = d.innerHTML,
            c.headerNumberS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d);
            if ((d = b.get("headerTitle").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.headerTitle = d.innerHTML,
            c.headerTitleS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d),
            c.hasHeaderPageNumber = HTMLContent.hasPageNumber(d),
            c.headerPageNumber = d.getAttribute("sourcepage");
            if ((d = b.get("headerTitleEnumeration").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.headerTitleEnumeration = d.innerHTML,
            c.headerTitleEnumerationS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d);
            if ((d = b.get("headerSubtitle").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.headerSubtitle = d.innerHTML,
            c.headerSubtitleS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d),
            c.hasSubtitlePageNumber = HTMLContent.hasPageNumber(d),
            c.subtitlePageNumber = d.getAttribute("sourcepage");
            if ((d = b.get("headerSubtitleEnumeration").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.headerSubtitleEnumeration = d.innerHTML,
            c.headerSubtitleEnumerationS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d);
            if (e = (d = b.get("headerImage").get("selector")) ? a.querySelector(d) : null, b = e) c.headerImage = b.getAttribute("src"),
            c.headerImageS9ID = b.getAttribute("s9id"),
            c.headerImageFigureS9ID = UUID(),
            b.setAttribute("x-visited", !0),
            b.parentNode.removeChild(b);
            c.nonMappedContent = this.handleExtraMultiMapElements_(a);
            return Templates["mapper/pattern/headerPatternTemplate"](c, {
                raw: !0
            })
        },
        markFinished_: function(a) {
            a.setAttribute("x-finished", !0);
            a.querySelectorAll("*").forEach(function(a) {
                a.setAttribute("x-finished", !0)
            })
        }
    });
    window.HeadingPatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            HeadingPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "headingPattern",
                name: "heading"
            });
            this.get("options").add([new MapperPatternOptionModel({
                id: "headingLevel",
                isList: !0,
                values: [{
                    id: "h2",
                    name: "h2",
                    value: "h2"
                },
                {
                    id: "h3",
                    name: "h3",
                    value: "h3"
                },
                {
                    id: "h4",
                    name: "h4",
                    value: "h4"
                },
                {
                    id: "h5",
                    name: "h5",
                    value: "h5"
                },
                {
                    id: "h6",
                    name: "h6",
                    value: "h6"
                }]
            })])
        },
        failsValidation: function() {
            return this.get("options").get("headingLevel").get("value") ? null: "Please choose a heading level"
        },
        transform_: function(a, b, c, d) {
            return this.toTag_(a, d)
        }
    });
    window.InlineBoldPatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            InlineBoldPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "inlineBoldPattern",
                name: "b"
            })
        },
        transform_: function(a) {
            return this.toTag_(a, "b")
        }
    });
    window.InlineItalicPatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            InlineItalicPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "inlineItalicPattern",
                name: "i"
            })
        },
        transform_: function(a) {
            return this.toTag_(a, "i")
        }
    });
    window.InlineSubscriptPatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            InlineSubscriptPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "inlineSubscriptPattern",
                name: '2<sub class="s9-habitat-mapper-ui">x</sub>'
            })
        },
        transform_: function(a) {
            return this.toTag_(a, "sub")
        }
    });
    window.InlineSuperscriptPatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            InlineSuperscriptPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "inlineSuperscriptPattern",
                name: '2<sup class="s9-habitat-mapper-ui">x</sup>'
            })
        },
        transform_: function(a) {
            return this.toTag_(a, "sup")
        }
    });
    window.OrderedListPatternModel = ListPatternModel.extend({
        initialize: function(a, b) {
            OrderedListPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "orderedListPattern",
                name: "ordered list"
            });
            this.get("options").add([new MapperPatternOptionModel({
                id: "bulletType",
                name: "bullet type",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "decimals",
                    name: "decimals",
                    value: ""
                },
                {
                    id: "lowerAlpha",
                    name: "lower alpha",
                    value: "list-lower-alpha"
                },
                {
                    id: "upperAlpha",
                    name: "upper alpha",
                    value: "list-upper-alpha"
                },
                {
                    id: "lowerRoman",
                    name: "lower roman",
                    value: "list-lower-roman"
                },
                {
                    id: "upperRoman",
                    name: "upper roman",
                    value: "list-upper-roman"
                },
                {
                    id: "other",
                    name: "other",
                    value: ""
                }]
            }), new MapperPatternOptionModel({
                id: "parenthesis",
                name: "parenthesis",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "none",
                    name: "none",
                    value: ""
                },
                {
                    id: "half",
                    name: "half",
                    value: "list-parenthesis-half"
                },
                {
                    id: "full",
                    name: "full",
                    value: "list-parenthesis"
                }]
            }), new MapperPatternOptionModel({
                id: "bulletsBolded",
                name: "bullets bolded",
                isList: !0,
                defaultValue: "no",
                values: [{
                    id: "yes",
                    name: "yes",
                    value: "yes"
                },
                {
                    id: "no",
                    name: "no",
                    value: "no"
                }]
            })])
        },
        transform_: function(a) {
            return this.doListMapping_(a, "ol", !1)
        }
    });
    window.ParagraphPatternModel = MapperPatternModel.extend({
        initialize: function(a, b) {
            ParagraphPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "paragraphPattern",
                name: "paragraph"
            })
        },
        transform_: function(a) {
            return this.toTag_(a, "p")
        }
    });
    window.SectionPatternModel = MultiMapPatternModel.extend({
        initialize: function(a, b) {
            SectionPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "sectionPattern",
                name: "section"
            });
            var c = this.createNonMappableOptions_(),
            d = this.createMappableOptions_();
            this.get("options").add(c.concat(d))
        },
        transform_: function(a) {
            var e;
            var b = this.get("options"),
            c = {};
            c.rootS9ID = a.getAttribute("s9id");
            c.visibleInTOC = b.get("visibleInTOC").get("value") === "yes";
            c.titleTag = c.visibleInTOC ? "h2": "h4";
            c.subtitleTag = c.visibleInTOC ? "h3": "h5";
            c.sectionLayout = b.get("sectionLayout").get("value");
            c.classValue = [];
            c.visibleInTOC || c.classValue.push("sidenote");
            c.sectionLayout !== "" && c.classValue.push(c.sectionLayout);
            c.classValue = c.classValue.join(" ");
            var d;
            d = b.get("sectionTitle").get("selector");
            c.hasTitleTag = !1;
            if (d && a.querySelector(d) && (d = a.querySelector(d), this.markFinished_(d), c.hasTitleTag = !0, c.sectionTitle = d.innerHTML, c.sectionTitleS9ID = d.getAttribute("s9id"), d.setAttribute("x-visited", !0), d.parentNode.removeChild(d), c.titlePageNumber = d.getAttribute("sourcepage"), c.hasTitlePageNumber = HTMLContent.hasPageNumber(d), c.hasTitlePageNumber)) c.hasPageNumber = !0,
            c.pageNumber = c.titlePageNumber;
            if ((d = b.get("sectionTitleEnumeration").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.sectionTitleEnumeration = d.innerHTML,
            c.sectionTitleEnumerationS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d);
            if ((d = b.get("sectionSubtitle").get("selector")) && a.querySelector(d)) if (d = a.querySelector(d), this.markFinished_(d), c.sectionSubtitle = d.innerHTML, c.sectionSubtitleS9ID = d.getAttribute("s9id"), d.setAttribute("x-visited", !0), d.parentNode.removeChild(d), c.subtitlePageNumber = d.getAttribute("sourcepage"), c.hasSubtitlePageNumber = HTMLContent.hasPageNumber(d), !c.hasTitlePageNumber && c.hasSubtitlePageNumber) c.hasPageNumber = !0,
            c.pageNumber = c.subtitlePageNumber;
            if ((d = b.get("sectionSubtitleEnumeration").get("selector")) && a.querySelector(d)) d = a.querySelector(d),
            this.markFinished_(d),
            c.sectionSubtitleEnumeration = d.innerHTML,
            c.sectionSubtitleEnumerationS9ID = d.getAttribute("s9id"),
            d.setAttribute("x-visited", !0),
            d.parentNode.removeChild(d);
            if (e = (d = b.get("sectionImage").get("selector")) ? a.querySelector(d) : null, b = e) c.sectionImage = b.getAttribute("src"),
            c.sectionImageS9ID = b.getAttribute("s9id"),
            c.sectionImageFigureS9ID = UUID(),
            b.setAttribute("x-visited", !0),
            b.parentNode.removeChild(b);
            c.nonMappedContent = this.handleExtraMultiMapElements_(a);
            return Templates["mapper/pattern/sectionPatternTemplate"](c, {
                raw: !0
            })
        },
        createNonMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "visibleInTOC",
                name: "visible in TOC",
                isList: !0,
                defaultValue: "yes",
                values: [{
                    id: "yes",
                    name: "yes",
                    value: "yes"
                },
                {
                    id: "no",
                    name: "no",
                    value: "no"
                }]
            }), new MapperPatternOptionModel({
                id: "sectionLayout",
                name: "layout",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "fullWidth",
                    name: "full width",
                    value: ""
                },
                {
                    id: "halfWidth",
                    name: "half width",
                    value: "width-half-right"
                }]
            })]
        },
        createMappableOptions_: function() {
            return [new MapperPatternOptionModel({
                id: "sectionTitle",
                name: "title",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "sectionTitleEnumeration",
                name: "title enumeration",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "sectionSubtitle",
                name: "subtitle",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "sectionSubtitleEnumeration",
                name: "subtitle enumeration",
                mapsToElement: !0
            }), new MapperPatternOptionModel({
                id: "sectionImage",
                name: "image",
                mapsToElement: !0,
                isImage: !0
            })]
        },
        markFinished_: function(a) {
            a.setAttribute("x-finished", !0);
            a.querySelectorAll("*").forEach(function(a) {
                a.setAttribute("x-finished", !0)
            })
        }
    });
    window.StepListPatternModel = ListPatternModel.extend({
        initialize: function(a, b) {
            StepListPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "stepListPattern",
                name: "step list"
            })
        },
        transform_: function(a) {
            return this.doListMapping_(a, "ol", !0)
        }
    });
    window.UnorderedListPatternModel = ListPatternModel.extend({
        initialize: function(a, b) {
            UnorderedListPatternModel.__super__.initialize.call(this, a, b);
            this.set({
                id: "unorderedListPattern",
                name: "unordered list"
            });
            this.get("options").add([new MapperPatternOptionModel({
                id: "bulletType",
                name: "bullet type",
                isList: !0,
                defaultValue: "",
                values: [{
                    id: "bullets",
                    name: "bullets",
                    value: ""
                },
                {
                    id: "noBullets",
                    name: "no bullets",
                    value: "list-no-style"
                },
                {
                    id: "squareBullets",
                    name: "square bullets",
                    value: "list-square-bullet"
                },
                {
                    id: "customBullets",
                    name: "custom bullets",
                    value: "list-custom-bullet"
                }]
            })])
        },
        transform_: function(a) {
            return this.doListMapping_(a, "ul", !1)
        }
    });
    window.SearchModel = Backbone.Model.extend({
        defaults: {
            results: null
        },
        book_: null,
        initialize: function(a, b) {
            a = a || {};
            b = b || {};
            this.book_ = b.book;
            this.set("results", a.results || new SearchResultCollection)
        },
        clear: function() {
            this.set("results", new SearchResultCollection)
        },
        search: function() {
            var a = this.book_.get("selection").toSelector();
            if (a) {
                var b = [];
                this.book_.get("pages").forEach(function(c) {
                    for (var d = c.get("xml").querySelectorAll(a), e = 0; e < d.length; e++) {
                        var f = this.nextChunk_(d, e);
                        if (f.length && (f = this.trimDuplicates_(f, d, e), f.length)) {
                            var g = [];
                            f.forEach(function(a) {
                                g.push(XMLUtilities.serializeElement(a))
                            });
                            g = g.join("\n");
                            g = g.replace(/ x\-already\-matched="true"/g, "");
                            f = new SearchResultModel({
                                enabled: !0,
                                page: c,
                                content: g,
                                chunk: f
                            });
                            b.push(f)
                        }
                    }
                }.bind(this));
                b = new SearchResultCollection(b);
                b.forEach(function(a) {
                    a.get("chunk").forEach(function(a) {
                        a.removeAttribute("x-already-matched")
                    })
                });
                this.set("results", b)
            } else this.clear()
        },
        toResultChunk_: function(a, b) {
            var c = [];
            if (b.get("singleElem") !== null) c.push(a);
            else {
                for (var d = a,
                e = b.getMultipleNodes(), f = e.length - 1; f >= 0; f--) {
                    if (b.getSelectorFor(e[f]) !== b.getSelectorFor(d)) break;
                    c.push(d);
                    d = d.previousElementSibling
                }
                c = c.reverse()
            }
            return c
        },
        matchesSelection_: function(a, b) {
            var c = b.getMultipleNodes();
            if (b.get("singleElem") !== null) return ! 0;
            else if (c.length) {
                for (var d = a,
                e = c.length - 1; e >= 0; e--) {
                    if (b.getSelectorFor(c[e]) !== b.getSelectorFor(d)) return ! 1;
                    d = d.previousElementSibling
                }
                return ! 0
            } else return console.warn("Programming error in matchesSelection: unknown element provided: ", a),
            !1
        },
        trimDuplicates_: function(a, b, c) {
            var d = [],
            e = [],
            f = [];
            a.forEach(function(a) {
                a.hasAttribute("x-already-matched") ? f.push(a) : e.push(a)
            });
            var g = this.nextChunk_(b, c + 1);
            f.length && e.length && g.length ? e.forEach(function(a) {
                g.indexOf(a) === -1 && d.push(a)
            }) : (e.forEach(function(a) {
                a.setAttribute("x-already-matched", !0)
            }), d = e);
            return d
        },
        nextChunk_: function(a, b) {
            var c = this.book_.get("selection"),
            d = a[b],
            e = [];
            d && this.matchesSelection_(d, c) && (e = this.toResultChunk_(d, c));
            return e
        }
    });
    window.SearchResultModel = Backbone.Model.extend({
        defaults: {
            id: null,
            enabled: !0,
            page: null,
            chunk: null
        },
        initialize: function(a) {
            a = a || {};
            typeof a.enabled === "undefined" && this.set("enabled", !0);
            a.chunk || this.set("chunk", []);
            a.id || this.set("id", this.cid)
        },
        getContent: function() {
            var a = "";
            this.get("chunk").forEach(function(b) {
                a += XMLUtilities.serializeElement(b) + "\n"
            });
            return a
        },
        toJSON: function() {
            return {
                id: this.get("id"),
                enabled: this.get("enabled"),
                page: this.get("page"),
                chunk: this.get("chunk"),
                content: this.getContent()
            }
        }
    });
    window.SearchResultCollection = Backbone.Collection.extend({
        model: SearchResultModel,
        pageLookup_: null,
        initialize: function() {
            this.pageLookup_ = {}
        },
        add: function(a, b) {
            SearchResultCollection.__super__.add.call(this, a, b);
            Array.isArray(a) || (a = a ? [a] : []);
            a.forEach(function(a) {
                this.indexByPage_(a.get("page"), a)
            }.bind(this))
        },
        remove: function(a, b) {
            SearchResultCollection.__super__.remove.call(this, a, b);
            var c = a;
            a instanceof SearchResultModel && (c = [], c.push(a));
            c.forEach(function(a) {
                var b = a.get("page").get("filePath"),
                c = []; (this.pageLookup_["_" + b] || []).forEach(function(b) {
                    b !== a && c.push(b)
                }.bind(this));
                c.length ? this.pageLookup_["_" + b] = c: delete this.pageLookup_["_" + b]
            }.bind(this))
        },
        getByPage: function(a) {
            var b = [],
            a = a.get("filePath");
            return a === null ? b: (b = this.pageLookup_["_" + a]) || []
        },
        getEnabled: function() {
            return this.where({
                enabled: !0
            })
        },
        indexByPage_: function(a, b) {
            if (a) {
                var c = a.get("filePath"),
                d = this.pageLookup_["_" + c] || [];
                d.push(b);
                this.pageLookup_["_" + c] = d
            }
        }
    });
    window.SelectionModel = Backbone.Model.extend({
        defaults: {
            singleElem: null,
            parent: null,
            multiple: null
        },
        book_: null,
        initialize: function(a, b) {
            this.book_ = b.book;
            this.set("multiple", [])
        },
        clear: function() {
            this.set({
                singleElem: null,
                parent: null,
                multiple: []
            });
            this.trigger("selectionChanged")
        },
        toSelector: function() {
            var a = "",
            b = this.getParentNode();
            b && (a = this.getSelectorFor(b) + " > "); (b = this.getSingleElemNode()) && (a += this.getSelectorFor(b));
            for (var b = this.getMultipleNodes(), c = 0; c < b.length; c++) a += this.getSelectorFor(b[c]),
            c < b.length - 1 && (a += " + ");
            return a
        },
        getSingleElemNode: function() {
            this.book_.get("currentPage").get("xml");
            var a = this.get("singleElem");
            if (a === null) return null;
            var b = this.find_(a);
            return ! b ? (console.warn("Programming exception: Single element selected but not found for s9id: " + a), null) : b
        },
        getParentNode: function() {
            this.book_.get("currentPage").get("xml");
            var a = this.get("parent");
            if (a === null) return null;
            var b = this.find_(a);
            return ! b ? (console.warn("Programming exception: Parent selected but not found for s9id: " + a), null) : b
        },
        getMultipleNodes: function() {
            this.book_.get("currentPage").get("xml");
            var a = this.get("multiple");
            if (a === null) return null;
            for (var b = [], c = 0; c < a.length; c++) {
                var d = this.find_(a[c]);
                d ? b.push(d) : console.warn("Programming exception: Multiple elements selected but not found for s9id: " + a[c])
            }
            return b
        },
        getSelectedS9IDs: function() {
            var a = [];
            this.get("parent") && a.push(this.get("parent"));
            this.get("singleElem") && a.push(this.get("singleElem"));
            this.get("multiple").length && (a = a.concat(this.get("multiple")));
            return a
        },
        getSelectorFor: function(a, b, c) {
            c = typeof c !== "undefined" ? c: !1;
            if (!a) return "";
            var d = ""; (d = a.getAttribute("class") ? a.getAttribute("class") : "") ? (d = d.trim().replace(/\s{2,}/g, " "), d = this.toCSSClasses_(a.tagName.toLowerCase(), d.split(" ")), d.sort(), d = BrowserFeatures.getCSSMatchPrefix() + "(" + d.join(", ") + ")") : d = a.tagName.toLowerCase() + ":not([class])";
            c && b && a !== b && (d = this.getSelectorFor(b) + " > " + d);
            return d
        },
        inMiddle: function(a) {
            var b = this.get("multiple");
            if (this.get("singleElem")) return ! 1;
            else if (b.length === 1 || b.length === 2) return ! 1;
            else if (this.get("parent") === a) return ! 1;
            for (var c = 1; c < b.length - 1; c++) if (b[c] === a) return ! 0;
            return ! 1
        },
        remove: function(a) {
            var b = this.get("singleElem"),
            c = this.get("parent"),
            d = this.get("multiple"),
            e = !1;
            if (b === a) this.set("singleElem", null),
            e = !0;
            else if (c === a && d.length === 1) this.set({
                singleElem: d[0],
                parent: null,
                multiple: []
            }),
            e = !0;
            else if (!b && c === a) this.set("parent", null),
            e = !0;
            else {
                for (b = 0; b < d.length; b++) if (d[b] === a) {
                    d.splice(b, 1);
                    e = !0;
                    break
                }
                a = c && !d.length;
                b = d.length === 1 && !this.get("parent");
                a ? this.set({
                    singleElem: c,
                    parent: null
                }) : b && this.set({
                    singleElem: d[0],
                    multiple: []
                })
            }
            e && this.trigger("selectionChanged")
        },
        isSelected: function(a) {
            return this.get("singleElem") === a ? !0 : this.get("parent") === a ? !0 : this.get("multiple").some(function(b) {
                return b === a
            })
        },
        isSelectionAllowed: function(a) {
            var b = this.get("singleElem"),
            c = this.get("parent"),
            d = this.get("multiple");
            if (!this.isSelected(a)) if (!b && !c && !d.length) return ! 0;
            else if (b) {
                if (this.getSelectionRelationship_(b, a)) return ! 0
            } else {
                if (this.sharesParentWithSelection_(a)) return ! 0;
                if (!c) for (b = 0; b < d.length; b++) if (this.find_(d[b]).parentNode.getAttribute("s9id") === a) return ! 0
            }
            return ! 1
        },
        addSelection: function(a) {
            var b = this.get("singleElem"),
            c = this.get("parent"),
            d = this.get("multiple"),
            e = [];
            if (!this.isSelectionAllowed(a)) return console.warn("Programming error in addSelection: incorrect element passed in"),
            e; ! b && !c && !d.length ? (this.set("singleElem", a), e.push(a)) : (b = this.enumerateElementsBetween_(a), b.length || b.push(a), b.forEach(function(a) {
                var b = !1; (b = !c && !d.length ? this.addSelectionForTwoElems_(a) : this.addSelectionForMultipleElems_(a)) && e.push(a)
            }.bind(this)));
            e.length && (this.orderSelectedChildren_(), this.trigger("selectionChanged"));
            return e
        },
        find_: function(a) {
            return this.book_.get("currentPage").get("xml").querySelector('[s9id="' + a + '"]')
        },
        getSelectionRelationship_: function(a, b) {
            var c = this.find_(a),
            d = this.find_(b),
            e;
            if (c.parentNode === d.parentNode) return "siblings";
            else if (c.parentNode === d) return "newElem parent of oldElem";
            else if (d.parentNode === c) return "oldElem parent of newElem";
            else if (d.childNodes.length) for (e = 0; e < d.childNodes.length; e++) {
                if (d.childNodes[e] === c) return "newElem parent of oldElem"
            } else if (c.childNodes.length) for (e = 0; e < c.childNodes.length; e++) if (c.childNodes[e] === d) return "oldElem parent of newElem";
            return null
        },
        sharesParentWithSelection_: function(a) {
            var b = this.get("singleElem");
            this.get("parent");
            var c = this.get("multiple");
            if (!b && !c.length) return ! 1;
            b = this.find_(b || c[0]);
            a = this.find_(a);
            return b.parentNode === a.parentNode
        },
        addSelectionForTwoElems_: function(a) {
            var b = this.get("singleElem"),
            c = this.getSelectionRelationship_(b, a),
            d = this.get("multiple");
            if (c === "siblings") d.push(b),
            d.push(a);
            else if (c === "newElem parent of oldElem") this.set("parent", a),
            d.push(b);
            else if (c === "oldElem parent of newElem") this.set("parent", b),
            d.push(a);
            else return console.warn("Programming error in addSelectionForTwoElems_: incorrect element passed in"),
            !1;
            this.set("singleElem", null);
            return ! 0
        },
        addSelectionForMultipleElems_: function(a) {
            this.get("singleElem");
            var b = this.get("parent"),
            c = this.get("multiple"),
            d = this.find_(a),
            e,
            f;
            for (f = 0; f < c.length; f++) if (e = this.find_(c[f]), e.parentNode === d.parentNode) return c.push(a),
            !0;
            if (!b) for (f = 0; f < c.length; f++) if (e = this.find_(c[f]), e.parentNode.getAttribute("s9id") === a) return this.set("parent", a),
            !0;
            return ! 1
        },
        orderSelectedChildren_: function() {
            var a = this.get("multiple"),
            b,
            c;
            if (a.length) {
                var d = {},
                e = this.find_(a[0]).parentNode;
                for (b = 0; b < e.childNodes.length; b++) c = e.childNodes[b],
                c.nodeType === Node.ELEMENT_NODE && (c = c.getAttribute("s9id"), d["_" + c] = b);
                e = Array(e.childNodes.length);
                for (b = 0; b < a.length; b++) c = a[b],
                e[d["_" + c]] = c;
                e = e.filter(function(a) {
                    return typeof a !== "undefined"
                });
                this.set("multiple", e)
            }
        },
        enumerateElementsBetween_: function(a) {
            var b = this.get("singleElem");
            this.get("parent");
            var c = this.get("multiple"),
            d = [];
            if (!this.sharesParentWithSelection_(a)) return d;
            for (var e, f = this.find_(a), g = b || c[0]; f;) {
                if (f.getAttribute("s9id") === g) {
                    e = "before";
                    break
                }
                f = f.nextElementSibling
            }
            if (!e) for (f = this.find_(b || c[c.length - 1]); f;) f.getAttribute("s9id") === a && (e = "after"),
            f = f.nextElementSibling;
            if (e === "before") for (f = this.find_(a); f;) {
                if (this.isSelected(f.getAttribute("s9id"))) break;
                d.push(f.getAttribute("s9id"));
                f = f.nextElementSibling
            } else if (e === "after") for (f = this.find_(b || c[c.length - 1]); f;) {
                if (f.getAttribute("s9id") === a) {
                    d.push(f.getAttribute("s9id"));
                    break
                } else this.isSelected(f.getAttribute("s9id")) || d.push(f.getAttribute("s9id"));
                f = f.nextElementSibling
            }
            return d
        },
        toCSSClasses_: function(a, b, c, d) {
            c = c || [];
            d = d || [];
            b.forEach(function(e, f) {
                var g = b.splice(f, 1)[0];
                d.push(g);
                if (b.length === 0) {
                    var h = d.join(" ");
                    c.push(a + '[class="' + h + '"]')
                }
                this.toCSSClasses_(a, b, c, d);
                b.splice(f, 0, g);
                d.pop()
            },
            this);
            return c
        }
    });
    window.NewUserModel = CurrentUserModel.extend({
        enableHabitatAccess: function(a) {
            a = a || {};
            a.useHabitantsAPI = !0;
            this.save({
                habitatUser: !0
            },
            a)
        },
        saveInvitedUser: function(a) {
            this.resetPassword_(a)
        },
        resetPassword_: function(a) { (new SimpleRequest({
                method: "PUT",
                url: URLUtils.expand("{+apiHost}/forgottenpassword"),
                data: JSON.stringify({
                    userId: this.get("s9id"),
                    token: a.token,
                    hashedPassword: this.get("hashedPassword")
                }),
                onSuccess: function() {
                    this.login_(a)
                }.bind(this),
                onFailure: a.error.bind(void 0, "Password Reset Failed")
            })).send()
        },
        login_: function(a) {
            var b = function() {
                this.saveNames_(a)
            }.bind(this),
            c = a.error.bind(void 0, "Login Failed");
            app.getAuthenticator().signIn(this.get("email"), this.get("hashedPassword"), b, c, !0)
        },
        saveNames_: function(a) {
            this.save(void 0, {
                success: a.success,
                error: a.error.bind(void 0, "Name Update Failed"),
                saveAttrs: ["firstName", "lastName"]
            })
        },
        validate: function(a) {
            var a = a || {},
            b = {};
            if (a.firstName !== void 0) b.firstName = this.validateName_(a.firstName);
            if (a.lastName !== void 0) b.lastName = this.validateName_(a.lastName);
            if (a.email !== void 0) b.email = this.validateEmail_(a.email);
            if (a.password !== void 0) b.password = this.validatePassword_(a.password);
            if (b.firstName || b.lastName || b.email || b.password) return b
        },
        validateName_: function(a) {
            if (!a) return "Required"
        },
        validateEmail_: function(a) {
            if (a) {
                if (!StringUtils.isValidEmail(a)) return "Invalid email address"
            } else return "Required"
        },
        validatePassword_: function(a) {
            var b = (new PasswordStrengthChecker).compute(a);
            if (a) if (a.length < NewUserModel.MIN_PASSWORD_LENGTH_) return "Must be at least " + NewUserModel.MIN_PASSWORD_LENGTH_ + " characters";
            else {
                if (b !== PasswordStrengthChecker.STRENGTH.STRONG && b !== PasswordStrengthChecker.STRENGTH.VERY_STRONG) return "Password is not strong enough"
            } else return "Required"
        }
    });
    NewUserModel.MIN_PASSWORD_LENGTH_ = 8;
    window.PatternSnippetModel = Backbone.Model.extend({
        defaults: {
            id: null,
            label: null,
            category: null,
            html: null,
            isCustom: !1,
            isRecommended: !1
        },
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            this.doc_ = b.document || document
        },
        getRootElement: function() {
            var a = XMLUtilities.parseFragment(this.get("html"), XMLUtilities.DOCUMENT_TYPE.HTML);
            return ! a.children[0] ? null: a.children[0]
        },
        getHTML: function() {
            var a = this.get("html"),
            a = a.replace(/id=(["'])\{\{@s9id\}\}\1/g,
            function(a, c) {
                return "id=" + c + UUID() + c
            }),
            a = (new HTMLSanitizer).importHTML(a, {
                whitelist: !0,
                rewritePaths: !1,
                reparentNakedPhrasingContent: !1
            });
            return "\n" + a + "\n"
        },
        validate: function(a) {
            if (!a.label || !a.label.trim()) return PatternSnippetModel.VALIDATION_ERRORS.MISSING_LABEL;
            if (!a.id || !a.id.trim()) return PatternSnippetModel.VALIDATION_ERRORS.MISSING_ID;
            if (!a.html || !a.html.trim()) return PatternSnippetModel.VALIDATION_ERRORS.MISSING_HTML;
            if (a = XMLUtilities.validateXML(a.html)) return PatternSnippetModel.VALIDATION_ERRORS.INVALID_HTML + "\n\n" + a
        },
        toJSON: function() {
            var a = PatternSnippetModel.__super__.toJSON.call(this),
            b = this.validate(this.attributes);
            if (b) a.validationError = b;
            return a
        }
    });
    PatternSnippetModel.VALIDATION_ERRORS = {
        MISSING_LABEL: "Blocks must have a label.",
        MISSING_ID: "Blocks must have an ID.",
        MISSING_HTML: "Blocks must have HTML content.",
        INVALID_HTML: "Found a parse error in your HTML:"
    };
    window.PatternSnippetCollection = Backbone.Collection.extend({
        model: PatternSnippetModel,
        loaded_: !1,
        isDirty_: !1,
        revision_: null,
        initialize: function(a, b) {
            b = b || {};
            this.doc_ = b.document || document;
            this.win_ = b.window || window;
            this.on("change add", this.patternsChanged_, this)
        },
        isLoaded: function() {
            return this.loaded_
        },
        isDirty: function() {
            return this.isDirty_
        },
        url: function() {
            var a = app.getProjectModel().get("shortName");
            return FileDocumentModel.url(a, PatternSnippetCollection.TEMPLATES_PATH_)
        },
        parse: function(a) {
            return PatternSnippetsParser.parse(a)
        },
        save: function(a, b) {
            var b = b || {},
            c = PatternSnippetsSerializer.serialize(this.toJSON()),
            d = new HabitatRequest({
                url: this.url(),
                data: c,
                method: "post",
                headers: {
                    "Content-Type": "text/html",
                    "X-Subversion-Revision": this.revision_ || app.getProjectModel().get("revision")
                },
                onSuccess: function(a) {
                    this.isDirty_ = !1;
                    var c = d.xhr.getResponseHeader("X-Subversion-Revision");
                    this.revision_ = parseInt(c, 10);
                    app.getProjectModel().setRevision(this.revision_);
                    b.success && b.success(this, a)
                }.bind(this),
                onFailure: this.saveFailure_.bind(this, a, b)
            });
            d.send();
            this.req_ = d
        },
        sync: function(a, b, c) {
            if (a === "read") {
                var d = new HabitatRequest({
                    url: b.url(),
                    method: "get",
                    onSuccess: function(a) {
                        this.revision_ = parseInt(d.xhr.getResponseHeader("X-Subversion-Revision"), 10);
                        c.success(a);
                        this.loaded_ = !0;
                        this.trigger("loaded")
                    }.bind(this),
                    onFailure: function(a) {
                        a.status === 404 ? (c.success(null), this.loaded_ = !0, this.trigger("loaded")) : c.error(a)
                    }.bind(this)
                });
                d.send();
                this.req_ = d
            }
        },
        patternsChanged_: function() {
            this.isDirty_ = !0
        },
        saveFailure_: function(a, b, c) {
            var d = null;
            try {
                d = JSON.parse(c.responseText).status.statusCode
            } catch(e) {}
            c.status === 409 && d === "ContentConflictException" ? (app.getMessageView().hide(), this.win_.confirm(FileDocumentSaver.CONFLICT_MESSAGE) ? (this.revision_ = parseInt(c.getResponseHeader("X-Subversion-Revision"), 10), app.getMessageView().show(SaveHandler.SAVING_MESSAGE), this.save(a, b)) : b.error && b.error(this, c)) : b.error && b.error(this, c)
        }
    });
    PatternSnippetCollection.TEMPLATES_PATH_ = "s9ml/.templates/pattern-snippets.html.tpls";
    window.PermissionsModel = APIModel.extend({
        projectId_: null,
        defaults: function() {
            return this.getPermissionNames_().reduce(function(a, b) {
                a[b] = !1;
                return a
            },
            {})
        },
        fetch: function(a) {
            var a = a || {},
            b = this.getPermissionNames_(),
            c = {
                appName: "habitat"
            };
            if (this.projectId_) c.projectId = this.projectId_;
            a.data = JSON.stringify({
                checkace: {
                    ids: b,
                    params: c
                }
            });
            a.methodOverride = "POST";
            return PermissionsModel.__super__.fetch.call(this, a)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/multiget?checkace")
        },
        parse: function(a) {
            a = a.checkace;
            return Object.keys(a).reduce(function(b, c) {
                var d = a[c],
                e = d.status.statusCode;
                d && e === HabitatRequest.STATUS_CODES.OK && (b[c] = !!d.result.status);
                return b
            },
            {})
        },
        getPermissionNames_: function() {
            var a = _.values(PermissionsModel.PERMISSIONS),
            b = _.values(PermissionsModel.TEMPORARY);
            return a.concat(b)
        },
        setProjectId: function(a) {
            this.projectId_ = a
        }
    });
    PermissionsModel.PERMISSIONS = {
        READ_CONTENT: "read-content",
        WRITE_CONTENT: "write-content",
        ADD_MEMBER: "add-member",
        REMOVE_MEMBER: "remove-member",
        WRITE_MEMBER_PERMISSIONS: "write-member-permissions",
        WRITE_AUTO_ISSUE_ASSIGNMENT: "write-auto-issue-assignment",
        READ_REPORTS: "read-reports",
        BUILD: "build",
        PUBLISH_STORE: "publish-store",
        ARCHIVE_PROJECT: "archive-project",
        CREATE_TEMPLATE: "create-template",
        HIDE_SUPPORT_LINK: "hide-support-link",
        INTERNAL_USER: "habitat-internal-user",
        BETA_USER: "habitat-beta-user"
    };
    PermissionsModel.TEMPORARY = {
        EPUB_IMPORT: "epub-import"
    };
    window.ProgressBarModel = Backbone.Model.extend({
        defaults: {
            description: "",
            progress: 0
        }
    });
    window.BuildModel = Backbone.Model.extend({
        defaults: {
            id: null,
            shortName: null,
            revision: null,
            initiator: null,
            publishBuildNumber: null,
            unitProofBuildNumber: null,
            trackName: null,
            trackBuildNumber: null,
            startTime: null,
            expectedCompletionTime: null,
            completionTime: null,
            userParameters: null,
            status: null,
            errors: null,
            warnings: null,
            webClientURL: null,
            downloadLink: null,
            bundleID: null,
            bundleHistoryID: null,
            productID: null
        },
        initialize: function() {
            this.get("userParameters") || this.set("userParameters", {});
            this.get("errors") || this.set("errors", []);
            this.get("warnings") || this.set("warnings", [])
        },
        sync: function(a, b, c) {
            if (a === "read") this.req_ = new HabitatRequest({
                url: b.url(),
                method: "GET",
                onSuccess: function(a) {
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    c.error(a)
                }
            }),
            this.req_.send();
            else if (a === "create") {
                var a = b.get("trackName") || BuildModel.TRACK_NAME.DRAFT,
                d = {
                    shortname: b.get("shortName"),
                    userParameters: {
                        track: this.getServerTrackName_(a)
                    }
                },
                e = this.get("userParameters");
                d.userParameters.users = e.users;
                d.userParameters.autoDownload = !!e.autoDownload;
                if (a === BuildModel.TRACK_NAME.EVALUATION) d.userParameters.chapters = e.chapters;
                if (e.targets) d.userParameters.targets = e.targets;
                this.req_ = new HabitatRequest({
                    url: b.url({
                        show: !0
                    }),
                    method: "POST",
                    data: JSON.stringify(d),
                    onSuccess: this.startBuildSuccess_.bind(this, c),
                    onFailure: this.startBuildFailure_.bind(this, c)
                });
                this.req_.send()
            }
        },
        url: function(a) {
            a = a || {};
            return URLUtils.expand("{+apiHost}/contentbuilds/{id}{?show}", {
                id: this.get("id") || "",
                show: a.show ? "true": null
            })
        },
        isInProgress: function() {
            var a = this.get("status");
            return a === BuildModel.STATUS.WAITING || a === BuildModel.STATUS.RUNNING
        },
        hasCompleted: function() {
            var a = this.get("status");
            return a === BuildModel.STATUS.SUCCESS || a === BuildModel.STATUS.WARNING || a === BuildModel.STATUS.ERROR || a === BuildModel.STATUS.FAILURE
        },
        getTrackDisplayName: function() {
            return BuildModel.TRACK_DISPLAY_NAME_[this.get("trackName")] || ""
        },
        getStatusDisplayInfo: function() {
            return BuildModel.STATUS_TYPES_[this.get("status")] || {}
        },
        parse: function(a) {
            if (typeof a === "string") a = JSON.parse(a).result;
            a.id = a.s9id;
            delete a.s9id;
            a.shortName = a.shortname;
            delete a.shortname;
            a.unitProofBuildNumber = a.unitproofsBuildNumber;
            delete a.unitproofsBuildNumber;
            a.webClientURL = a.readLink;
            delete a.readLink;
            a.bundleID = a.bundleId;
            delete a.bundleId;
            a.bundleHistoryID = a.bundleHistoryId;
            delete a.bundleHistoryId;
            a.productID = a.productId;
            delete a.productId;
            a.trackName = BuildModel.TRACK_NAME_MAP_[a.trackName];
            a.errors = a.errors || [];
            a.warnings = a.warnings || [];
            a.userParameters = a.userParameters || {};
            return a
        },
        getServerTrackName_: function(a) {
            return Object.keys(BuildModel.TRACK_NAME_MAP_).find(function(b) {
                return BuildModel.TRACK_NAME_MAP_[b] === a
            },
            this)
        },
        startBuildSuccess_: function(a, b) {
            var c;
            try {
                c = JSON.parse(b)
            } catch(d) {
                this.startBuildFailure_(a, d);
                return
            } ! c || !c.result ? this.startBuildFailure_(a, "Invalid response format! responseText: " + b) : a.success(b)
        },
        startBuildFailure_: function(a, b) {
            console.error("Build creation request failed! xhrOrString: ", b);
            this.collection && this.collection.remove(this);
            a.error(b)
        }
    });
    BuildModel.STATUS = {
        WAITING: "waiting",
        RUNNING: "running",
        SUCCESS: "success",
        WARNING: "warning",
        ERROR: "error",
        FAILURE: "failure"
    };
    BuildModel.TRACK_NAME = {
        DRAFT: "draft",
        RELEASE: "release",
        EVALUATION: "evaluation",
        EPUB: "epub",
        STORE: "store"
    };
    BuildModel.STATUS_TYPES_ = {
        waiting: {
            text: "In Progress",
            iconClass: "status-waiting"
        },
        running: {
            text: "In Progress",
            iconClass: "status-running"
        },
        success: {
            text: "Build completed",
            iconClass: "status-success"
        },
        warning: {
            text: "Build completed with warnings",
            iconClass: "status-warning"
        },
        error: {
            text: "Build failed",
            iconClass: "status-error"
        },
        failure: {
            text: "System error. Please try again. If this persists, please contact Habitat Support in the drop-down in the top right.",
            iconClass: "status-failure"
        }
    };
    BuildModel.TRACK_DISPLAY_NAME_ = {
        draft: "Draft",
        release: "Release",
        evaluation: "Eval",
        store: "Store",
        epub: "EPUB"
    };
    BuildModel.TRACK_NAME_MAP_ = {
        development: "draft",
        release: "release",
        evaluation: "evaluation",
        epub: "epub",
        store: "store"
    };
    window.BuildCollection = APICollection.extend({
        model: BuildModel,
        shortName_: null,
        initialize: function(a, b) {
            b = b || {};
            this.shortName_ = b.shortName;
            BuildCollection.__super__.initialize.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/contentbuilds/{?shortname,limitOnePerProject}", {
                shortname: this.shortName_,
                limitOnePerProject: this.shortName_ ? null: "true"
            })
        },
        comparator: function(a, b) {
            var c = a.hasCompleted(),
            d = b.hasCompleted();
            return c && d ? b.get("completionTime") - a.get("completionTime") : !c && d ? -1 : c && !d ? 1 : b.get("startTime") - a.get("startTime")
        },
        setLoaded_: function() {
            this.loaded_ = !0;
            this.trigger("loaded", this);
            this.schedulePoll_()
        }
    });
    window.MembershipCollection = Backbone.Collection.extend({
        groupID_: null,
        req_: null,
        loaded_: !1,
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            this.groupID_ = b.groupID
        },
        isLoaded: function() {
            return this.loaded_
        },
        save: function(a) {
            this.sync("update", this, a)
        },
        sync: function(a, b, c) {
            if (a === "read") this.req_ = new HabitatRequest({
                url: this.url({
                    count: MembershipCollection.PAGE_SIZE_
                }),
                method: "GET",
                onSuccess: function(a) {
                    this.req_ = null;
                    this.loaded_ = !0;
                    c.success(a);
                    this.trigger("loaded")
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send();
            else if (a === "update") {
                var b = this.toJSON({
                    onlyNew: !0
                }),
                a = b.map(function(a) {
                    return this.jsonToMultipostJSON_(a)
                },
                this),
                d = this.getNameProperty_(),
                b = b.map(function(a) {
                    return a[d]
                },
                this),
                e = {};
                e[this.getMultipostName_()] = {
                    objects: a,
                    derefs: [this.getDerefProperty_(), "role"]
                };
                this.req_ = new HabitatRequest({
                    url: this.url({
                        target: "multipost"
                    }),
                    method: "POST",
                    data: JSON.stringify(e),
                    onSuccess: this.multipostSuccess_.bind(this, c, b),
                    onFailure: this.multipostFailure_.bind(this, c, b)
                });
                this.req_.send()
            }
        },
        url: function(a) {
            var a = a || {},
            b = a.target || "api";
            if (b === "api") {
                if (!this.groupID_) return console.error("Programming Error: Cannot create URL without group ID."),
                null;
                b = app.getConfig().get("apiHost") + this.getAPIURL_();
                b += "&deref=role," + this.getDerefProperty_();
                a.count && (b += "&count=" + a.count)
            } else if (b === "multipost") b = URLUtils.expand("{+apiHost}/multipost?show=true");
            else return console.error("Programming Error: Could not create URL for target", b),
            null;
            return b
        },
        parse: function(a) {
            return typeof a === "string" ? JSON.parse(a).result: a
        },
        toJSON: function(a) {
            var a = a || {},
            b = this.models;
            a.onlyNew && (b = b.filter(function(a) {
                return a.isNew()
            },
            this));
            return b.map(function(a) {
                return a.toJSON()
            },
            this)
        },
        multipostSuccess_: function(a, b, c) {
            var d;
            try {
                d = JSON.parse(c)
            } catch(e) {
                this.multipostFailure_(a, b, e);
                return
            }
            var f = this.getMultipostName_();
            if (!d || !d.result || !Array.isArray(d.result[f])) this.multipostFailure_(a, b, "Bad response! responseText: " + c);
            else {
                var g = [],
                h = [],
                i = {};
                d.result[f].forEach(function(a, c) {
                    var d = b[c];
                    if (!a || !a.result || !a.status) g.push(d);
                    else {
                        var e = a.status.statusCode;
                        e === "UserMembershipAlreadyExists" || e === "GroupMembershipAlreadyExists" ? h.push(d) : e !== "HTTPCreated" && e !== "HTTPOk" ? g.push(d) : i[d] = a.result
                    }
                },
                this);
                g.length > 0 && console.error("Adding some members to user group failed! failures:", g);
                g.length > 0 && this.removeNewModelsByName_(g);
                h.length > 0 && this.removeNewModelsByName_(h);
                Object.keys(i).length > 0 && this.updateNewModels_(i);
                g.length === 0 && h.length === 0 ? a.success() : a.error(g, h)
            }
        },
        multipostFailure_: function(a, b, c) {
            console.error("Adding members to user group failed! reason:", c);
            this.removeNewModelsByName_(b);
            a.error(b)
        },
        removeNewModelsByName_: function(a) {
            var b = this.getNameProperty_(),
            c = this.filter(function(c) {
                return c.isNew() && a.indexOf(c.get(b)) !== -1
            },
            this);
            c.length > 0 && this.remove(c)
        },
        updateNewModels_: function(a) {
            var b = this.getNameProperty_();
            Object.keys(a).forEach(function(c) {
                var d = this.find(function(a) {
                    return a.isNew() && a.get(b) === c
                });
                if (d) {
                    var e = d.parse(a[c]);
                    d.set(e)
                }
            },
            this)
        },
        getMultipostName_: function() {
            throw Error("Programming Error: MembershipCollection is an abstract class.");
        },
        getAPIURL_: function() {
            throw Error("Programming Error: MembershipCollection is an abstract class.");
        },
        getNameProperty_: function() {
            throw Error("Programming Error: MembershipCollection is an abstract class.");
        },
        getDerefProperty_: function() {
            throw Error("Programming Error: MembershipCollection is an abstract class.");
        },
        jsonToMultipostJSON_: function() {
            throw Error("Programming Error: MembershipCollection is an abstract class.");
        }
    });
    MembershipCollection.PAGE_SIZE_ = 100;
    window.GroupMembershipModel = Backbone.Model.extend({
        idAttribute: "s9id",
        defaults: {
            s9id: null,
            groupID: null,
            name: null,
            description: null,
            role: null
        },
        sync: function(a, b, c) {
            if (a === "update") this.req_ = new HabitatRequest({
                url: this.url(),
                method: "PUT",
                data: JSON.stringify({
                    roleName: this.get("role")
                }),
                onSuccess: function(a) {
                    this.req_ = null;
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send();
            else if (a === "delete") this.req_ = new HabitatRequest({
                url: this.url(),
                method: "DELETE",
                onSuccess: function(a) {
                    this.req_ = null;
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send()
        },
        url: function(a) {
            a = a || {};
            return URLUtils.expand("{+apiHost}/groupmemberships/{s9id}{?show}", {
                s9id: this.isNew() ? null: this.get("s9id"),
                show: a.show ? "true": null
            })
        },
        parse: function(a) {
            if (typeof a === "string") a = JSON.parse(a).result;
            return ! a || Object.keys(a).length === 0 ? {}: {
                s9id: a.s9id,
                name: a.sourceUserGroup.name,
                description: a.sourceUserGroup.description,
                role: a.role.name,
                groupID: a.sourceUserGroup.s9id
            }
        }
    });
    window.GroupMembershipCollection = MembershipCollection.extend({
        model: GroupMembershipModel,
        getMultipostName_: function() {
            return "groupmembership"
        },
        getAPIURL_: function() {
            return URLUtils.expand("/groupmemberships{?targetUserGroupId}", {
                targetUserGroupId: this.groupID_
            })
        },
        getNameProperty_: function() {
            return "name"
        },
        getDerefProperty_: function() {
            return "sourceUserGroup"
        },
        jsonToMultipostJSON_: function(a) {
            return {
                targetUserGroupId: this.groupID_,
                sourceUserGroupName: a.name,
                roleName: a.role
            }
        }
    });
    window.ProjectModel = Backbone.Model.extend({
        defaults: {
            id: null,
            authors: null,
            name: null,
            subtitle: null,
            shortName: null,
            edition: null,
            publisher: null,
            coverImg: null,
            isDcdaSigned: null,
            toc: null,
            glossary: null,
            remarks: null,
            styleDirectoryListing: null,
            widgetDirectoryListing: null,
            exhibitTemplates: null,
            patternSnippets: null,
            classGroups: null,
            contentConfig: null,
            revision: null,
            buildCollection: null,
            lastUpdated: null,
            build: null,
            users: null,
            issueSets: null,
            issueCounts: null,
            unitProofs: null,
            isArchived: !1,
            unitProofCounts: null,
            userGroupID: null,
            userGroupModel: null,
            projectTemplateId: null,
            repoExists: !1
        },
        loaded_: !1,
        req_: null,
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            this.loadedIssues_ = new IssuesCollection;
            this.createDefaults_();
            this.setStarred_();
            if (app.getSaveHandler) app.getSaveHandler().on("save_completed", this.fetchIssueCounts_, this)
        },
        sync: function(a, b, c) {
            var d = {
                title: this.get("name") || void 0,
                subtitle: this.get("subtitle") || null,
                authors: this.get("authors") || null,
                edition: this.get("edition") || null,
                publisher: this.get("publisher") || null,
                projectTemplateId: this.get("projectTemplateId") || null,
                isArchived: this.get("isArchived") || !1
            },
            e = this.get("isDcdaSigned");
            if (e !== null) d.isDcdaSigned = e;
            if (a === "read") b.get("shortName") ? (this.req_ = new HabitatRequest({
                url: b.url(),
                method: "get",
                onSuccess: function(a) {
                    c.success(a);
                    this.loaded_ = !0;
                    this.trigger("loaded", this)
                }.bind(this),
                onFailure: function(a) {
                    c.error(a)
                }
            }), this.req_.send()) : c.error("Short name required");
            else if (a === "create") delete d.isArchived,
            this.req_ = new HabitatRequest({
                url: b.url({
                    target: "updateAPI",
                    show: !0
                }),
                method: "POST",
                data: JSON.stringify(d),
                onSuccess: function(a) {
                    this.get("buildCollection").setLoaded_();
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    c.error(a)
                }
            }),
            this.req_.send();
            else if (a === "update") this.req_ = new HabitatRequest({
                url: b.url({
                    target: "updateAPI",
                    show: !0
                }),
                method: "PUT",
                data: JSON.stringify(d),
                onSuccess: function(a) {
                    c.success(a)
                },
                onFailure: function(a) {
                    c.error(a)
                }
            }),
            this.req_.send()
        },
        isLoaded: function() {
            return this.loaded_
        },
        url: function(a) {
            var a = a || {},
            b = a.target || "api",
            c = this.get("shortName"),
            d = app.getConfig();
            switch (b) {
            case "api":
                return URLUtils.expand("{+apiHost}/publisherprojects/{shortName}", {
                    shortName: c
                });
            case "updateAPI":
                return URLUtils.expand("{+apiHost}/contentprojects/{id}{?show}", {
                    id: this.isNew() ? "": "sn-" + c,
                    show: a.show ? "true": null
                });
            case "redmine":
                return URLUtils.expand("{+redmineHost}/projects/{shortName}/issues", {
                    shortName: c
                });
            case "build":
                a = d.get("contentHost");
                if (!a) return null;
                b = this.get("buildCollection").at(0);
                return URLUtils.expand("{+host}/job/{shortName}-publish{/latestPublish}/", {
                    host: a,
                    shortName: c,
                    latestPublish: b ? b.get("publishBuildNumber") : null
                });
            case "repo":
                return URLUtils.expand("{+reposHost}/repositories/sn-{shortName}", {
                    shortName: c
                });
            default:
                return console.error("Unknown target passed to ProjectModel.prototype.url: ", b),
                URLUtils.expand("{+apiHost}/publisherprojects/{shortName}", {
                    shortName: c
                })
            }
        },
        parse: function(a, b) {
            var b = b || {},
            c = typeof a === "string" ? JSON.parse(a).result: a;
            if (typeof c.revision === "string") c.revision = parseInt(c.revision.replace(/^r/, ""), 10);
            if (c.users) c.users = new UsersCollection(c.users);
            if (c.issueCounts) c.issueCounts = new IssueCountsModel({
                shortName: c.shortname,
                totalsByType: c.issueCounts
            });
            if (c.userGroupId) c.userGroupModel = new UserGroupModel({
                s9id: c.userGroupId
            });
            if (c.s9id) c.id = c.s9id,
            delete c.s9id;
            c.name = c.title || ProjectModel.DEFAULT_NAME_;
            delete c.title;
            c.shortName = c.shortname;
            delete c.shortname;
            if (c.thumbnailPath) c.coverImg = this.parseThumbnailPath_(c.thumbnailPath),
            delete c.thumbnailPath;
            if (c.latestUnitProofs) c.build = c.latestUnitProofs,
            delete c.latestUnitProofs;
            if (c.userGroupId) c.userGroupID = c.userGroupId,
            delete c.userGroupId;
            b.parseAttributes && (c = _.pick(c, b.parseAttributes));
            return c
        },
        toJSON: function() {
            var a = ProjectModel.__super__.toJSON.call(this);
            if (a.coverImg !== null) a.coverImg = this.getCoverImgURL_(a.coverImg);
            return a
        },
        getOrCreateIssueModel: function(a, b) {
            var c = this.loadedIssues_.get(a.id);
            c || (c = new IssueModel(a, b), this.loadedIssues_.add(c));
            return c
        },
        setRevision: function(a) {
            this.get("revision") < a && this.set("revision", a)
        },
        pollForRepoCreation: function() {
            var a = function() {
                this.fetchLatestRevision({
                    success: function() {
                        this.set("repoExists", !0)
                    }.bind(this),
                    error: function() {
                        this.win_.setTimeout(a, ProjectModel.REPO_CREATION_POLL_FREQUENCY_)
                    }.bind(this)
                })
            }.bind(this);
            a()
        },
        fetchLatestRevision: function(a) {
            a = a || {};
            this.repoReq_ = new HabitatRequest({
                url: this.url({
                    target: "repo"
                }),
                method: "GET",
                onSuccess: function(b) {
                    var c = null;
                    try {
                        c = JSON.parse(b).result.revision
                    } catch(d) {}
                    c === null || c === 0 ? a.error() : (this.set("revision", c), a.success && a.success())
                }.bind(this),
                onFailure: function() {
                    a.error && a.error()
                }.bind(this)
            });
            this.repoReq_.send()
        },
        fetchUsers: function(a) {
            a = a || {};
            this.fetch({
                parseAttributes: ["users"],
                success: a.success,
                error: a.error
            })
        },
        createDefaults_: function() {
            var a = this.get("shortName");
            this.get("toc") || this.set("toc", new TableOfContentsModel({
                shortName: a
            }));
            this.get("glossary") || this.set("glossary", new GlossaryDocumentModel({
                project: this,
                filename: this.get("toc").get("glossaryPath")
            }));
            this.get("remarks") || this.set("remarks", new RemarksDocumentModel({
                project: this,
                filename: this.get("toc").get("remarksPath")
            }));
            this.get("styleDirectoryListing") || this.set("styleDirectoryListing", new DirectoryListingCollection(null, {
                directory: RepositoryLayout.CSS_DIRECTORY,
                projectModel: this
            }));
            this.get("widgetDirectoryListing") || this.set("widgetDirectoryListing", new DirectoryListingCollection(null, {
                directory: RepositoryLayout.WIDGETS_DIRECTORY,
                projectModel: this
            }));
            this.get("exhibitTemplates") || this.set("exhibitTemplates", new ExhibitTemplateCollection);
            this.get("patternSnippets") || this.set("patternSnippets", new PatternSnippetCollection);
            this.get("classGroups") || this.set("classGroups", new ClassGroupCollection);
            this.get("contentConfig") || this.set("contentConfig", new ContentConfigurationModel);
            this.get("issueSets") || this.set("issueSets", new IssueSetsCollection(null, {
                projectModel: this
            }));
            var b = this.get("issueCounts");
            b instanceof IssueCountsModel || (b = b ? new IssueCountsModel({
                shortName: a,
                totalsByType: b
            }) : new IssueCountsModel({
                shortName: a
            }), this.set("issueCounts", b));
            this.get("unitProofs") || this.set("unitProofs", new UnitProofsListModel({
                shortName: a
            }));
            this.get("buildCollection") || this.set("buildCollection", new BuildCollection(void 0, {
                shortName: this.get("shortName")
            }));
            this.get("userGroupModel") || this.set("userGroupModel", new UserGroupModel({
                s9id: this.get("userGroupID")
            }))
        },
        getOverviewData: function() {
            var a = this.get("toc").get("thumbnailPath");
            return {
                projectTitle: this.get("name"),
                projectSubtitle: this.get("subtitle"),
                projectCoverURL: URLUtils.getImageURL(a, this, {
                    width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE
                }),
                projectAuthor: this.get("authors") || "",
                projectPublisher: this.get("publisher") || ""
            }
        },
        fetchIssueCounts_: function() {
            this.get("issueCounts").fetch()
        },
        getCoverImgURL_: function(a) {
            return URLUtils.getImageURL(a, this, {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE
            })
        },
        parseThumbnailPath_: function(a) {
            var b = /^\/api\/files\/[^\/]+\/trunk\/(?:head|r([0-9]+))\/([^?]+)(?:\?.*)$/i.exec(a);
            return b ? b[2] : a
        },
        setStarred_: function() {
            this.set("starred", app.getCurrentUser().get("prefs").getStarredProjects().indexOf(this.get("shortName")) !== -1)
        }
    });
    ProjectModel.GET_STARTED_SHORTNAME_REGEX = /^_habitat_get_started(?:_[a-f0-9]+)?$/i;
    ProjectModel.REPO_CREATION_POLL_FREQUENCY_ = 5E3;
    ProjectModel.DEFAULT_NAME_ = "Untitled Project";
    window.ProjectsCollection = APICollection.extend({
        model: ProjectModel,
        request_: null,
        buildCollection_: null,
        fetch: function(a, b) {
            a = a || {};
            if (b) a.multigetIDs = b;
            var c = a.success;
            a.success = function() {
                this.buildDataLoaded_();
                c && c.apply(null, arguments)
            }.bind(this);
            return ProjectsCollection.__super__.fetch.call(this, a)
        },
        sync: function(a, b, c) {
            a === "read" && c.multigetIDs ? this.multigetSync_.apply(this, arguments) : ProjectsCollection.__super__.sync.apply(this, arguments)
        },
        comparator: function(a, b) {
            var c = a.get("name"),
            d = b.get("name");
            return c.toLowerCase().localeCompare(d.toLowerCase())
        },
        url: function(a, b) {
            return URLUtils.expand("{+apiHost}/publisherprojects/{?params*}", {
                params: {
                    q: b.searchTerm,
                    count: 100
                }
            })
        },
        parse: function(a) {
            return ProjectsCollection.__super__.parse.call(this, a).map(function(a) {
                a = this.provideDefaults_(a);
                a.coverImg = a.thumbnailpath;
                a.issueCounts = a.issueCounts;
                return a
            },
            this)
        },
        loadBuildData: function() {
            this.buildCollection_ = new BuildCollection(null, {
                enablePolling: !0
            });
            this.buildCollection_.on("loaded", this.buildDataLoaded_, this);
            this.buildCollection_.fetch()
        },
        multigetSync_: function(a, b, c) {
            this.abort();
            this.request_ = new HabitatRequest({
                url: URLUtils.expand("{+apiHost}/multiget"),
                method: "POST",
                data: JSON.stringify({
                    publisherproject: {
                        ids: c.multigetIDs
                    }
                }),
                onSuccess: function(a) {
                    var b = null;
                    try {
                        b = JSON.parse(a)
                    } catch(f) {}
                    if (b) {
                        var g = b.result,
                        a = Object.keys(g.publisherproject).reduce(function(a, b) {
                            var c = g.publisherproject[b];
                            c.status.statusCode === HabitatRequest.STATUS_CODES.OK ? a.push(c.result) : console.error("Unable to fetch publisher project (" + b + ") in multiget.");
                            return a
                        },
                        []);
                        c.success(a)
                    } else c.error()
                },
                onFailure: function() {
                    c.error()
                }
            });
            this.request_.send()
        },
        buildDataLoaded_: function() {
            this.buildCollection_ && this.forEach(function(a) {
                var b = this.buildCollection_.findWhere({
                    shortName: a.get("shortName")
                }),
                a = a.get("buildCollection");
                b && a.add(b);
                a.setLoaded_()
            },
            this)
        },
        provideDefaults_: function(a) {
            a.issueCounts = a.issueCounts || {};
            a.issueCounts[IssueModel.Status.OPEN] || (a.issueCounts[IssueModel.Status.OPEN] = {
                me: 0,
                totals: 0
            },
            a.issueCounts[IssueModel.Status.FIXED] = {
                me: 0,
                totals: 0
            });
            a.unitProofCounts = a.unitProofCounts || {};
            if (!a.unitProofCounts.hasOwnProperty("errors")) a.unitProofCounts = {
                errors: 0,
                warnings: 0,
                info: 0
            };
            return a
        }
    });
    window.UserGroupModel = Backbone.Model.extend({
        idAttribute: "s9id",
        defaults: {
            s9id: null,
            name: null,
            userMembershipCollection: null,
            groupMembershipCollection: null,
            description: null
        },
        loaded_: !1,
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            this.get("userMembershipCollection") || this.set("userMembershipCollection", new UserMembershipCollection(null, {
                groupID: this.get("s9id")
            }));
            this.get("groupMembershipCollection") || this.set("groupMembershipCollection", new GroupMembershipCollection(null, {
                groupID: this.get("s9id")
            }));
            this.get("userMembershipCollection").on("all", this.proxyEvents_, this);
            this.get("groupMembershipCollection").on("all", this.proxyEvents_, this)
        },
        isLoaded: function() {
            return this.loaded_ && this.get("userMembershipCollection").isLoaded() && this.get("groupMembershipCollection").isLoaded()
        },
        getMemberByID: function(a) {
            return this.get("groupMembershipCollection").get(a) || this.get("userMembershipCollection").get(a) || null
        },
        getMembers: function() {
            var a = this.get("userMembershipCollection").models,
            b = this.get("groupMembershipCollection").models;
            return a.concat(b)
        },
        addMembers: function(a, b) {
            b = b ||
            function() {};
            if (a) if (a = this.processMemberString_(a), !a.users.length && !a.groups.length && !a.invalid.length) this.win_.setTimeout(function() {
                b([])
            },
            1);
            else {
                var c = a.users.map(function(a) {
                    return new UserMembershipModel({
                        email: a,
                        role: UserMembershipModel.ROLE.EDITOR
                    })
                }),
                d = a.groups.map(function(a) {
                    return new GroupMembershipModel({
                        name: a,
                        role: UserMembershipModel.ROLE.EDITOR
                    })
                });
                this.saveNewMembers_(c, d, a.invalid, b)
            } else this.win_.setTimeout(function() {
                b([])
            },
            1)
        },
        addMemberModel: function(a) {
            a instanceof UserMembershipModel ? this.get("userMembershipCollection").add(a) : a instanceof GroupMembershipModel ? this.get("groupMembershipCollection").add(a) : console.error("Programming Error: memberModel not a valid model type!", a)
        },
        fetch: function(a) {
            a = a || {};
            a.parse = !0;
            var b = a.success;
            a.success = function() {
                this.isLoaded() && (this.trigger("loaded"), b && b.apply(this, arguments))
            }.bind(this);
            this.get("userMembershipCollection").fetch(a);
            this.get("groupMembershipCollection").fetch(a);
            return UserGroupModel.__super__.fetch.call(this, a)
        },
        sync: function(a, b, c) {
            if (a === "read") this.req_ = new HabitatRequest({
                url: this.url(),
                method: "GET",
                onSuccess: function(a) {
                    this.req_ = null;
                    this.loaded_ = !0;
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }
            }),
            this.req_.send()
        },
        url: function(a) {
            a = a || {};
            return URLUtils.expand("{+apiHost}/usergroups/{s9id}{?show}", {
                s9id: this.get("s9id"),
                show: a.show ? "true": null
            })
        },
        parse: function(a) {
            if (typeof a === "string") a = JSON.parse(a).result;
            return a
        },
        areNewEmailDomains: function(a) {
            var a = this.processMemberString_(a),
            b = this.getDomainsFromEmails_(this.get("userMembershipCollection").map(function(a) {
                return a.get("email")
            })),
            a = this.getDomainsFromEmails_(a.users);
            return !! _.difference(a, b).length
        },
        processMemberString_: function(a) {
            var b = {
                users: [],
                groups: [],
                invalid: []
            },
            a = a.split(","),
            a = a.map(function(a) {
                return a.trim().toLowerCase()
            },
            this),
            a = a.filter(function(a) {
                return !! a
            },
            this);
            a.forEach(function(a) {
                a && (StringUtils.isValidEmail(a) ? b.users.push(a) : this.isValidGroupName_(a) ? b.groups.push(a) : b.invalid.push(a))
            },
            this);
            return b
        },
        saveNewMembers_: function(a, b, c, d) {
            var e = !1,
            f = !1,
            g = c || [],
            h = [],
            i = function(c, i) {
                Array.isArray(c) && (g = g.concat(c));
                Array.isArray(i) && (h = h.concat(i));
                e && f && (g = g.length > 0 ? g: void 0, h = h.length > 0 ? h: void 0, d(a, b, g, h))
            };
            Array.isArray(a) && a.length > 0 ? (c = this.get("userMembershipCollection"), c.add(a), c.save({
                success: function() {
                    e = !0;
                    i()
                },
                error: function(a, b) {
                    e = !0;
                    i(a, b)
                }
            })) : e = !0;
            Array.isArray(b) && b.length > 0 ? (c = this.get("groupMembershipCollection"), c.add(b), c.save({
                success: function() {
                    f = !0;
                    i()
                },
                error: function(a, b) {
                    f = !0;
                    i(a, b)
                }
            })) : f = !0;
            this.win_.setTimeout(function() {
                i()
            },
            1)
        },
        isValidGroupName_: function(a) {
            return !! a && /^[a-z0-9_\-]+$/.test(a)
        },
        proxyEvents_: function(a) { ["change", "add", "reset", "remove"].indexOf(a) !== -1 && this.trigger.apply(this, arguments)
        },
        getDomainsFromEmails_: function(a) {
            return _.uniq(a.map(function(a) {
                return a.split("@")[1]
            }))
        }
    });
    window.UserMembershipModel = Backbone.Model.extend({
        idAttribute: "s9id",
        defaults: {
            s9id: null,
            userID: null,
            userGroupID: null,
            email: null,
            firstName: null,
            lastName: null,
            role: null
        },
        getDisplayName: function() {
            return UserModel.generateDisplayName(this.get("firstName"), this.get("lastName"), this.get("email"))
        },
        sync: function(a, b, c) {
            if (a === "read") c.read = !0,
            this.req_ = new HabitatRequest({
                url: this.url(c),
                method: "GET",
                onSuccess: function(a) {
                    this.req_ = null;
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send();
            else if (a === "update") this.req_ = new HabitatRequest({
                url: this.url(),
                method: "PUT",
                data: JSON.stringify({
                    roleName: this.get("role")
                }),
                onSuccess: function(a) {
                    this.req_ = null;
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send();
            else if (a === "delete") this.req_ = new HabitatRequest({
                url: this.url(),
                method: "DELETE",
                onSuccess: function(a) {
                    this.req_ = null;
                    c.success(a)
                }.bind(this),
                onFailure: function(a) {
                    this.req_ = null;
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send()
        },
        url: function(a) {
            a = a || {};
            return a.read ? URLUtils.expand("{+apiHost}/usermemberships/{?params*}", {
                params: {
                    userGroupId: this.get("userGroupID"),
                    userId: this.get("userID"),
                    deref: "role,user",
                    transitive: "true",
                    count: "100"
                }
            }) : URLUtils.expand("{+apiHost}/usermemberships/{s9id}{?show}", {
                s9id: this.isNew() ? null: this.get("s9id"),
                show: a.show ? "true": null
            })
        },
        parse: function(a) {
            if (typeof a === "string") a = JSON.parse(a).result;
            if (!a || Object.keys(a).length === 0) return {};
            var b = a;
            Array.isArray(a) && ((b = a.find(function(a) {
                return a.role.name === UserMembershipModel.ROLE.GROUP_ADMIN
            },
            this)) || (b = a.find(function(a) {
                return a.role.name === UserMembershipModel.ROLE.EDITOR
            },
            this)), b || (b = a.find(function(a) {
                return a.role.name === UserMembershipModel.ROLE.PROOFER
            },
            this)));
            return {
                s9id: b.s9id,
                firstName: b.user.firstName,
                lastName: b.user.lastName,
                email: b.user.email,
                role: b.role.name,
                userID: b.user.s9id,
                userGroupID: b.userGroupId
            }
        }
    });
    UserMembershipModel.ROLE = {
        GROUP_ADMIN: "group-admin",
        EDITOR: "editor",
        PROOFER: "proofer"
    };
    UserMembershipModel.SETTABLE_ROLES = ["group-admin", "editor", "proofer"];
    UserMembershipModel.getRoleDisplayString = function(a) {
        return {
            "group-admin": "Admin",
            editor: "Edit and Comment",
            proofer: "Comment Only"
        } [a] || ""
    };
    window.UserMembershipCollection = MembershipCollection.extend({
        model: UserMembershipModel,
        getMultipostName_: function() {
            return "usermembership"
        },
        getAPIURL_: function() {
            return URLUtils.expand("/usermemberships{?userGroupId}", {
                userGroupId: this.groupID_
            })
        },
        getNameProperty_: function() {
            return "email"
        },
        getDerefProperty_: function() {
            return "user"
        },
        jsonToMultipostJSON_: function(a) {
            return {
                userGroupId: this.groupID_,
                userEmail: a.email,
                roleName: a.role,
                sendMembershipEmail: !0,
                createUser: !0
            }
        }
    });
    window.CloudSyncedObjectModel = APIModel.extend({
        environment_: null,
        csoType_: null,
        rootId_: null,
        objectId_: null,
        subObjectId_: null,
        s9id_: null,
        defaults: {},
        isNew: function() {
            return ! this.s9id_
        },
        url: function(a) {
            return a === "create" ? URLUtils.expand("{+apiHost}/csos/?show=true") : URLUtils.expand("{+apiHost}/csos/{rootId}/{csoType}{?userId}", {
                rootId: this.rootId_,
                csoType: this.csoType_,
                userId: app.getCurrentUser().id
            })
        },
        parse: function(a) {
            this.s9id_ = a.s9id;
            return CloudSyncedObjectModel.__super__.parse.call(this, a.data)
        },
        toJSON: function(a, b) {
            var c = {
                data: CloudSyncedObjectModel.__super__.toJSON.call(this, a)
            };
            if (b === "create") c.env = this.environment_,
            c.csoType = this.csoType_,
            c.rootId = this.rootId_,
            c.objectId = this.objectId_,
            c.subObjectId = this.subObjectId_;
            return c
        }
    });
    CloudSyncedObjectModel.ENVIRONMENTS = {
        BUNDLE_HISTORY: "bundleHistory",
        GLOBAL: "global",
        PROJECT: "project"
    };
    window.ProjectSettingsModel = CloudSyncedObjectModel.extend({
        environment_: CloudSyncedObjectModel.ENVIRONMENTS.PROJECT,
        csoType_: "projectSettings",
        initialize: function() {
            this.rootId_ = app.getProjectModel().id
        },
        defaults: {
            ticketNotifications: !0,
            dailyRecap: !1
        }
    });
    window.RemarkModel = SnippetContentModel.extend({
        defaults: _.extend({},
        SnippetContentModel.prototype.defaults, {
            key: null
        })
    });
    window.RemarkCollection = XMLBackboneCollection.extend({
        model: RemarkModel
    });
    window.RemarksDocumentModel = S9MLDocumentModel.extend({
        initialize: function(a, b) {
            b = b || {};
            b.isSubclass = !0;
            RemarksDocumentModel.__super__.initialize.call(this, a, b)
        },
        getRemark: function(a) {
            var b = this.get("rootPiece");
            return ! b ? null: b.find(function(b) {
                return b.get("key") === a
            }) || null
        },
        setDefaults: function() {
            RemarksDocumentModel.__super__.setDefaults.call(this);
            this.set({
                project: this.get("project") || null,
                supportsIssues: !1
            })
        },
        isNew: function() {
            return ! 1
        },
        onContentLoaded_: function(a, b) {
            this.set("filePath", ExhibitDocumentModel.getFilePathFromSourceLocation(this.get("project").get("toc").get("remarksPath")));
            RemarksDocumentModel.__super__.onContentLoaded_.call(this, a, b)
        }
    });
    window.RevisionInfoModel = APIModel.extend({
        idAttribute: "revision",
        defaults: {
            revision: 0,
            author: null,
            date: null,
            files: null,
            message: null
        },
        parse: function(a) {
            a = RevisionInfoModel.__super__.parse.call(this, a);
            a.date = Math.round(a.date * 1E3);
            return a
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/revisioninfos/{shortName}/{revision}", {
                shortName: app.getProjectModel().get("shortName"),
                revision: this.get("revision")
            })
        }
    });
    RevisionInfoModel.STATUS = {
        UPDATED: "updated",
        ADDED: "added",
        DELETED: "deleted",
        UNMODIFIED: "unmodified"
    };
    window.RevisionInfoCollection = APICollection.extend({
        model: RevisionInfoModel,
        hasOlder_: !1,
        hasNewer_: !1,
        pageOlder_: 0,
        pageNewer_: 0,
        path_: null,
        initialize: function(a, b) {
            b = b || {};
            this.path_ = b.path || "";
            this.hasNewer_ = !b.onHead
        },
        fetch: function(a) {
            a = a || {};
            a.count = RevisionInfoCollection.FETCH_COUNT_;
            if (a.reverse === void 0) a.reverse = !0;
            var b = a.success;
            a.success = function(a, d, e) {
                var f = e.paging || {};
                e.reverse ? (this.hasOlder_ = f.moreResults, this.pageOlder_ = f.pageNext) : (this.hasNewer_ = f.moreResults, this.pageNewer_ = f.pageNext);
                b && b.apply(null, arguments)
            }.bind(this);
            return RevisionInfoCollection.__super__.fetch.call(this, a)
        },
        fetchNewer: function() {
            if (this.hasNewer()) {
                if (!this.pageNewer_ && this.length) this.pageNewer_ = this.at(0).get("revision");
                this.fetch({
                    remove: !1,
                    pageStart: this.pageNewer_,
                    reverse: !1
                })
            }
        },
        fetchOlder: function() {
            this.hasOlder() && this.fetch({
                remove: !1,
                pageStart: this.pageOlder_
            })
        },
        hasOlder: function() {
            return this.hasOlder_
        },
        hasNewer: function() {
            return this.hasNewer_
        },
        comparator: function(a, b) {
            return b.get("revision") - a.get("revision")
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/revisioninfos/{shortName}/{?path}", {
                shortName: app.getProjectModel().get("shortName"),
                path: this.path_
            })
        }
    });
    RevisionInfoCollection.FETCH_COUNT_ = 25;
    window.SelectorModel = Backbone.Model.extend({
        defaults: {
            values: null,
            selectedValue: null
        }
    });
    window.ServiceMessageModel = Backbone.Model.extend({
        idAttribute: "s9id",
        defaults: {
            s9id: null,
            description: null,
            title: null,
            message: null,
            startTime: null,
            endTime: null,
            enabled: !1,
            tags: null,
            appNames: null,
            configuration: null,
            activeNow: !1
        },
        parse: function(a) {
            a.startTime = Math.round(a.startTime * 1E3);
            if (a.endTime) a.endTime = Math.round(a.endTime * 1E3);
            return a
        }
    });
    ServiceMessageModel.HABITAT_APP_NAME = "habitat";
    ServiceMessageModel.TAGS = {
        ERROR: "error"
    };
    window.ServiceMessageCollection = APICollection.extend({
        model: ServiceMessageModel,
        initialize: function(a, b) {
            b = b || {};
            b.pollInterval = ServiceMessageCollection.POLL_INTERVAL_;
            this.on({
                add: this.addModelEvent_,
                "change:hidden": this.changeHiddenEvent_
            },
            this);
            ServiceMessageCollection.__super__.initialize.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/servicemessages?isActive=true{&appName}", {
                appName: ServiceMessageModel.HABITAT_APP_NAME
            })
        },
        comparator: function(a, b) {
            var c = a.get("tags").indexOf(ServiceMessageModel.TAGS.ERROR) !== -1,
            d = b.get("tags").indexOf(ServiceMessageModel.TAGS.ERROR) !== -1;
            return c && !d ? -1 : !c && d ? 1 : a.get("startTime") - b.get("startTime")
        },
        getVisibleMessages: function() {
            return this.filter(function(a) {
                return a.get("activeNow") && !a.get("hidden")
            },
            this)
        },
        addModelEvent_: function(a) {
            var b = app.getCurrentUser().get("prefs").get(ServiceMessageCollection.HIDDEN_MESSAGES_PREF_);
            this.off("change:hidden", this.changeHiddenEvent_, this);
            a.set("hidden", b.indexOf(a.id) !== -1);
            this.on("change:hidden", this.changeHiddenEvent_, this)
        },
        changeHiddenEvent_: function() {
            var a = app.getCurrentUser().get("prefs"),
            b = this.reduce(function(a, b) {
                b.get("hidden") && a.push(b.id);
                return a
            },
            []);
            a.set(ServiceMessageCollection.HIDDEN_MESSAGES_PREF_, b)
        }
    });
    ServiceMessageCollection.POLL_INTERVAL_ = 18E5;
    ServiceMessageCollection.HIDDEN_MESSAGES_PREF_ = "hiddenServiceMessages";
    window.ProjectTemplateModel = APIModel.extend({
        idAttribute: "s9id",
        defaults: {
            s9id: null,
            name: null,
            description: null,
            revision: 0,
            publisher: null,
            author: null,
            createdAt: null,
            updatedAt: null,
            supportsMapper: !1,
            "public": !1,
            ready: !1,
            enabled: !1,
            customAttributes: null,
            dumpLink: null,
            projectId: null,
            bundleHistoryId: void 0,
            tags: null
        },
        save: function(a, b) {
            b = b || {};
            b.saveAttrs = "name,description,publisher,author,supportsMapper,public,enabled,customAttributes,bundleHistoryId,tags".split(",");
            this.isNew() && b.saveAttrs.push("revision", "projectId");
            return ProjectTemplateModel.__super__.save.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/projecttemplates/{id}?show=true", {
                id: this.id
            })
        }
    });
    ProjectTemplateModel.TAGS = {
        INKLING: "inkling",
        ENDORSED: "endorsed"
    };
    window.ProjectTemplateCollection = APICollection.extend({
        model: ProjectTemplateModel,
        project_: null,
        tags_: null,
        initialize: function(a, b) {
            b = b || {};
            this.project_ = b.project || null;
            this.tags_ = b.tags || null;
            ProjectTemplateCollection.__super__.initialize.call(this, a, b)
        },
        getThumbnailPaths: function() {
            var a = [];
            this.forEach(function(b) {
                if ((b = b.get("customAttributes")) && b.thumbnails)(b = b.thumbnails[0]) && a.push(b)
            },
            this);
            return a
        },
        fetch: function(a) {
            a = a || {};
            if (this.project_) a.count = 1;
            return ProjectTemplateCollection.__super__.fetch.call(this, a)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/projecttemplates/{?params*}", {
                params: {
                    projectId: this.project_ && this.project_.id,
                    tags: this.tags_ && this.tags_.join(",")
                }
            })
        },
        comparator: function(a, b) {
            var c = a.get("tags") || null,
            d = b.get("tags") || null,
            c = c && c.indexOf(ProjectTemplateModel.TAGS.INKLING) !== -1,
            d = d && d.indexOf(ProjectTemplateModel.TAGS.INKLING) !== -1;
            if (c && !d) return - 1;
            if (!c && d) return 1;
            d = (a.get("name") || "").toLowerCase();
            c = (b.get("name") || "").toLowerCase();
            return d < c ? -1 : d > c ? 1 : 0
        }
    });
    window.SupportEmailModel = APIModel.extend({
        defaults: {
            application: "Habitat",
            category: null,
            subject: null,
            message: null,
            files: null,
            debugData: null
        },
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            this.doc_ = b.document || this.win_.document || document;
            this.nav_ = b.navigator || navigator;
            this.get("files") || this.set("files", []);
            this.get("debugData") || this.set("debugData", {
                email: app.getCurrentUser().get("uid"),
                url: this.win_.location.href,
                browser: this.getBrowserString_(),
                userAgent: this.nav_.userAgent,
                timestamp: (new Date).toString()
            });
            SupportEmailModel.__super__.initialize.call(this, a, b)
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/sendSupportEmail")
        },
        toJSON: function() {
            var a = SupportEmailModel.__super__.toJSON.apply(this, arguments);
            a.category === null && delete a.category;
            return a
        },
        getBrowserString_: function() {
            var a = BrowserUtils.getBrowserInfo();
            return StringUtils.capitalize(a.name) + " " + a.majorVersion + " on " + StringUtils.capitalize(a.platform)
        }
    });
    SupportEmailModel.loadFileData = function(a, b, c) {
        c = c || {};
        c = c.window || window;
        if (a.length === 0) c.setTimeout(b.bind(c, []), 1);
        else var d = [],
        e = !1,
        f = [],
        g = 0,
        h = function() {
            e || (e = !0, d.forEach(function(a) {
                a.readyState === FileReader.LOADING && a.abort()
            }), b(null))
        },
        d = a.map(function(c, d) {
            var e = c.files[0],
            o = new FileReader;
            o.onload = function() {
                g++;
                f[d] = {
                    filename: e.name,
                    type: e.type,
                    body: o.result
                };
                g === a.length && b(f)
            }.bind(this);
            o.onerror = h;
            o.readAsDataURL(e);
            return o
        },
        this)
    };
    SupportEmailModel.MAX_FILE_SIZE = 5242880;
    SupportEmailModel.MAX_TOTAL_SIZE = 5242880;
    window.TOCDocumentModel = S9MLDocumentModel.extend({
        initialize: function(a, b) {
            TOCDocumentModel.__super__.initialize.call(this, a, b);
            this.on("change:rootPiece", this.rootPieceChangeEvent_, this)
        },
        updateFromXML: function() {
            var a = this.get("rootPiece").getXMLNode();
            PrettyPrinter.prettify(a);
            a = XMLUtilities.serializeElement(a);
            a = XMLUtilities.addProcessingInstruction(a);
            this.set({
                xml: XMLUtilities.parseDocument(a, this.getXMLDocumentType()),
                content: a
            })
        },
        setDefaults: function() {
            TOCDocumentModel.__super__.setDefaults.call(this);
            this.set({
                supportsIssues: !1,
                supportsLinks: !1,
                filePath: this.get("filePath") || RepositoryLayout.TOC_PATH
            })
        },
        findExhibit: function(a) {
            return this.get("rootPiece").flattenTypes().exhibits.find(function(b) {
                return b.get("path") === a
            },
            this)
        },
        rootPieceChangeEvent_: function(a, b) {
            var c = a.previous("rootPiece");
            c && (c = c.getTransientMetadata(), b.applyTransientMetadata(c))
        },
        getNewExhibitData_: function() {
            var a = [];
            this.get("rootPiece").get("units").forEach(function(b) {
                b.get("chapters").forEach(function(b) {
                    b.get("exhibits").forEach(function e(f) {
                        f.get("isNew") && a.push({
                            exhibit: f,
                            chapter: b
                        }); (f = f.get("exhibits")) && f.forEach(e, this)
                    },
                    this)
                },
                this)
            },
            this);
            return a
        },
        ensureTemplatesAvailable_: function(a) {
            a || (a = this.getNewExhibitData_());
            var b = this.get("project").get("exhibitTemplates");
            return ! b.isLoaded() ? !1 : a.every(function(a) {
                return b.hasTemplate(a.exhibit.get("type"))
            },
            this)
        },
        generateExhibitPathsIfNeeded: function() {
            this.getNewExhibitData_().forEach(function(a) {
                var b = a.exhibit,
                a = this.generateSourceLocation_(b, a.chapter);
                b.set("path", a)
            },
            this)
        },
        getHighestEnumerations: function() {
            return this.get("rootPiece").flattenTypes().chapters.reduce(function(a, b) {
                var c = b.get("designation") || "",
                d = parseInt((b.get("enumeration") || "").trim(), 10);
                isNaN(d) || (a[c] = Math.max(d, a[c] || 0));
                return a
            },
            {})
        },
        save: function(a, b) {
            var b = b || {},
            c = this.getNewExhibitData_();
            if (!this.ensureTemplatesAvailable_(c)) return ! 1;
            c.forEach(function(a) {
                a.exhibit.set("path", null)
            },
            this);
            this.generateExhibitPathsIfNeeded();
            var d = this.get("project").get("exhibitTemplates"),
            c = c.map(function(a) {
                a = a.exhibit;
                return new FileDocumentModel({
                    project: this.get("project"),
                    content: d.getTemplateContent(a.get("type"), {
                        designation: a.get("designation"),
                        enumeration: a.get("enumeration"),
                        title: a.get("title")
                    }),
                    filePath: RepositoryLayout.S9ML_DIRECTORY + "/" + a.get("path")
                })
            },
            this);
            this.get("rootPiece").removeDeletedItems();
            this.updateFromXML();
            var e = this.get("rootPiece").flattenTypes(),
            f = e.units.concat(e.chapters, e.exhibits).filter(function(a) {
                return a.get("isNew")
            }),
            c = new FileDocumentMultipostSaver([this].concat(c)),
            b = ObjectUtils.clone(b),
            g = b.success,
            h = b.error;
            b.success = function(a, b) {
                f.forEach(function(a) {
                    a.set("isNew", !1)
                },
                this);
                app.getSaveHandler().remove(this);
                g && g.call(this, this, b)
            }.bind(this);
            b.error = function(a, b, c) {
                c && c.retry ? (a = app.getSaveHandler(), a.resetEntry(this), a.save()) : h && h.call(this, this, b)
            }.bind(this);
            return c.save(b)
        },
        generateSourceLocation_: function(a, b) {
            var c = this.getExhibitPaths_(),
            d = a.get("path"),
            e;
            e = a.get("type");
            var f = a.get("title"),
            g = TOCDocumentModel.EXHIBIT_TYPE_PREFIX_[e],
            h;
            d ? (f = d.match(/([^\/]*?)(\.[^\.\/]*)?$/), h = f[2] || "", e = f[1], c[d] && (c[d] -= 1), f = !0) : e === "html" ? (h = ".html", e = f || "reader") : (h = ".s9ml", e = g || e.replace("figure", ""), f && (e += " " + f));
            d = this.generateChapterSlug_(b);
            e = StringUtils.normalizeFilename(e).replace(".", "_");
            f = d + "/" + e + (f ? "": "_1") + h;
            if (c[f] > 0) for (g = 1;; g++) if (f = d + "/" + e + "_" + g + h, !c[f]) break;
            return f
        },
        getExhibitPaths_: function() {
            var a = {};
            this.get("rootPiece").get("units").forEach(function(b) {
                b.get("chapters").forEach(function(b) {
                    b.get("exhibits").forEach(function e(b) {
                        var c = b.get("path");
                        c && (a[c] = (a[c] || 0) + 1); (b = b.get("exhibits")) && b.forEach(e, this)
                    },
                    this)
                },
                this)
            },
            this);
            return a
        },
        generateChapterSlug_: function(a) {
            var b, c = {},
            d = 0;
            a.get("exhibits").filter(function(a) {
                return ! a.get("isNew")
            },
            this).forEach(function(a) {
                a = a.get("path").split("/", 2);
                a.length === 2 && (a = a[0], c[a] = (c[a] || 0) + 1)
            },
            this);
            Object.keys(c).forEach(function(a) {
                c[a] > d && (d = c[a], b = a)
            },
            this);
            if (!b) {
                b = a.get("designation") || "chapter";
                b = b.trim();
                var e = a.get("enumeration") || "";
                if (e = e.trim()) {
                    var f = parseFloat(e);
                    isNaN(f) || (e = f)
                } else {
                    var g = !1,
                    h = 0;
                    this.get("rootPiece").get("units").forEach(function(b) {
                        g || b.get("chapters").forEach(function(b) {
                            g || b.get("sandbox") === "true" || (h += 1, b === a && (g = !0))
                        },
                        this)
                    },
                    this);
                    e = h
                }
                b += FileUtils.getPaddedIndexString(e, 2)
            }
            return StringUtils.normalizeFilename(b).replace(".", "_")
        }
    });
    TOCDocumentModel.THUMBNAILS_FOLDER = "toc_thumbs";
    TOCDocumentModel.EXHIBIT_TYPE_PREFIX_ = {
        multifigure: "slideshow",
        imagefigure: "figure",
        layeredfigure: "testyourself",
        sliderfigure: "slideline"
    };
    window.TableOfContentsModel = Backbone.Model.extend({
        defaults: {
            glossaryPath: null,
            remarksPath: null,
            configPath: null,
            thumbnailPath: null,
            edition: null,
            title: null,
            shortName: null,
            author: null,
            publisher: null,
            pubdate: null,
            xml: null
        },
        loaded_: !1,
        req_: null,
        getExhibitTypeFor: function(a) {
            return a === "toc.s9ml" ? "toc": (a = this.getNodeForPath(a)) ? a.tagName.toLowerCase() === "glossary" ? "glossary": a.tagName.toLowerCase() === "remarks" ? "remarks": a.tagName.toLowerCase() === "bundleconfig" ? "config": a.getAttribute("type") : null
        },
        getNodeForPath: function(a) {
            var b = this.get("xml");
            return ! b ? null: a.indexOf('"') !== -1 ? null: b.xpath('//*[@path="' + a + '"]')
        },
        sync: function(a, b, c) {
            if (a === "read") this.req_ = new HabitatRequest({
                url: b.url(),
                method: "get",
                onSuccess: function(a, b) {
                    this.processXML_(b);
                    c.success();
                    this.loaded_ = !0;
                    this.trigger("loaded", this)
                }.bind(this),
                onFailure: function(a) {
                    c.error(a)
                }.bind(this)
            }),
            this.req_.send()
        },
        url: function() {
            var a = this.get("shortName");
            return ! a ? null: URLUtils.expand("{+apiHost}/toc/{shortName}", {
                shortName: a
            })
        },
        isLoaded: function() {
            return this.loaded_
        },
        processXML_: function(a) {
            var b = a.xpath("/s9ml:toc/s9ml:metadata"),
            c = b.xpath("s9ml:glossary") || null,
            d = b.xpath("s9ml:remarks") || null,
            e = b.xpath("s9ml:bundleconfig") || null;
            this.set({
                glossaryPath: c && c.getAttribute("path") || null,
                remarksPath: d && d.getAttribute("path") || null,
                configPath: e && e.getAttribute("path") || null,
                thumbnailPath: b.getAttribute("thumbnailpath") || null,
                edition: b.xpath("s9ml:edition").textContent || null,
                title: b.xpath("s9ml:title").textContent || null,
                publisher: b.xpath("s9ml:publisher").textContent || null,
                author: b.xpath("s9ml:author").textContent || null,
                pubdate: b.xpath("s9ml:pubdate").textContent || null,
                xml: a
            })
        },
        nestedExhibits: function(a) {
            a = this.getNodeForPath(a);
            return ! a ? [] : a.xpathAll("descendant::s9ml:exhibit") || []
        },
        nextExhibit: function(a) {
            var b = this.getNodeForPath(a);
            if (!b) return null; (a = this.nestedExhibits(a)[0]) || (a = b.xpath("following::s9ml:exhibit[position() = 1]"));
            return a || null
        },
        previousExhibit: function(a) {
            a = this.getNodeForPath(a);
            if (!a) return null;
            var b = a.xpath("preceding-sibling::s9ml:exhibit[position() = 1]");
            return (b = b ? a.xpath("preceding::s9ml:exhibit[position() = 1]") : a.xpath("ancestor::s9ml:exhibit[position() = 1]")) || null
        },
        getExhibitTypes: function() {
            var a = this.get("xml");
            if (!a) return [];
            var a = a.xpathAll("//s9ml:exhibit").map(function(a) {
                return this.getExhibitType_(a)
            },
            this),
            a = a.filter(function(a) {
                return !! a
            },
            this),
            b = this.getArrayCounts_(a);
            return Object.keys(b).filter(function(a) {
                return b[a] > 1
            },
            this)
        },
        getExhibitsByType: function(a) {
            var b = this.get("xml");
            return ! b ? [] : b.xpathAll("//s9ml:exhibit").filter(function(b) {
                return a === this.getExhibitType_(b)
            },
            this)
        },
        getArrayCounts_: function(a) {
            return a.reduce(function(a, c) {
                a[c] ? a[c]++:a[c] = 1;
                return a
            },
            {})
        },
        getExhibitType_: function(a) {
            a = a.getAttribute("path");
            if (a.slice( - 5) !== ".html") return null;
            var b = a.lastIndexOf("/"),
            a = a.slice(b + 1, -5).match(/^ch[0-9]{2}_(.*)$/i);
            return ! a ? null: a[1]
        },
        getExhibitMetadata: function(a) {
            a = this.getNodeForPath(a);
            if (!a) return null;
            var b = a.xpath("s9ml:title");
            return {
                designation: a.getAttribute("designation") || null,
                enumeration: a.getAttribute("enumeration") || null,
                title: b && b.textContent || null,
                type: a.getAttribute("type") || null
            }
        },
        getChapter: function(a) {
            return (a = XMLUtilities.getNodeByS9ID(this.get("xml"), a)) && a.tagName.toLowerCase() === "chapter" ? a: null
        },
        getChapterMetadata: function(a) {
            a = this.getChapter(a);
            if (!a) return null;
            var b = a.xpathAll('.//s9ml:exhibit[@type="html"]'),
            c = a.xpath("s9ml:title");
            return {
                designation: a.getAttribute("designation") || null,
                enumeration: a.getAttribute("enumeration") || null,
                title: c && c.textContent || null,
                thumbnailPath: a.getAttribute("thumbnailpath"),
                htmlExhibitCount: b.length
            }
        }
    });
    TableOfContentsModel.EMPTY_TITLE_PREFIX = "Untitled ";
    TableOfContentsModel.getFilePath = function(a) {
        return a.getAttribute("path").match(/\/([^\/]+)$/)[1]
    };
    TableOfContentsModel.getTitle = function(a) {
        var b = a.getAttribute("designation") || "",
        c = a.getAttribute("enumeration") || "";
        a.getAttribute("path");
        var d = a.xpath("s9ml:title"),
        d = d ? d.textContent: void 0,
        a = a.tagName.toLowerCase();
        return [[b, c].filter(function(a) {
            return a
        }).join(" "), d].filter(function(a) {
            return a
        }).join(": ") || TableOfContentsModel.EMPTY_TITLE_PREFIX + StringUtils.capitalize(a)
    };
    window.ClassGroupModel = Backbone.Model.extend({
        defaults: {
            id: null,
            label: null,
            classes: null,
            tagName: null
        }
    });
    window.ClassGroupCollection = APICollection.extend({
        model: ClassGroupModel,
        getGroupsByTagName: function(a) {
            a && (a = a.toLowerCase());
            return this.filter(function(b) {
                b = b.get("tagName");
                return b === null || b === a
            })
        },
        url: function() {
            var a = app.getProjectModel().get("shortName");
            return FileDocumentModel.url(a, RepositoryLayout.CLASS_GROUPS_PATH)
        },
        parse: function(a) {
            a instanceof Object && (a = "");
            return ClassGroupParser.parse(a)
        },
        fetch: function(a) {
            a = a || {};
            a.expectNotFound = !0;
            return ClassGroupCollection.__super__.fetch.call(this, a)
        }
    });
    window.ThemeDocumentModel = FileDocumentModel.extend({
        url: function(a) {
            var a = a || {},
            b = this.get("project");
            if (!b) return null;
            var b = b.get("shortName"),
            c = this.get("filePath"),
            d = this.get("revision");
            return FileDocumentModel.url(b, c, d, a)
        }
    });
    window.UnitProofFilterModel = Backbone.Model.extend({
        defaults: {
            colIndex: null,
            criteria: "contains",
            value: null
        },
        match: function(a) {
            var b = this.get("criteria"),
            c = this.get("value"),
            b = UnitProofFilterModel.CRITERIA[b];
            return ! b ? !0 : b(c, a)
        }
    });
    UnitProofFilterModel.CRITERIA = function() {
        function a(a) {
            return String(a).toLowerCase()
        }
        function b(b, d) {
            return a(d).indexOf(a(b)) >= 0
        }
        return {
            contains: b,
            "does not contain": function(a, d) {
                return ! b(a, d)
            },
            "begins with": function(b, d) {
                return a(d).indexOf(a(b)) === 0
            },
            "ends with": function(b, d) {
                var b = a(b),
                d = a(d),
                e = d.length - b.length;
                return d.lastIndexOf(b) === e
            },
            "is equal to": function(b, d) {
                return a(b) == a(d)
            }
        }
    } ();
    window.UnitProofFilterCollection = Backbone.Collection.extend({
        model: UnitProofFilterModel,
        getByIndex: function(a) {
            return this.find(function(b) {
                return b.get("colIndex") == a
            })
        }
    });
    window.UnitProofModel = APIModel.extend({
        unitProofType_: null,
        build_: null,
        defaults: {
            revision: null,
            columns: null,
            rows: null
        },
        initialize: function(a, b) {
            b = b || {};
            this.unitProofType_ = b.unitProofType;
            this.build_ = b.build;
            UnitProofModel.__super__.initialize.call(this, a, b)
        },
        url: function() {
            var a = app.getProjectModel();
            return URLUtils.expand("{+apiHost}/unitproofs/{shortName}/b{build}/{type}", {
                shortName: a.get("shortName"),
                build: this.build_ || a.get("unitProofs").get("buildNumber"),
                type: this.unitProofType_
            })
        },
        parse: function(a) {
            var b = UnitProofModel.__super__.parse.call(this, a);
            b.rows = a.data;
            return b
        },
        getUnitProofType: function() {
            return this.unitProofType_
        },
        getBuild: function() {
            return this.build_
        }
    });
    window.UnitProofsListModel = Backbone.Model.extend({
        defaults: {
            shortName: null,
            buildNumber: null,
            unitProofs: null,
            totals: null
        },
        loaded_: !1,
        pollTimeoutID_: null,
        pollingEnabled_: !1,
        initialize: function(a, b) {
            this.win_ = b && b.window || window
        },
        sync: function(a, b, c) {
            a == "read" && (new HabitatRequest({
                url: b.url(),
                method: "get",
                onSuccess: function(a) {
                    c.success(a);
                    this.loaded_ = !0;
                    this.trigger("loaded", this);
                    this.schedulePoll_()
                }.bind(this),
                onFailure: function(a) {
                    c.error(a);
                    this.schedulePoll_()
                }.bind(this)
            })).send()
        },
        url: function() {
            return URLUtils.expand("{+apiHost}/unitproofs/{shortName}", {
                shortName: this.get("shortName")
            })
        },
        isLoaded: function() {
            return this.loaded_
        },
        startPolling: function() {
            if (!this.pollingEnabled_) this.pollingEnabled_ = !0,
            this.fetch()
        },
        stopPolling: function() {
            this.pollingEnabled_ = !1;
            if (this.pollTimeoutID_) this.win_.clearTimeout(this.pollTimeoutID_),
            this.pollTimeoutID_ = null
        },
        schedulePoll_: function() {
            if (this.pollingEnabled_ && !this.pollTimeoutID_) this.pollTimeoutID_ = this.win_.setTimeout(function() {
                this.pollTimeoutID_ = null;
                this.fetch()
            }.bind(this), UnitProofsListModel.POLLING_INTERVAL_)
        },
        parse: function(a) {
            var a = JSON.parse(a),
            b = (a = (a && a.result || []).find(function(a) {
                return a && a.unitproofs && a.status !== "running" && a.status !== "failure"
            },
            this)) && a.unitproofs || {},
            a = a && a.buildNumber || null;
            Object.keys(b).forEach(function(a) {
                var d = b[a];
                d ? (d.category = d.type, delete d.type) : delete b[a]
            });
            this.collectTotals_(b);
            return {
                buildNumber: a,
                unitProofs: b
            }
        },
        collectTotals_: function(a) {
            var b = {
                errors: 0,
                warnings: 0,
                info: 0
            };
            Object.keys(a).forEach(function(c) {
                c = a[c];
                c.errors && (b.errors += c.errors);
                c.warnings && (b.warnings += c.warnings);
                c.info && (b.info += c.info)
            });
            this.set("totals", b)
        },
        getByType: function(a) {
            return this.get("unitProofs")[a]
        }
    });
    UnitProofsListModel.POLLING_INTERVAL_ = 1E4;
    window.ProjectFilterView = Backbone.View.extend({
        parentPane_: null,
        waitFor_: null,
        allProjects_: null,
        starredProjects_: null,
        searchedProjects_: null,
        projects_: null,
        projectsGroup_: null,
        filter_: null,
        searchFilter_: null,
        coachMark_: null,
        events: {
            "click .toggle-starred-project": "toggleStarredProjectEvent_",
            "click .view-all": "viewAllEvent_",
            "click .view-starred": "viewStarredEvent_",
            "click .view-search": "viewSearchEvent_",
            "click .view-grid": "viewGridEvent_",
            "click .view-list": "viewListEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.allProjects_ = a.projects;
            this.filter_ = this.getShowFilter_();
            this.setupStarredProjects_();
            this.projects_ = this.filter_ === ProjectFilterView.FILTERS.SHOW_STARRED ? this.starredProjects_: this.allProjects_;
            this.search = _.debounce(this.search, 300);
            this.listenTo(app.getCurrentUser().get("prefs"), "change:dashboardViewAsGrid", this.viewAsGridPrefChangedEvent_)
        },
        render: function() {
            this.removeSpinner_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/projectFilterView"](this.getTemplateData_()));
            this.renderProjectsGroup_();
            this.parentPane_.appendChild(this.el);
            this.renderCoachMark_()
        },
        remove: function() {
            this.removeSpinner_();
            this.coachMark_ && this.coachMark_.remove();
            ProjectFilterView.__super__.remove.call(this)
        },
        search: function(a) { (this.searchFilter_ = a) ? (this.setShowFilter_(ProjectFilterView.FILTERS.SHOW_SEARCH), this.projects_ = this.searchedProjects_ = new ProjectsCollection, this.searchedProjects_.fetch({
                searchTerm: a,
                silent: !0,
                success: function() {
                    this.searchedProjects_.loadBuildData();
                    this.render()
                }.bind(this)
            }), this.waitFor_ = new WaitFor({
                waitFor: this.searchedProjects_,
                showSpinnerOn: this.el.querySelector(".all-projects"),
                whenLoaded: this.removeSpinner_.bind(this)
            })) : (this.setShowFilter_(ProjectFilterView.FILTERS.SHOW_ALL), this.searchedProjects_ = null, this.projects_ = this.allProjects_, this.render())
        },
        getTemplateData_: function() {
            return {
                projects: this.projects_.toJSON(),
                searchFilter: !!this.searchFilter_,
                searchTerm: this.searchFilter_,
                searchSelected: this.filter_ == ProjectFilterView.FILTERS.SHOW_SEARCH,
                allSelected: this.filter_ == ProjectFilterView.FILTERS.SHOW_ALL,
                starredSelected: this.filter_ == ProjectFilterView.FILTERS.SHOW_STARRED,
                gridSelected: this.getViewAsGrid_(),
                listSelected: !this.getViewAsGrid_(),
                issueCounts: ProjectStatisticsView.ISSUE_STATUS_DISPLAY_ORDER.map(function(a) {
                    return {
                        type: a,
                        name: IssueModel.getDisplayStatus(a)
                    }
                }),
                unitProofCounts: ProjectStatisticsView.UNIT_PROOF_DISPLAY_ORDER
            }
        },
        renderProjectsGroup_: function() {
            this.projectsGroup_ && this.projectsGroup_.remove();
            this.projectsGroup_ = new ProjectGroupView({
                collection: this.projects_,
                title: "",
                parentPane: this.el.querySelector(".all-projects"),
                showNewProjectItem: this.filter_ == ProjectFilterView.FILTERS.SHOW_ALL
            });
            this.projectsGroup_.render()
        },
        renderCoachMark_: function() {
            this.coachMark_ && this.coachMark_.remove();
            if (this.projects_.length === 0 && this.filter_ === ProjectFilterView.FILTERS.SHOW_ALL) {
                var a;
                a = this.getViewAsGrid_() ? this.el.querySelector(".create-project-button") : this.el.querySelector(".create-project-button > h2");
                this.coachMark_ = new CoachMarkView({
                    anchor: a,
                    config: CoachMarkView.CONFIGURATION.DASHBOARD_CREATE_PROJECT
                });
                this.coachMark_.render(!0)
            }
        },
        setupStarredProjects_: function() {
            this.starredProjects_ = new ProjectsCollection;
            var a = [];
            app.getCurrentUser().get("prefs").getStarredProjects().forEach(function(b) {
                var c = this.allProjects_.findWhere({
                    shortName: b
                });
                c ? (c.set("starred", !0), this.starredProjects_.add(c)) : a.push("sn-" + b)
            },
            this);
            a.length && this.starredProjects_.fetch({
                remove: !1,
                success: function() {
                    this.starredProjects_.loadBuildData()
                }.bind(this)
            },
            a)
        },
        toggleStarredProjectEvent_: function(a) {
            a.preventDefault();
            this.toggleStarred_(DOMUtils.getParent(a.target, ".project-item").dataset.shortName)
        },
        toggleStarred_: function(a) {
            var b = this.projects_.findWhere({
                shortName: a
            }),
            c = !b.get("starred");
            b.set("starred", c);
            c ? this.starredProjects_.add(b) : this.starredProjects_.remove(b);
            app.getCurrentUser().get("prefs").toggleStarredProject(a, c)
        },
        getShowFilter_: function() {
            var a = app.getCurrentUser().get("prefs").get("dashboardShowFilter");
            if (_.values(ProjectFilterView.FILTERS).indexOf(a) === -1) a = ProjectFilterView.FILTERS.SHOW_ALL;
            return a
        },
        setShowFilter_: function(a) {
            this.filter_ = a;
            a != ProjectFilterView.FILTERS.SHOW_SEARCH && app.getCurrentUser().get("prefs").set("dashboardShowFilter", a)
        },
        getViewAsGrid_: function() {
            return app.getCurrentUser().get("prefs").get("dashboardViewAsGrid")
        },
        setViewAsGrid_: function(a) {
            app.getCurrentUser().get("prefs").set("dashboardViewAsGrid", a)
        },
        viewAllEvent_: function() {
            this.setShowFilter_(ProjectFilterView.FILTERS.SHOW_ALL);
            this.projects_ = this.allProjects_;
            this.render()
        },
        viewStarredEvent_: function() {
            this.setShowFilter_(ProjectFilterView.FILTERS.SHOW_STARRED);
            this.projects_ = this.starredProjects_;
            this.render()
        },
        viewSearchEvent_: function() {
            this.setShowFilter_(ProjectFilterView.FILTERS.SHOW_SEARCH);
            this.projects_ = this.searchedProjects_;
            this.render()
        },
        viewGridEvent_: function() {
            this.setViewAsGrid_(!0);
            this.render()
        },
        viewListEvent_: function() {
            this.setViewAsGrid_(!1);
            this.render()
        },
        viewAsGridPrefChangedEvent_: function() {
            var a = this.getViewAsGrid_();
            this.el.querySelector(".projects-header") && (this.el.querySelector(".projects-header .view-grid").classList.toggle("on", a), this.el.querySelector(".projects-header .view-list").classList.toggle("on", !a), this.el.classList.toggle("show-list-view", !a))
        },
        removeSpinner_: function() {
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null
        }
    });
    ProjectFilterView.FILTERS = {
        SHOW_ALL: "all",
        SHOW_STARRED: "starred",
        SHOW_SEARCH: "search"
    };
    window.UserPreferencesModel = Backbone.Model.extend({
        defaults: {
            hasSeenIntro: !1,
            defaultAssignees: null,
            tocView: null,
            issueFilters: null,
            dashboardShowFilter: ProjectFilterView.FILTERS.SHOW_ALL,
            dashboardViewAsGrid: !0,
            buildDefaults: {},
            contentWidth: null,
            contentFontSize: null,
            contentZoom: null,
            contentMode: null,
            patternPickerPinned: !0,
            tocNavPinned: !0,
            hiddenServiceMessages: null,
            starredProjects: "[]",
            breadcrumbBarExpanded: !1,
            dismissedCoachMarks: "[]"
        },
        localstorageKey_: null,
        initialize: function(a, b) {
            b = b || {};
            this.win_ = b.window || window;
            this.localstorageKey_ = b.uid + "_userPreferences";
            this.has("hiddenServiceMessages") || this.set("hiddenServiceMessages", []);
            this.on("change",
            function() {
                this.save()
            },
            this)
        },
        sync: function(a, b, c) {
            switch (a) {
            case "create":
            case "update":
                this.save_(b, c.success);
                break;
            case "read":
                this.read_(b, c.success)
            }
        },
        getBuildDefaults: function(a) {
            var b = this.get("buildDefaults");
            b || (this.set("buildDefaults", {},
            {
                silent: !0
            }), b = this.get("buildDefaults"));
            return b[a] || {}
        },
        setBuildDefaults: function(a, b) {
            var c = this.get("buildDefaults");
            c[a] = _.extend(c[a] || {},
            b);
            this.set({
                buildDefaults: c
            })
        },
        getStarredProjects: function() {
            return this.deserializeArrayAttribute_("starredProjects")
        },
        toggleStarredProject: function(a, b) {
            var c = this.getStarredProjects(),
            d = c.indexOf(a); ! b && d !== -1 && c.splice(d, 1);
            b && d === -1 && c.push(a);
            this.set("starredProjects", JSON.stringify(c))
        },
        getDismissedCoachMarks: function() {
            return this.deserializeArrayAttribute_("dismissedCoachMarks")
        },
        addDismissedCoachMark: function(a) {
            var b = this.getDismissedCoachMarks();
            b.push(a);
            b = _.unique(b);
            this.set("dismissedCoachMarks", JSON.stringify(b))
        },
        save_: function(a) {
            var b = this.win_.localStorage,
            a = JSON.stringify(a.toJSON());
            b[this.localstorageKey_] = a
        },
        read_: function(a, b) {
            var c = this.win_.localStorage[this.localstorageKey_];
            try {
                var d = JSON.parse(c);
                b(d)
            } catch(e) {}
        },
        deserializeArrayAttribute_: function(a) {
            var b = this.get(a),
            c = [];
            try {
                c = JSON.parse(b)
            } catch(d) {
                console.error("Programming Error! " + a + " property must be a JSON serialized array.")
            }
            return Array.isArray(c) ? c: []
        }
    });
    window.UsersCollection = Backbone.Collection.extend({
        model: UserModel,
        comparator: function(a) {
            return a.getDisplayName().toLowerCase()
        },
        getDisplayName: function(a) {
            var b = this.find(function(b) {
                return a === b.get("uid")
            });
            return b ? b.getDisplayName() : null
        },
        getRegisteredUserIDs: function() {
            var a = [];
            this.forEach(function(b) {
                b.get("pending") || a.push(b.get("uid"))
            });
            return a
        }
    });
    window.WidgetAccessTokenModel = APIModel.extend({
        loadFailed_: !1,
        projectId_: null,
        habitatAccessToken_: null,
        defaults: {},
        loadedSuccessfully: function() {
            return this.loaded_ && !this.loadFailed_
        },
        fetch: function(a) {
            var a = a || {},
            b = app.getConfig();
            if (b.get("environment") === "local" || !b.get("widgetHost")) return this.loaded_ = !0,
            a.success && a.success.apply(null, [this, null, a]),
            this.trigger("loaded", this),
            null;
            var c = a.success;
            a.success = function(a, b, d) {
                this.loadFailed_ = !1;
                c && c.apply(null, arguments)
            }.bind(this);
            var d = a.error;
            a.error = function(a, b, c) {
                this.loadFailed_ = !0;
                d && d.apply(null, arguments)
            }.bind(this);
            return WidgetAccessTokenModel.__super__.fetch.call(this, a)
        },
        url: function() {
            return URLUtils.expand("{+widgetHost}/oauth/access_token{?params*}", {
                params: {
                    grant_type: "widgetauthor",
                    project_id: this.projectId_,
                    access_token: this.habitatAccessToken_
                }
            })
        },
        parse: function() {
            return {}
        },
        setProjectId: function(a) {
            this.projectId_ = a
        },
        setAccessToken: function(a) {
            this.habitatAccessToken_ = a
        }
    });
    window.WidgetConfigurationModel = Backbone.Model.extend({
        file_: null,
        filePath_: null,
        widgetFileURL_: null,
        initialize: function(a, b) {
            b = b || {};
            this.filePath_ = RepositoryLayout.WIDGETS_CONFIG_DIRECTORY + "/" + b.s9id + ".json";
            this.widgetFileURL_ = b.widgetFileURL
        },
        setParams: function(a) {
            _.difference(this.keys(), Object.keys(a)).forEach(function(a) {
                a !== WidgetConfigurationModel.CONFIGURATION_URL_KEY_ && this.unset(a)
            },
            this);
            this.set(a)
        },
        setFileContent: function(a) {
            if (this.widgetFileURL_) {
                if (!this.file_) this.file_ = new FileDocumentModel({
                    project: app.getProjectModel(),
                    filePath: this.filePath_,
                    documentType: "file:widget-config"
                }),
                this.set(WidgetConfigurationModel.CONFIGURATION_URL_KEY_, WidgetUtils.getWidgetRelativePath(this.widgetFileURL_, this.filePath_));
                var b = null;
                try {
                    b = JSON.stringify(a)
                } catch(c) {
                    console.error("Widget editor API error: Tried to save circular object.")
                }
                b && (this.file_.set("content", b), this.trigger("change"))
            } else console.error("Programming error: Tried to save configuration for external widget.")
        },
        getFileContent: function() {
            return this.file_ ? this.file_.get("content") : null
        },
        save: function(a, b) {
            this.file_ ? (new FileDocumentMultipostSaver([this.file_])).save(b) : b.success(this, null, null)
        }
    });
    WidgetConfigurationModel.CONFIGURATION_URL_KEY_ = "configFile";
    window.PopupView = Backbone.View.extend({
        keyboard_: null,
        parentPane_: null,
        popupClassName_: null,
        popupMask_: null,
        popupMaskVisible_: null,
        popupClosable_: null,
        popupRemoveOnClose_: null,
        popupEl_: null,
        popupOpen_: !1,
        popupOpenedOnce_: !1,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane || this.doc_.body;
            this.popupClassName_ = a.className || "";
            this.popupMaskVisible_ = a.maskVisible !== void 0 ? !!a.maskVisible: !0;
            this.popupCreateMask_ = a.createMask !== void 0 ? !!a.createMask: !0;
            this.popupClosable_ = a.closable !== void 0 ? !!a.closable: !0;
            this.popupRemoveOnClose_ = !!a.removeOnClose;
            this.popupSetHeight_ = !!a.setHeight;
            this.resizeEventBound_ = this.resizeEvent_.bind(this);
            this.popupMaskClickEventBound_ = this.popupMaskClickEvent_.bind(this);
            this.win_.addEventListener("resize", this.resizeEventBound_); (a.enableKeyboard !== void 0 ? a.enableKeyboard: 1) && this.setupKeyboard_(a.keyboardEvents || {});
            this.popupCreateMask_ && this.setupPopupMask_()
        },
        remove: function() {
            DOMUtils.detachElement(this.popupEl_);
            this.keyboard_ && app.getKeyboardManager().remove(this.keyboard_);
            if (this.popupMask_) this.popupMask_.removeEventListener("click", this.popupMaskClickEventBound_),
            DOMUtils.detachElement(this.popupMask_),
            this.popupMask_ = null;
            this.win_.removeEventListener("resize", this.resizeEventBound_);
            PopupView.__super__.remove.apply(this)
        },
        render: function() {
            DOMUtils.detachElement(this.popupEl_);
            this.popupEl_ = Templates["common/popup"](this.popupGetTemplateData_());
            this.parentPane_.insertBefore(this.popupEl_, this.parentPane_.firstElementChild);
            this.keyboard_ && app.getKeyboardManager().activate(this.keyboard_);
            this.isOpen() ? this.doOpen_() : this.doClose_();
            this.popupEl_.appendChild(this.el);
            this.reposition()
        },
        reposition: function() {
            if (this.popupEl_) {
                if (this.popupSetHeight_) this.popupEl_.style.height = null;
                var a = this.popupEl_.getBoundingClientRect(),
                b = this.parentPane_.getBoundingClientRect();
                this.popupEl_.style.top = b.height / 2 - a.height / 2 + "px";
                this.popupEl_.style.left = b.width / 2 - a.width / 2 + "px";
                if (this.popupSetHeight_) this.popupEl_.style.height = DOMUtils.getComputedStyle(this.popupEl_).height
            }
        },
        open: function() {
            this.doOpen_();
            this.trigger("open")
        },
        close: function() {
            this.doClose_();
            this.popupRemoveOnClose_ && this.remove();
            this.trigger("close")
        },
        focus: function() {
            var a = this.el.querySelector('input[type="text"],input[type="email"],input[type="password"],textarea');
            a && a.focus()
        },
        toggle: function() {
            this.isOpen() ? this.close() : this.open()
        },
        isOpen: function() {
            return this.popupOpen_
        },
        setupKeyboard_: function(a) {
            a = _.extend({
                cancel: this.escEvent_.bind(this)
            },
            a);
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                stopPropagation: !0,
                bindings: app.getKeyboardResolver().resolve(a)
            })
        },
        setupPopupMask_: function() {
            var a = PopupView.MASK_CLASSNAME;
            this.popupMaskVisible_ && (a += " popup-mask-visible");
            this.popupMask_ = DOMUtils.createElement("div", {
                className: a
            });
            this.popupMask_.addEventListener("click", this.popupMaskClickEventBound_);
            this.popupOpen_ ? this.showMask_() : this.hideMask_()
        },
        popupGetTemplateData_: function() {
            return {
                className: this.popupClassName_ || ""
            }
        },
        doOpen_: function() {
            this.popupOpen_ = !0;
            this.popupEl_.classList.add("popup-open");
            this.popupMask_ && this.showMask_();
            this.reposition();
            this.keyboard_ && app.getKeyboardManager().activate(this.keyboard_);
            this.focus()
        },
        doClose_: function() {
            this.popupOpen_ = !1;
            this.popupEl_ && this.popupEl_.classList.remove("popup-open");
            this.popupMask_ && this.hideMask_();
            this.reposition();
            this.keyboard_ && app.getKeyboardManager().remove(this.keyboard_)
        },
        resizeEvent_: function() {
            this.reposition()
        },
        escEvent_: function() {
            this.popupClosable_ && this.close()
        },
        popupMaskClickEvent_: function(a) {
            this.popupClosable_ && !DOMUtils.isSecondaryClick(a) && (a.preventDefault(), this.close())
        },
        showMask_: function() {
            this.popupMask_.parentElement || this.doc_.body.appendChild(this.popupMask_);
            this.popupMask_.style.display = "block"
        },
        hideMask_: function() {
            this.popupMask_.style.display = "none"
        }
    });
    PopupView.MASK_CLASSNAME = "popup-mask";
    window.AnchoredPopupView = PopupView.extend({
        popupAnchorEl_: null,
        anchorAlignmentPoint_: null,
        popupAlignmentPoint_: null,
        initialize: function(a) {
            a = a || {};
            this.popupAnchorEl_ = a.anchor;
            this.popupAlignmentPoint_ = _.clone(a.popupAlignmentPoint);
            this.anchorAlignmentPoint_ = _.clone(a.anchorAlignmentPoint);
            AnchoredPopupView.__super__.initialize.call(this, a)
        },
        reposition: function() {
            if (this.popupEl_) {
                var a = this.findNonStaticParent_(this.parentPane_),
                b = DOMUtils.getCoordsRelativeToElement(this.popupAnchorEl_, a),
                a = DOMUtils.getCoordsRelativeToElement(this.popupEl_, a);
                this.popupEl_.style.top = b.top + b.height * this.anchorAlignmentPoint_.y - a.height * this.popupAlignmentPoint_.y + "px";
                this.popupEl_.style.left = b.left + b.width * this.anchorAlignmentPoint_.x - a.width * this.popupAlignmentPoint_.x + "px"
            }
        },
        findNonStaticParent_: function(a) {
            var b;
            do
            if (b = DOMUtils.getComputedStyle(a).position, b === "static") a = a.parentElement;
            while (a && b === "static");
            if (!a) a = this.doc_.body;
            return a
        }
    });
    window.AccountMenuView = AnchoredPopupView.extend({
        model: null,
        projectModel: null,
        events: _.extend({},
        AnchoredPopupView.prototype.events, {
            "click .logout": "logoutClickEvent_",
            "click .support": "supportClickEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.model = a.model || app.getCurrentUser();
            this.projectModel = a.projectModel;
            AccountMenuView.__super__.initialize.call(this, {
                window: a.window,
                document: a.document,
                maskVisible: !1,
                anchor: a.anchor,
                removeOnClose: !0,
                anchorAlignmentPoint: {
                    x: 1,
                    y: 1
                },
                popupAlignmentPoint: {
                    x: 1,
                    y: 0
                }
            })
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/accountMenu"](this.getTemplateData_()));
            AccountMenuView.__super__.render.call(this);
            this.open()
        },
        reposition: function() {
            AccountMenuView.__super__.reposition.apply(this, arguments);
            var a = parseInt(this.popupEl_.style.left, 10),
            b = parseInt(this.popupEl_.style.top, 10);
            this.popupEl_.style.left = a - AccountMenuView.OFFSETS_.RIGHT + "px";
            this.popupEl_.style.top = b + AccountMenuView.OFFSETS_.TOP + "px"
        },
        getTemplateData_: function() {
            var a = app.getConfig(),
            b;
            app.userHasPermission(PermissionsModel.PERMISSIONS.INTERNAL_USER) && (b = this.projectModel ? URLUtils.expand("{+redmineHost}/projects/{shortName}/issues?set_filter=1", {
                shortName: this.projectModel.get("shortName")
            }) : URLUtils.expand("{+redmineHost}/issues"));
            return {
                userGuideURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/"),
                techDocsURL: a.get("documentationURL"),
                hideSupportLink: app.userHasPermission(PermissionsModel.PERMISSIONS.HIDE_SUPPORT_LINK),
                redPubURL: b,
                accountURL: URLUtils.expand("{+wwwHost}/store/account/edit/")
            }
        },
        logoutClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.win_.confirm("Are you sure you want to log out?") && (app.getMessageView().show("Logging out..."), app.getAuthenticator().signOut()))
        },
        supportClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (new SupportPopupView).render(), this.close())
        }
    });
    AccountMenuView.OFFSETS_ = {
        TOP: 7,
        RIGHT: 15
    };
    window.AceView = Backbone.View.extend({
        id: "ace-editor",
        editor_: null,
        aceContainer_: null,
        mutingKeyboard_: null,
        hasRendered_: !1,
        initialScrollPosition_: null,
        origOnPaste_: null,
        pasteManager_: null,
        initialize: function(a) {
            a = a || {};
            a.type = a.type || "xml";
            a.fontSize = a.fontSize || "11px";
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.sessionChangeEventDebouncer_ = FunctionUtils.createDebouncer(this.sessionChangeEvent_, 1, this);
            this.afterRenderEventBound_ = this.afterRenderEvent_.bind(this);
            this.mutingKeyboard_ = app.getKeyboardManager().createKeyboard({
                stopPropagation: !0,
                bindings: app.getKeyboardResolver().resolve({
                    save: function(a) {
                        a.stopPropagation = !1
                    },
                    toggleMode: function(a) {
                        a.stopPropagation = !1
                    }
                })
            });
            this.el.classList.add("ace-view");
            this.aceContainer_ = DOMUtils.createElement("div", {
                doc: this.doc_
            });
            this.el.appendChild(this.aceContainer_);
            this.editor_ = ace.edit(this.aceContainer_);
            var b = this.editor_.getSession();
            this.pasteManager_ = a.pasteManager ||
            function(a) {
                return a
            };
            this.origOnPaste_ = this.editor_.onPaste;
            this.editor_.onPaste = this.onPaste_.bind(this);
            b.setUseWorker(!1);
            b.doc.setNewLineMode("unix");
            this.editor_.setTheme("ace/theme/textmate");
            this.editor_.setFontSize(a.fontSize);
            a.hideGutter && this.editor_.renderer.setShowGutter(!1);
            a.type in AceView.SUPPORTED_TYPES_ && b.setMode("ace/mode/" + AceView.SUPPORTED_TYPES_[a.type]);
            b.setUseWrapMode(!0);
            this.editor_.setHighlightActiveLine(!0);
            this.editor_.renderer.setHScrollBarAlwaysVisible(!1);
            this.editor_.renderer.once("afterRender", this.afterRenderEventBound_);
            this.editor_.on("focus",
            function() {
                this.trigger("focus")
            }.bind(this));
            a.value && this.setValue(a.value);
            b.on("change", this.sessionChangeEventDebouncer_.call);
            app.on("contentPaneResized", this.resize, this)
        },
        remove: function() {
            app.getKeyboardManager().remove(this.mutingKeyboard_);
            this.editor_.removeAllListeners("focus");
            this.editor_.getSession().off("change", this.sessionChangeEventDebouncer_.call);
            this.editor_.renderer.off("afterRender", this.afterRenderEventBound_);
            this.editor_.onPaste = this.origOnPaste_;
            DOMUtils.detachElement(this.editor_);
            app.off("contentPaneResized", this.resize, this);
            AceView.__super__.remove.apply(this, arguments)
        },
        resize: function() {
            this.el.parentNode && this.editor_.resize()
        },
        setValidationErrors: function(a) {
            this.editor_.getSession().clearAnnotations();
            a = a.filter(function(a) {
                return Type.isNumber(a.line)
            },
            this);
            a = a.map(function(a) {
                return {
                    row: a.line,
                    text: a.message,
                    type: "error"
                }
            },
            this);
            this.editor_.getSession().setAnnotations(a)
        },
        disable: function() {
            this.editor_.setReadOnly(!0);
            this.el.classList.add("disabled")
        },
        enable: function() {
            this.editor_.setReadOnly(!1);
            this.el.classList.remove("disabled")
        },
        isFocused: function() {
            return this.editor_.isFocused()
        },
        focus: function() {
            this.editor_.focus();
            app.getKeyboardManager().activate(this.mutingKeyboard_)
        },
        blur: function() {
            this.editor_.blur();
            app.getKeyboardManager().remove(this.mutingKeyboard_)
        },
        insert: function(a) {
            this.editor_.insert(a);
            this.foldS9IDs()
        },
        gotoValidationError: function(a) {
            a && this.gotoLine(a.line, a.character)
        },
        gotoElementContents: function(a, b) {
            if (b) {
                var c = this.getValue(),
                d = c.match(RegExp('<([^/>\\s]+)[^>]+?(?:data-uuid|id)="' + a + '"[^>]*>\\s*(?=\\S)'));
                if (d && d[0]) {
                    if (b === "inside") {
                        var e = d[1].toLowerCase();
                        HTMLContent.isCategory(HTMLContent.CATEGORY.VOID, e) && (b = "before")
                    }
                    e = b === "inside" ? d[0].length: 0;
                    c = this.getStringEndCoordinates(c.substring(0, c.indexOf(d[0]) + e));
                    this.gotoLine(c.row, c.col);
                    return c
                }
            }
        },
        getStringEndCoordinates: function(a) {
            var b = this.editor_.getSession(),
            a = a.split(b.doc.getNewLineCharacter()),
            b = a.length - 1;
            return {
                row: b,
                col: a[b].length
            }
        },
        gotoLine: function(a, b) {
            if (this.hasRendered_) {
                if (Type.isNumber(a) && !(a < 0)) {
                    if (!Type.isNumber(b) || b < 0) b = 0;
                    this.editor_.gotoLine(a + 1, b);
                    this.editor_.scrollToLine(a + 1, !0)
                }
            } else this.initialScrollPosition_ = {
                line: a,
                character: b
            }
        },
        getScrollPosition: function() {
            var a = this.editor_.getCursorPosition();
            a.scrollTop = this.editor_.renderer.scrollTop;
            return a
        },
        setScrollPosition: function(a) {
            a.row && a.column && this.editor_.moveCursorTo(a.row, a.column);
            this.editor_.renderer.scrollToY(a.scrollTop)
        },
        getValue: function() {
            return this.editor_.getSession().getValue()
        },
        setValue: function(a, b) {
            var c = this.editor_.getSession();
            b && c.off("change", this.sessionChangeEventDebouncer_.call);
            c.getDocument().setValue(a);
            this.foldS9IDs();
            if (b) c.on("change", this.sessionChangeEventDebouncer_.call)
        },
        flush: function() {
            this.sessionChangeEventDebouncer_.invokeNow()
        },
        refresh: function() {
            this.editor_.renderer.updateFull(!0)
        },
        getAceEditor: function() {
            return this.editor_
        },
        foldS9IDs: function() {
            var a = ace.require("ace/range").Range,
            b = this.editor_.getSession(),
            c = b.getValue(); [/(<[^>]+\sid=(['"]))([0-9A-Za-z]{32})\2/g, /(<[^>]+\sdata-uuid=(['"]))([0-9A-Za-z]{32})\2/g].forEach(function(d) {
                for (var e; (e = d.exec(c)) !== null;) {
                    var f = this.getStringEndCoordinates(c.substring(0, e.index + e[1].length));
                    b.addFold("...", new a(f.row, f.col, f.row, f.col + e[3].length))
                }
            },
            this)
        },
        afterRenderEvent_: function() {
            this.hasRendered_ = !0;
            if (this.initialScrollPosition_) this.gotoLine(this.initialScrollPosition_.line, this.initialScrollPosition_.character),
            this.initialScrollPosition_ = null
        },
        sessionChangeEvent_: function() {
            this.trigger("change")
        },
        onPaste_: function(a) {
            var b = this.getValue(),
            a = XMLUtilities.modifyS9IDs(a,
            function(a, d, e) {
                return ! e && !HTMLContent.shouldHaveS9ID(a) ? null: e && b.indexOf(e) === -1 ? e: UUID()
            }),
            a = this.pasteManager_(a);
            this.origOnPaste_.call(this.editor_, a)
        }
    });
    AceView.SUPPORTED_TYPES_ = {
        xml: "xml",
        xhtml: "xhtml",
        scss: "scss",
        css: "css",
        js: "javascript",
        html: "html"
    };
    window.AssetPickerView = PopupView.extend({
        directory_: null,
        data_: null,
        onClose_: null,
        selectedAssetCid_: null,
        selectedVideoAsset_: null,
        isList_: !1,
        pageNumber_: 1,
        sortByAscending_: !1,
        sortByAttribute_: "lastModifiedTimestamp",
        filterTerm_: null,
        previousURLTerm: null,
        form_: null,
        supportOnlyURL_: !1,
        supportsURL_: !1,
        currentTab_: null,
        events: {
            "click .single-asset": "selectAssetEvent_",
            "dblclick .single-asset": "submitSelectionEvent_",
            "click input[name=view-type]": "changeLayoutEvent_",
            "click [data-sort-attribute]": "sortHeaderClickEvent_",
            "keyup .filter-input": "changeFilterEvent_",
            "change .filter-input": "changeFilterEvent_",
            "change .url-input": "changeURLEvent_",
            "keyup .url-input": "changeURLEvent_",
            "click [data-goto-page]": "changePageEvent_",
            'change input[type="file"]': "uploadAssetEvent_",
            "click li[data-tab]": "selectTabClickEvent_"
        },
        initialize: function(a) {
            this.onClose_ = a.onClose;
            this.data_ = this.getDisplayData_(a.collection);
            this.collection = a.collection;
            this.directory_ = a.directory || null;
            this.currentTab_ = this.collection.getSupportedTypes() ? AssetPickerView.TAB_.UPLOAD: AssetPickerView.TAB_.LIBRARY;
            if (a.isFromBlueprint) this.supportsURL_ = !1;
            if (this.collection instanceof VideoAssetCollection && !a.isFromBlueprint) {
                if (!app.isFeatureEnabled(ConfigurationModel.FEATURES.NATIVE_VIDEO_PATTERN)) this.currentTab_ = AssetPickerView.TAB_.URL,
                this.supportOnlyURL_ = !0;
                this.supportsURL_ = !0
            }
            this.sortDisplayData_();
            this.changeFilterEvent_ = _.debounce(this.changeFilterEvent_, 150);
            this.changeURLEvent_ = _.debounce(this.changeURLEvent_, 150);
            a.removeOnClose = !0;
            a.className = "asset-picker";
            AssetPickerView.__super__.initialize.call(this, a)
        },
        close: function(a) {
            AssetPickerView.__super__.close.apply(this);
            this.onClose_(a || null)
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["common/asset/assetPicker"](a));
            this.renderAssets_(a);
            AssetPickerView.__super__.render.call(this);
            this.open();
            this.showUiForCurrentTab();
            this.form_ = new FormView({
                el: this.el.querySelector("footer")
            });
            this.listenTo(this.form_, "cancel", this.cancelSelectionEvent_);
            this.listenTo(this.form_, "submit", this.submitSelectionEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            AssetPickerView.__super__.remove.apply(this)
        },
        renderAssets_: function(a) {
            var a = a || this.getTemplateData_(),
            b = this.el.querySelector(".paging-info"),
            c = Templates["common/asset/assetListPagingInfo"](a);
            DOMUtils.replaceNode(b, c);
            b = this.el.querySelector(".assets");
            a = Templates["common/asset/assetList"](a);
            DOMUtils.replaceNode(b, a);
            this.isList_ && (a = this.el.querySelector('table td[data-sort-attribute="' + this.sortByAttribute_ + '"]'), a.classList.add("sorted"), this.sortByAscending_ ? a.classList.remove("descending") : a.classList.add("descending"));
            this.highlightSelection_()
        },
        highlightSelection_: function() {
            if (this.selectedAssetCid_) {
                var a = this.el.querySelector('[data-cid="' + this.selectedAssetCid_ + '"]');
                if (a) {
                    a.classList.add("selected");
                    this.el.querySelector(".submit-selection").disabled = !1;
                    return
                } else this.selectedAssetCid_ = null
            }
            this.el.querySelector(".submit-selection").disabled = !0
        },
        getTemplateData_: function() {
            var a = this.data_;
            this.filterTerm_ && (a = a.filter(function(a) {
                return a.name.indexOf(this.filterTerm_) !== -1
            },
            this));
            var b = AssetPickerView.ASSETS_PER_PAGE_,
            c = Math.ceil(a.length / b),
            d = a.length,
            e = (this.pageNumber_ - 1) * b,
            b = Math.min(this.pageNumber_ * b, a.length),
            a = a.slice(e, b);
            if (this.filterTerm_) {
                var f = RegExp(StringUtils.escapeRegExp(this.filterTerm_), "g"),
                g = "<mark>" + StringUtils.escapeHTML(this.filterTerm_) + "</mark>";
                a.forEach(function(a) {
                    a.highlightedName = a.name.replace(f, g)
                })
            }
            return {
                filterTerm: this.filterTerm_,
                assets: a,
                isList: this.isList_,
                supportedTypes: this.collection.getSupportedTypes(),
                supportsUrl: this.supportsURL_,
                supportOnlyURL: this.supportOnlyURL_,
                assetType: this.collection.getDisplayName(),
                totalAssets: d,
                pageNumber: this.pageNumber_,
                totalPages: c,
                prevPage: this.pageNumber_ > 1 ? this.pageNumber_ - 1 : null,
                nextPage: this.pageNumber_ < c ? this.pageNumber_ + 1 : null,
                uploadSelected: this.currentTab_ === AssetPickerView.TAB_.UPLOAD,
                librarySelected: this.currentTab_ === AssetPickerView.TAB_.LIBRARY,
                urlSelected: this.currentTab_ === AssetPickerView.TAB_.URL
            }
        },
        getDisplayData_: function(a) {
            a = a.filter(function(a) {
                return a.getName().indexOf(".templates/") !== 0
            });
            return a = a.map(function(a) {
                var c = a.toJSON();
                c.thumbnailURL = a.getThumbnailURL();
                c.cid = a.cid;
                c.modifiedTimeString = c.lastModifiedTimestamp ? FormatTime.getRelativeDateTimeString(c.lastModifiedTimestamp, " ago") : "Unknown";
                c.name = a.getName();
                return c
            })
        },
        cancelSelectionEvent_: function() {
            this.close()
        },
        submitSelectionEvent_: function() {
            var a = this.el.querySelector(".submit-selection");
            if (!a || !a.disabled) this.close(this.selectedVideoAsset_ || this.collection.get(this.selectedAssetCid_))
        },
        selectAssetEvent_: function(a, b) {
            this.selectedAssetCid_ && this.el.querySelectorAll("[data-cid].selected").forEach(function(a) {
                a.classList.remove("selected")
            });
            this.selectedVideoAsset_ = null;
            this.selectedAssetCid_ = b.dataset.cid;
            this.highlightSelection_()
        },
        extractVideoDefinition_: function(a) {
            if (!HTMLContent.isValidVideoDomain(a)) return null;
            var b = a.match(/\/\/vimeo.com([^\d])+(\d+)/);
            return b && b.length >= 3 ? {
                type: "Vimeo",
                id: b[2]
            }: (b = a.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/)) && b.length >= 3 && b[2].length === 11 ? {
                type: "YouTube",
                id: b[2]
            }: null
        },
        changeURLEvent_: function(a) {
            a = a.target.value;
            if (a.length) {
                if (this.previousURLTerm_ !== a) if (this.previousURLTerm_ = a, this.selectedVideoAsset_ = null, a = this.extractVideoDefinition_(a)) {
                    var b;
                    switch (a.type) {
                    case "YouTube":
                        b = this.getYouTubeDetails_(a.id);
                        break;
                    case "Vimeo":
                        b = this.getVimeoDetails_(a.id)
                    }
                    this.fetchVideoDetails(b)
                } else this.showFetchVideoDetailsFailed_()
            } else this.resetURLTab_(),
            this.el.querySelector(".video-details").classList.remove("show"),
            this.previousURLTerm_ = null
        },
        fetchVideoDetails: function(a) {
            var b = !1;
            _.delay(function() {
                b || this.el.querySelector(".ui-spinner").classList.add("show")
            }.bind(this), 150);
            a.then(function(a) {
                b = !0;
                this.selectedVideoAsset_ = new VideoAssetModel(_.extend(a, {
                    width: 500,
                    height: 281,
                    status: AssetModel.STATUS.COMPLETED
                }));
                var d = this.el.querySelector(".video-details"),
                a = Templates["common/asset/urlAsset"](a);
                DOMUtils.replaceNode(d, a);
                this.resetURLTab_();
                this.el.querySelector(".video-details").classList.add("show");
                this.el.querySelector(".submit-selection").disabled = !1
            }.bind(this),
            function() {
                b = !0;
                this.showFetchVideoDetailsFailed_()
            }.bind(this))
        },
        resetURLTab_: function() {
            this.el.querySelector(".submit-selection").disabled = !0;
            this.el.querySelector(".url-error").classList.remove("show");
            this.el.querySelector(".ui-spinner").classList.remove("show");
            this.el.querySelector(".video-details").classList.remove("show")
        },
        showFetchVideoDetailsFailed_: function() {
            this.resetURLTab_();
            this.el.querySelector(".url-error").classList.add("show")
        },
        getVimeoDetails_: function(a) {
            return Q.promise(function(b, c) {
                var d = URLUtils.expand(AssetPickerView.VIMEO_SETTINGS_.API_URL, {
                    id: a
                }); (new SimpleRequest({
                    url: d,
                    skipCredentials: !0,
                    responseType: "json",
                    onFailure: c,
                    onSuccess: function(d) {
                        d = this.extractVimeoData_(d);
                        if (d === null) return c();
                        d.url = URLUtils.expand(AssetPickerView.VIMEO_SETTINGS_.EMBED_URL, {
                            id: a
                        });
                        b(d)
                    }.bind(this)
                })).send()
            }.bind(this))
        },
        extractVimeoData_: function(a) {
            a = a[0];
            return {
                title: a.title,
                description: a.description,
                thumbnail: a.thumbnail_large
            }
        },
        getYouTubeDetails_: function(a) {
            return Q.promise(function(b, c) {
                var d = URLUtils.expand(AssetPickerView.YOUTUBE_SETTINGS_.API_URL, {
                    id: a,
                    apiKey: app.getConfig().get("youtubeAPIKey")
                }); (new SimpleRequest({
                    url: d,
                    skipCredentials: !0,
                    responseType: "json",
                    onFailure: c,
                    onSuccess: function(d) {
                        d = this.extractYouTubeData_(d);
                        if (d === null) return c();
                        d.url = URLUtils.expand(AssetPickerView.YOUTUBE_SETTINGS_.EMBED_URL, {
                            id: a
                        });
                        b(d)
                    }.bind(this)
                })).send()
            }.bind(this))
        },
        extractYouTubeData_: function(a) {
            if (!a.items.length) return null;
            a = a.items[0].snippet;
            return {
                title: a.title,
                description: a.description,
                thumbnail: a.thumbnails.high.url
            }
        },
        sortHeaderClickEvent_: function(a) {
            a = a.target.dataset.sortAttribute;
            this.sortByAttribute_ === a ? this.sortByAscending_ = !this.sortByAscending_: this.sortByAttribute_ = a;
            this.sortDisplayData_();
            this.renderAssets_()
        },
        sortDisplayData_: function() {
            var a = this.sortByAttribute_;
            this.data_ = this.data_.sort(function(b, c) {
                var d = b[a],
                e = c[a];
                return d === e ? 0 : this.sortByAscending_ ? d < e ? -1 : 1 : d > e ? -1 : 1
            }.bind(this))
        },
        selectTabClickEvent_: function(a) {
            this.el.querySelector("[data-tab].selected").classList.remove("selected");
            var b = this.el.querySelector("section." + this.currentTab_);
            b.classList.remove("selected");
            this.currentTab_ = a.target.getAttribute("data-tab");
            a.target.classList.add("selected");
            b = this.el.querySelector("section." + this.currentTab_);
            b.classList.add("selected");
            this.showUiForCurrentTab()
        },
        showUiForCurrentTab: function() {
            var a = this.el.querySelector("[data-tab].selected"),
            b = this.el.querySelector("li.indicator");
            b.style.width = a.offsetWidth + 8 + "px";
            b.style.left = a.offsetLeft - 4 + "px";
            b.offsetWidth = b.offsetWidth;
            b.classList.remove("no-transition");
            this.currentTab_ === AssetPickerView.TAB_.LIBRARY && this.el.querySelector(".filter-input").focus();
            this.currentTab_ === AssetPickerView.TAB_.URL && this.el.querySelector(".url-input").focus()
        },
        changeLayoutEvent_: function(a) {
            a = a.target.value === "list";
            if (a !== this.isList_) this.isList_ = a,
            this.render()
        },
        changeFilterEvent_: function(a) {
            a = a.target.value || null;
            if (this.filterTerm_ !== a) this.filterTerm_ = a,
            this.pageNumber_ = 1,
            this.renderAssets_()
        },
        changePageEvent_: function(a) {
            this.pageNumber_ = parseInt(a.target.dataset.gotoPage, 10);
            this.renderAssets_()
        },
        uploadAssetEvent_: function(a) {
            var b = this.collection.model,
            a = a.target.files[0],
            c = {
                file: a
            };
            if (b === ImageAssetModel) {
                if (a.size > AssetPickerView.IMAGE_SIZE_.MAX) {
                    app.getMessageView().error(AssetPickerView.IMAGE_SIZE_.EXCEEDED_MESSAGE, MessageView.DEFAULT_DISPLAY_TIME);
                    return
                }
                c.directory = this.directory_
            }
            this.close(new b({},
            c))
        }
    });
    AssetPickerView.ASSETS_PER_PAGE_ = 32;
    AssetPickerView.IMAGE_SIZE_ = {
        MAX: 10485760,
        EXCEEDED_MESSAGE: "Unable to upload images greater than 10MB; please use smaller version"
    };
    AssetPickerView.YOUTUBE_SETTINGS_ = {
        EMBED_URL: "//www.youtube.com/embed/{id}?modestbranding=1&rel=0&showinfo=0",
        API_URL: "https://www.googleapis.com/youtube/v3/videos?part=snippet&id={id}&maxResults=1&fields=items%2Fsnippet&key={apiKey}"
    };
    AssetPickerView.VIMEO_SETTINGS_ = {
        EMBED_URL: "//player.vimeo.com/video/{id}?portrait=0&title=0&byline=0&badge=0",
        API_URL: "https://vimeo.com/api/v2/video/{id}.json"
    };
    AssetPickerView.TAB_ = {
        UPLOAD: "upload",
        LIBRARY: "library",
        URL: "url"
    };
    window.AssetProgressView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.model.on("change:progress", this.progressChangeEvent_, this);
            this.model.on("change:status", this.render, this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/asset/assetProgressView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.model.off("change:progress", this.progressChangeEvent_, this);
            AssetProgressView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            return {
                progressType: StringUtils.capitalize(this.model.get("status")),
                progressValue: this.model.get("progress"),
                progressMax: AssetModel.MAX_PROGRESS,
                progressText: Math.floor(this.model.get("progress")) + "%"
            }
        },
        progressChangeEvent_: function() {
            var a = this.getTemplateData_(),
            b = this.el.querySelector("progress");
            b.value = a.progressValue;
            b.textContent = a.progressText
        }
    });
    window.BrowserZoomPopupView = PopupView.extend({
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            BrowserZoomPopupView.__super__.initialize.call(this, {
                window: a.window,
                document: a.document,
                className: "browser-zoom-popup",
                createMask: !0,
                maskVisible: !0,
                closable: !1
            });
            this.checkZoomLevelBound_ = _.throttle(this.checkZoomLevel_.bind(this), 100);
            this.win_.addEventListener("resize", this.checkZoomLevelBound_);
            this.win_.addEventListener("load", this.checkZoomLevelBound_)
        },
        remove: function() {
            this.win_.removeEventListener("resize", this.checkZoomLevelBound_);
            this.win_.removeEventListener("load", this.checkZoomLevelBound_);
            DOMUtils.detachElement(this.el);
            BrowserZoomPopupView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/browserZoomPopup"](this.getTemplate_()));
            BrowserZoomPopupView.__super__.render.call(this);
            this.checkZoomLevel_()
        },
        getTemplate_: function() {
            return {
                modifier: BrowserUtils.getBrowserInfo().platform === "mac" ? "command": "Control"
            }
        },
        getZoom_: function() {
            var a = DOMUtils.createElement("div", {
                styles: {
                    width: "1000px",
                    left: "-3000px",
                    position: "absolute"
                },
                html: '<div style="font-family: helvetica, sans-serif; zoom: reset;"></div>'
            });
            this.doc_.body.appendChild(a);
            Hacks.forceLayout(a);
            var b = a.firstChild.clientWidth / 1E3 || 1;
            this.doc_.body.removeChild(a);
            return b
        },
        checkZoomLevel_: function() {
            this.getZoom_() !== 1 ? this.open() : this.close()
        }
    });
    window.BuildEPUBPopupView = PopupView.extend({
        model: null,
        events: _.extend({},
        PopupView.prototype.events, {
            "click .action-button": "actionButtonClickEvent_",
            "click .cancel-button": "closeButtonClickEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            a.className = "build-epub-popup support-dialog";
            a.removeOnClose = !0;
            a.maskVisible = !0;
            BuildEPUBPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/buildEPUBPopup"](this.getTemplateData_()));
            BuildEPUBPopupView.__super__.render.call(this);
            this.open()
        },
        getTemplateData_: function() {
            return {
                epubHelpURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/fcc68db9eee04d3a82b0460d1bc1904f/423b2a2809ca4e43b564bda3abe415e4")
            }
        },
        actionButtonClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getBuildsManager().startBuild(this.model.get("shortName"), BuildModel.TRACK_NAME.EPUB, {
                targets: ["epub"]
            }), this.close())
        },
        closeButtonClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.close())
        }
    });
    window.BuildHistoryView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        sortByColumn_: null,
        sortByAscending_: !1,
        events: {
            "click th": "tableHeaderClickEvent_",
            "click .report-link": "reportClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.sortByColumn_ = BuildHistoryView.DEFAULT_SORT_BY_COLUMN_;
            this.model.get("buildCollection").on("add reset remove loaded", this.render, this)
        },
        remove: function() {
            this.model.get("buildCollection").off("add reset remove loaded", this.render, this);
            DOMUtils.detachElement(this.el);
            BuildHistoryView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/buildHistory"](this.getTemplateData_()));
            var a = this.el.querySelector('th[data-sort-value="' + this.sortByColumn_ + '"]');
            a.classList.add("sorted");
            this.sortByAscending_ ? a.classList.remove("descending") : a.classList.add("descending");
            this.parentPane_.appendChild(this.el)
        },
        getTemplateData_: function() {
            return {
                buildHistory: this.getBuildHistoryTemplate_()
            }
        },
        getBuildHistoryTemplate_: function() {
            var a = this.model.get("buildCollection").models.slice(0, BuildHistoryView.NUM_BUILDS_TO_SHOW_).map(function(a) {
                return this.getBuildTemplate_(a)
            },
            this),
            a = this.stripDuplicateBuildLinks_(a),
            a = this.sortBuildTemplates_(a, this.sortByColumn_ || BuildHistoryView.DEFAULT_SORT_BY_COLUMN_, this.sortByAscending_);
            a.forEach(function(a) {
                var c = FormatTime.getRelativeDateTimeString(a.completionTime, " ago");
                a.completionTime = c || ""
            },
            this);
            return a
        },
        getBuildTemplate_: function(a) {
            var b = a.getStatusDisplayInfo(),
            b = {
                downloadLink: a.get("downloadLink") || "",
                webClientURL: a.get("webClientURL") || "",
                trackName: a.get("trackName") || "",
                buildName: a.getTrackDisplayName() + " " + (a.get("trackBuildNumber") || ""),
                revision: a.get("revision") || "",
                completionTime: a.get("completionTime"),
                initiator: a.get("initiator") || "",
                statusIconClass: b.iconClass,
                status: b.text
            };
            b.status = b.status || "Starting";
            b.statusIconClass = b.statusIconClass || "status-starting";
            a.get("status") === BuildModel.STATUS.FAILURE ? (b.errors = [], b.warnings = []) : (b.errors = this.getUnitProofFailuresTemplate_(a, a.get("errors")), b.warnings = this.getUnitProofFailuresTemplate_(a, a.get("warnings")));
            if (b.errors.length > 0 || b.warnings.length > 0) b.hasFailedUnitProofs = !0;
            return b
        },
        getUnitProofFailuresTemplate_: function(a, b) {
            return b.map(function(b) {
                return {
                    name: b,
                    url: URLRouter.getReportsPath(this.model.get("shortName"), a.get("unitProofBuildNumber"), b)
                }
            },
            this)
        },
        sortBuildTemplates_: function(a, b, c) {
            return a.sort(function(a, e) {
                var f = a[b],
                g = e[b];
                return f ? g ? f < g ? c ? -1 : 1 : f > g ? c ? 1 : -1 : 0 : c ? -1 : 1 : c ? 1 : -1
            })
        },
        stripDuplicateBuildLinks_: function(a) {
            var a = this.sortBuildTemplates_(a, "completionTime", !1),
            b = {};
            return a = a.map(function(a) {
                if (!a.webClientURL && !a.downloadLink) return a;
                if (BuildHistoryView.TRACK_HAS_URL_DUPES_[a.trackName]) {
                    if (b[a.trackName]) a.webClientURL = "",
                    a.downloadLink = "";
                    b[a.trackName] = !0
                }
                return a
            },
            this)
        },
        tableHeaderClickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = b.dataset.sortValue;
                c === this.sortByColumn_ ? this.sortByAscending_ = !this.sortByAscending_: (this.sortByColumn_ = c, this.sortByAscending_ = !1);
                this.render()
            }
        },
        reportClickEvent_: function(a, b) {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.OPEN_REPORT_BUILD,
                eventInfo: {
                    shortName: this.model.get("shortName"),
                    reportName: b.dataset.reportName
                }
            })
        }
    });
    BuildHistoryView.NUM_BUILDS_TO_SHOW_ = 10;
    BuildHistoryView.DEFAULT_SORT_BY_COLUMN_ = "completionTime";
    BuildHistoryView.TRACK_HAS_URL_DUPES_ = {
        draft: !0,
        release: !0,
        epub: !0
    };
    window.BuildPopupView = PopupView.extend({
        model: null,
        form_: null,
        events: _.extend({},
        PopupView.prototype.events, {
            "click .toggle-header": "toggleHeaderClickEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            a.className = "build-popup support-dialog";
            a.maskVisible = !0;
            a.removeOnClose = !0;
            BuildPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            this.form_ && (this.stopListening(this.form_), this.form_.remove());
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/buildPopup"]());
            BuildPopupView.__super__.render.apply(this, arguments);
            this.open();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.listenTo(this.form_, "cancel", this.formCancelEvent_)
        },
        remove: function() {
            this.form_ && (this.stopListening(this.form_), this.form_.remove());
            BuildPopupView.__super__.remove.apply(this, arguments)
        },
        toggleHeaderClickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = DOMUtils.getParent(b, ".toggle-container");
                c.classList.toggle("toggle-open");
                c.classList.contains("toggle-open") && (c = c.querySelector("#build-users-input")) && c.focus()
            }
        },
        formCancelEvent_: function() {
            this.close()
        },
        formSubmitEvent_: function() {
            var a = this.el.querySelector(".action-button.build");
            if (!a.disabled) {
                a.setAttribute("disabled", "disabled");
                var b = function() {
                    var b = this.getBuildParams_();
                    if (b) {
                        var d = {
                            users: b.users,
                            autoDownload: !1
                        };
                        app.getBuildsManager().startBuild(this.model.get("shortName"), b.track, d);
                        this.close()
                    } else a.removeAttribute("disabled")
                }.bind(this);
                this.model.fetchUsers({
                    success: b,
                    error: b
                })
            }
        },
        getBuildParams_: function() {
            return {
                track: this.el.querySelectorAll('[name="build-track"]').find(function(a) {
                    return a.checked
                },
                this).value,
                users: this.getUsersParam_()
            }
        },
        getUsersParam_: function() {
            var a = this.el.querySelector("input.users-input").value.split(",").map(function(a) {
                return a.trim()
            },
            this);
            return a = a.filter(function(a) {
                return !! a
            },
            this)
        }
    });
    window.MainView = Backbone.View.extend({
        model: null,
        uiModelAttrs_: {},
        uiModel_: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.uiModel_ = new Backbone.Model(_.extend({},
            this.uiModelAttrs_, a.uiModelAttrs || {}));
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document
        },
        render: function() {},
        remove: function() {
            MainView.__super__.remove.call(this)
        },
        getUIModel: function() {
            return this.uiModel_
        }
    });
    window.BuildsMainView = MainView.extend({
        events: {
            "click .build-title": "buildTitleEvent_",
            "click .build-epub": "buildEPUBEvent_",
            "click .send-to-store": "sendToStoreEvent_",
            "click .build-template": "buildTemplateEvent_",
            "click .delete-template": "deleteTemplateEvent_"
        },
        model: null,
        projectTemplateCollection_: null,
        waitFor_: null,
        buildHistoryView_: null,
        buildPopupView_: null,
        publishTemplateView_: null,
        initialize: function(a) {
            this.projectTemplateCollection_ = new ProjectTemplateCollection(null, {
                project: app.getProjectModel()
            });
            this.listenTo(this.projectTemplateCollection_, "loaded remove change", this.projectTemplateLoadedEvent_);
            this.projectTemplateCollection_.fetch();
            BuildsMainView.__super__.initialize.call(this, a)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            app.getMessageView().title("Build Project - Inkling Habitat");
            this.setElement(Templates["project/builds/projectBuilds"](this.getTemplateData_()));
            this.parentPane_.querySelector("#content .coordinate-box").appendChild(this.el);
            this.renderBuildHistory_();
            if (!this.projectTemplateCollection_.isLoaded()) this.waitFor_ && this.waitFor_.remove(),
            this.waitFor_ = new WaitFor({
                showSpinnerOn: this.el.querySelector(".project-template-block .loading-spinner"),
                waitFor: this.projectTemplateCollection_
            })
        },
        remove: function() {
            this.buildHistoryView_ && this.buildHistoryView_.remove();
            this.buildPopupView_ && this.buildPopupView_.remove();
            this.publishTemplateView_ && this.publishTemplateView_.remove();
            this.waitFor_ && this.waitFor_.remove();
            BuildsMainView.__super__.remove.apply(this)
        },
        renderBuildHistory_: function() {
            this.buildHistoryView_ && this.buildHistoryView_.remove();
            this.buildHistoryView_ = new BuildHistoryView({
                model: this.model,
                parentPane: this.el.querySelector(".builds-history-pane")
            });
            this.buildHistoryView_.render()
        },
        renderTemplateData_: function() {
            var a = Templates["project/builds/projectBuilds"](this.getTemplateData_());
            DOMUtils.replaceNode(this.el.querySelector(".project-template-block"), a.querySelector(".project-template-block"))
        },
        getTemplateData_: function() {
            var a = this.model.getOverviewData(),
            b = this.projectTemplateCollection_.at(0) || null,
            c = b ? b.get("updatedAt") : null,
            d = (b && b.get("customAttributes") || {}).updatedBy || null,
            e = d && this.model.get("users").where({
                uid: d
            })[0] || null,
            b = b ? b.get("revision") : null;
            a.templateLoaded = this.projectTemplateCollection_.isLoaded();
            a.updatedAt = FormatTime.format(c);
            a.updatedBy = e ? e.getDisplayName() : d;
            a.updatedByEmail = d;
            a.revision = b;
            a.loading = a.templateLoaded && a.updatedAt;
            a.canBuild = app.userHasPermission(PermissionsModel.PERMISSIONS.BUILD);
            a.canPublish = app.userHasPermission(PermissionsModel.PERMISSIONS.PUBLISH_STORE);
            a.canCreateTemplate = app.userHasPermission(PermissionsModel.PERMISSIONS.CREATE_TEMPLATE);
            return a
        },
        projectTemplateLoadedEvent_: function() {
            this.projectTemplateCollection_.length === 0 && this.projectTemplateCollection_.add({});
            this.renderTemplateData_()
        },
        buildTitleEvent_: function(a) {
            if (app.userHasPermission(PermissionsModel.PERMISSIONS.BUILD) && !DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            this.buildPopupView_ && this.buildPopupView_.remove(),
            this.buildPopupView_ = new BuildPopupView({
                model: this.model
            }),
            this.buildPopupView_.render()
        },
        buildEPUBEvent_: function(a) {
            if (app.userHasPermission(PermissionsModel.PERMISSIONS.BUILD) && !DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            this.buildPopupView_ && this.buildPopupView_.remove(),
            this.buildPopupView_ = new BuildEPUBPopupView({
                model: this.model
            }),
            this.buildPopupView_.render()
        },
        sendToStoreEvent_: function(a) {
            if (app.userHasPermission(PermissionsModel.PERMISSIONS.PUBLISH_STORE) && !DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            this.buildPopupView_ && this.buildPopupView_.remove(),
            this.buildPopupView_ = new SendToStorePopupView({
                model: this.model
            }),
            this.buildPopupView_.render()
        },
        buildTemplateEvent_: function(a) {
            if (app.userHasPermission(PermissionsModel.PERMISSIONS.CREATE_TEMPLATE) && !DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            this.publishTemplateView_ && this.publishTemplateView_.remove(),
            this.publishTemplateView_ = new PublishTemplateSlideoverView({
                parentPane: this.doc_.body,
                model: this.projectTemplateCollection_.at(0)
            }),
            this.publishTemplateView_.render()
        },
        deleteTemplateEvent_: function(a) {
            app.userHasPermission(PermissionsModel.PERMISSIONS.CREATE_TEMPLATE) && !DOMUtils.isSecondaryClick(a) && (a.preventDefault(), this.win_.confirm("Are you sure you want to remove this Template Project?") && this.projectTemplateCollection_.at(0).destroy())
        }
    });
    window.SendToStorePopupView = PopupView.extend({
        model: null,
        events: _.extend({},
        PopupView.prototype.events, {
            'change input[type="file"]': "filesSelectedEvent_"
        }),
        buildModel_: null,
        requestInProgress_: !1,
        waitFor_: null,
        selectorView_: null,
        form_: null,
        initialize: function(a) {
            a = a || {};
            a.className = "send-to-store-popup support-dialog";
            a.removeOnClose = !0;
            a.maskVisible = !0;
            SendToStorePopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null;
            var a = this.model.get("buildCollection");
            if (a.isLoaded()) {
                this.buildModel_ = a.find(function(a) {
                    var c = a.get("trackName"),
                    a = a.get("status");
                    return c === BuildModel.TRACK_NAME.RELEASE && (a === BuildModel.STATUS.SUCCESS || a === BuildModel.STATUS.WARNING)
                },
                this) || null;
                this.setElement(Templates["project/builds/sendToStorePopup"](this.getTemplateData_()));
                if (this.selectorView_) this.selectorView_.remove(),
                this.selectorView_ = null;
                if (a = this.el.querySelector(".license-selector-view")) this.selectorView_ = SelectorView.createSelector({
                    parentPane: a,
                    modelOptions: {
                        values: SendToStorePopupView.LICENSE_OPTIONS,
                        selectedValue: SendToStorePopupView.DEFAULT_LICENSE
                    }
                })
            } else this.waitFor_ = new WaitFor({
                waitFor: a,
                showSpinnerOn: this.el,
                whenLoaded: this.render.bind(this)
            });
            SendToStorePopupView.__super__.render.call(this);
            this.open();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.listenTo(this.form_, "cancel", this.formCancelEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null;
            if (this.selectorView_) this.selectorView_.remove(),
            this.selectorView_ = null;
            SendToStorePopupView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            var a = app.getConfig();
            return {
                hasBuild: !!this.buildModel_,
                buildURL: this.buildModel_ && this.buildModel_.get("webClientURL"),
                buildName: this.getBuildName_(),
                userEmail: app.getCurrentUser().get("email"),
                submissionInfoURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/7d78ca020bc044de8673388dfe652861/38603db55a624b148b72349f5aa95df1"),
                storeRequirementsURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/7d78ca020bc044de8673388dfe652861/b59f02eb5ebc4d2aafd02bf92ce0d101"),
                eulaURL: URLUtils.expand("{+wwwHost}/terms/"),
                dcdaURL: a.get("documentationURL") + "legal/current/dcda.html",
                templateSpreadsheetURL: "/documents/title_info_submission_template.xlsx"
            }
        },
        getBuildName_: function() {
            return this.buildModel_ ? this.buildModel_.getTrackDisplayName() + " " + this.buildModel_.get("trackBuildNumber") : ""
        },
        updateValidityState_: function() {
            var a = 0,
            b = this.el.querySelectorAll('input[type="file"]').map(function(b) {
                var c = b.files.length > 0 ? b.files[0].size: 0;
                a += c;
                b.setCustomValidity(null);
                return {
                    element: b,
                    size: c
                }
            },
            this),
            c = null;
            a > SupportEmailModel.MAX_TOTAL_SIZE && (b.forEach(function(a) {
                a.element.setCustomValidity("Total size of all files is too large")
            },
            this), c = "Total size of all files is too large");
            b.forEach(function(a) {
                a.size > SupportEmailModel.MAX_FILE_SIZE && (a.element.setCustomValidity("File is too large"), c || (c = "File is too large"))
            },
            this);
            b.forEach(function(a) {
                a.element.validity.valueMissing && (a.element.setCustomValidity("Missing required file"), c || (c = "All files are required"))
            },
            this);
            b = this.el.querySelector('input[type="checkbox"]');
            b.setCustomValidity(null);
            b.validity.valueMissing && (b.setCustomValidity("You must accept the DCDA agreement"), c || (c = "You must accept the DCDA agreement"));
            b = this.el.querySelector(":invalid");
            if (!c && b) c = b.validationMessage;
            return c
        },
        formSubmitEvent_: function() {
            if (!this.requestInProgress_) {
                var a = this.updateValidityState_();
                a ? app.getMessageView().error(a) : (app.getMessageView().show("Sending submission request"), this.requestInProgress_ = !0, this.sendSignedDCDAAnalytics_())
            }
        },
        formCancelEvent_: function() {
            this.close();
            app.getMessageView().hide()
        },
        filesSelectedEvent_: function(a) {
            var b = a.target.files[0] || null;
            DOMUtils.getSibling(a.target, ".upload-filename").textContent = b ? b.name: "";
            app.getMessageView().hide()
        },
        sendSignedDCDAAnalytics_: function() {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.SEND_TO_STORE,
                eventInfo: {
                    shortName: this.model.get("shortName")
                },
                async: !1
            });
            this.signDCDA_()
        },
        signDCDA_: function() {
            this.model.save({
                isDcdaSigned: !0
            },
            {
                success: this.sendStoreRequestEmail_.bind(this),
                error: this.requestFailedEvent_.bind(this)
            })
        },
        sendStoreRequestEmail_: function() {
            this.getEmailFiles_(function(a) { (new SupportEmailModel({
                    application: "send-to-store",
                    subject: this.getEmailSubject_(),
                    message: this.getEmailMessage_(),
                    files: a
                })).save(null, {
                    success: this.requestSucceededEvent_.bind(this),
                    error: this.requestFailedEvent_.bind(this)
                })
            }.bind(this))
        },
        requestSucceededEvent_: function() {
            this.requestInProgress_ = !1;
            this.close();
            app.getMessageView().show(SendToStorePopupView.REQUEST_SENT_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME)
        },
        requestFailedEvent_: function(a) {
            this.requestInProgress_ = !1;
            console.error("Failed to send send-to-store email. xhr:", a);
            app.getMessageView().error(SendToStorePopupView.REQUEST_FAILED_MESSAGE_)
        },
        getEmailSubject_: function() {
            return this.getBuildName_() + " of " + this.model.get("name")
        },
        getEmailMessage_: function() {
            var a = app.getCurrentUser().get("email"),
            b = this.buildModel_.get("webClientURL"),
            c = this.getBuildName_(),
            d = this.model.get("name"),
            e = this.model.get("shortName"),
            f = this.selectorView_.model.get("selectedValue");
            return "A new Send-to-Store request has been created by " + a + " for " + c + " (" + b + ") of " + d + " (" + e + '). The desired content license is "' + f + '".'
        },
        getEmailFiles_: function(a) {
            var b = this.el.querySelectorAll('input[type="file"]'),
            b = b.filter(function(a) {
                return a.files.length > 0
            });
            SupportEmailModel.loadFileData(b,
            function(c) {
                c.forEach(function(a, c) {
                    var f = b[c];
                    if (f.name === "icon" || /^(?:image|thumb)[0-9]+$/.test(f.name)) a.filename = f.name + "-" + a.filename
                });
                a(c)
            })
        }
    });
    SendToStorePopupView.REQUEST_SENT_MESSAGE_ = "Thanks for submitting your title to the store. You will receive an email confirmation of your submission.";
    SendToStorePopupView.REQUEST_FAILED_MESSAGE_ = "Request failed, please try again";
    SendToStorePopupView.LICENSE_OPTIONS = "Standard Inkling EULA,Creative Commons BY,Creative Commons BY-SA,Creative Commons BY-ND,Creative Commons BY-NC,Creative Commons BY-NC-SA,Creative Commons BY-NC-ND".split(",");
    SendToStorePopupView.DEFAULT_LICENSE = "Standard Inkling EULA";
    window.CapacityView = Backbone.View.extend({
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.doc_ = a.document || document
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["landing/capacity"]());
            this.parentPane_.appendChild(this.el);
            app.getMessageView().hide();
            this.doc_.body.classList.add("over-capacity")
        },
        remove: function() {
            this.doc_.body.classList.remove("over-capacity");
            CapacityView.__super__.remove.apply(this, arguments)
        }
    });
    window.ChangePasswordView = Backbone.View.extend({
        events: {
            "keyup #passwordInput": "checkPasswordEvent_"
        },
        userID_: null,
        token_: null,
        parentPane_: null,
        strengthChecker_: null,
        form_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            if (a.queryParams) this.userID_ = a.queryParams.u,
            this.token_ = a.queryParams.t
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            this.strengthChecker_ && this.strengthChecker_.remove();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["landing/changePassword"]());
            this.strengthChecker_ = new PasswordStrengthCheckerView({
                parent: this.el.querySelector("#passwordCheckerContainer")
            });
            this.parentPane_.appendChild(this.el);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.submitFormEvent_);
            this.el.querySelector("#passwordInput").focus()
        },
        remove: function() {
            this.form_ && this.form_.remove();
            this.strengthChecker_ && this.strengthChecker_.remove();
            ChangePasswordView.__super__.remove.apply(this, arguments)
        },
        checkPasswordEvent_: function() {
            var a = this.el.querySelector("#passwordInput").value,
            b = this.el.querySelector('input[type="submit"]');
            a === "" ? (b.removeAttribute("disabled"), b.removeAttribute("title"), this.el.classList.add("no-password")) : (this.el.classList.remove("no-password"), this.strengthChecker_.update(a), this.strengthChecker_.strongEnough() ? (b.removeAttribute("disabled"), b.removeAttribute("title"), this.strengthChecker_.removeTitle()) : (b.set({
                disabled: !0,
                title: PasswordStrengthCheckerView.WEAK_PASSWORD_MESSAGE
            }), this.strengthChecker_.setTitle(PasswordStrengthCheckerView.WEAK_PASSWORD_MESSAGE)))
        },
        submitFormEvent_: function() {
            if (!this.el.querySelector('input[type="submit"]').disabled) {
                var a = this.el.querySelector("#passwordInput"),
                b = this.el.querySelector("#passwordInput2"),
                c = a.value,
                d = b.value;
                c ? c !== d ? (app.getMessageView().error("Passwords must match", MessageView.DEFAULT_DISPLAY_TIME), b.focus()) : (app.getMessageView().show("Resetting password..."), UserModel.resetPassword(this.userID_, this.token_, c, this.passwordResetSuccess_.bind(this), this.passwordResetFailure_.bind(this))) : (app.getMessageView().error("You must enter a password", MessageView.DEFAULT_DISPLAY_TIME), a.focus())
            }
        },
        passwordResetSuccess_: function() {
            app.getMessageView().show("Reset successful!");
            this.win_.setTimeout(function() {
                this.win_.location.href = "/login"
            }.bind(this), 400)
        },
        passwordResetFailure_: function() {
            app.getMessageView().error("Reset failed", MessageView.DEFAULT_DISPLAY_TIME);
            var a = this.el.querySelector("#passwordInput");
            a.value = "";
            this.el.querySelector("#passwordInput2").value = "";
            a.focus()
        }
    });
    window.DocumentView = Backbone.View.extend({
        model: null,
        sidebarAnimation_: null,
        currentMode_: null,
        nextMode_: null,
        contentPane_: null,
        sidebarPane_: null,
        controlsPane_: null,
        contentToolbarView_: null,
        scrollPositionForMode_: null,
        sidebarForMode_: {
            edit: !1,
            proof: !0,
            code: !1
        },
        modeKeyboard_: null,
        initialize: function(a) {
            a = a || {};
            if (!a.isSubclass) throw "DocumentView is an abstract class";
            this.scrollPositionForMode_ = {};
            this.doc_ = a.document || document;
            this.docBody_ = a.docBody || this.doc_.body;
            this.win_ = a.window || window;
            this.navigatorPane_ = this.doc_.querySelector("#navigator");
            this.setElement(a.documentArea);
            this.el.classList.add.apply(this.el.classList, this.getViewClasses_());
            this.navigatorPane_.classList.add.apply(this.navigatorPane_.classList, this.getViewClasses_());
            this.modeKeyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    toggleMode: this.toggleModeKeyboardEvent_.bind(this)
                })
            });
            this.listenTo(this.model, "change:title", this.initializeTitle_);
            if (!this.getMode()) {
                var b;
                this.supportsToggleModes_() && (b = (a = app.getCurrentUser().get("prefs")) && a.get("contentMode"));
                this.setMode_(b || this.getDefaultMode(), !0)
            }
        },
        render: function() {
            app.getKeyboardManager().remove(this.modeKeyboard_);
            this.contentPane_ = this.el.querySelector("#content");
            this.sidebarPane_ = this.el.querySelector("#sidebar");
            this.controlsPane_ = this.doc_.querySelector("#project-controls");
            this.currentMode_ && (this.removeCurrentMode_(), this.removeModeToggle_());
            var a = !!this.currentMode_ && this.currentMode_ !== this.nextMode_ && this.currentMode_ !== DocumentView.MODES.CODE && this.nextMode_ !== DocumentView.MODES.CODE;
            this.currentMode_ = this.nextMode_;
            this.docBody_.classList.add(this.currentMode_);
            this.drawContentToolbarView_();
            this.contentToolbarView_ && this.drawModeToggle_(a);
            this.sidebarForMode_[this.currentMode_] ? this.showSidebar() : this.hideSidebar();
            this.initializeTitle_();
            this.modeIsImplemented_(this.currentMode_) ? (a = this.scrollPositionForMode_[this.currentMode_], this.getModeMethod_(this.currentMode_).call(this, a)) : this.displayNotSupported_(this.currentMode_);
            this.setElement(this.el);
            app.getKeyboardManager().activate(this.modeKeyboard_)
        },
        getDefaultMode: function() {
            return DocumentView.MODES.EDIT
        },
        getMode: function() {
            return this.nextMode_
        },
        setMode_: function(a, b) {
            var c = app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_CONTENT);
            if (a !== DocumentView.MODES.PROOF && !c) a = DocumentView.MODES.PROOF;
            this.model.set("editing", a === DocumentView.MODES.EDIT);
            this.nextMode_ = a;
            b || this.render()
        },
        remove: function() {
            this.el.classList.remove.apply(this.el.classList, this.getViewClasses_());
            app.getKeyboardManager().remove(this.modeKeyboard_);
            this.navigatorPane_.classList.remove.apply(this.navigatorPane_.classList, this.getViewClasses_());
            this.sidebarAnimation_ && this.sidebarAnimation_.cancel();
            this.currentMode_ && this.removeCurrentMode_();
            this.removeModeToggle_();
            this.undelegateEvents();
            if (this.contentToolbarView_) this.contentToolbarView_.remove(),
            this.contentToolbarView_ = null;
            this.stopListening()
        },
        getDocumentTitle: function() {
            return this.model.get("title")
        },
        getDocumentModel: function() {
            return this.model
        },
        hideSidebar: function() {
            var a = this.getSidebarPane_();
            a && (a.classList.remove("active"), this.animateSidebar_(0))
        },
        showSidebar: function() {
            var a = this.getSidebarPane_();
            a && (a.classList.add("active"), this.animateSidebar_(DocumentView.SIDEBAR_WIDTH_))
        },
        animateSidebar_: function(a) {
            var b = this.getSidebarPane_(),
            c = parseInt(DOMUtils.getComputedStyle(b).width, 10);
            this.sidebarAnimation_ && this.sidebarAnimation_.cancel();
            this.sidebarAnimation_ = new Animation({
                duration: 200,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(d) {
                    b.style.width = c + d * (a - c) + "px"
                }.bind(this),
                onComplete: function() {
                    this.sidebarAnimation_ = null;
                    b.style.width = a + "px";
                    this.codeView_ && this.codeView_.resize();
                    app.trigger("contentPaneResized")
                }.bind(this)
            })
        },
        initializeTitle_: function() {
            app.getMessageView().title(this.getDocumentTitle())
        },
        drawModeToggle_: function(a) {
            var b = this.getModeToggleJSON_();
            if (!b.hideToggle) b.animateModeToggle = a,
            DOMUtils.detachElement(this.modeToggles_),
            this.modeToggles_ = Templates["project/document/modeToggle"](b),
            this.contentToolbarView_.getModeTogglesArea().appendChild(this.modeToggles_),
            BackboneNativeAdapter.on(this.modeToggles_, "mousedown", '[data-mode]:not([disabled="disabled"])', this.toggleModeMouseEvent_.bind(this))
        },
        drawContentToolbarView_: function() {
            if (this.contentToolbarView_) this.contentToolbarView_.remove(),
            this.contentToolbarView_ = null;
            if (this.supportsContentToolbar_()) this.contentToolbarView_ = new ContentToolbarView({
                model: this.model,
                parentPane: this.el.querySelector("#content-toolbar")
            }),
            this.contentToolbarView_.render()
        },
        removeModeToggle_: function() {
            if (this.contentToolbarView_) {
                var a = this.contentToolbarView_.getModeTogglesArea();
                if (a) a.innerHTML = ""
            }
        },
        supportsToggleModes_: function() {
            return ! app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_CONTENT) ? !1 : [DocumentView.MODES.EDIT, DocumentView.MODES.PROOF].every(function(a) {
                return this.modeIsImplemented_(a)
            },
            this)
        },
        getModeToggleJSON_: function() {
            return {
                isEditing: this.currentMode_ === DocumentView.MODES.EDIT || this.currentMode_ === DocumentView.MODES.CODE,
                isProofing: this.currentMode_ === DocumentView.MODES.PROOF,
                hideToggle: !this.supportsToggleModes_()
            }
        },
        getModeMethod_: function(a) {
            return this[a + "_"]
        },
        modeIsImplemented_: function(a) {
            a = this.getModeMethod_(a);
            return !! a && a !== DocumentView.prototype.edit_
        },
        supportsContentToolbar_: function() {
            return ! 0
        },
        getContentPane_: function() {
            return ! this.contentPane_ ? null: this.contentPane_.querySelector(".coordinate-box") || null
        },
        getScrollableArea_: function() {
            return ! this.contentPane_ ? null: this.contentPane_.querySelector(".scrollable-content") || null
        },
        getSidebarPane_: function() {
            return this.sidebarPane_ || null
        },
        getControlsPane_: function() {
            return this.controlsPane_ || null
        },
        getContentToolbarView_: function() {
            return this.contentToolbarView_ || null
        },
        getScrollPosition_: function() {
            var a = this.getScrollableArea_();
            return {
                scrollLeft: a.scrollLeft,
                scrollTop: a.scrollTop
            }
        },
        removeCurrentMode_: function() {
            this.scrollPositionForMode_[this.currentMode_] = this.getScrollPosition_();
            this.docBody_.classList.remove(this.currentMode_); (this[this.currentMode_ + "Remove_"] ||
            function() {}).call(this);
            Array.prototype.slice.apply(this.getContentPane_().children).forEach(function(a) {
                DOMUtils.detachElement(a)
            },
            this);
            Array.prototype.slice.apply(this.getSidebarPane_().children).forEach(function(a) {
                DOMUtils.detachElement(a)
            },
            this)
        },
        allowModeToggle_: function() {
            return ! 0
        },
        toggleModeMouseEvent_: function(a, b) {
            a.preventDefault();
            this.allowModeToggle_() && this.userChangedMode_(b.dataset.mode)
        },
        toggleModeKeyboardEvent_: function(a) {
            if (this.allowModeToggle_()) {
                var b;
                switch (this.getMode()) {
                case DocumentView.MODES.PROOF:
                case DocumentView.MODES.CODE:
                    b = DocumentView.MODES.EDIT;
                    break;
                case DocumentView.MODES.EDIT:
                    b = DocumentView.MODES.PROOF
                }
                b && this.modeIsImplemented_(b) && (a.preventDefault(), this.userChangedMode_(b))
            }
        },
        userChangedMode_: function(a) {
            var b = app.getCurrentUser().get("prefs");
            b && b.set("contentMode", a);
            this.setMode_(a)
        },
        getViewClasses_: function() {
            return []
        },
        displayNotSupported_: function(a) {
            var b = this.getDefaultMode();
            if (!this.modeIsImplemented_(b) || b === a) b = null;
            a = Templates["project/document/modeNotSupported"]({
                modeName: a,
                modeVerb: a === "code" ? "coding": a + "ing",
                suggestedMode: b
            });
            this.getContentPane_().appendChild(a);
            this.trigger("loaded")
        },
        edit_: function() {
            this.displayNotSupported_(DocumentView.MODES.EDIT)
        },
        editRemove_: function() {}
    });
    DocumentView.MODES = {
        PROOF: "proof",
        EDIT: "edit",
        CODE: "code"
    };
    DocumentView.PANES = {
        CONTENT: "content",
        EDITOR: "editor",
        PATTERNS: "patterns",
        SIDEBAR: "sidebar"
    };
    DocumentView.SIDEBAR_WIDTH_ = 264;
    window.ChapterDocumentView = DocumentView.extend({
        model: null,
        chapterOverviewView_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                proof: !1
            });
            ChapterDocumentView.__super__.initialize.call(this, a)
        },
        getDefaultMode: function() {
            return DocumentView.MODES.PROOF
        },
        proof_: function() {
            var a = this.getContentPane_(),
            b = this.getContentToolbarView_();
            this.chapterOverviewView_ = new ChapterOverviewView({
                model: this.model,
                parentPane: a,
                scrollPane: this.getScrollableArea_(),
                contentToolbarView: b
            });
            this.chapterOverviewView_.on("loaded", this.proxyLoaded_, this);
            this.chapterOverviewView_.render()
        },
        proofRemove_: function() {
            this.chapterOverviewView_ && (this.chapterOverviewView_.off("loaded", this.proxyLoaded_, this), this.chapterOverviewView_.remove())
        },
        proxyLoaded_: function() {
            this.trigger("loaded")
        }
    });
    window.ChapterOverviewView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        contentToolbarView_: null,
        zoomControlView_: null,
        widthControlView_: null,
        focusModeControlView_: null,
        renderedCount_: 0,
        loadMoreEl_: null,
        readerViews_: [],
        pageNumberViews_: null,
        resizeAnimation_: null,
        zoom_: null,
        width_: null,
        fontSize_: null,
        events: {
            "click .fetch-load-more": "loadMoreLinkClickEvent_",
            "click .fetch-result a": "loadCardEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.model = a.model;
            this.parentPane_ = a.parentPane;
            this.scrollPane_ = a.scrollPane;
            this.contentToolbarView_ = a.contentToolbarView;
            this.readerMouseMoveEventBound_ = this.readerMouseMoveEvent_.bind(this);
            this.overlayClickEventBound_ = this.overlayClickEvent_.bind(this);
            this.highlightClickEventBound_ = this.highlightClickEvent_.bind(this);
            this.containerClickEventBound_ = this.containerClickEvent_.bind(this);
            this.readerViews_ = [];
            this.pageNumberViews_ = [];
            a = app.getCurrentUser().get("prefs");
            this.zoom_ = a.get("contentZoom") || ZoomControlView.DEFAULT_ZOOM;
            this.width_ = a.get("contentWidth") || WidthControlView.DEFAULT_WIDTH;
            this.fontSize_ = a.get("contentFontSize") || WidthControlView.DEFAULT_FONT_SIZE;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    1 : this.toggleWidthKeyEvent_.bind(this, 1),
                    2 : this.toggleWidthKeyEvent_.bind(this, 2),
                    3 : this.toggleWidthKeyEvent_.bind(this, 3),
                    4 : this.toggleWidthKeyEvent_.bind(this, 4),
                    cancel: this.resetFocusModeEvent_.bind(this)
                })
            })
        },
        render: function() {
            this.scrollPane_.classList.add("chapter-fetch-background");
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/chapterOverview"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.loadMoreEl_ = this.el.querySelector(".fetch-load-more");
            this.zoomControlView_ = new ZoomControlView({
                parentPane: this.contentToolbarView_.getZoomToggleArea(),
                zoomable: this
            });
            this.zoomControlView_.render();
            this.widthControlView_ = new WidthControlView({
                parentPane: this.contentToolbarView_.getWidthTogglesArea(),
                widthTogglable: this
            });
            this.widthControlView_.render();
            this.focusModeControlView_ = new FocusModeControlView({
                parentPane: this.contentToolbarView_.getFocusModeControlArea(),
                shortName: this.model.get("projectModel").get("shortName")
            });
            this.focusModeControlView_.on("stateChange", this.focusStateChangeEvent_, this);
            this.focusModeControlView_.render();
            app.getKeyboardManager().activate(this.keyboard_);
            this.model.on("change:loaded", this.searchCompletedEvent_, this);
            this.model.on("change:results", this.updateResults_, this);
            this.resetRenderedCount_();
            this.model.search()
        },
        remove: function() {
            this.scrollPane_.classList.remove("chapter-fetch-background");
            this.model.off("change:loaded", this.searchCompletedEvent_, this);
            this.model.off("change:results", this.updateResults_, this);
            app.getKeyboardManager().remove(this.keyboard_);
            this.readerViews_.forEach(function(a) {
                var b = a.getIframeDocument();
                b && (b.documentElement.classList.remove("s9-habitat-scaled"), this.disableFocusMode_(b), this.disableHighlightMode_(b.body));
                a.remove();
                this.stopListening(a)
            },
            this);
            this.readerViews_ = [];
            this.pageNumberViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.pageNumberViews_ = [];
            if (this.resizeAnimation_) this.resizeAnimation_.cancel(),
            this.resizeAnimation_ = null;
            this.zoomControlView_ && this.zoomControlView_.remove();
            this.widthControlView_ && this.widthControlView_.remove();
            this.focusModeControlView_ && (this.focusModeControlView_.off("stateChange", this.focusStateChangeEvent_, this), this.focusModeControlView_.remove());
            DOMUtils.detachElement(this.el)
        },
        getZoom: function() {
            return this.zoom_
        },
        setZoom: function(a) {
            if (this.zoom_ !== a) {
                app.getCurrentUser().get("prefs").set("contentZoom", a);
                var b = this.zoom_;
                this.zoom_ = a;
                this.zoomControlView_.render();
                this.readerViews_.length && _.delay(function() {
                    this.resizeResults_(this.width_, b)
                }.bind(this), 1)
            }
        },
        getWidth: function() {
            return this.width_
        },
        setWidth: function(a) {
            if (this.width_ === a) return ! 1;
            var b = this.width_;
            this.width_ = a;
            this.widthControlView_.updateToggle();
            this.focusModeControlView_.reset();
            this.readerViews_.length && _.delay(function() {
                this.resizeResults_(b, this.zoom_)
            }.bind(this), 1);
            return ! 0
        },
        getFontSize: function() {
            return this.fontSize_
        },
        setFontSize: function(a) {
            if (this.fontSize_ === a) return ! 1;
            this.fontSize_ = a;
            this.widthControlView_.updateToggle();
            this.focusModeControlView_.reset();
            this.readerViews_.length && _.delay(function() {
                var a = WidthControlView.FONT_SIZE_MAP[this.fontSize_];
                this.readerViews_.forEach(function(c) {
                    c.setBodyStyle("fontSize", a)
                },
                this);
                this.el.querySelectorAll(".fetch-result").forEach(function(a) {
                    this.fixWrapperHeight_(a, this.zoom_)
                },
                this);
                this.pageNumberViews_.forEach(function(a) {
                    a.reposition()
                },
                this);
                this.redrawAllOverlays_()
            }.bind(this), 1);
            return ! 0
        },
        getTemplateData_: function() {
            var a = {},
            b = this.model.get("projectModel"),
            c = b.get("toc").getChapterMetadata(this.model.get("chapterS9ID"));
            c ? (b.get("shortName"), a.chapterThumbnail = URLUtils.getImageURL(c.thumbnailPath, b, {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_MEDIUM
            }), a.chapterPrefix = ((c.designation || "") + " " + (c.enumeration || "")).trim(), a.chapterTitle = c.title, a.cardCount = c.htmlExhibitCount) : (a.chapterThumbnail = null, a.chapterPrefix = null, a.chapterTitle = "Unknown Chapter", a.cardCount = 0);
            a.isCardsPlural = !0;
            if (a.cardCount === 1) a.isCardsPlural = !1;
            return a
        },
        resetRenderedCount_: function() {
            this.renderedCount_ = 0
        },
        searchCompletedEvent_: function() {
            if (this.model.get("loaded")) {
                this.model.get("moreResults") ? this.loadMoreEl_.classList.add("more-results") : this.loadMoreEl_.classList.remove("more-results");
                if (this.model.get("results").length === 0) {
                    var a = this.model.get("error");
                    a ? app.getMessageView().error(a) : app.getMessageView().show("No Results Found")
                }
                this.trigger("loaded")
            }
        },
        updateResults_: function() {
            var a = this.model.get("results");
            Array.isArray(a) && (a = a.slice(this.renderedCount_), a.forEach(function(a) {
                this.handleResult_(a)
            },
            this), this.renderedCount_ += a.length)
        },
        focusStateChangeEvent_: function(a) {
            this.readerViews_.forEach(function(b) {
                if (b = b.getIframeDocument()) {
                    var c = b.body;
                    a === FocusModeControlView.STATES.START ? (this.disableFocusMode_(b), this.disableHighlightMode_(c)) : a === FocusModeControlView.STATES.IN_FOCUS_MODE ? (this.enableFocusMode_(b), this.disableHighlightMode_(c)) : a !== FocusModeControlView.STATES.HAVE_SELECTOR && (a === FocusModeControlView.STATES.SELECTOR_ENABLED ? (this.enableFocusMode_(b), this.enableHighlightMode_(b)) : console.error("Unknown current state! state:", a))
                } else console.error("focusStateChangeEvent_: Falsy iframe document! iframeDocument:", b)
            },
            this)
        },
        enableFocusMode_: function(a) {
            this.el.dataset.mode = "focus";
            var b = a.body;
            b.dataset.s9HabitatFetchFocusMode = "true";
            b.addEventListener("mousemove", this.readerMouseMoveEventBound_);
            BackboneNativeAdapter.on(b, "click", ".s9-habitat-fetch-overlay", this.overlayClickEventBound_);
            this.scrollPane_.addEventListener("click", this.containerClickEventBound_);
            a.documentElement.classList.remove("s9-habitat-force-default-cursor")
        },
        disableFocusMode_: function(a) {
            this.el.dataset.mode = "navigate";
            var b = a.body;
            delete b.dataset.s9HabitatFetchFocusMode;
            b.removeEventListener("mousemove", this.readerMouseMoveEventBound_);
            BackboneNativeAdapter.off(b, "click", ".s9-habitat-fetch-overlay", this.overlayClickEventBound_);
            this.scrollPane_.removeEventListener("click", this.containerClickEventBound_);
            a.documentElement.classList.add("s9-habitat-force-default-cursor")
        },
        enableHighlightMode_: function(a) {
            var b = a.body;
            b.dataset.s9HabitatFetchHighlightMode = "true";
            a = a.createElement("div");
            a.id = "s9-habitat-fetch-highlight-overlay";
            b.appendChild(a);
            a.addEventListener("click", this.highlightClickEventBound_);
            a = this.focusModeControlView_.getCurrentSelector();
            b.querySelectorAll(a).forEach(function(a) {
                a.dataset.s9HabitatFetchHighlighted = "true"
            },
            this)
        },
        disableHighlightMode_: function(a) {
            delete a.dataset.s9HabitatFetchHighlightMode;
            var b = a.querySelector("#s9-habitat-fetch-highlight-overlay");
            b && (b.removeEventListener("click", this.highlightClickEventBound_), DOMUtils.detachElement(b));
            a.querySelectorAll("[data-s9-habitat-fetch-highlighted]").forEach(function(a) {
                delete a.dataset.s9HabitatFetchHighlighted
            },
            this)
        },
        handleResult_: function(a) {
            var b = Templates["project/document/chapterOverviewResult"]({
                url: a.url,
                title: a.title
            }),
            c = a.content;
            a.error ? c = "<h1>Failed to load this page<h1>": c || (c = "<h1>This page has no content<h1>");
            var d = this.model.get("projectModel").get("shortName"),
            d = URLUtils.expand("{+apiHost}/files/{shortName}/trunk/head/assets/css/", {
                shortName: d
            }),
            e = new ReaderContentView({
                model: new ChapterOverviewContentModel({
                    content: c
                }),
                parentPane: b.querySelector(".fetch-result-card-wrapper"),
                addCSS: ReaderContentView.getIframeCSS(),
                createWidthToggle: !1,
                disableSelection: !0,
                disableLinks: !0,
                hidePageNumbers: !0,
                forceDefaultCursor: !0,
                baseHref: d
            });
            this.readerViews_.push(e);
            this.listenTo(e, "loaded",
            function() {
                this.readerLoadedEvent_(a, b, e)
            });
            this.listenTo(e, "sizeUpdated", _.debounce(function() {
                this.fixWrapperHeight_(b, this.zoom_);
                this.redrawOverlays_(e)
            },
            200));
            e.render();
            this.resizeResult_(b, parseInt(this.width_, 10), this.zoom_);
            e.setWidth(this.width_);
            this.el.querySelector("#chapter-fetch-results").appendChild(b)
        },
        readerLoadedEvent_: function(a, b, c) {
            c.getContentDocument().documentElement.classList.add("s9-habitat-scaled");
            this.drawPageNumbers_(c, a)
        },
        resizeResult_: function(a, b, c) {
            c /= 100;
            b = Math.round(b * c) + "px";
            Math.round(100 / c);
            a.style.width = b;
            a.querySelector("iframe").style.webkitTransform = "scale(" + c + ")"
        },
        fixWrapperHeight_: function(a, b) {
            var c = a.querySelector(".fetch-result-title"),
            d = DOMUtils.getComputedStyle(c),
            c = parseInt(d.height, 10),
            d = parseInt(d.marginBottom, 10),
            e = a.querySelector("iframe"),
            e = DOMUtils.getComputedStyle(e),
            e = parseInt(e.height, 10),
            e = Math.round(e * b / 100),
            c = c + d + e;
            a.querySelector(".fetch-result-wrapper").style.height = c + "px";
            a.querySelector(".fetch-result-card-wrapper").style.height = e + "px"
        },
        resizeResults_: function(a, b) {
            if (this.readerViews_.length) {
                var c = WidthControlView.SHOW_PAGE_NUMBERS[a],
                d = parseInt(this.width_, 10),
                a = parseInt(a, 10),
                e = d - a,
                f = this.zoom_ - b;
                this.resizeAnimation_ && this.resizeAnimation_.cancel();
                this.resizeAnimation_ = new Animation({
                    duration: 400,
                    easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                    tick: function(g) {
                        var h = Math.round(a + e * g),
                        i = Math.round(b + f * g);
                        this.readerViews_.forEach(function(b) {
                            var c = b.getIframe();
                            this.resizeResult_(DOMUtils.getParent(c, ".fetch-result"), h, i);
                            a !== d && b.setWidth(h + "px", !0)
                        },
                        this);
                        this.el.querySelectorAll(".fetch-result").forEach(function(a) {
                            this.fixWrapperHeight_(a, i)
                        },
                        this);
                        c && this.pageNumberViews_.forEach(function(a) {
                            a.reposition()
                        },
                        this)
                    }.bind(this),
                    onComplete: function() {
                        this.resizeAnimation_ = null;
                        this.pageNumberViews_.forEach(function(a) {
                            WidthControlView.SHOW_PAGE_NUMBERS[this.width_] ? (a.reposition(), a.show()) : a.hide()
                        },
                        this);
                        a !== d && this.redrawAllOverlays_()
                    }.bind(this)
                })
            }
        },
        drawPageNumbers_: function(a) {
            var b = a.getIframeDocument(),
            c = WidthControlView.SHOW_PAGE_NUMBERS[this.width_],
            d = {},
            a = b.querySelectorAll("*[startpage]").map(function(a) {
                var b = a.get("startpage");
                if (b) return d[b] = !0,
                {
                    pageNumber: b,
                    element: a,
                    type: PageNumberView.TYPE_MANUAL
                }
            },
            this),
            e = b.querySelectorAll("*[sourcepage]").map(function(a) {
                var b = a.get("sourcepage");
                if (b && !d[b]) return d[b] = !0,
                {
                    pageNumber: b,
                    element: a,
                    type: PageNumberView.TYPE_FIRST
                }
            },
            this),
            a = a.concat(e),
            a = a.filter(function(a) {
                return !! a
            },
            this);
            a.forEach(function(a) {
                a = new PageNumberView({
                    parentPane: b.body,
                    number: a.pageNumber,
                    block: a.element,
                    type: a.type
                });
                a.render();
                c ? a.show() : a.hide();
                this.pageNumberViews_.push(a)
            },
            this)
        },
        redrawOverlays_: function(a) {
            var b = a.getIframeDocument();
            b && b.body && (b.body.querySelectorAll(".s9-habitat-fetch-overlay").forEach(function(a) {
                DOMUtils.detachElement(a)
            }), a = ChapterOverviewView.FOCUS_MODE_TAG_NAMES_.join(","), b.body.querySelectorAll(a).forEach(function(a) {
                var d = b.createElement("div");
                d.classList.add("s9-habitat-fetch-overlay");
                var e = a.tagName.toLowerCase(),
                f = Array.prototype.reduce.call(a.classList,
                function(a, b) {
                    return a + "." + b
                },
                "");
                d.dataset.s9HabitatFetchTagName = e;
                d.dataset.s9HabitatFetchClasses = f;
                e = DOMUtils.getOffset(a);
                DOMUtils.setStyles(d, {
                    top: e.top - ChapterOverviewView.OVERLAY_SIZE_BUFFER_.HEIGHT / 2 + "px",
                    left: e.left - ChapterOverviewView.OVERLAY_SIZE_BUFFER_.WIDTH / 2 + "px",
                    width: a.offsetWidth + ChapterOverviewView.OVERLAY_SIZE_BUFFER_.WIDTH + "px",
                    height: a.offsetHeight + ChapterOverviewView.OVERLAY_SIZE_BUFFER_.HEIGHT + "px"
                });
                b.body.appendChild(d)
            },
            this))
        },
        redrawAllOverlays_: function() {
            this.readerViews_.forEach(function(a) {
                this.redrawOverlays_(a)
            },
            this)
        },
        toggleWidthKeyEvent_: function(a, b) {
            if (b.target.tagName.toLowerCase() !== "input") {
                b.preventDefault();
                var c = WidthControlView.KEY_MAP[a];
                this.setWidth(c.WIDTH);
                this.setFontSize(c.FONT_SIZE)
            }
        },
        readerMouseMoveEvent_: function(a) {
            a = a.target;
            this.focusModeControlView_.updateSelector(a.classList.contains("s9-habitat-fetch-overlay") ? a.dataset.s9HabitatFetchTagName + a.dataset.s9HabitatFetchClasses: "")
        },
        overlayClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.focusModeControlView_.setSelectorClickable())
        },
        highlightClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.focusModeControlView_.reset())
        },
        containerClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.focusModeControlView_.reset()
        },
        resetFocusModeEvent_: function() {
            this.focusModeControlView_.reset()
        },
        loadMoreLinkClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.get("moreResults") && this.model.search())
        },
        loadCardEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.el.dataset.mode !== "focus" && app.getRouter().navigate(b.pathname, !0))
        }
    });
    ChapterOverviewView.FOCUS_MODE_TAG_NAMES_ = "figure,h1,h2,h3,h4,h5,aside,p,ol,ul,span,a".split(",");
    ChapterOverviewView.OVERLAY_SIZE_BUFFER_ = {
        WIDTH: 10,
        HEIGHT: 8
    };
    window.CoachMarkView = AnchoredPopupView.extend({
        config_: null,
        events: _.extend({},
        AnchoredPopupView.prototype.events, {
            click: "close"
        }),
        initialize: function(a) {
            var b = ["id", "popupAlignmentPoint", "anchorAlignmentPoint", "message"].filter(function(b) {
                return ! a.config[b]
            });
            if (b.length) throw Error("Programming Error! A CoachMarkView instantiated with an incomplete configuration. Missing properties: " + b.join(", "));
            a = _.extend({},
            a, {
                removeOnClose: !0,
                enableKeyboard: !1,
                createMask: !1,
                anchorAlignmentPoint: a.config.anchorAlignmentPoint,
                popupAlignmentPoint: a.config.popupAlignmentPoint
            });
            this.config_ = _.clone(a.config);
            delete a.config;
            if (!a.className) a.className = "";
            a.className += " " + CoachMarkView.CLASSNAME_ + " " + this.config_.id;
            this.listenTo(app, "contentPaneResized", this.reposition);
            CoachMarkView.__super__.initialize.call(this, a)
        },
        render: function(a) {
            if (a || this.shouldRender_()) CoachMarkView.__super__.render.call(this),
            this.el.innerHTML = this.config_.message,
            this.open()
        },
        close: function() {
            CoachMarkView.__super__.close.call(this);
            app.getCurrentUser().get("prefs").addDismissedCoachMark(this.config_.id)
        },
        shouldRender_: function() {
            return app.getCurrentUser().get("prefs").getDismissedCoachMarks().indexOf(this.config_.id) === -1
        }
    });
    CoachMarkView.CONFIGURATION = {
        PATTERN_PICKER: {
            id: "pattern-picker",
            message: "Drag and drop content from here onto your page",
            anchorAlignmentPoint: {
                x: 0,
                y: 0.5
            },
            popupAlignmentPoint: {
                x: 1,
                y: 0
            }
        },
        DASHBOARD_CREATE_PROJECT: {
            id: "dashboard-create-project",
            message: "Let's start by creating a new project.",
            anchorAlignmentPoint: {
                x: 1,
                y: 0.2
            },
            popupAlignmentPoint: {
                x: 0,
                y: 0
            }
        }
    };
    CoachMarkView.CLASSNAME_ = "coach-mark";
    window.CodeView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        sidebarPane_: null,
        aceView_: null,
        position_: null,
        showCloseButton_: null,
        validationErrors_: null,
        selectedValidationError_: 0,
        title_: null,
        events: {
            "click .validation-error-summary .currentfile-error": "currentFileErrorClickEvent_",
            "click .validation-error-summary .otherfile-error": "otherFileErrorClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.parentPane_ = a.parentPane;
            this.sidebarPane_ = a.sidebarPane;
            this.position_ = a.position;
            this.showCloseButton_ = !!a.showCloseButton;
            this.title_ = a.title || null;
            this.validationErrors_ = [];
            this.closeButtonClickEventBound_ = this.closeButtonClickEvent_.bind(this);
            var b = app.getSaveHandler();
            b.on("save_completed", this.saveCompletedEvent_, this);
            b.on("save_successful", this.saveSuccessfulEvent_, this);
            b.on("save_failed", this.saveCompletedEvent_, this);
            b.on("save", this.saveEvent_, this);
            this.aceView_ = new AceView({
                value: this.model.get("content"),
                type: a.type
            });
            this.aceView_.on("change", this.changeEvent_, this);
            this.parentPane_.appendChild(this.aceView_.el)
        },
        isDirty: function() {
            return this.model.get("dirtyContent")
        },
        updateDocument: function() {
            if (!this.isDirty()) return ! 0;
            var a = [];
            this.model.set({
                content: this.aceView_.getValue()
            },
            {
                error: function(b, c) {
                    a.push(c)
                }
            });
            this.setValidationErrors(a);
            return ! this.hasValidationErrors()
        },
        setValidationErrors: function(a) {
            this.validationErrors_ = a;
            this.selectedValidationError_ = 0;
            this.render();
            this.hasValidationErrors() && app.getMessageView().error(CodeView.VALIDATION_ERRORS_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME)
        },
        clearValidationErrors: function() {
            this.setValidationErrors([])
        },
        hasValidationErrors: function() {
            return this.validationErrors_.length !== 0
        },
        remove: function() {
            var a = this.parentPane_.querySelector(".code-mode-header .close-button");
            a && a.removeEventListener("click", this.closeButtonClickEventBound_);
            a = app.getSaveHandler();
            a.off("save_completed", this.saveCompletedEvent_, this);
            a.off("save_successful", this.saveSuccessfulEvent_, this);
            a.off("save_failed", this.saveCompletedEvent_, this);
            a.off("save", this.saveEvent_, this);
            this.aceView_.remove();
            this.stopListening()
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            if (!this.parentPane_.querySelector(".code-mode-header")) {
                var a = this.getHeaderTemplateData_();
                if (a.documentTypeName) {
                    var a = Templates["project/document/codeModeHeader"](a),
                    b = a.querySelector(".close-button");
                    b && b.addEventListener("click", this.closeButtonClickEventBound_);
                    this.parentPane_.insertBefore(a, this.parentPane_.firstChild)
                }
            }
            this.resize();
            this.model.isOnHead() ? this.enable() : this.disable();
            this.aceView_.setValidationErrors(this.validationErrors_.filter(function(a) {
                return ! a.filePath || a.filePath === this.model.get("filePath")
            },
            this));
            a = app.getRouter().getLineNumber();
            this.position_ ? (this.aceView_.setScrollPosition(this.position_), this.position_ = null) : this.hasValidationErrors() ? this.aceView_.gotoValidationError(this.validationErrors_[this.selectedValidationError_]) : Type.isNumber(a) && this.aceView_.gotoLine(a - 1);
            this.setElement(Templates["project/document/exhibit/editing/editCode"](this.getTemplateData_()));
            this.sidebarPane_.appendChild(this.el);
            this.trigger("loaded");
            this.trigger("rendered")
        },
        disable: function() {
            this.aceView_.disable()
        },
        enable: function() {
            this.aceView_.enable()
        },
        getTemplateData_: function() {
            var a = this.model.get("filePath"),
            b = [],
            c = [];
            this.validationErrors_.map(function(a, b) {
                return {
                    message: a.message,
                    line: a.line,
                    character: a.character,
                    filePath: a.filePath,
                    index: b
                }
            },
            this).forEach(function(d) { ! d.filePath || d.filePath === a ? (d.isSelected = this.selectedValidationError_ === d.index, b.push(d)) : (d.url = this.createErrorUrl_(d.filePath, d.line), c.push(d))
            },
            this);
            return {
                validationErrors: {
                    currentFile: b,
                    otherFile: c
                }
            }
        },
        getHeaderTemplateData_: function() {
            return {
                documentType: this.model.get("documentType"),
                documentTypeName: this.title_ || ExhibitDocumentView.getTypeName(this.model.get("documentType")),
                showCloseButton: this.showCloseButton_
            }
        },
        createErrorUrl_: function(a, b) {
            var c = app.getProjectModel();
            return URLRouter.getFilePath(c.get("shortName"), a, null, {
                line: b
            })
        },
        changeEvent_: function() {
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model)
        },
        saveCompletedEvent_: function() {
            this.enable()
        },
        saveSuccessfulEvent_: function(a) {
            a === this.model && this.model.set("dirtyContent", !1)
        },
        hasXMLError: function() {
            return this.validationErrors_.some(function(a) {
                return ! a.isSchemaError
            })
        },
        saveEvent_: function(a) {
            this.isDirty() && this.updateDocument() ? this.disable() : (a.preventDefault(), this.enable());
            this.hasXMLError() && (a = this.validationErrors_.map(function(a) {
                return a.message
            }), ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.CONTENT_VALIDATION_ERROR,
                eventInfo: {
                    errorType: "xml",
                    repoName: this.model.get("project").get("shortName"),
                    numberOfValidationErrors: a.length,
                    validationErrorMsg: a.join(",")
                }
            }))
        },
        currentFileErrorClickEvent_: function(a, b) {
            a.preventDefault();
            var c = parseInt(b.dataset.errorIndex, 10),
            d = this.validationErrors_[c];
            d && Type.isNumber(d.line) ? app.getMessageView().hide() : app.getMessageView().show(CodeView.LINE_NUMBER_NOT_AVAILABLE_, MessageView.DEFAULT_DISPLAY_TIME);
            this.selectedValidationError_ = c;
            this.render()
        },
        otherFileErrorClickEvent_: function(a, b) {
            a.preventDefault();
            var c = this.validationErrors_[parseInt(b.dataset.errorIndex, 10)];
            this.win_.open(this.createErrorUrl_(c.filePath, c.line))
        },
        resize: function() {
            this.aceView_.resize()
        },
        getScrollPosition: function() {
            return this.aceView_.getScrollPosition()
        },
        setScrollPosition_: function(a) {
            this.aceView_.setScrollPosition(a)
        },
        closeButtonClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.trigger("close"))
        }
    });
    CodeView.VALIDATION_ERRORS_MESSAGE_ = "There were validation errors while saving; please correct them in code view";
    CodeView.LINE_NUMBER_NOT_AVAILABLE_ = "Line number not available for error";
    window.ContentMainView = MainView.extend({
        view_: null,
        navigatorView_: null,
        selectedDocument_: null,
        uiModelAttrs_: {
            type: null,
            filePath: null,
            revision: null,
            issueID: null,
            lineNumber: null,
            selectedS9ID: null,
            s9id: null,
            query: null,
            queryType: null,
            filter: null,
            fileType: null,
            panel: null
        },
        initialize: function(a) {
            ContentMainView.__super__.initialize.apply(this, arguments);
            this.listenTo(this.uiModel_, "change", this.changeModelEvent_)
        },
        render: function() {
            this.setElement(this.parentPane_.querySelector("#document-area"));
            if (!this.navigatorView_) this.navigatorView_ = new NavigatorFilesView({
                model: this.model,
                parentPane: this.parentPane_.querySelector("#navigator")
            }),
            this.navigatorView_.render();
            switch (this.uiModel_.get("type")) {
            case ContentMainView.TYPES.FILE:
                this.renderFileView_();
                break;
            case ContentMainView.TYPES.CHAPTER:
                this.renderChapterView_();
                break;
            case ContentMainView.TYPES.FETCH:
                this.renderFetchView_();
                break;
            case ContentMainView.TYPES.DEFAULT:
                this.renderDefaultView_()
            }
        },
        remove: function() {
            app.getMessageView().hide("Loading...");
            this.view_ && (this.view_.hideSidebar(), this.removeDocumentView_());
            if (this.navigatorView_) this.navigatorView_.remove(),
            this.navigatorView_ = null;
            this.undelegateEvents();
            this.stopListening()
        },
        removeDocumentView_: function() {
            if (this.view_) this.stopListening(this.view_),
            this.view_.remove(),
            this.view_ = null
        },
        changeModelEvent_: function(a) {
            var b = a.changedAttributes(); ! b.hasOwnProperty("type") && a.get("type") === ContentMainView.TYPES.FILE ? this.updateFileView_(b) : this.render()
        },
        updateFileView_: function(a) { ! a.hasOwnProperty("filePath") && a.hasOwnProperty("revision") ? (a = this.view_.getDocumentModel(), this.setDocument_(a), a.set("revision", this.uiModel_.get("revision")), a.fetch({
                loadIssues: !1
            })) : this.renderFileView_()
        },
        renderFileView_: function(a) {
            a = a || {};
            ia("timing", "start", Analytics.TIMING_TAGS.FILE_LOAD, {
                shortName: this.model.get("shortName")
            });
            var b = a.filePath || this.uiModel_.get("filePath"),
            a = a.revision !== void 0 ? a.revision: this.uiModel_.get("revision"),
            c = ExhibitDocumentModel.getSourceLocationFromPath(b),
            d;
            c && (d = this.model.get("toc").getExhibitTypeFor(c));
            d || (d = "file:" + FileDocumentModel.getFileExtensionForPath(b));
            b = FileDocumentModel.newForType(d, {
                project: this.model,
                filePath: b,
                revision: a,
                documentType: d
            });
            if (!b) return d = "Unsupported file type (" + d + "): " + this.uiModel_.get("filePath"),
            app.getMessageView().error(d),
            console.error(d),
            null;
            d = this.uiModel_.previous("type");
            d = d === ContentMainView.TYPES.FILE || d === ContentMainView.TYPES.CHAPTER || d === ContentMainView.TYPES.DEFAULT;
            this.setDocument_(b);
            this.view_ && !d && this.removeDocumentView_();
            this.listenToOnce(b, "loaded", this.newDocumentLoaded_);
            b.fetch()
        },
        renderDefaultView_: function() {
            var a = this.model.get("toc").get("xml"),
            b = a.xpath('//s9ml:chapter[not(@sandbox) or @sandbox="false" or @sandbox="0"]');
            b || (b = a.xpath("//s9ml:chapter"));
            a = b.xpath("s9ml:exhibit");
            this.renderFileView_({
                filePath: ExhibitDocumentModel.getFilePathFromSourceLocation(a.getAttribute("path")),
                revision: null
            })
        },
        renderChapterView_: function(a) {
            this.removeDocumentView_();
            a = new ChapterDocumentModel({
                projectModel: this.model,
                chapterS9ID: a || this.uiModel_.get("s9id")
            });
            this.setDocument_(a);
            this.view_ = new ChapterDocumentView({
                model: a,
                documentArea: this.el
            });
            this.listenTo(this.view_, "loaded", this.newDocumentRendered_);
            this.view_.render()
        },
        renderFetchView_: function() {
            this.removeDocumentView_();
            var a = this.uiModel_.get("query") || "",
            b = this.uiModel_.get("queryType"),
            c = this.uiModel_.get("filter"),
            d = this.uiModel_.get("fileType"),
            c = new FetchDocumentModel({
                projectModel: this.model,
                query: a,
                queryType: b,
                filter: c,
                fileType: d
            });
            this.setDocument_(c);
            this.view_ = new FetchDocumentView({
                model: c,
                documentArea: this.el
            });
            this.listenTo(this.view_, "loaded", this.newDocumentRendered_);
            this.view_.render();
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.FETCH_SEARCH,
                eventInfo: {
                    shortName: this.model.get("shortName"),
                    type: b,
                    freeText: a
                }
            })
        },
        newDocumentLoaded_: function(a) {
            this.removeDocumentView_();
            var b = a.get("documentType"),
            c = FileDocumentView.newForType(b, {
                model: a,
                documentArea: this.el
            });
            c ? (this.view_ = c, this.listenTo(this.view_, "loaded", this.newDocumentRendered_), this.view_.render()) : (a = a.getSourceLocation(), b = "No way to view this type of exhibit (" + b + "): " + a, app.getMessageView().error(b), console.error(b))
        },
        newDocumentRendered_: function() {
            var a = this.view_.getDocumentModel();
            a && a.errorLoading() || app.getMessageView().hide("Loading..."); (a = this.view_.getDocumentModel()) && this.uiModel_.get("type") === ContentMainView.TYPES.FILE && ia("timing", "end", Analytics.TIMING_TAGS.FILE_LOAD, {
                documentType: a.get("documentType"),
                documentMode: this.view_.getMode(),
                pageURL: this.win_.location.href
            });
            if (app.getRouter().isInitialRoute() && this.view_ instanceof ExhibitDocumentView) {
                var a = this.view_.getDocumentModel().get("documentType"),
                b = this.view_.getMode();
                ia("timing", "pageload", "habitat.project.files." + a + "." + b)
            }
        },
        setDocument_: function(a) {
            this.selectedDocument_ && (this.selectedDocument_.cancel(), this.stopListening(this.selectedDocument_, "loading", this.documentLoading_), this.stopListening(this.selectedDocument_, "error", this.loadingError_));
            this.selectedDocument_ = a;
            this.navigatorView_.setSelectedDocument(a);
            this.selectedDocument_ && (this.listenTo(this.selectedDocument_, "loading", this.documentLoading_), this.listenTo(this.selectedDocument_, "error", this.loadingError_))
        },
        documentLoading_: function() {
            this.selectedDocument_.errorLoading() || app.getMessageView().show("Loading...")
        },
        loadingError_: function(a, b, c) {
            c = c || {};
            c.isUpdateRequest || (c = "Error loading ", a instanceof DocumentModel ? c += "file content": a instanceof IssuesCollection ? c += "file issues": a instanceof LinkResolverModel && (c += "content links"), app.getMessageView().error(c), console.error(c + ": ", b))
        }
    });
    ContentMainView.TYPES = {
        FILE: "file",
        CHAPTER: "chapter",
        FETCH: "fetch",
        DEFAULT: "default"
    };
    window.ContentToolbarView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        events: {
            "click #nav-panel-control-area button": "openNavigatorViewClickEvent_",
            "click #pattern-panel-control-area button": "openPatternPickerViewClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            a = app.getCurrentUser().get("prefs");
            this.listenTo(a, "change:" + NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY, this.tocPinnedStateUpdated_);
            this.listenTo(a, "change:" + PatternPickerView.PINNED_OPEN_PREFERENCE_KEY, this.patternPickerPinnedStateUpdated_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/contentToolbar"]());
            this.tocPinnedStateUpdated_();
            this.patternPickerPinnedStateUpdated_();
            this.parentPane_.appendChild(this.el)
        },
        getElement: function() {
            return this.el
        },
        getModeTogglesArea: function() {
            return this.el.querySelector("#mode-toggles-area")
        },
        getRichTextToolbarArea: function() {
            return this.el.querySelector("#rich-text-toolbar-area")
        },
        getWidthTogglesArea: function() {
            return this.el.querySelector("#width-toggles-area")
        },
        getZoomToggleArea: function() {
            return this.el.querySelector("#zoom-toggle-area")
        },
        getFocusModeControlArea: function() {
            return this.el.querySelector("#focus-mode-control-area")
        },
        getCodeModeControlArea: function() {
            return this.el.querySelector("#code-mode-control-area")
        },
        getPatternPickerControlArea: function() {
            return this.el.querySelector("#pattern-panel-control-area")
        },
        openNavigatorViewClickEvent_: function() {
            app.getCurrentUser().get("prefs").set(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY, !0)
        },
        openPatternPickerViewClickEvent_: function() {
            app.getCurrentUser().get("prefs").set(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY, !0)
        },
        patternPickerPinnedStateUpdated_: function() {
            var a = app.getCurrentUser().get("prefs").get(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY);
            this.el.querySelector("#pattern-panel-control-area").classList.toggle("hidden", a)
        },
        tocPinnedStateUpdated_: function() {
            var a = app.getCurrentUser().get("prefs").get(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY);
            this.el.querySelector("#nav-panel-control-area").classList.toggle("hidden", a)
        }
    });
    window.DashboardView = Backbone.View.extend({
        projects_: null,
        projectFilterView_: null,
        projectCreationSlideover_: null,
        searchForm_: null,
        events: {
            "click #account-button": "accountMenuButtonClickEvent_",
            "click .create-project-button": "createProjectClickEvent_",
            "input .search input": "searchInputEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.setElement(a.parentPane);
            this.projects_ = a.projects;
            this.doc_ = a.document || document;
            this.location_ = a.location || window.location
        },
        render: function() {
            this.browserZoomPopup_ && this.browserZoomPopup_.remove();
            this.browserZoomPopup_ = new BrowserZoomPopupView;
            this.browserZoomPopup_.render();
            this.projectFilterView_ && this.projectFilterView_.remove();
            this.projectFilterView_ = new ProjectFilterView({
                parentPane: this.el.querySelector(".dashboard-main-area"),
                projects: this.projects_
            });
            this.projectFilterView_.render();
            if (this.searchForm_) this.stopListening(this.searchForm_),
            this.searchForm_.remove(),
            this.searchForm_ = null;
            this.searchForm_ = new FormView({
                el: this.el.querySelector(".search")
            });
            this.listenTo(this.searchForm_, "submit", this.searchFormSubmitEvent_);
            app.getCurrentUser().isPasswordChangeRequired() && (new MyAccountPopupView({
                forcePasswordChange: !0
            })).render();
            app.getCurrentUser().get("prefs").get("hasSeenIntro") || (new IntroPopupView).render();
            this.preloadTemplateThumbnails_()
        },
        remove: function() {
            this.projectFilterView_ && this.projectFilterView_.remove();
            this.projectCreationSlideover_ && this.projectCreationSlideover_.remove();
            this.searchForm_ && this.searchForm_.remove();
            this.undelegateEvents()
        },
        preloadTemplateThumbnails_: function() {
            var a = app.getProjectTemplates();
            a.isLoaded() ? a.getThumbnailPaths().forEach(function(a) {
                this.doc_.createElement("img").setAttribute("src", a)
            },
            this) : this.listenToOnce(a, "loaded", this.preloadTemplateThumbnails_)
        },
        createProjectClickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            b.blur(),
            this.projectCreationSlideover_ && this.projectCreationSlideover_.remove(),
            this.projectCreationSlideover_ = new ProjectCreationSlideoverView({
                projects: this.projects_,
                parentPane: this.doc_.body
            }),
            this.projectCreationSlideover_.render()
        },
        accountMenuButtonClickEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (new AccountMenuView({
                anchor: b
            })).render())
        },
        searchInputEvent_: function(a) {
            this.projectFilterView_.search(a.target.value)
        },
        searchFormSubmitEvent_: function() {
            this.projectFilterView_.search(this.el.querySelector(".search input").value)
        }
    });
    window.IntroPopupView = PopupView.extend({
        currentlyAnimatingEl_: null,
        userInteracted_: !1,
        autoPlayIndex_: 0,
        autoPlayIntervalId_: null,
        events: {
            "click .start-button, .close-button": "closeClickEvent_",
            "mouseover .intro-animation-wrapper": "mouseoverGIFEvent_",
            "mouseout .intro-animation-wrapper": "mouseoutGIFEvent_"
        },
        initialize: function(a) {
            a = _.extend({},
            a, {
                className: "intro-popup",
                removeOnClose: !0,
                closable: !0,
                maskVisible: !0
            });
            this.win_ = a.window || window;
            IntroPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/introPopup"]({
                staticAssetURL: app.getConfig().get("staticAssetURL")
            }));
            IntroPopupView.__super__.render.call(this);
            this.on("close", this.setHasSeenIntro_);
            this.open();
            this.autoPlay_()
        },
        setHasSeenIntro_: function() {
            app.getCurrentUser().get("prefs").set("hasSeenIntro", !0)
        },
        closeClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.close()
        },
        autoPlay_: function() {
            this.startAnimation_(this.el.querySelector(IntroPopupView.AUTO_PLAY_CONFIG_.FEATURE_GIF_LIST[this.autoPlayIndex_]));
            this.autoPlayIntervalId_ = this.win_.setInterval(this.autoPlayCallback_.bind(this), IntroPopupView.AUTO_PLAY_CONFIG_.DURATION)
        },
        autoPlayCallback_: function() {
            this.userInteracted_ ? (this.win_.clearInterval(this.autoPlayIntervalId_), this.autoPlayIntervalId_ = null) : (this.autoPlayIndex_ += 1, this.autoPlayIndex_ %= IntroPopupView.AUTO_PLAY_CONFIG_.FEATURE_GIF_LIST.length, this.startAnimation_(this.el.querySelector(IntroPopupView.AUTO_PLAY_CONFIG_.FEATURE_GIF_LIST[this.autoPlayIndex_])))
        },
        mouseoutGIFEvent_: function(a) {
            this.stopAnimation_(a.target)
        },
        mouseoverGIFEvent_: function(a) {
            this.userInteracted_ = !0;
            this.startAnimation_(a.target)
        },
        startAnimation_: function(a) {
            var b = a.querySelector("svg"),
            c = a.querySelector(".intro-animation-container");
            this.currentlyAnimatingEl_ && this.currentlyAnimatingEl_ !== a && this.stopAnimation_(this.currentlyAnimatingEl_);
            this.currentlyAnimatingEl_ = a;
            if (!b.dataset.playing) b.dataset.playing = !0,
            c.style.backgroundImage = "url(" + c.dataset.url + ")"
        },
        stopAnimation_: function(a) {
            var b = a.querySelector("svg"),
            a = a.querySelector(".intro-animation-container");
            delete b.dataset.playing;
            a.style.backgroundImage = ""
        }
    });
    IntroPopupView.AUTO_PLAY_CONFIG_ = {
        DURATION: 3200,
        FEATURE_GIF_LIST: ["#intro-feature-preview", "#intro-feature-comment", "#intro-feature-drag-drop"]
    };
    window.ProjectItemView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        coverImage_: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.coverImageLoadedBound_ = this.coverImageLoaded_.bind(this);
            this.listenTo(this.model, "change reset", this.modelChangeEvent_)
        },
        remove: function() {
            this.coverImage_ && this.coverImage_.removeEventListener("load", this.coverImageLoadedBound_);
            ProjectItemView.__super__.remove.call(this)
        },
        render: function() {
            this.el.classList.add("project-item"); (this.coverImage_ = this.el.querySelector("img")) && this.coverImage_.addEventListener("load", this.coverImageLoadedBound_);
            this.parentPane_.appendChild(this.el)
        },
        getTemplateData_: function() {
            return this.model.toJSON()
        },
        modelChangeEvent_: function() {
            var a = this.model.changedAttributes();
            Object.keys(a).length === 1 && this.model.hasChanged("starred") ? (a = this.el.querySelector(".toggle-starred-project")) && a.classList.toggle("project-is-starred", this.model.get("starred")) : this.render()
        },
        coverImageLoaded_: function() {
            this.coverImage_.classList.add("loaded")
        }
    });
    window.ProjectGridItemView = ProjectItemView.extend({
        model: null,
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/projectGridItemView"](this.getTemplateData_()));
            ProjectGridItemView.__super__.render.call(this)
        },
        getTemplateData_: function() {
            var a = this.model.toJSON(),
            b = this.convertIssueCountsToArray_(this.model.get("issueCounts").get("totalsByType") || {});
            a.issueCounts = this.addUrlsToIssueCounts_(IssueCountsModel.formatCountsForDisplay(b));
            return a
        },
        convertIssueCountsToArray_: function(a) {
            return [{
                type: IssueModel.Status.OPEN,
                label: IssueModel.getDisplayStatus(IssueModel.Status.OPEN),
                me: a && a.open && a.open.me || 0,
                total: a && a.open && a.open.totals || 0
            },
            {
                type: IssueModel.Status.FIXED,
                label: IssueModel.getDisplayStatus(IssueModel.Status.FIXED),
                me: a && a.fixed && a.fixed.me || 0,
                total: a && a.fixed && a.fixed.totals || 0
            },
            {
                type: IssueModel.Status.PUNT,
                label: IssueModel.getDisplayStatus(IssueModel.Status.PUNT),
                me: a && a.punt && a.punt.me || 0,
                total: a && a.punt && a.punt.totals || 0
            },
            {
                type: IssueModel.Status.STET,
                label: IssueModel.getDisplayStatus(IssueModel.Status.STET),
                me: a && a.stet && a.stet.me || 0,
                total: a && a.stet && a.stet.totals || 0
            }].map(function(a) {
                return _.extend(a, {
                    meDisplayType: a.me === 1 ? "Comment": "Comments",
                    totalDisplayType: a.total === 1 ? "Comment": "Comments"
                })
            })
        },
        addUrlsToIssueCounts_: function(a) {
            var b = this.model.get("shortName");
            return a.map(function(a) {
                if (app.userHasPermission(PermissionsModel.PERMISSIONS.INTERNAL_USER)) a.myIssueCountURL = IssueModel.generateIssueDBQueryURL({
                    shortName: b,
                    status: a.type,
                    assignedToId: "me",
                    tracker: IssueModel.Tracker.BUG
                }),
                a.totalIssueCountURL = IssueModel.generateIssueDBQueryURL({
                    shortName: b,
                    status: a.type,
                    tracker: IssueModel.Tracker.BUG
                });
                return a
            })
        }
    });
    window.ProjectGroupView = Backbone.View.extend({
        parentPane_: null,
        collection: null,
        currentPage_: 1,
        waitFor_: null,
        title_: null,
        projectViews_: null,
        showNewProjectItem_: !1,
        events: {
            "click .prev-projects": "loadPrevProjectsEvent_",
            "click .next-projects": "loadNextProjectsEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.title_ = a.title;
            this.parentPane_ = a.parentPane;
            this.showNewProjectItem_ = !!a.showNewProjectItem;
            this.listenTo(this.collection, "remove loaded reset", this.render);
            this.listenTo(app.getCurrentUser().get("prefs"), "change:dashboardViewAsGrid", this.viewAsGridPrefChangedEvent_)
        },
        render: function() {
            this.removeSpinner_();
            this.removeProjectViews_();
            DOMUtils.detachElement(this.el);
            var a = this.getVisibleProjects_();
            this.setElement(Templates["dashboard/projectGroupView"](this.getTemplateData_()));
            this.projectViews_ = a.map(function(a) {
                var c = this.el.querySelector(".projects").querySelector('[data-short-name="' + a.get("shortName") + '"]'),
                a = this.getViewAsGrid_() ? new ProjectGridItemView({
                    model: a,
                    parentPane: c
                }) : new ProjectListItemView({
                    model: a,
                    parentPane: c
                });
                a.render();
                return a
            },
            this);
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.removeSpinner_();
            this.removeProjectViews_();
            ProjectGroupView.__super__.remove.call(this)
        },
        viewAsGridPrefChangedEvent_: function() {
            this.render()
        },
        getViewAsGrid_: function() {
            return app.getCurrentUser().get("prefs").get("dashboardViewAsGrid")
        },
        getTemplateData_: function() {
            var a = this.getVisibleProjects_().map(function(a) {
                return a.toJSON()
            }),
            b = this.getPageInformation_(),
            a = {
                title: this.title_,
                projects: a,
                showPaging: b.hasPrevious || b.hasNext,
                hasPrevious: b.hasPrevious,
                hasNext: b.hasNext,
                currentPage: b.summary,
                staticAssetUrl: app.getConfig().get("staticAssetURL"),
                showNewProjectItem: this.showNewProjectItem_ && !b.hasNext,
                gridView: this.getViewAsGrid_(),
                listView: !this.getViewAsGrid_()
            };
            if (!a.hasPrevious && !a.hasNext) a.currentPage = "";
            return a
        },
        getPageInformation_: function() {
            var a = ProjectGroupView.PROJECTS_PER_PAGE_,
            b = (this.currentPage_ - 1) * a,
            c = b + a;
            return {
                hasPrevious: this.currentPage_ > 1,
                hasNext: Math.floor(this.collection.length / a) > this.currentPage_ || this.collection.hasMore(),
                summary: b + 1 + " \u2013 " + c
            }
        },
        getVisibleProjects_: function() {
            var a = (this.currentPage_ - 1) * ProjectGroupView.PROJECTS_PER_PAGE_;
            return this.collection.slice(a, a + ProjectGroupView.PROJECTS_PER_PAGE_)
        },
        loadPrevProjectsEvent_: function() {
            this.currentPage_ = Math.max(1, this.currentPage_ - 1);
            this.render()
        },
        loadNextProjectsEvent_: function() {
            if (this.currentPage_ < Math.floor(this.collection.length / ProjectGroupView.PROJECTS_PER_PAGE_)) this.currentPage_ += 1,
            this.render();
            else if (this.collection.hasMore()) this.currentPage_ += 1,
            this.collection.fetchMore(),
            DOMUtils.detachElement(this.el),
            this.waitFor_ = new WaitFor({
                waitFor: this.collection,
                showSpinnerOn: this.parentPane_,
                whenLoaded: this.removeSpinner_.bind(this)
            })
        },
        removeSpinner_: function() {
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null
        },
        removeProjectViews_: function() {
            if (this.projectViews_) this.projectViews_.forEach(function(a) {
                a.remove()
            }),
            this.projectViews_ = null
        }
    });
    ProjectGroupView.PROJECTS_PER_PAGE_ = 100;
    window.ProjectListItemView = ProjectItemView.extend({
        render: function() {
            this.removeStatisticsView_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/projectListItemView"](this.getTemplateData_()));
            this.statisticsView_ = new ProjectStatisticsView({
                model: this.model,
                parentPane: this.el.querySelector(".project-statistics")
            });
            this.statisticsView_.render();
            ProjectListItemView.__super__.render.call(this)
        },
        remove: function() {
            this.removeStatisticsView_();
            ProjectListItemView.__super__.remove.call(this)
        },
        removeStatisticsView_: function() {
            if (this.statisticsView_) this.statisticsView_.remove(),
            this.statisticsView_ = null
        }
    });
    window.ProjectStatisticsView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            ProjectStatisticsView.__super__.remove.apply(this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/projectStatistics"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el)
        },
        getTemplateData_: function() {
            var a = this.model.get("lastUpdated"),
            b = this.model.get("revision");
            a && (a = new Date(a), a = {
                date: dateFormat(a, ProjectStatisticsView.DATE_FORMAT_STRING),
                time: dateFormat(a, ProjectStatisticsView.TIME_FORMAT_STRING)
            });
            return {
                issueCounts: this.getIssueCountJSON_(),
                unitProofCounts: this.getUnitProofCountsJSON_(),
                lastUpdated: a,
                revision: b
            }
        },
        formatCountForDisplay_: function(a) {
            return a ? a.toString() : "\u2022"
        },
        getIssueCountJSON_: function() {
            var a = this.model.get("issueCounts").get("totalsByType") || {},
            b = this.model.get("shortName");
            return ProjectStatisticsView.ISSUE_STATUS_DISPLAY_ORDER.map(function(c) {
                var d = a[c] || {},
                e = null,
                f = null;
                app.userHasPermission(PermissionsModel.PERMISSIONS.INTERNAL_USER) && (e = IssueModel.generateIssueDBQueryURL({
                    shortName: b,
                    status: c,
                    assignedToId: "me",
                    tracker: IssueModel.Tracker.BUG
                }), f = IssueModel.generateIssueDBQueryURL({
                    shortName: b,
                    status: c,
                    tracker: IssueModel.Tracker.BUG
                }));
                return {
                    type: c,
                    name: IssueModel.getDisplayStatus(c),
                    myDisplayType: d.me === 1 ? "Comment": "Comments",
                    totalDisplayType: d.totals === 1 ? "Comment": "Comments",
                    myIssueCountValue: d.me || 0,
                    myIssueCountString: this.formatCountForDisplay_(d.me),
                    myIssueCountURL: e,
                    totalIssueCountValue: d.totals || 0,
                    totalIssueCountString: this.formatCountForDisplay_(d.totals),
                    totalIssueCountURL: f
                }
            },
            this)
        },
        getUnitProofCountsJSON_: function() {
            var a = this.model.get("unitProofCounts") || {},
            b = this.model.get("shortName");
            return ProjectStatisticsView.UNIT_PROOF_DISPLAY_ORDER.map(function(c) {
                c = _.extend({
                    shortName: b
                },
                c);
                c.type === "errors" ? _.extend(c, {
                    displayType: a.errors === 1 ? "Error": "Errors",
                    unitProofCountValue: a.errors || 0,
                    unitProofCountString: this.formatCountForDisplay_(a.errors)
                }) : c.type === "warnings" && _.extend(c, {
                    displayType: a.warnings === 1 ? "Warning": "Warnings",
                    unitProofCountValue: a.warnings || 0,
                    unitProofCountString: this.formatCountForDisplay_(a.warnings)
                });
                return c
            },
            this)
        }
    });
    ProjectStatisticsView.DATE_FORMAT_STRING = "mmm dS, yyyy";
    ProjectStatisticsView.TIME_FORMAT_STRING = "h:MMtt";
    ProjectStatisticsView.ISSUE_STATUS_DISPLAY_ORDER = [IssueModel.Status.OPEN, IssueModel.Status.FIXED, IssueModel.Status.PUNT, IssueModel.Status.STET];
    ProjectStatisticsView.UNIT_PROOF_DISPLAY_ORDER = [{
        type: "errors",
        name: "Errors"
    },
    {
        type: "warnings",
        name: "Warnings"
    }];
    window.ReaderPopupView = Backbone.View.extend({
        events: {
            "click [href]": "clickLinkEvent_"
        },
        openNear_: null,
        contentView_: null,
        snippetContentView_: null,
        initialize: function(a) {
            a = a || {};
            this.openNear_ = a.openNear;
            this.contentView_ = a.contentView;
            this.win_ = a.window || window;
            this.doc_ = a.document || document
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.snippetContentView_ && this.snippetContentView_.remove();
            this.setElement(Templates["project/document/exhibit/popupview/readerPopup"]());
            this.snippetContentView_ = this.createContentView_({
                model: this.model,
                parentPane: this.el.querySelector(".contents")
            });
            this.snippetContentView_.render();
            this.contentView_.el.appendChild(this.el);
            this.reposition();
            this.scrollIntoView_()
        },
        createContentView_: function(a) {
            return new SnippetContentView(a)
        },
        remove: function() {
            this.snippetContentView_ && this.snippetContentView_.remove();
            DOMUtils.detachElement(this.el);
            ReaderPopupView.__super__.remove.apply(this, arguments)
        },
        scrollIntoView_: function() {
            var a = this.el.querySelector(".content-wrapper"),
            b = this.doc_.documentElement.clientHeight,
            c = this.el.getBoundingClientRect(),
            d = c.top,
            e = c.left,
            c = c.right,
            f = a.offsetLeft + a.offsetWidth,
            g = this.contentView_.el.offsetWidth;
            this.openDown_ ? (a = a.offsetTop + a.offsetHeight, d + a > b && this.contentView_.smoothScrollIntoView(this.el, !1)) : (a = -a.offsetTop, (d - a <= 0 || d - a > b) && this.contentView_.smoothScrollIntoView(this.el, !1)); (e < f || c - g > f) && this.contentView_.smoothScrollIntoView(this.el, !0)
        },
        reposition: function() {
            var a = this.getOffsets_(),
            b = a.top;
            this.openDown_ && (b += a.height);
            DOMUtils.setStyles(this.el, {
                top: b + "px",
                left: a.left + "px"
            });
            this.openDown_ ? this.el.classList.add("open-down") : this.el.classList.remove("open-down")
        },
        getOffsets_: function() {
            var a = this.el.querySelector(".content-wrapper"),
            b = this.getOpenNearRect_();
            b.left -= (a.offsetWidth - b.width) / 2; (this.openDown_ = b.top - a.offsetHeight < ReaderPopupView.DOCUMENT_PADDING_ ? !0 : !1) || (b.top -= Math.round(a.offsetHeight));
            var a = b.left + a.offsetWidth,
            c = parseFloat(this.contentView_.getWidth());
            if (a > c - ReaderPopupView.DOCUMENT_PADDING_) b.left -= a - c + ReaderPopupView.DOCUMENT_PADDING_;
            else if (b.left < ReaderPopupView.DOCUMENT_PADDING_) b.left = ReaderPopupView.DOCUMENT_PADDING_;
            return b
        },
        getOpenNearRect_: function() {
            var a = this.openNear_.getClientRects(),
            b = a[a.length - 1],
            c = {};
            "top,left,right,bottom,height,width".split(",").forEach(function(a) {
                c[a] = b[a]
            });
            return c
        },
        getTarget: function() {
            return this.openNear_
        },
        clickLinkEvent_: function(a, b) {
            a.preventDefault();
            var c = b.getAttribute("href");
            try {
                this.win_.open(this.model.getDocumentModel().getLinkResolver().resolve(c))
            } catch(d) {
                app.getMessageView().error(d, MessageView.DEFAULT_DISPLAY_TIME)
            }
        }
    });
    ReaderPopupView.DOCUMENT_PADDING_ = 10;
    window.DefinitionPopupView = ReaderPopupView.extend({
        entryModel_: null,
        initialize: function(a) {
            this.entryModel_ = a.entryModel;
            DefinitionPopupView.__super__.initialize.call(this, a)
        },
        createContentView_: function(a) {
            a.entryModel = this.entryModel_;
            return new DefinitionSnippetContentView(a)
        }
    });
    window.DragView = Backbone.View.extend({
        events: {
            mousedown: "mousedownEvent_"
        },
        iframeOverlays_: null,
        currentlyWithin_: null,
        ghost_: null,
        initialize: function(a) {
            this.beforeStart_ = a.beforeStart;
            this.onStart_ = a.onStart;
            this.onEnter_ = a.onEnter;
            this.onLeave_ = a.onLeave;
            this.onMove_ = a.onMove;
            this.onDrop_ = a.onDrop;
            this.onRemove_ = a.onRemove;
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            this.iframeOverlays_ = [];
            this.currentlyWithin_ = [];
            this.mousemoveEventBound_ = this.mousemoveEvent_.bind(this);
            this.mouseupEventBound_ = this.mouseupEvent_.bind(this)
        },
        remove: function() {
            this.reset_();
            if (this.onRemove_) try {
                this.onRemove_()
            } catch(a) {
                console.error("Programming error in onRemove callback:", a)
            }
            this.stopListening()
        },
        reset_: function(a) {
            this.currentlyWithin_.forEach(function(b) {
                if (this.onLeave_) try {
                    this.onLeave_(a, b, this.ghost_)
                } catch(c) {
                    console.error("Programming error in onLeave callback:", c)
                }
            },
            this);
            this.currentlyWithin_ = [];
            this.uncoverIframes_();
            this.ghost_ && this.ghost_.removeAttribute("style");
            this.doc_.removeEventListener("mouseup", this.mouseupEventBound_);
            this.doc_.removeEventListener("mousemove", this.mousemoveEventBound_)
        },
        mousedownEvent_: function(a) {
            a.button === 0 && !DOMUtils.isSecondaryClick(a) && (a.preventDefault(), this.startDrag_(a))
        },
        mouseupEvent_: function(a) {
            a.preventDefault();
            this.handleDrop_(a)
        },
        mousemoveEvent_: function(a) {
            a.preventDefault();
            this.handleEnterLeave_(a);
            this.handleMove_(a)
        },
        startDrag_: function(a) {
            var b = this.el;
            this.ghost_ = this.beforeStart_ ? this.beforeStart_(a, b) || this.el: this.el;
            this.currentlyWithin_.push(this.el.parentNode);
            this.cursorOffset_ = this.getElementCoordinates_(b, a.clientX, a.clientY);
            this.ghost_.style.pointerEvents = "none";
            this.ghost_.style.position = "absolute";
            this.updateCoordinates_(a);
            this.coverIframes_();
            this.doc_.addEventListener("mouseup", this.mouseupEventBound_);
            this.doc_.addEventListener("mousemove", this.mousemoveEventBound_);
            if (this.onStart_) try {
                this.onStart_(a, b, this.ghost_)
            } catch(c) {
                console.error("Programming error in onStart callback:", c)
            }
        },
        handleEnterLeave_: function(a) {
            var b = this.normalizeTargetData_(a).target,
            c = this.currentlyWithin_[this.currentlyWithin_.length - 1];
            if (c !== b) {
                this.currentlyWithin_ = this.currentlyWithin_.filter(function(c) {
                    if (c.contains(b)) return ! 0;
                    else {
                        if (this.onLeave_) try {
                            this.onLeave_(a, c, this.ghost_)
                        } catch(d) {
                            console.error("Programming error in onLeave callback:", d)
                        }
                        return ! 1
                    }
                },
                this);
                if (!b.contains(c) && this.onEnter_) try {
                    this.onEnter_(a, b, this.ghost_)
                } catch(d) {
                    console.error("Programming error in onEnter callback:", d)
                }
                this.currentlyWithin_.push(b)
            }
        },
        handleMove_: function(a) {
            this.updateCoordinates_(a);
            if (this.onMove_) {
                var b = this.normalizeTargetData_(a),
                c = b.target,
                b = {
                    left: b.left,
                    top: b.top
                };
                try {
                    this.onMove_(a, c, this.ghost_, b)
                } catch(d) {
                    console.error("Programming error in onMove callback:", d)
                }
            }
        },
        handleDrop_: function(a) {
            var b = this.normalizeTargetData_(a);
            this.reset_();
            if (this.onDrop_) {
                var c = b.target,
                b = {
                    left: b.left,
                    top: b.top
                };
                try {
                    this.onDrop_(a, c, this.ghost_, b)
                } catch(d) {
                    console.error("Programming error in onDrop callback:", d)
                }
            }
        },
        updateCoordinates_: function(a) {
            var b = DOMUtils.getOffset(this.ghost_.offsetParent),
            c = DOMUtils.getScroll(this.ghost_.offsetParent),
            d = a.clientY - this.cursorOffset_.top - b.top + c.top;
            this.ghost_.style.left = a.clientX - this.cursorOffset_.left - b.left + c.left + "px";
            this.ghost_.style.top = d + "px"
        },
        getElementCoordinates_: function(a, b, c) {
            var d = DOMUtils.getOffset(a),
            a = DOMUtils.getScroll(a);
            return {
                left: b - d.left + a.left,
                top: c - d.top + a.top
            }
        },
        normalizeTargetData_: function(a) {
            var b = a.target,
            c = a.clientX,
            d = a.clientY;
            if (b.classList.contains(DragView.IFRAME_OVERLAY_CLASS)) var b = _.findWhere(this.iframeOverlays_, {
                mask: b
            }).iframe,
            d = DOMUtils.getOffset(b),
            e = DOMUtils.getScroll(b),
            c = a.clientX - d.left + e.left,
            d = a.clientY - d.top + e.top,
            b = b.contentDocument.elementFromPoint(c, d);
            a = this.getElementCoordinates_(b, c, d);
            a.target = b;
            return a = this.rewriteTargetData_(a, c, d)
        },
        rewriteTargetData_: function(a) {
            return a
        },
        coverIframes_: function() {
            this.iframeOverlays_.length && this.uncoverIframes_();
            this.iframeOverlays_ = [];
            this.doc_.querySelectorAll("iframe").forEach(function(a) {
                if (a.offsetParent) {
                    var b = this.doc_.createElement("div");
                    b.style.left = a.offsetLeft + "px";
                    b.style.top = a.offsetTop + "px";
                    b.style.width = a.offsetWidth + "px";
                    b.style.height = a.offsetHeight + "px";
                    b.style.position = "absolute";
                    b.classList.add(DragView.IFRAME_OVERLAY_CLASS);
                    a.offsetParent.appendChild(b);
                    this.iframeOverlays_.push({
                        iframe: a,
                        mask: b
                    })
                }
            },
            this)
        },
        uncoverIframes_: function() {
            this.iframeOverlays_.forEach(function(a) {
                DOMUtils.detachElement(a.mask)
            },
            this);
            this.iframeOverlays_ = []
        }
    });
    DragView.IFRAME_OVERLAY_CLASS = "iframe-blanket-overlay";
    window.ClassPickerView = Backbone.View.extend({
        targetNodeReference_: null,
        targetRestorableRange_: null,
        anchorElementReference_: null,
        parentPane_: null,
        richTextEditingView_: null,
        onClose_: null,
        keyboard_: null,
        events: {
            mousedown: "defaultMousedown_",
            "mousedown .applied-classes li": "appliedClassMousedown_",
            "mousedown .available-groups li": "groupMousedown_"
        },
        initialize: function(a) {
            var a = a || {},
            b = a.targetNode; ! b || b.nodeType !== Node.ELEMENT_NODE ? console.error("Programming error: can only show a class picker on element nodes node tried was:", b) : (this.targetNodeReference_ = new PersistentNodeReference({
                isWithinContent: !0
            }), this.targetNodeReference_.setNode(b), this.targetRestorableRange_ = a.targetRange, this.anchorElementReference_ = new PersistentNodeReference, this.anchorElementReference_.setNode(a.anchorElement), this.parentPane_ = a.parentPane, this.richTextEditingView_ = a.richTextEditingView, this.onClose_ = a.onClose || null, this.doc_ = a.document || document, this.listenTo(this.richTextEditingView_, "selection focus blur patternDragged", this.removePickerEvent_), this.listenTo(this.richTextEditingView_, "change", this.editorChanged_), this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    cancel: this.removePickerEvent_.bind(this)
                })
            }))
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = app.getProjectModel().get("classGroups");
            a.isLoaded() && a.length && this.getTargetNode() && this.getAnchorElement() && (this.setElement(Templates["project/editing/classPicker"](this.getTemplateData_())), this.parentPane_.appendChild(this.el), this.updatePosition_(), app.getKeyboardManager().activate(this.keyboard_))
        },
        remove: function() {
            app.getKeyboardManager().remove(this.keyboard_);
            ClassPickerView.__super__.remove.call(this);
            if (this.onClose_) this.onClose_()
        },
        getTargetNode: function() {
            return ! this.targetNodeReference_ ? null: this.targetNodeReference_.getNode(this.richTextEditingView_.getContentView().getContentDocument())
        },
        getTargetRange: function() {
            return ! this.targetRestorableRange_ ? null: this.targetRestorableRange_.getRange(this.richTextEditingView_.getContentView().getContentDocument())
        },
        getAnchorElement: function() {
            return ! this.anchorElementReference_ ? null: this.anchorElementReference_.getNode(this.doc_)
        },
        getTemplateData_: function() {
            var a = this.getTargetNode(),
            b = this.getTargetRange(),
            c = b && !b.collapsed,
            b = [];
            c || (b = Array.prototype.filter.call(a.classList,
            function(a) {
                return ! ReaderContentView.HABITAT_PREFIX_REGEXP.test(a)
            },
            this));
            a = c ? "span": a.tagName.toLowerCase();
            a = app.getProjectModel().get("classGroups").getGroupsByTagName(a).map(function(a) {
                return a.toJSON()
            });
            c = {};
            if (b.length) c.appliedClasses = b.map(function(a) {
                return {
                    className: a
                }
            });
            if (a.length) c.availableGroups = a;
            return c
        },
        updatePosition_: function() {
            var a = this.getAnchorElement().offsetLeft + ClassPickerView.ANCHORING_OFFSET_,
            b = this.el.offsetWidth / 2,
            c = a - b,
            d = this.el.offsetParent.offsetWidth + ClassPickerView.POSITIONING_BUFFER_WIDTH_;
            c < ClassPickerView.POSITIONING_BUFFER_WIDTH_ ? (c = a - ClassPickerView.POSITIONING_OVERHANG_WIDTH_, this.el.classList.add("arrow-left"), this.el.classList.remove("arrow-right")) : a + b > d ? (c = a - this.el.offsetWidth + ClassPickerView.POSITIONING_OVERHANG_WIDTH_, this.el.classList.add("arrow-right"), this.el.classList.remove("arrow-left")) : (this.el.classList.remove("arrow-left"), this.el.classList.remove("arrow-right"));
            this.el.style.left = c + "px"
        },
        removePickerEvent_: function() {
            this.remove()
        },
        editorChanged_: function() {
            this.render()
        },
        applyClassGroup_: function(a) {
            var b = app.getProjectModel().get("classGroups").get(a);
            if (b) {
                var c = this.getTargetNode(),
                d = this.getTargetRange(),
                a = this.richTextEditingView_.getSelection();
                this.richTextEditingView_.modifyDocument(function() {
                    if (d && !d.collapsed) {
                        c = DOMUtils.createElement("span", {
                            doc: c.ownerDocument
                        });
                        d.surroundContents(c);
                        d.selectNodeContents(c);
                        d.collapse(!1);
                        var a = new RestorableRange;
                        a.save(d);
                        this.richTextEditingView_.setSelection(a)
                    }
                    b.get("classes").forEach(function(a) {
                        c.classList.add(a)
                    })
                }.bind(this));
                var e = this.richTextEditingView_.getSelection();
                this.richTextEditingView_.triggerChange({
                    rangeBeforeChange: a,
                    rangeAfterChange: e
                })
            }
        },
        removeClass_: function(a) {
            if (a) {
                var b = this.getTargetNode(),
                c = this.richTextEditingView_.getSelection();
                this.richTextEditingView_.modifyDocument(function() {
                    b.classList.remove(a);
                    b.tagName.toLowerCase() === "span" && DOMUtils.hasNoAttributes(b) && DOMUtils.unwrapElement(b)
                }.bind(this));
                var d = this.richTextEditingView_.getSelection();
                this.richTextEditingView_.triggerChange({
                    rangeBeforeChange: c,
                    rangeAfterChange: d
                })
            }
        },
        defaultMousedown_: function(a) {
            a.preventDefault()
        },
        appliedClassMousedown_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || this.removeClass_(b.dataset.className)
        },
        groupMousedown_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || this.applyClassGroup_(b.dataset.groupId)
        }
    });
    ClassPickerView.POSITIONING_BUFFER_WIDTH_ = 5;
    ClassPickerView.POSITIONING_OVERHANG_WIDTH_ = 35;
    ClassPickerView.ANCHORING_OFFSET_ = 23;
    window.RichTextBreadcrumbsView = Backbone.View.extend({
        showAllAncestors_: !1,
        isDraggingPattern_: !1,
        ancestorElements_: null,
        previousTemplateData_: null,
        overlayEl_: null,
        contentPane_: null,
        parentPane_: null,
        classPickerView_: null,
        richTextEditingView_: null,
        uiAttributes_: {
            selectedNode: null,
            selectedRange: null,
            draggedPattern: null,
            wholeNodeSelected: !1
        },
        warningShownForMissingClassGroups_: !1,
        warningShownForLoadingClassGroups_: !1,
        events: {
            mousedown: "breadcrumbBarMousedown_",
            "mousedown li .arrow": "classPickerMousedown_",
            "mousedown li .selector": "selectorMousedown_",
            "mouseover li": "breadcrumbMouseover_",
            "mouseout li": "breadcrumbMouseout_",
            "mousedown .expansion-toggler": "toggleShowAll_"
        },
        initialize: function(a) {
            a = a || {};
            this.richTextEditingView_ = a.richTextEditingView;
            this.contentPane_ = a.contentPane;
            this.parentPane_ = a.parentPane;
            this.showAllAncestors_ = !!app.getCurrentUser().get("prefs").get(RichTextBreadcrumbsView.PREFS_KEY_);
            this.listenTo(this.richTextEditingView_, "selection", this.selectionChanged_);
            this.listenTo(this.richTextEditingView_, "focus", this.editorFocused_);
            this.listenTo(this.richTextEditingView_, "blur", this.editorBlurred_);
            this.listenTo(this.richTextEditingView_, "change", this.editorChanged_);
            this.listenTo(this.richTextEditingView_, "patternDragged", this.patternDragged_);
            this.listenTo(this.richTextEditingView_, "patternMoved", this.patternMoved_);
            this.listenTo(this.richTextEditingView_, "patternDropped", this.patternDropped_)
        },
        render: function(a) {
            var b = this.uiAttributes_.selectedNode;
            if (b) {
                var c = this.uiAttributes_.wholeNodeSelected,
                d = this.uiAttributes_.selectedRange,
                e = null; ! c && d && (e = this.richTextEditingView_.getContentView().getContentDocument(), e = d.getRange(e));
                b = this.getAncestors_(b, c);
                c = this.getTemplateData_(b, e);
                if (a || this.isRenderNecessary_(c)) this.cleanUp_(),
                this.ancestorElements_ = b,
                this.previousTemplateData_ = c,
                this.setElement(Templates["project/editing/richTextBreadcrumbs"](c)),
                this.parentPane_.appendChild(this.el),
                a = app.getProjectModel().get("classGroups"),
                a.isLoaded() ? this.classGroupsLoaded_() : this.listenToOnce(a, "loaded", this.classGroupsLoaded_),
                this.classPickerView_ && (a = this.classPickerView_.getAnchorElement()) && a.classList.add(RichTextBreadcrumbsView.HAS_CLASS_PICKER_)
            } else this.cleanUp_()
        },
        getAncestors_: function(a, b) {
            var c = DOMUtils.getParents(a);
            b ? c.push(a) : !b && a.nodeType === Node.ELEMENT_NODE && c.push(a);
            return c
        },
        remove: function() {
            if (this.classPickerView_) this.classPickerView_.remove(),
            this.classPickerView_ = null;
            this.cleanUp_();
            RichTextBreadcrumbsView.__super__.remove.call(this)
        },
        cleanUp_: function() {
            this.previousTemplateData_ = this.ancestorElements_ = null;
            this.stopListening(app.getProjectModel().get("classGroups"));
            DOMUtils.detachElement(this.el);
            this.removeOverlay_()
        },
        isRenderNecessary_: function(a) {
            return ! a || !this.previousTemplateData_ ? !0 : !_.isEqual(a, this.previousTemplateData_)
        },
        getTemplateData_: function(a, b) {
            var c = a.length,
            a = a.map(function(a, b) {
                return {
                    selector: this.getSelectorForElement_(a),
                    ancestorIndex: b
                }
            },
            this),
            d = this.uiAttributes_.draggedPattern;
            d && a.push({
                selector: d.get("label"),
                ancestorIndex: a.length
            });
            d = a.splice( - 2);
            return {
                distantAncestors: a,
                currentElementAndParent: d,
                hasSelectedText: !(!b || b.collapsed),
                selectionIndex: c,
                wholeNodeSelected: this.uiAttributes_.wholeNodeSelected,
                modifierClasses: this.getTemplateClasses_()
            }
        },
        getSelectorForElement_: function(a) {
            return DOMUtils.getSelector(a, {
                ignoreClassesMatching: ReaderContentView.HABITAT_PREFIX_REGEXP,
                stripId: !0
            })
        },
        getTemplateClasses_: function() {
            var a = [];
            this.showAllAncestors_ && a.push("expanded");
            this.isDraggingPattern_ && a.push("pattern-drag");
            this.classPickerView_ && a.push(RichTextBreadcrumbsView.CLASS_PICKER_OPENED_CLASS_);
            this.uiAttributes_.wholeNodeSelected && a.push(RichTextBreadcrumbsView.HAS_WHOLE_ELEMENT_SELECTION_CLASS_);
            return a.join(" ")
        },
        addOverlay_: function(a) {
            this.removeOverlay_();
            var b = DOMUtils.createRectOverlay(a);
            b.dataset.displaySelector = this.getSelectorForElement_(a);
            b.classList.add(RichTextBreadcrumbsView.BREADCRUMB_OVERLAY_CLASS_);
            this.overlayEl_ = b;
            this.contentPane_.appendChild(b)
        },
        removeOverlay_: function() {
            if (this.overlayEl_) DOMUtils.detachElement(this.overlayEl_),
            this.overlayEl_ = null
        },
        hasSameParents_: function(a, b) {
            if (!a) return ! 1;
            var c = this.getAncestors_(a, b);
            return c.length !== this.ancestorElements_.length ? !1 : c.every(function(a, b) {
                return a === this.ancestorElements_[b]
            },
            this)
        },
        classGroupsLoaded_: function() {
            app.getProjectModel().get("classGroups").length && this.el.classList.add(RichTextBreadcrumbsView.CLASS_PICKER_ENABLED_CLASS_)
        },
        classPickerRemoved_: function() {
            var a = this.el.querySelector("." + RichTextBreadcrumbsView.HAS_CLASS_PICKER_);
            a && a.classList.remove(RichTextBreadcrumbsView.HAS_CLASS_PICKER_);
            this.el.classList.remove(RichTextBreadcrumbsView.CLASS_PICKER_OPENED_CLASS_);
            this.classPickerView_ = null
        },
        changeAttributes_: function(a) {
            var b = this.uiAttributes_.selectedNode,
            c = this.uiAttributes_.selectedRange,
            d = this.uiAttributes_.wholeNodeSelected;
            this.uiAttributes_ = _.extend(this.uiAttributes_, a);
            var a = this.uiAttributes_.selectedNode,
            e = this.uiAttributes_.selectedRange,
            f = this.uiAttributes_.wholeNodeSelected;
            a !== b ? this.render(!0) : this.uiAttributes_.wholeNodeSelected && !d ? this.render(!0) : a && !this.hasSameParents_(a, f) ? this.render(!0) : (b = e && !e.wasCollapsed(), c = c && !c.wasCollapsed(), (b || c) && b !== c && this.render(!0))
        },
        selectionChanged_: function(a, b) {
            var c = this.richTextEditingView_.getNodeNearSelection(),
            d = this.richTextEditingView_.getSelection();
            d && d instanceof PersistentNodeReference && (d = null);
            this.changeAttributes_({
                selectedNode: c,
                selectedRange: d,
                wholeNodeSelected: !!b
            })
        },
        editorChanged_: function() {
            this.removeOverlay_();
            var a = this.richTextEditingView_.getNodeNearSelection(),
            b = this.richTextEditingView_.getSelection(),
            c = !1;
            b && b instanceof PersistentNodeReference && (b = null, c = !0);
            this.changeAttributes_({
                selectedNode: a,
                selectedRange: b,
                wholeNodeSelected: c
            });
            this.render()
        },
        editorBlurred_: function() {
            this.changeAttributes_({
                selectedNode: null,
                selectedRange: null,
                wholeNodeSelected: !1
            })
        },
        editorFocused_: function() {
            if (this.richTextEditingView_.isEditingAllowed()) {
                var a = this.richTextEditingView_.getNodeNearSelection(),
                b = this.richTextEditingView_.getSelection(),
                c = this.richTextEditingView_.isWholeNodeSelected();
                this.changeAttributes_({
                    selectedNode: a,
                    selectedRange: b,
                    wholeNodeSelected: c
                })
            }
        },
        patternDragged_: function() {
            this.isDraggingPattern_ = !0;
            this.changeAttributes_({
                selectedNode: null,
                selectedRange: null,
                draggedPattern: null,
                wholeNodeSelected: !1
            })
        },
        patternMoved_: function(a) {
            this.changeAttributes_({
                selectedNode: a.parent,
                selectedRange: null,
                draggedPattern: a.pattern,
                wholeNodeSelected: !1
            })
        },
        patternDropped_: function() {
            this.isDraggingPattern_ = !1;
            this.changeAttributes_({
                selectedNode: null,
                selectedRange: null,
                draggedPattern: null,
                wholeNodeSelected: !1
            })
        },
        classPickerMousedown_: function(a, b) {
            var c = app.getProjectModel().get("classGroups");
            if (c.isLoaded()) if (c.length) {
                var c = DOMUtils.getParent(b, "[data-ancestor-index]"),
                d = this.ancestorElements_[parseInt(c.dataset.ancestorIndex, 10)],
                e;
                if (!d) d = this.ancestorElements_[this.ancestorElements_.length - 1],
                e = this.uiAttributes_.selectedRange;
                this.classPickerView_ && this.classPickerView_.remove();
                this.classPickerView_ = new ClassPickerView({
                    targetNode: d,
                    targetRange: e,
                    anchorElement: c,
                    parentPane: this.parentPane_,
                    richTextEditingView: this.richTextEditingView_,
                    onClose: this.classPickerRemoved_.bind(this)
                });
                this.classPickerView_.render();
                c.classList.add(RichTextBreadcrumbsView.HAS_CLASS_PICKER_);
                this.el.classList.add(RichTextBreadcrumbsView.CLASS_PICKER_OPENED_CLASS_)
            } else {
                if (!this.warningShownForMissingClassGroups_) this.warningShownForMissingClassGroups_ = !0,
                console.warn("Project configuration: this project does not have any class groups associated with it.")
            } else if (!this.warningShownForLoadingClassGroups_) this.warningShownForLoadingClassGroups_ = !0,
            console.warn("Loading: the class groups have not yet loaded for this project.")
        },
        selectorMousedown_: function(a, b) {
            this.classPickerView_ && this.classPickerView_.remove();
            var c = DOMUtils.getParent(b, "[data-ancestor-index]");
            this.richTextEditingView_.setWholeNodeSelected(this.ancestorElements_[parseInt(c.dataset.ancestorIndex, 10)])
        },
        breadcrumbMouseover_: function(a, b) {
            if (!this.isDraggingPattern_) {
                var c = this.ancestorElements_[parseInt(b.dataset.ancestorIndex, 10)];
                c && this.addOverlay_(c)
            }
        },
        breadcrumbMouseout_: function() {
            this.removeOverlay_()
        },
        breadcrumbBarMousedown_: function(a) {
            a.preventDefault()
        },
        toggleShowAll_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) this.classPickerView_ && this.classPickerView_.remove(),
            this.showAllAncestors_ = a = this.el.classList.toggle("expanded"),
            app.getCurrentUser().get("prefs").set(RichTextBreadcrumbsView.PREFS_KEY_, a)
        }
    });
    RichTextBreadcrumbsView.PREFS_KEY_ = "breadcrumbBarExpanded";
    RichTextBreadcrumbsView.BREADCRUMB_OVERLAY_CLASS_ = "breadcrumb-overlay";
    RichTextBreadcrumbsView.HAS_WHOLE_ELEMENT_SELECTION_CLASS_ = "has-whole-elem-selection";
    RichTextBreadcrumbsView.CLASS_PICKER_ENABLED_CLASS_ = "class-picker-enabled";
    RichTextBreadcrumbsView.CLASS_PICKER_OPENED_CLASS_ = "class-picker-open";
    RichTextBreadcrumbsView.HAS_CLASS_PICKER_ = "has-class-picker";
    window.ContentEditableView = Backbone.View.extend({
        target_: null,
        contentView_: null,
        richTextEditingView_: null,
        contentDoc_: null,
        contentWin_: null,
        lastTags_: null,
        lastBackspaceRange_: null,
        earliestBackspaceRange_: null,
        modifyNextDOMChange_: !1,
        domObserver_: null,
        watchingChanges_: !1,
        rangeBeforeChange_: null,
        rangeAfterChange_: null,
        changeEventDeferred_: !1,
        deferredChangeCallback_: null,
        initialize: function(a) {
            a = a || {};
            this.target_ = a.target;
            this.contentView_ = a.contentView;
            this.richTextEditingView_ = a.richTextEditingView;
            this.contentDoc_ = this.contentView_.getIframeDocument();
            this.contentWin_ = this.contentView_.getIframeWindow();
            this.handleDOMChanges_ = this.handleDOMChanges_.bind(this);
            this.handleTabKey_ = this.handleTabKey_.bind(this);
            this.detectDestructiveKeydownListener_ = this.detectDestructiveKeydownListener_.bind(this);
            this.detectDestructiveKeyupListener_ = this.detectDestructiveKeyupListener_.bind(this);
            this.restoreCSSClassKeydownListener_ = this.restoreCSSClassKeydownListener_.bind(this);
            this.generalKeypressListener_ = this.generalKeypressListener_.bind(this);
            this.keyupAfterEnterKeyPressed_ = this.keyupAfterEnterKeyPressed_.bind(this);
            this.selectionAfterKeypressListener_ = this.selectionAfterKeypressListener_.bind(this);
            this.keyupAfterKeypressListener_ = this.keyupAfterKeypressListener_.bind(this);
            this.fireChangeEventDebouncer_ = FunctionUtils.createDebouncer(this.fireChangeEvent_, ContentEditableView.CHANGE_TIMEOUT_, this);
            this.clearRestorableState();
            this.defaultToParagraphs_();
            this.useCSS_();
            this.watchDOM_();
            this.throwAwayTabKey_();
            this.restoreCSSClasses_();
            this.enable()
        },
        getDocument: function() {
            return this.contentDoc_
        },
        getWindow: function() {
            return this.contentWin_
        },
        isEnabled: function() {
            return this.target_.contentEditable === "true"
        },
        enable: function() {
            this.fireChangeEventDebouncer_.cancel();
            this.target_.contentEditable = "true";
            this.watchingChanges_ = !0
        },
        disable: function() {
            this.fireChangeEventDebouncer_.cancel();
            this.target_.contentEditable = "false";
            this.watchingChanges_ = !1
        },
        remove: function() {
            this.domObserver_ && this.stopWatchingChanges();
            this.disable();
            this.contentWin_ && (this.contentWin_.removeEventListener("keydown", this.handleTabKey_), this.contentWin_.removeEventListener("keydown", this.detectDestructiveKeydownListener_), this.contentWin_.removeEventListener("keyup", this.detectDestructiveKeyupListener_), this.contentWin_.removeEventListener("keydown", this.restoreCSSClassKeydownListener_), this.contentWin_.removeEventListener("keypress", this.generalKeypressListener_));
            ContentEditableView.__super__.remove.call(this)
        },
        updateTarget: function(a) {
            this.stopWatchingChanges();
            this.target_ = a;
            this.watchDOM_();
            this.enable()
        },
        isWatchingChanges: function() {
            return this.watchingChanges_
        },
        stopWatchingChanges: function() {
            this.watchingChanges_ = !1;
            DOMUtils.stopDOMObserver(this.domObserver_);
            this.fireChangeEventDebouncer_.cancel()
        },
        startWatchingChanges: function() {
            this.watchingChanges_ = !0;
            this.fireChangeEventDebouncer_.cancel();
            DOMUtils.startDOMObserver(this.domObserver_)
        },
        flush: function() {
            if (this.watchingChanges_) {
                if (this.domObserver_) {
                    var a = null;
                    try {
                        a = this.domObserver_.takeSummaries()
                    } catch(b) {}
                    a && this.handleDOMChanges_(a)
                }
                this.fireChangeEventDebouncer_.invokeNow()
            }
        },
        clearRestorableState: function() {
            this.lastTags_ = [];
            this.earliestBackspaceRange_ = this.lastBackspaceRange_ = null;
            this.modifyNextDOMChange_ = !1
        },
        hasRange: function() {
            var a = this.contentDoc_.getSelection();
            return a.rangeCount > 0 ? a.getRangeAt(0).startContainer.nodeType !== Node.DOCUMENT_NODE: !1
        },
        getSelection: function() {
            return ! this.hasRange() ? null: this.getRestorableRangeFor_(this.contentDoc_.getSelection().getRangeAt(0))
        },
        execCommand: function(a, b, c) {
            b === void 0 && (b = null);
            c === void 0 && (c = null);
            var d = DOMUtils.getRangeInfo(this.contentDoc_);
            if (d = d && !d.collapsed || ContentEditableView.CHANGES_DOM_WHEN_COLLAPSED_[a]) this.rangeBeforeChange_ = this.getSelection(),
            this.changeEventDeferred_ = !0,
            this.deferredChangeCallback_ = c;
            this.contentDoc_.execCommand(a, !1, b);
            this.fixNestingFromExecCommand_(a);
            DOMUtils.normalizeTextNodes(this.contentDoc_); ! d && c && this.contentWin_.setTimeout(c, 1)
        },
        fixNestingFromExecCommand_: function(a) {
            var a = ContentEditableView.COMMAND_TAG_NAME_[a],
            b = DOMUtils.getRange(this.contentDoc_);
            a && b && (a = DOMUtils.getParent(b.startContainer, a), ElementNestingUtils.fixElementNesting(a, this.contentDoc_))
        },
        getRestorableRangeFor_: function(a) {
            var b = new RestorableRange({
                window: this.contentWin_
            });
            b.save(a);
            return b
        },
        defaultToParagraphs_: function() {
            this.contentDoc_.execCommand("defaultParagraphSeparator", !1, "p")
        },
        useCSS_: function() {
            this.contentDoc_.execCommand("styleWithCSS", !1, !0)
        },
        watchDOM_: function() {
            this.domObserver_ = new MutationSummary({
                callback: this.handleDOMChanges_,
                rootNode: this.target_,
                queries: [{
                    attribute: "style"
                },
                {
                    element: "*"
                }]
            })
        },
        handleDOMChanges_: function(a) {
            if (this.isEnabled()) {
                var b = !1,
                c = a[0]; ! this.shouldIgnoreStyleChange_(c) && c.added.length && (this.handleStyleChanges_(c), b = !0);
                a = a[1];
                _.union(a.added, a.removed).length && this.handleElementChanges_(a);
                DOMUtils.normalizeTextNodes(this.contentDoc_);
                a = this.getSelection();
                if (!this.richTextEditingView_.areChangeEventsSilent() && (b || this.changeEventDeferred_)) if (this.rangeAfterChange_ = a, this.fireChangeEventDebouncer_.call(), this.changeEventDeferred_ = !1, this.deferredChangeCallback_) this.deferredChangeCallback_(),
                this.deferredChangeCallback_ = null
            }
        },
        handleStyleChanges_: function(a) {
            a.added.forEach(this.removeStyleAttrAndRestoreCSSClass_, this)
        },
        handleElementChanges_: function(a) {
            a.added.forEach(function(a) {
                var c = XMLUtilities.getS9ID(a),
                d = a.tagName.toLowerCase(),
                e = !1;
                c && XMLUtilities.isDuplicateS9ID(this.contentDoc_, c) ? e = !0 : !c && HTMLContent.shouldHaveS9ID(d) && (e = !0);
                e && XMLUtilities.setS9ID(a, UUID())
            },
            this)
        },
        throwAwayTabKey_: function() {
            this.contentWin_.addEventListener("keydown", this.handleTabKey_)
        },
        handleTabKey_: function(a) {
            this.isEnabled() && a.keyCode === 9 && a.preventDefault()
        },
        restoreCSSClasses_: function() {
            this.contentWin_.addEventListener("keydown", this.detectDestructiveKeydownListener_);
            this.contentWin_.addEventListener("keyup", this.detectDestructiveKeyupListener_);
            this.contentWin_.addEventListener("keydown", this.restoreCSSClassKeydownListener_);
            this.contentWin_.addEventListener("keypress", this.generalKeypressListener_)
        },
        detectDestructiveKeydownListener_: function(a) {
            if (this.isEnabled() && this.contentWin_.getSelection().rangeCount) if (this.isDestructiveKey_(a)) {
                var b = this.contentDoc_.getSelection(),
                c = b.anchorNode.nodeType === Node.TEXT_NODE ? b.anchorNode.parentNode: b.anchorNode;
                this.lastBackspaceRange_ = null;
                if (b.rangeCount && this.keyMightCauseEmptyBody_(b.getRangeAt(0), a)) a.preventDefault();
                else if (DOMUtils.userHasSelectedAll(this.contentDoc_)) a.preventDefault(),
                this.earliestBackspaceRange_ = null,
                this.rangeBeforeChange_ = this.getSelection(),
                Hacks.deleteSelectAll(this.contentView_),
                this.rangeAfterChange_ = this.getSelection(),
                this.fireChangeEventDebouncer_.call();
                else {
                    if (!this.earliestBackspaceRange_) this.earliestBackspaceRange_ = this.getSelection();
                    if (a.keyCode === 46) c = b.getRangeAt(0).startContainer.nextSibling;
                    this.lastTags_ = this.getNodesToSave_(c)
                }
            } else this.earliestBackspaceRange_ = null
        },
        detectDestructiveKeyupListener_: function(a) {
            if (this.isEnabled() && this.contentWin_.getSelection().rangeCount && this.isDestructiveKey_(a)) {
                if (this.lastBackspaceRange_ = this.contentDoc_.getSelection().getRangeAt(0).cloneRange()) if (this.rangeAfterChange_ = this.getRestorableRangeFor_(this.lastBackspaceRange_), this.earliestBackspaceRange_) this.rangeBeforeChange_ = this.earliestBackspaceRange_;
                this.fireChangeEventDebouncer_.call()
            }
        },
        restoreCSSClassKeydownListener_: function(a) {
            if (this.isEnabled() && this.contentWin_.getSelection().rangeCount && !this.isDestructiveKey_(a) && this.lastBackspaceRange_) this.isSelectedRange_(this.lastBackspaceRange_) ? this.modifyNextDOMChange_ = !0 : this.clearRestorableState()
        },
        generalKeypressListener_: function(a) {
            if (this.isEnabled() && this.contentWin_.getSelection().rangeCount) {
                if (!this.rangeBeforeChange_) this.rangeBeforeChange_ = this.getSelection();
                DOMUtils.userHasSelectedAll(this.contentDoc_) && Hacks.deleteSelectAll(this.contentView_);
                var b = this.contentDoc_;
                a.keyCode === 13 && !a.shiftKey ? b.addEventListener("keyup", this.keyupAfterEnterKeyPressed_) : (b.addEventListener("selectionchange", this.selectionAfterKeypressListener_), b.addEventListener("keyup", this.keyupAfterKeypressListener_))
            }
        },
        keyupAfterEnterKeyPressed_: function() {
            this.contentDoc_.removeEventListener("keyup", this.keyupAfterEnterKeyPressed_);
            this.rangeAfterChange_ = this.getSelection();
            this.fireChangeEventDebouncer_.call()
        },
        selectionAfterKeypressListener_: function() {
            this.contentDoc_.removeEventListener("selectionchange", this.selectionAfterKeypressListener_);
            if (this.rangeBeforeChange_) this.rangeAfterChange_ = this.getSelection(),
            this.fireChangeEventDebouncer_.call()
        },
        keyupAfterKeypressListener_: function() {
            this.contentDoc_.removeEventListener("keyup", this.keyupAfterKeypressListener_);
            this.trigger("keyup")
        },
        isDestructiveKey_: function(a) {
            return a.keyCode === 8 || a.keyCode === 46
        },
        getNodesToSave_: function(a) {
            var b = [];
            if (!a) return b;
            a = a.nodeType === Node.TEXT_NODE ? a.parentElement: a;
            b.push(a);
            for (var c = a.parentElement; c;) {
                if (c.childNodes.length === 1 && c.childNodes[0] === a && !HTMLContent.isCategory(HTMLContent.CATEGORY.BLOCK, a) && !HTMLContent.isCategory(HTMLContent.CATEGORY.BLOCK, c)) b.push(c);
                else break;
                a = c;
                c = a.parentElement
            }
            return b.reverse()
        },
        isSelectedRange_: function(a) {
            var b = DOMUtils.getRange(this.contentDoc_);
            return DOMUtils.isSameRange(b, a)
        },
        getStyleExceptions_: function(a) {
            var b = {},
            c = [];
            a.tagName.toLowerCase() === "iframe" && (c = ["width", "height"]);
            c.forEach(function(c) {
                b[c] = a.style[c]
            });
            return b
        },
        removeStyleAttrAndRestoreCSSClass_: function(a) {
            var b = this.isNodeInsideSelection_(a) ? DOMUtils.getRangeInfo(this.contentDoc_) : null,
            c = this.determinePresentationalTags_(a, this.lastTags_),
            d = this.getStyleExceptions_(a);
            a.removeAttribute("style");
            DOMUtils.setStyles(a, d);
            this.modifyNextDOMChange_ && (a = this.restoreMissingNodeInfo_(a));
            c.length && (a = this.restorePresentationalTags_(a, this.lastTags_, c));
            this.removeEmptySpan_(a);
            DOMUtils.restoreRange(b);
            this.clearRestorableState()
        },
        isNodeInsideSelection_: function(a) {
            return this.contentDoc_.getSelection().containsNode(a, !0)
        },
        determinePresentationalTags_: function(a, b) {
            var c = [];
            a.hasAttribute("style") && a.style && (a.style.fontWeight === "bold" && !this.tagPresent_(b, "b") && c.push("b"), a.style.fontStyle === "italic" && !this.tagPresent_(b, "i") && c.push("i"), /^underline/.test(a.style.textDecoration) && !this.tagPresent_(b, "u") && c.push("u"), a.style.verticalAlign === "super" && !this.tagPresent_(b, "sup") && c.push("sup"), a.style.verticalAlign === "sub" && !this.tagPresent_(b, "sub") && c.push("sub"));
            return c
        },
        tagPresent_: function(a, b) {
            return a.some(function(a) {
                return a.tagName.toLowerCase() === b.toLowerCase()
            })
        },
        restorePresentationalTags_: function(a, b, c) {
            c = this.filterPresentationalTags_(a, c);
            if (!c.length) return a;
            for (var d = this.contentDoc_.createDocumentFragment(), e = d, f = 0; f < c.length; f++) {
                var g = this.contentDoc_.createElement(c[f]);
                e.appendChild(g);
                e = g
            }
            c = e;
            e = d.childNodes[0];
            if (!this.isSpanWithoutAttributes_(a) || b.length) b = DOMUtils.createChildFragment(a),
            c.appendChild(b),
            a.appendChild(e),
            e = a;
            else {
                for (; a.firstChild;) c.appendChild(a.firstChild);
                a.parentElement.replaceChild(d, a)
            }
            return e
        },
        filterPresentationalTags_: function(a, b) {
            var c = !1,
            d = !1,
            e = !1,
            f = !1,
            g = !1;
            this.getNodesToSave_(a).forEach(function(a) {
                a = this.contentWin_.getComputedStyle(a);
                a.fontWeight === "bold" && (c = !0);
                a.fontStyle === "italic" && (d = !0);
                /^underline/.test(a.textDecoration) && (e = !0);
                a.verticalAlign === "super" && (f = !0);
                a.verticalAlign === "sub" && (g = !0)
            },
            this);
            return b = b.filter(function(a) {
                return a === "b" && c ? !1 : a === "i" && d ? !1 : a === "u" && e ? !1 : a === "sup" && f ? !1 : a === "sub" && g ? !1 : !0
            })
        },
        restoreMissingNodeInfo_: function(a) {
            var b = this.lastTags_[this.lastTags_.length - 1];
            if (!b) return a;
            var c = b.className,
            b = b.tagName ? b.tagName.toLowerCase() : null;
            c && a.classList.add(c);
            if (b && a.tagName.toLowerCase() !== b && HTMLContent.canNest(b, a.parentElement)) {
                b = this.contentDoc_.createElement(b);
                for (c = 0; c < a.attributes.length; c++) b.setAttributeNode(a.attributes[c].cloneNode(!0));
                for (; a.firstChild;) b.appendChild(a.firstChild);
                a.parentElement.replaceChild(b, a);
                a = b
            }
            if (this.lastTags_.length > 1) {
                for (var d = b = this.contentDoc_.createDocumentFragment(), e, c = 0; c < this.lastTags_.length - 1; c++) e = this.lastTags_[c].cloneNode(!1),
                d.appendChild(e),
                d = e;
                d = b.firstChild;
                a.parentElement.replaceChild(b, a);
                e.appendChild(a);
                a = d
            }
            return a
        },
        isSpanWithoutAttributes_: function(a) {
            return a.nodeName.toLowerCase() === "span" && DOMUtils.hasNoAttributes(a)
        },
        removeEmptySpan_: function(a) {
            if (this.isSpanWithoutAttributes_(a)) {
                var b = DOMUtils.createChildFragment(a);
                a.parentNode.replaceChild(b, a)
            }
        },
        fireChangeEvent_: function() {
            if ((this.rangeBeforeChange_ || this.rangeAfterChange_) && this.isWatchingChanges()) this.trigger("change", {
                rangeBeforeChange: this.rangeBeforeChange_,
                rangeAfterChange: this.rangeAfterChange_
            }),
            this.earliestBackspaceRange_ = this.rangeAfterChange_ = this.rangeBeforeChange_ = null
        },
        shouldIgnoreStyleChange_: function(a) {
            a = _.union(a.added || [], a.removed || [], a.valueChanged || []);
            return a.some(function(a) {
                return a && a.tagName.toLowerCase() === "iframe"
            }) ? !0 : a.some(function(a) {
                return a && (a.classList.contains(MathPreviewGenerator.MATH_PREVIEW_CLASS) || DOMUtils.getParent(a, "." + MathPreviewGenerator.MATH_PREVIEW_CLASS))
            },
            this) ? !0 : a.some(function(a) {
                return a.tagName.toLowerCase() === "body"
            }) ? !0 : !1
        },
        keyMightCauseEmptyBody_: function(a, b) {
            if (!a.collapsed) return ! 1;
            if (b.keyCode === 8) {
                var c = a.startContainer.nodeType === Node.TEXT_NODE ? a.startContainer.parentElement: a.startContainer,
                d = this.contentDoc_.body,
                e = a.startOffset === 0;
                return !! (d.children.length && d.children[0] === c) && e
            }
            return ! 1
        }
    });
    ContentEditableView.CHANGE_TIMEOUT_ = 300;
    ContentEditableView.COMMAND_TAG_NAME_ = {
        insertOrderedList: "ol",
        insertUnorderedList: "ul"
    };
    ContentEditableView.CHANGES_DOM_WHEN_COLLAPSED_ = {
        createLink: !0,
        "delete": !0,
        formatBlock: !0,
        forwardDelete: !0,
        indent: !0,
        insertHorizontalRule: !0,
        insertHTML: !0,
        insertImage: !0,
        insertOrderedList: !0,
        insertUnorderedList: !0,
        insertParagraph: !0,
        insertText: !0,
        justifyCenter: !0,
        justifyFull: !0,
        justifyLeft: !0,
        justifyRight: !0,
        outdent: !0,
        redo: !0,
        undo: !0
    };
    window.HTMLCodeEditingView = Backbone.View.extend({
        model: null,
        aceView_: null,
        codePane_: null,
        lineNumberToGoTo_: null,
        validationErrors_: null,
        highlightedS9IDInCode_: null,
        highlightedPosition_: null,
        highlightBodyElement_: !1,
        originalWidth_: null,
        open_: !0,
        initialize: function(a) {
            a = a || {};
            this.codePane_ = a.codePane;
            this.open_ = a.open;
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.validationErrors_ = [];
            this.el.classList.add("docked-code-editor");
            this.aceView_ = new AceView({
                el: this.el,
                type: "xhtml",
                pasteManager: this.onBeforePaste_.bind(this)
            });
            this.resizeHandleView_ = new ResizeHandleView({
                parentPane: this.codePane_,
                position: ResizeHandleView.POSITION.LEFT,
                storageKey: "htmlCodeEditingWidth",
                tick: function() {
                    app.trigger("contentPaneResized")
                }
            });
            this.resizeHandleView_.render();
            this.aceView_.setValue(this.model.get("content"), !0);
            this.aceView_.on("change", this.codeChangeEvent_, this);
            this.aceView_.on("focus", this.codeFocusEvent_, this);
            a = app.getRouter().getLineNumber();
            if (typeof a === "number") this.lineNumberToGoTo_ = a - 1;
            this.codePane_.classList.remove("closed");
            if (!this.open_) this.originalWidth_ = this.codePane_.offsetWidth,
            this.setPaneWidth_(0, !1)
        },
        render: function() {
            var a = this.aceView_.isFocused();
            this.el.parentElement || this.codePane_.appendChild(this.el);
            this.isOpen() && this.resize();
            this.aceView_.setValidationErrors(this.validationErrors_);
            a && this.aceView_.focus();
            this.hasValidationErrors() ? this.aceView_.gotoValidationError(this.validationErrors_[this.selectedValidationError_]) : this.lineNumberToGoTo_ !== null ? (this.aceView_.gotoLine(this.lineNumberToGoTo_), this.lineNumberToGoTo_ = null) : this.highlightedS9IDInCode_ ? this.aceView_.gotoElementContents(this.highlightedS9IDInCode_, this.highlightedPosition_) : this.highlightBodyElement_ && this.gotoBodyElement()
        },
        resize: function() {
            this.aceView_.resize()
        },
        enable: function() {
            this.aceView_.enable()
        },
        disable: function() {
            this.aceView_.disable()
        },
        open: function(a, b) {
            if (this.codePane_.offsetWidth === 0) this.open_ = !0,
            this.render(),
            this.setPaneWidth_(this.originalWidth_, a,
            function() {
                this.aceView_.refresh();
                b && b()
            }.bind(this))
        },
        close: function(a, b) {
            var c = this.codePane_.offsetWidth;
            if (c !== 0) this.originalWidth_ = c,
            this.open_ = !1,
            this.render(),
            this.setPaneWidth_(0, a,
            function() {
                b && b()
            })
        },
        isOpen: function() {
            return this.open_
        },
        getAceView: function() {
            return this.aceView_
        },
        setPaneWidth_: function(a, b, c) {
            if (this.animation_) this.animation_.cancel(),
            this.animation_ = null;
            if (b) {
                var d = this.codePane_.offsetWidth || 0;
                this.codePane_.classList.remove("closed");
                this.animation_ = new Animation({
                    duration: 250,
                    easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                    tick: function(b) {
                        this.codePane_.style.width = d + (a - d) * b + "px"
                    }.bind(this),
                    onComplete: function() {
                        this.codePane_.style.width = a + "px";
                        a === 0 && this.codePane_.classList.add("closed");
                        this.animation_ = null;
                        c()
                    }.bind(this)
                })
            } else this.codePane_.style.width = a + "px",
            this.codePane_.classList.toggle("closed", a === 0),
            this.win_.setTimeout(c, 1)
        },
        remove: function() {
            if (this.animation_) this.animation_.cancel(),
            this.animation_ = null;
            this.aceView_.off("change", this.codeChangeEvent_, this);
            this.aceView_.off("focus", this.codeFocusEvent_, this);
            this.aceView_.remove();
            this.resizeHandleView_.remove();
            this.codePane_.style.width = null;
            this.open_ = !1;
            HTMLCodeEditingView.__super__.remove.apply(this, arguments)
        },
        setValue: function(a, b, c) {
            b = !!b; (c !== void 0 ? c: 1) && this.aceView_.setValue(a, !0);
            b || this.trigger("change")
        },
        getValue: function() {
            return this.aceView_.getValue()
        },
        flush: function() {
            this.aceView_.flush()
        },
        goInsideElement: function(a) {
            this.highlightedPosition_ = this.highlightedS9IDInCode_ = null;
            this.highlightBodyElement_ = !1;
            if (a) this.aceView_.gotoElementContents(a, "inside"),
            this.highlightedS9IDInCode_ = a,
            this.highlightedPosition_ = "inside"
        },
        gotoElement: function(a) {
            this.highlightedPosition_ = this.highlightedS9IDInCode_ = null;
            this.highlightBodyElement_ = !1;
            if (a) this.aceView_.gotoElementContents(a, "before"),
            this.highlightedS9IDInCode_ = a,
            this.highlightedPosition_ = "before"
        },
        gotoBodyElement: function() {
            this.highlightedS9IDInCode_ = null;
            this.highlightedPosition_ = "before";
            var a = this.aceView_.getValue();
            if (/<body/.test(a) !== !1) a = this.aceView_.getStringEndCoordinates(a.substring(0, a.indexOf("<body"))),
            this.aceView_.gotoLine(a.row, a.col),
            this.highlightBodyElement_ = !0
        },
        getScrollPosition: function() {
            return this.aceView_.getScrollPosition()
        },
        setScrollPosition: function(a) {
            this.aceView_.setScrollPosition(a)
        },
        hasValidationErrors: function() {
            return this.validationErrors_.length !== 0
        },
        clearValidationErrors: function() {
            this.setValidationErrors([])
        },
        showValidationErrors: function(a) {
            a = a || {};
            this.hasValidationErrors() && a.jumpToLine && this.aceView_.gotoValidationError(this.validationErrors_[0])
        },
        setValidationErrors: function(a) {
            this.validationErrors_ = a = a.filter(function(a) {
                return ! a.filePath || a.filePath === this.model.get("filePath")
            },
            this);
            this.render()
        },
        logValidationErrors: function() {
            if (this.hasValidationErrors()) {
                var a = this.validationErrors_.map(function(a) {
                    return a.message
                });
                ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.CONTENT_VALIDATION_ERROR,
                    eventInfo: {
                        errorType: "xml",
                        repoName: this.model.get("project").get("shortName"),
                        numberOfValidationErrors: a.length,
                        validationErrorMsg: a.join(",")
                    }
                })
            }
        },
        foldS9IDs: function() {
            this.aceView_.foldS9IDs()
        },
        focus: function() {
            this.aceView_.focus()
        },
        codeChangeEvent_: function() {
            this.highlightedPosition_ = this.highlightedS9IDInCode_ = null;
            this.highlightBodyElement_ = !1;
            var a = this.aceView_.getValue();
            a.trim() || (a = (new HTMLSanitizer).importHTML(HTMLCodeEditingView.EMPTY_DOCUMENT_TEMPLATE_), this.aceView_.setValue(a, !0));
            this.setValue(a, !1, !1)
        },
        codeFocusEvent_: function() {
            this.trigger("focus")
        },
        onBeforePaste_: function(a) {
            return (new HTMLSanitizer).importHTML(a, {
                reparentNakedPhrasingContent: !1,
                rewritePaths: !1
            })
        }
    });
    HTMLCodeEditingView.EMPTY_DOCUMENT_TEMPLATE_ = "<html><head></head><body></body></html>";
    window.HTMLEditingUndoManager = BaseClass.extend({
        codeEditingView_: null,
        richTextEditingView_: null,
        htmlDocumentMetadataView_: null,
        aceUndoManager_: null,
        restoreOnUndo_: null,
        restoreOnRedo_: null,
        htmlMetadataFocusInfo_: null,
        initialize: function(a) {
            a = a || {};
            this.codeEditingView_ = a.codeEditingView;
            this.richTextEditingView_ = a.richTextEditingView;
            this.htmlDocumentMetadataView_ = a.htmlDocumentMetadataView;
            this.win_ = a.window || window;
            a = this.codeEditingView_.getAceView().getAceEditor().getSession();
            this.aceUndoManager_ = a.getUndoManager();
            a.setUndoManager(this);
            this.richTextEditingView_.on("change", this.richTextChangeEvent_, this);
            this.listenTo(this.htmlDocumentMetadataView_, "focus", this.htmlMetadataFocusEvent_)
        },
        remove: function() {
            this.richTextEditingView_.off("change", this.richTextChangeEvent_, this);
            this.codeEditingView_.getAceView().getAceEditor().getSession().setUndoManager(this.aceUndoManager_);
            HTMLEditingUndoManager.__super__.remove.call(this)
        },
        undo: function(a) {
            var a = a ||
            function() {},
            b = null;
            if (this.hasUndo()) {
                var c = this.codeEditingView_.getAceView(),
                d = this.getUndoableChange_(),
                e = d && d.editSource || HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR,
                f = d && d.richTextDetails || {},
                g = d && f ? f.restoreOnUndo: null;
                f.fromUndoRedo = !0;
                e === HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR && this.focusAce_();
                var h = function() {
                    this.richTextEditingView_.off("domUpdated", h);
                    e === HTMLEditingUndoManager.EDIT_SOURCE_.RICH_TEXT_EDITOR && g && this.richTextEditingView_.setSelection(g);
                    _.delay(function() {
                        a(f)
                    })
                }.bind(this);
                this.richTextEditingView_.on("domUpdated", h);
                b = this.aceUndoManager_.undo(e !== HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR);
                this.codeEditingView_.foldS9IDs();
                e === HTMLEditingUndoManager.EDIT_SOURCE_.RICH_TEXT_EDITOR ? g && (this.gotoElementInCode_(g), this.htmlDocumentMetadataView_.blur(), c.isFocused() && c.blur()) : e === HTMLEditingUndoManager.EDIT_SOURCE_.HTML_METADATA_EDITOR ? (c.blur(), this.htmlDocumentMetadataView_.focus(d.htmlMetadataFocusInfo)) : e === HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR && (this.htmlDocumentMetadataView_.blur(), c.isFocused() || c.focus());
                this.trigger("change")
            }
            return b
        },
        redo: function(a) {
            var a = a ||
            function() {},
            b = null;
            if (this.hasRedo()) {
                var c = this.codeEditingView_.getAceView(),
                d = this.getRedoableChange_(),
                e = d && d.editSource || HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR,
                f = d && d.richTextDetails || {},
                g = d && f ? f.restoreOnRedo: null;
                f.fromUndoRedo = !0;
                e === HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR && this.focusAce_();
                var h = function() {
                    this.richTextEditingView_.off("domUpdated", h);
                    e === HTMLEditingUndoManager.EDIT_SOURCE_.RICH_TEXT_EDITOR && g && this.richTextEditingView_.setSelection(g);
                    _.delay(function() {
                        a(f)
                    })
                }.bind(this);
                this.richTextEditingView_.on("domUpdated", h);
                b = this.aceUndoManager_.redo(e !== HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR);
                this.codeEditingView_.foldS9IDs();
                e === HTMLEditingUndoManager.EDIT_SOURCE_.RICH_TEXT_EDITOR ? g && (this.gotoElementInCode_(g), this.htmlDocumentMetadataView_.blur(), c.isFocused() && c.blur()) : e === HTMLEditingUndoManager.EDIT_SOURCE_.HTML_METADATA_EDITOR ? (c.blur(), this.htmlDocumentMetadataView_.focus(d.htmlMetadataFocusInfo)) : e === HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR && (this.htmlDocumentMetadataView_.blur(), c.isFocused() || c.focus());
                this.trigger("change")
            }
            return b
        },
        execute: function(a) {
            var b = a.args[0];
            if (this.isEntryFromUserChange_(b)) b = this.filterFolds_(b),
            a.args[0] = b,
            this.htmlMetadataFocusInfo_ ? (b.editSource = HTMLEditingUndoManager.EDIT_SOURCE_.HTML_METADATA_EDITOR, b.htmlMetadataFocusInfo = this.htmlMetadataFocusInfo_) : this.restoreOnUndo_ || this.restoreOnRedo_ ? (b.editSource = HTMLEditingUndoManager.EDIT_SOURCE_.RICH_TEXT_EDITOR, b.richTextDetails = {
                restoreOnUndo: this.restoreOnUndo_,
                restoreOnRedo: this.restoreOnRedo_
            }) : b.editSource = HTMLEditingUndoManager.EDIT_SOURCE_.CODE_EDITOR;
            this.restoreOnUndo_ = this.restoreOnRedo_;
            this.htmlMetadataFocusInfo_ = this.restoreOnRedo_ = null;
            this.aceUndoManager_.execute(a);
            this.trigger("change")
        },
        reset: function() {
            this.htmlMetadataFocusInfo_ = this.restoreOnRedo_ = this.restoreOnUndo_ = null;
            this.aceUndoManager_.reset()
        },
        hasUndo: function() {
            return this.aceUndoManager_.hasUndo()
        },
        hasRedo: function() {
            return this.aceUndoManager_.hasRedo()
        },
        getUndoableChange_: function() {
            var a = this.aceUndoManager_.$undoStack;
            if (!a.length) return null;
            a = a[a.length - 1];
            return this.isEntryFromUserChange_(a) ? a: null
        },
        getRedoableChange_: function() {
            var a = this.aceUndoManager_.$redoStack;
            if (!a.length) return null;
            a = a[a.length - 1];
            return this.isEntryFromUserChange_(a) ? a: null
        },
        isEntryFromUserChange_: function(a) {
            a = a && a.length ? a: [];
            return a.some(function(a) {
                return a.group === HTMLEditingUndoManager.ACE_DOCUMENT_CHANGE_
            })
        },
        richTextChangeEvent_: function(a) {
            this.restoreOnUndo_ = a.rangeBeforeChange;
            this.restoreOnRedo_ = a.rangeAfterChange
        },
        htmlMetadataFocusEvent_: function(a) {
            this.htmlMetadataFocusInfo_ = a
        },
        filterFolds_: function(a) {
            return a.filter(function(a) {
                return a.group !== "fold"
            })
        },
        focusAce_: function() {
            this.codeEditingView_.isOpen() || this.codeEditingView_.open(!1);
            this.codeEditingView_.getAceView().getAceEditor().focus()
        },
        gotoElementInCode_: function(a) {
            var b = a.getNearbyS9ID();
            b && a instanceof RestorableRange ? this.codeEditingView_.goInsideElement(b) : b && a instanceof PersistentNodeReference && this.codeEditingView_.gotoElement(b)
        }
    });
    HTMLEditingUndoManager.ACE_DOCUMENT_CHANGE_ = "doc";
    HTMLEditingUndoManager.EDIT_SOURCE_ = {
        RICH_TEXT_EDITOR: "richTextEditor",
        HTML_METADATA_EDITOR: "htmlMetadataEditor",
        CODE_EDITOR: "codeEditor"
    };
    window.HTMLEditingView = Backbone.View.extend({
        model: null,
        codeEditingView_: null,
        richTextEditingView_: null,
        contentView_: null,
        contentToolbarView_: null,
        htmlDocumentMetadataView_: null,
        codeHeader_: null,
        codeOpenButton_: null,
        patternPickerButton_: null,
        patternPicker_: null,
        codePaneDisabled_: !1,
        codePane_: null,
        scrollableArea_: null,
        undoManager_: null,
        lastEditorUsed_: null,
        rteTypingPerformanceRecorded_: !1,
        rteTypingPerformanceTimingStarted_: !1,
        codeTypingPerformanceRecorded_: !1,
        codeTypingPerformanceTimingStarted_: !1,
        previousCodeScrollPosition_: null,
        initialize: function(a) {
            a = a || {};
            this.contentView_ = a.contentView;
            this.contentToolbarView_ = a.contentToolbarView;
            this.scrollableArea_ = a.scrollableArea;
            this.codePane_ = a.codePane;
            this.openCodePaneBound_ = this.openCodePane_.bind(this);
            this.closeCodePaneBound_ = this.closeCodePane_.bind(this);
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            var b = XMLUtilities.parseDocument(this.model.get("content"), XMLUtilities.DOCUMENT_TYPE.XHTML);
            PrettyPrinter.prettify(b);
            b = XMLUtilities.serializeDocument(b);
            this.model.set("content", StringUtils.specialCharactersToEntities(b));
            this.richTextEditingView_ = new RichTextEditingView({
                model: this.model,
                contentView: this.contentView_,
                scrollableArea: this.scrollableArea_,
                contentPane: a.contentPane,
                contentToolbarView: this.contentToolbarView_,
                htmlEditingView: this
            });
            this.listenTo(this.richTextEditingView_, "focus", this.richTextFocusEvent_);
            this.listenTo(this.richTextEditingView_, "change", this.richTextChangeEvent_);
            this.listenTo(this.richTextEditingView_, "selection", this.richTextSelectionEvent_);
            this.listenTo(this.richTextEditingView_, "modalDialog", this.richTextModalDialog_);
            this.listenTo(this.richTextEditingView_, "keyup", this.richTextKeyUpEvent_);
            this.listenTo(this.richTextEditingView_, "patternDragged", this.patternDraggedEvent_);
            this.listenTo(this.richTextEditingView_, "patternMoved", this.patternMovedEvent_);
            this.listenTo(this.richTextEditingView_, "patternDropped", this.patternDroppedEvent_);
            this.renderCodePane_();
            this.addPatternPickerButton_();
            this.htmlDocumentMetadataView_ = new HTMLDocumentMetadataView({
                model: this.model,
                parentElem: a.contentPane,
                editingView: this,
                isEditable: !0
            });
            this.listenTo(this.htmlDocumentMetadataView_, "focus", this.htmlDocumentMetadataFocused_);
            this.listenTo(this.htmlDocumentMetadataView_, "change", this.htmlDocumentMetadataChanged_);
            this.undoManager_ = new HTMLEditingUndoManager({
                codeEditingView: this.codeEditingView_,
                richTextEditingView: this.richTextEditingView_,
                htmlDocumentMetadataView: this.htmlDocumentMetadataView_
            });
            a = app.getSaveHandler();
            this.listenTo(a, "save_completed", this.saveCompletedEvent_);
            this.listenTo(a, "save_failed", this.saveFailedEvent_);
            this.listenTo(a, "save", this.saveEvent_);
            this.listenTo(a, "save_successful", this.saveSuccessfulEvent_);
            this.listenTo(this.contentView_, "loaded", this.onContentViewLoad_)
        },
        render: function() {
            this.isReadOnly_() ? this.disable() : this.enable();
            this.model.isOnHead() ? this.addPatternPicker_() : this.removePatternPicker_();
            this.richTextEditingView_.render();
            this.htmlDocumentMetadataView_.render()
        },
        remove: function() {
            this.stopListening(this.contentView_);
            this.undoManager_.remove();
            this.removeCodeButton_();
            this.removePatternPickerButton_();
            this.removeCodePane_();
            this.stopListening(this.richTextEditingView_);
            this.richTextEditingView_.remove();
            this.htmlDocumentMetadataView_.remove();
            this.removePatternPicker_();
            HTMLEditingView.__super__.remove.apply(this, arguments)
        },
        enable: function() {
            this.codePaneDisabled_ = !1;
            this.codeEditingView_.enable();
            this.richTextEditingView_.enable()
        },
        disable: function(a) {
            a = a || null;
            this.codePaneDisabled_ = !0;
            this.codeEditingView_.disable();
            this.richTextEditingView_.disable(a)
        },
        canChangeModes: function() {
            this.flushLastEditor_();
            return this.richTextEditingView_.canChangeModes()
        },
        setValidationErrors: function(a) {
            this.codeEditingView_.isOpen() || this.openCodePane_();
            this.codeEditingView_.setValidationErrors(a);
            this.renderHeader_()
        },
        clearValidationErrors: function() {
            this.codeEditingView_.isOpen() && (this.codeEditingView_.clearValidationErrors(), this.renderHeader_())
        },
        getRichTextEditingView: function() {
            return this.richTextEditingView_
        },
        getHTMLCodeEditingView: function() {
            return this.codeEditingView_
        },
        getUndoManager: function() {
            return this.undoManager_
        },
        startRecordingTypingTime_: function(a) {
            var b = this.win_.location.href,
            c = app.getProjectModel().get("shortName");
            if (a === HTMLEditingView.RECORD.RTE_TYPING_) {
                if (!this.rteTypingPerformanceRecorded_ && !this.rteTypingPerformanceTimingStarted_) this.rteTypingPerformanceTimingStarted_ = !0,
                ia("timing", "start", Analytics.TIMING_TAGS.READER_CARD_RTE_TYPE, {
                    pageURL: b,
                    shortName: c
                })
            } else if (a === HTMLEditingView.RECORD.CODE_TYPING_ && !this.codeTypingPerformanceRecorded_ && !this.codeTypingPerformanceTimingStarted_) this.codeTypingPerformanceTimingStarted_ = !0,
            ia("timing", "start", Analytics.TIMING_TAGS.READER_CARD_CODE_TYPE, {
                pageURL: b,
                shortName: c
            })
        },
        stopRecordingTypingTime_: function(a, b) {
            if (a === HTMLEditingView.RECORD.RTE_TYPING_) {
                if (!this.rteTypingPerformanceRecorded_ && this.rteTypingPerformanceTimingStarted_) this.rteTypingPerformanceRecorded_ = !0,
                ia("timing", "end", Analytics.TIMING_TAGS.READER_CARD_RTE_TYPE, b)
            } else if (a === HTMLEditingView.RECORD.CODE_TYPING_ && !this.codeTypingPerformanceRecorded_ && this.codeTypingPerformanceTimingStarted_) this.codeTypingPerformanceRecorded_ = !0,
            ia("timing", "end", Analytics.TIMING_TAGS.READER_CARD_CODE_TYPE, b)
        },
        getTemplateData_: function() {
            return {
                showCloseButton: !0,
                closeDisabled: this.codeEditingView_ && this.codeEditingView_.isOpen() && this.codeEditingView_.hasValidationErrors(),
                documentType: this.model.get("documentType"),
                documentTypeName: "HTML"
            }
        },
        isReadOnly_: function() {
            return this.richTextEditingView_.hasModalDialog() || !this.model.isOnHead()
        },
        renderHeader_: function() {
            this.removeHeader_();
            this.codeHeader_ = Templates["project/document/codeModeHeader"](this.getTemplateData_());
            this.codePane_.insertBefore(this.codeHeader_, this.codePane_.firstChild || null);
            var a = this.codeHeader_.querySelector(".close-button");
            a && a.addEventListener("click", this.closeCodePaneBound_)
        },
        removeHeader_: function() {
            if (this.codeHeader_) {
                var a = this.codeHeader_.querySelector(".close-button");
                a && a.removeEventListener("click", this.closeCodePaneBound_);
                DOMUtils.detachElement(this.codeHeader_);
                this.codeHeader_ = null
            }
        },
        addPatternPicker_: function() {
            this.removePatternPicker_();
            var a = this.doc_.querySelector("#pattern-drawer");
            this.patternPicker_ = new PatternPickerView({
                model: app.getProjectModel().get("patternSnippets"),
                parentPane: a
            });
            this.patternPicker_.render()
        },
        removePatternPicker_: function() {
            if (this.patternPicker_) this.patternPicker_.remove(),
            this.patternPicker_ = null
        },
        renderCodePane_: function() {
            this.renderHeader_();
            var a = !!app.getCurrentUser().get("prefs").get(HTMLEditingView.OPEN_CODE_DEFAULT_) || !!app.getRouter().getLineNumber();
            this.codeEditingView_ = new HTMLCodeEditingView({
                model: this.model,
                codePane: this.codePane_,
                open: a
            });
            this.codeEditingView_.render();
            this.listenTo(this.codeEditingView_, "focus", this.codeFocusEvent_);
            this.listenTo(this.codeEditingView_, "change", this.codeChangeEvent_);
            a ? this.doc_.querySelector("#pattern-drawer").classList.add("has-code-pane") : this.addCodeButton_();
            this.codePaneDisabled_ && this.codeEditingView_.disable()
        },
        removeCodePane_: function() {
            if (this.codeEditingView_) this.doc_.querySelector("#pattern-drawer").classList.remove("has-code-pane"),
            this.removeHeader_(),
            this.stopListening(this.codeEditingView_),
            this.codeEditingView_.remove(),
            this.codeEditingView_ = null
        },
        openCodePane_: function() {
            this.codeEditingView_ && !this.codeEditingView_.isOpen() && (app.getCurrentUser().get("prefs").set(HTMLEditingView.OPEN_CODE_DEFAULT_, !0), this.removeCodeButton_(), this.removePatternPickerButton_(), this.doc_.querySelector("#pattern-drawer").classList.add("has-code-pane"), this.codeEditingView_.open(!0,
            function() {
                app.trigger("contentPaneResized")
            }))
        },
        closeCodePane_: function() {
            this.codeEditingView_ && this.codeEditingView_.isOpen() && (app.getCurrentUser().get("prefs").set(HTMLEditingView.OPEN_CODE_DEFAULT_, !1), this.doc_.querySelector("#pattern-drawer").classList.remove("has-code-pane"), this.codeEditingView_.close(!0,
            function() {
                this.addCodeButton_();
                this.addPatternPickerButton_();
                app.trigger("contentPaneResized")
            }.bind(this)))
        },
        addCodeButton_: function() {
            if (!this.codeOpenButton_) this.codeOpenButton_ = this.doc_.createElement("button"),
            this.contentToolbarView_.getCodeModeControlArea().appendChild(this.codeOpenButton_),
            this.codeOpenButton_.addEventListener("click", this.openCodePaneBound_)
        },
        removeCodeButton_: function() {
            if (this.codeOpenButton_) this.codeOpenButton_.removeEventListener("click", this.openCodePaneBound_),
            DOMUtils.detachElement(this.codeOpenButton_),
            this.codeOpenButton_ = null
        },
        addPatternPickerButton_: function() {
            if (!this.patternPickerButton_) this.patternPickerButton_ = this.doc_.createElement("button"),
            this.contentToolbarView_.getPatternPickerControlArea().appendChild(this.patternPickerButton_)
        },
        removePatternPickerButton_: function() {
            if (this.patternPickerButton_) DOMUtils.detachElement(this.patternPickerButton_),
            this.patternPickerButton_ = null
        },
        htmlDocumentMetadataFocused_: function() {
            this.lastEditorUsed_ = this.htmlDocumentMetadataView_
        },
        htmlDocumentMetadataChanged_: function() {
            var a = this.htmlDocumentMetadataView_.getValue();
            this.setHTMLContent_(a);
            this.richTextEditingView_.setDocumentMetadataValues(this.htmlDocumentMetadataView_.getDocumentMetadataValues(), a, !0);
            this.codeEditingView_ && this.codeEditingView_.setValue(a, !0)
        },
        codeFocusEvent_: function() {
            this.lastEditorUsed_ = this.codeEditingView_
        },
        codeChangeEvent_: function() {
            this.startRecordingTypingTime_(HTMLEditingView.RECORD.CODE_TYPING_);
            var a = this.codeEditingView_.getValue(),
            b = this.setHTMLContent_(a);
            b ? this.setValidationErrors(b) : this.clearValidationErrors();
            this.richTextEditingView_.setValue(a, !0,
            function() {
                this.codeEditingView_.hasValidationErrors() ? this.richTextEditingView_.disable(HTMLEditingView.CODE_VALIDATION_ERRORS_MESSAGE_) : this.richTextEditingView_.enable();
                this.stopRecordingTypingTime_(HTMLEditingView.RECORD.CODE_TYPING_, {
                    docLength: a.length
                })
            }.bind(this));
            this.htmlDocumentMetadataView_.setValue(a, !0)
        },
        richTextFocusEvent_: function() {
            this.lastEditorUsed_ = this.richTextEditingView_
        },
        richTextChangeEvent_: function(a) {
            if (!a.fromUndoRedo) {
                var a = this.richTextEditingView_.getValue(),
                b = this.setHTMLContent_(a);
                this.codeEditingView_.setValue(a, !0);
                this.htmlDocumentMetadataView_.setValue(a, !0);
                this.stopRecordingTypingTime_(HTMLEditingView.RECORD.RTE_TYPING_, {
                    docLength: a.length
                });
                b ? this.setValidationErrors(b) : this.clearValidationErrors()
            }
        },
        richTextKeyUpEvent_: function() {
            this.startRecordingTypingTime_(HTMLEditingView.RECORD.RTE_TYPING_)
        },
        patternDraggedEvent_: function() {
            this.previousCodeScrollPosition_ = this.codeEditingView_.getScrollPosition();
            this.contentView_.getIframe().classList.add(HTMLEditingView.DRAG_TARGET_HIGHLIGHT_CLASS);
            this.codeEditingView_.disable()
        },
        patternMovedEvent_: function(a) {
            a && a.nearestS9ID && this.codeEditingView_.goInsideElement(a.nearestS9ID)
        },
        patternDroppedEvent_: function(a) { ! a && this.previousCodeScrollPosition_ && this.codeEditingView_.setScrollPosition(this.previousCodeScrollPosition_);
            this.previousCodeScrollPosition_ = null;
            this.contentView_.getIframe().classList.remove(HTMLEditingView.DRAG_TARGET_HIGHLIGHT_CLASS);
            this.codeEditingView_.enable()
        },
        setHTMLContent_: function(a) {
            if (a === this.model.get("content")) return null;
            var b = [];
            this.model.set({
                content: a
            },
            {
                error: function(a, d) {
                    b.push(d)
                }
            });
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model);
            return b.length > 0 ? b: null
        },
        richTextSelectionEvent_: function(a, b) {
            if (a) b ? this.codeEditingView_.gotoElement(a) : this.codeEditingView_.goInsideElement(a);
            else if (!a && b) {
                var c = this.richTextEditingView_.getWholeNodeSelected();
                c && c.tagName.toLowerCase() === "body" && this.codeEditingView_.gotoBodyElement()
            }
        },
        richTextModalDialog_: function(a) {
            a ? this.disable() : this.enable()
        },
        flushLastEditor_: function() {
            this.lastEditorUsed_ && this.lastEditorUsed_.flush()
        },
        saveSuccessfulEvent_: function(a) {
            a === this.model && (this.lastEditorUsed_ instanceof HTMLCodeEditingView ? this.lastEditorUsed_.focus() : this.lastEditorUsed_ instanceof RichTextEditingView && this.richTextEditingView_.setValue(a.get("content"), !0,
            function() {
                this.lastEditorUsed_.focus()
            }.bind(this)))
        },
        saveFailedEvent_: function() {
            this.enable();
            this.codeEditingView_.hasValidationErrors() && (this.richTextEditingView_.disable(HTMLEditingView.CODE_VALIDATION_ERRORS_MESSAGE_), app.getMessageView().error(HTMLEditingView.SAVE_VALIDATION_ERRORS_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME), this.codeEditingView_.showValidationErrors({
                jumpToLine: !0
            }), this.codeEditingView_.logValidationErrors())
        },
        saveCompletedEvent_: function() {
            this.enable()
        },
        saveEvent_: function(a) {
            this.flushLastEditor_();
            this.disable();
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.SAVE_CODE_MODE,
                eventInfo: {
                    shortName: this.model.get("project").get("shortName"),
                    isOpen: this.codeEditingView_.isOpen(),
                    isLastEditorUsed: this.lastEditorUsed_ instanceof HTMLCodeEditingView,
                    hasValidationErrors: this.codeEditingView_.hasValidationErrors()
                }
            });
            this.codeEditingView_.hasValidationErrors() && (a.preventDefault(), this.enable(), this.richTextEditingView_.disable(HTMLEditingView.CODE_VALIDATION_ERRORS_MESSAGE_), app.getMessageView().error(HTMLEditingView.SAVE_VALIDATION_ERRORS_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME), this.codeEditingView_.showValidationErrors({
                jumpToLine: !0
            }), this.codeEditingView_.logValidationErrors())
        },
        onContentViewLoad_: function() {
            this.codeHeader_ && this.codeHeader_.classList.add("content-loaded");
            this.isReadOnly_() && this.richTextEditingView_.disable()
        }
    });
    HTMLEditingView.RECORD = {
        RTE_TYPING_: "rte",
        CODE_TYPING_: "code"
    };
    HTMLEditingView.SAVE_VALIDATION_ERRORS_MESSAGE_ = "There were validation errors while saving; please correct them in code view";
    HTMLEditingView.CODE_VALIDATION_ERRORS_MESSAGE_ = "There are validation errors; please correct them in code view";
    HTMLEditingView.OPEN_CODE_DEFAULT_ = "htmlEditingShowCode";
    HTMLEditingView.DRAG_TARGET_HIGHLIGHT_CLASS = "drag-target-highlight";
    window.RichTextClipboardHandler = BaseClass.extend({
        richTextEditingView_: null,
        contentView_: null,
        pasteWithoutFormatting_: !1,
        contentDoc_: null,
        contentWin_: null,
        initialize: function(a) {
            a = a || {};
            this.richTextEditingView_ = a.richTextEditingView;
            this.contentView_ = a.contentView;
            this.contentDoc_ = this.contentView_.getIframeDocument();
            this.contentWin_ = this.contentView_.getIframeWindow();
            this.cutListener_ = this.cutListener_.bind(this);
            this.copyListener_ = this.copyListener_.bind(this);
            this.pasteListener_ = this.pasteListener_.bind(this);
            this.keyboardListener_ = this.keyboardListener_.bind(this);
            this.contentWin_.addEventListener("cut", this.cutListener_);
            this.contentWin_.addEventListener("copy", this.copyListener_);
            this.contentWin_.addEventListener("paste", this.pasteListener_);
            this.contentWin_.addEventListener("keydown", this.keyboardListener_)
        },
        remove: function() {
            this.contentWin_.removeEventListener("cut", this.cutListener_);
            this.contentWin_.removeEventListener("copy", this.copyListener_);
            this.contentWin_.removeEventListener("paste", this.pasteListener_);
            this.contentWin_.removeEventListener("keydown", this.keyboardListener_);
            RichTextClipboardHandler.__super__.remove.call(this)
        },
        cutListener_: function(a) {
            a.preventDefault();
            var b = this.richTextEditingView_.getValue(!0);
            if (b) {
                b += RichTextClipboardHandler.HTML_FROM_HABITAT_CUT_;
                a.clipboardData.setData("text/html", b);
                a.clipboardData.setData("text/plain", this.htmlToPlainText_(b));
                var c = this.richTextEditingView_.getSelection();
                this.removeCutContent_();
                _.defer(function() {
                    var a = this.richTextEditingView_.getSelection();
                    this.richTextEditingView_.setSelection(a, !1);
                    this.richTextEditingView_.triggerChange({
                        rangeBeforeChange: c,
                        rangeAfterChange: a
                    })
                }.bind(this))
            }
        },
        copyListener_: function(a) {
            a.preventDefault();
            var b = this.richTextEditingView_.getValue(!0);
            b += RichTextClipboardHandler.HTML_FROM_HABITAT_COPY_;
            a.clipboardData.setData("text/html", b);
            a.clipboardData.setData("text/plain", this.htmlToPlainText_(b))
        },
        pasteListener_: function(a) {
            a.preventDefault();
            if (!this.richTextEditingView_.isWholeNodeSelected()) {
                app.getMessageView().show("Pasting...");
                var b = this.richTextEditingView_.getSelection(),
                c = a.clipboardData.getData("text/html"),
                d = a.clipboardData.getData("text/plain");
                c && (c = c.replace(/^<meta charset=['"]utf-8['"]>/, ""));
                d && (d = d.replace(/^<meta charset=['"]utf-8['"]>/, ""));
                _.defer(function() {
                    var a = DOMUtils.userHasSelectedAll(this.contentDoc_);
                    this.pasteWithoutFormatting_ ? (this.pasteWithoutFormatting_ = !1, c = d) : this.fromHabitatCopy_(c) ? (c = this.sanitizeS9IDs_(c, !0), c = c.replace(RichTextClipboardHandler.HTML_FROM_HABITAT_COPY_, "")) : this.fromHabitatCut_(c) ? (c = this.sanitizeS9IDs_(c, !1), c = c.replace(RichTextClipboardHandler.HTML_FROM_HABITAT_CUT_, "")) : (c = this.processPastedHTML_(c, a), !c && d && (c = this.processPastedText_(d, a)), c && (c = this.showPlaceholderImage_(c)));
                    c && (this.richTextEditingView_.silenceChangeEvents(!0), a ? (this.contentView_.replaceBodyNode(c, !0), DOMUtils.moveCursorToEndOfNode(this.contentDoc_.body)) : (c = this.removeSingleParagraphWrap_(c), this.contentView_.insertHTMLAtCursor(c)));
                    _.defer(function() {
                        this.richTextEditingView_.silenceChangeEvents(!1);
                        var a = this.richTextEditingView_.getSelection();
                        this.richTextEditingView_.setSelection(a, !1);
                        this.richTextEditingView_.triggerChange({
                            rangeBeforeChange: b,
                            rangeAfterChange: a
                        });
                        app.getMessageView().hide("Pasting...")
                    }.bind(this))
                }.bind(this))
            }
        },
        keyboardListener_: function(a) {
            if (a.shiftKey && a.altKey && a.metaKey && a.keyCode === 86) this.pasteWithoutFormatting_ = !0
        },
        sanitizeS9IDs_: function(a, b) {
            return XMLUtilities.modifyS9IDs(a,
            function(a, d, e) {
                var f;
                e ? f = e: d && UUID.isUUID(d) && (f = d);
                if (f && (b || XMLUtilities.getNodeByS9ID(this.contentDoc_, f))) f = UUID();
                return f
            }.bind(this))
        },
        fromHabitatCopy_: function(a) {
            return ! a ? !1 : a.indexOf(RichTextClipboardHandler.HTML_FROM_HABITAT_COPY_) !== -1
        },
        fromHabitatCut_: function(a) {
            return ! a ? !1 : a.indexOf(RichTextClipboardHandler.HTML_FROM_HABITAT_CUT_) !== -1
        },
        showPlaceholderImage_: function(a) {
            return a = a.replace(/<img([^>]*)src="([^"]*)"/g,
            function(a, c, d) {
                FileUtils.isURL(d) || (d = "");
                return "<img" + c + 'src="' + d + '"'
            })
        },
        removeSingleParagraphWrap_: function(a) {
            var b = XMLUtilities.parseFragment(a, XMLUtilities.DOCUMENT_TYPE.HTML);
            b.childNodes.filter(function(a) {
                return ! DOMUtils.isWhitespaceNode(a)
            }).length === 1 && b.childElementCount === 1 && b.children[0].tagName.toLowerCase() === "p" && (a = XMLUtilities.getInnerXHTML(b.children[0]));
            return a
        },
        processPastedHTML_: function(a, b) {
            if (!a) return null;
            try {
                a = (new HTMLSanitizer).importHTML(a, {
                    whitelist: !0,
                    rewritePaths: !0,
                    reparentNakedPhrasingContent: b,
                    removeClassesAndIDs: !0
                }),
                a = this.stripAllOutsideBody_(a)
            } catch(c) {
                return console.warn("Error sanitizing HTML: ", c),
                null
            }
            return a
        },
        processPastedText_: function(a, b) {
            var c = (new Markdown).toHTML(a),
            c = (new HTMLSanitizer).importHTML(c, {
                whitelist: !0,
                rewritePaths: !0,
                reparentNakedPhrasingContent: b
            });
            return c = this.stripAllOutsideBody_(c)
        },
        stripAllOutsideBody_: function(a) {
            if (!a || !a.trim() || a.indexOf("<body") === -1) return a; (a = a.match(/<body[^>]*?>([\s\S]*?)<\/body>/)[1]) && (a = a.trim());
            return a
        },
        htmlToPlainText_: function(a) {
            a = a.replace(/<[\s\S]*?>/g, "");
            return a = a.replace(/\s*\n\s*/g, " ")
        },
        removeCutContent_: function() {
            this.richTextEditingView_.isWholeNodeSelected() ? this.richTextEditingView_.deleteWholeSelectedNode(!1) : DOMUtils.userHasSelectedAll(this.contentDoc_) ? Hacks.deleteSelectAll(this.contentView_) : this.contentDoc_.execCommand("delete")
        }
    });
    RichTextClipboardHandler.HTML_FROM_HABITAT_CUT_ = "<\!--Markup Cut from Habitat--\>";
    RichTextClipboardHandler.HTML_FROM_HABITAT_COPY_ = "<\!--Markup Copied from Habitat--\>";
    window.RichTextEditingView = Backbone.View.extend({
        model: null,
        target_: null,
        contentDoc_: null,
        contentWin_: null,
        hasModalDialog_: !1,
        contentView_: null,
        htmlEditingView_: null,
        scrollableArea_: null,
        contentPane_: null,
        contentToolbarView_: null,
        elementInspectorView_: null,
        overlay_: null,
        contentEditable_: null,
        listIndentationHandler_: null,
        domWatchers_: null,
        htmlPreBody_: "",
        htmlPostBody_: "",
        enabled_: !0,
        silent_: !1,
        processIframeLoaded_: !1,
        breadcrumbsView_: null,
        richTextToolbarView_: null,
        linkEditingPopupView_: null,
        patternInsertionTransformers_: null,
        widgetEditingSlideover_: null,
        clipboardHandler_: null,
        widgetAPI_: null,
        disabledHeaderElem_: null,
        showDisabledUIDebouncer_: null,
        wholeNodeOverlayEl_: null,
        selectedWholeNode_: null,
        keyboard_: null,
        initialize: function(a) {
            a = a || {};
            this.contentView_ = a.contentView;
            this.scrollableArea_ = a.scrollableArea;
            this.contentPane_ = a.contentPane;
            this.contentToolbarView_ = a.contentToolbarView;
            this.htmlEditingView_ = a.htmlEditingView;
            this.domWatchers_ = [];
            this.patternInsertionTransformers_ = [];
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                stopPropagation: !0,
                bindings: app.getKeyboardResolver().resolve({
                    save: function(a) {
                        a.stopPropagation = !1
                    },
                    toggleMode: function(a) {
                        a.stopPropagation = !1
                    },
                    pageup: function(a) {
                        a.stopPropagation = !1
                    },
                    pagedown: function(a) {
                        a.stopPropagation = !1
                    },
                    undo: this.undo_.bind(this),
                    redo: this.redo_.bind(this),
                    backspace: this.deleteSelectedNode_.bind(this),
                    "delete": this.deleteSelectedNode_.bind(this)
                })
            });
            this.onSelectionChange_ = this.onSelectionChange_.bind(this);
            this.linkMousemoveEvent_ = this.linkMousemoveEvent_.bind(this);
            this.imageClickEvent_ = this.imageClickEvent_.bind(this);
            this.newImageLoadedEvent_ = this.newImageLoadedEvent_.bind(this);
            this.focusEventListener_ = this.focusEventListener_.bind(this);
            this.blurEventListener_ = this.blurEventListener_.bind(this);
            this.mouseClickEvent_ = this.mouseClickEvent_.bind(this);
            this.overlayCandidateMouseoverEvent_ = this.overlayCandidateMouseoverEvent_.bind(this);
            this.overlayCandidateMouseoutEvent_ = this.overlayCandidateMouseoutEvent_.bind(this);
            this.documentMousedownEvent_ = this.documentMousedownEvent_.bind(this);
            this.showDisabledUIDebouncer_ = FunctionUtils.createDebouncer(this.showDisabledUI_, 2E3, this);
            this.initializeAfterContentViewLoaded_()
        },
        render: function() {
            this.richTextToolbarView_ && this.richTextToolbarView_.remove();
            this.richTextToolbarView_ = new RichTextToolbarView({
                model: this.model,
                richTextEditingView: this,
                contentToolbarView: this.contentToolbarView_,
                undoManager: this.htmlEditingView_.getUndoManager()
            });
            this.richTextToolbarView_.render()
        },
        flush: function() {
            this.contentEditable_ && this.contentEditable_.flush()
        },
        getValue: function(a) {
            a !== void 0 && a ? this.isWholeNodeSelected() ? (a = this.getWholeNodeSelected(), a = a.tagName.toLowerCase() === "body" ? this.contentView_.getContentForElement(a, "inner") : this.contentView_.getContentForElement(a, "outer")) : a = this.contentView_.getSelectedContent() : a = this.contentView_.getContent();
            return a
        },
        setValue: function(a, b, c) {
            b = !!b;
            this.contentEditable_.clearRestorableState();
            this.processIframeLoaded_ = !1;
            this.updateDOMContent_(a, b, c)
        },
        modifyDocument: function(a) {
            a && (this.stopWatchingChanges_(), a(), this.startWatchingChanges_())
        },
        setDocumentMetadataValues: function(a, b, c) {
            b = this.parseHTMLAroundBody_(b);
            this.htmlPreBody_ = b.htmlPreBody;
            this.htmlPostBody_ = b.htmlPostBody;
            this.beforeUpdatingDOM_();
            this.contentView_.replaceDocumentMetadata(a);
            this.afterUpdatingDOM_( !! c)
        },
        enable: function() {
            this.enabled_ = !0;
            app.getKeyboardManager().activate(this.keyboard_);
            _.invoke(this.domWatchers_, "enable");
            if (this.contentDoc_) {
                var a = this.contentDoc_.documentElement;
                this.stopWatchingChanges_();
                a.classList.add("s9-habitat-editing-enabled");
                a.classList.remove("s9-habitat-content-disabled");
                this.startWatchingChanges_()
            }
            this.removeDisabledHeader_(!0);
            this.trigger("enable")
        },
        disable: function(a) {
            this.enabled_ = !1;
            _.invoke(this.domWatchers_, "disable");
            app.getKeyboardManager().remove(this.keyboard_);
            if (this.contentDoc_) {
                var b = this.contentDoc_.documentElement;
                this.stopWatchingChanges_();
                b.classList.remove("s9-habitat-editing-enabled");
                this.startWatchingChanges_()
            }
            if (!a && this.disabledHeaderElem_) this.removeDisabledHeader_();
            else if (a && !this.disabledHeaderElem_) this.showDisabledUIDebouncer_.call(a);
            else if (a && this.disabledHeaderElem_ && (this.contentDoc_ && this.contentDoc_.documentElement.classList.add("s9-habitat-content-disabled"), this.disabledHeaderElem_.textContent.trim() !== a)) this.disabledHeaderElem_.textContent = a
        },
        execCommand: function(a, b, c) {
            this.contentEditable_.execCommand(a, b, c)
        },
        triggerChange: function(a) {
            a = a || {};
            this.isWholeNodeSelected() && this.addWholeNodeSelectionOverlay_(this.selectedWholeNode_, !1);
            this.contentEditable_ && this.contentEditable_.isWatchingChanges() && !this.areChangeEventsSilent() && this.trigger("change", a)
        },
        silenceChangeEvents: function(a) {
            this.silent_ = a
        },
        areChangeEventsSilent: function() {
            return this.silent_
        },
        canChangeModes: function() {
            this.hasModalDialog() && app.getMessageView().error(RichTextEditingView.UNFINISHED_UPLOAD_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME);
            return ! this.hasModalDialog()
        },
        remove: function() {
            this.removeDisabledHeader_();
            if (this.widgetEditingSlideover_) this.widgetEditingSlideover_.remove(),
            this.widgetEditingSlideover_ = null;
            if (this.fadeAnimation_) this.fadeAnimation_.cancel(),
            this.fadeAnimation_ = null;
            this.contentView_.off("loaded", this.onContentViewLoad_, this);
            this.contentView_.off("loaded", this.iframeLoadedListener_, this);
            this.teardownEditing_();
            RichTextEditingView.__super__.remove.call(this)
        },
        hasModalDialog: function() {
            return this.hasModalDialog_
        },
        setHasModalDialog: function(a) {
            a ? (this.disable(), this.trigger("blur")) : this.enable();
            this.hasModalDialog_ = a;
            this.trigger("modalDialog", a)
        },
        isEditingAllowed: function() {
            var a = this.contentEditable_ ? this.contentEditable_.isEnabled() : !1,
            b = this.contentEditable_ ? this.contentEditable_.isWatchingChanges() : !1;
            return a && b && this.enabled_ && !this.hasModalDialog()
        },
        getContentView: function() {
            return this.contentView_
        },
        getLinkEditingPopupView: function() {
            return this.linkEditingPopupView_
        },
        hasRange: function() {
            return ! this.contentEditable_ ? !1 : this.contentEditable_.hasRange()
        },
        getSelection: function() {
            if (this.contentEditable_ && this.contentEditable_.getSelection()) return this.contentEditable_.getSelection();
            else if (this.isWholeNodeSelected()) {
                var a = new PersistentNodeReference({
                    isWithinContent: !0
                }),
                b = this.getWholeNodeSelected();
                a.setNode(b);
                return a
            } else return null
        },
        setSelection: function(a, b) {
            b = b !== void 0 ? b: !0;
            if (a) {
                var c;
                a instanceof RestorableRange ? c = a.restore(this.contentDoc_, b) : a instanceof PersistentNodeReference && (c = a.getNode(this.contentDoc_), b && DOMUtils.focusWindow(this.contentWin_));
                c && DOMUtils.verticalScrollTo(this.scrollableArea_, c, this.contentPane_);
                a instanceof PersistentNodeReference && this.setWholeNodeSelected(c)
            }
        },
        isWholeNodeSelected: function() {
            return !! this.selectedWholeNode_
        },
        getWholeNodeSelected: function() {
            return ! this.selectedWholeNode_ ? null: this.selectedWholeNode_
        },
        setWholeNodeSelected: function(a) {
            if (a && a.tagName.toLowerCase() !== "html" && a !== this.selectedWholeNode_) {
                this.contentDoc_.removeEventListener("selectionchange", this.onSelectionChange_);
                this.contentWin_.getSelection().removeAllRanges();
                this.selectedWholeNode_ = a;
                this.addWholeNodeSelectionOverlay_(a, !0);
                DOMUtils.verticalScrollTo(this.scrollableArea_, this.selectedWholeNode_, this.contentPane_);
                for (var b = XMLUtilities.getS9ID(a); ! b && a && a.tagName.toLowerCase() !== "html";) b = XMLUtilities.getS9ID(a),
                a = a.parentElement;
                this.trigger("selection", b, !0);
                HTMLContent.isVideoElement(a) && a.addEventListener("loadedmetadata", this.videoReloadedEvent_.bind(this));
                _.defer(function() {
                    this.contentDoc_.addEventListener("selectionchange", this.onSelectionChange_)
                }.bind(this))
            }
        },
        videoReloadedEvent_: function() {
            this.elementInspectorView_.render();
            this.selectedWholeNode_.removeEventListener("loadedmetadata", this.videoReloadedEvent_)
        },
        deleteWholeSelectedNode: function(a) {
            var b, a = typeof a !== "undefined" ? a: !0;
            if (this.isWholeNodeSelected()) {
                var c = this.getSelection(),
                d = this.getNodeNearSelection(),
                e = d.tagName.toLowerCase() === "body";
                e && (this.contentView_.replaceBodyNode("<p><br/></p>", !0), b = d);
                if (!e) {
                    var e = d.parentElement,
                    f = d.previousElementSibling;
                    for (e.removeChild(d); e.tagName.toLowerCase() !== "body" && DOMUtils.isEmptyElement(e);) b = e,
                    f = b.previousElementSibling,
                    e = e.parentElement,
                    e.removeChild(b);
                    b = e;
                    f && e.tagName.toLowerCase() === "body" && (b = f)
                }
                d = null;
                b && (d = new PersistentNodeReference({
                    isWithinContent: !0
                }), d.setNode(b));
                a && this.triggerChange({
                    rangeBeforeChange: c,
                    rangeAfterChange: d
                });
                this.setWholeNodeSelected(b)
            }
        },
        getNodeNearSelection: function(a, b) {
            var b = b || this.contentDoc_,
            c = this.getSelection();
            if (!c) return null;
            if (c instanceof RestorableRange) {
                var d = c.getStart(b),
                c = c.getEnd(b);
                if (!d.container) return null;
                d = d.container;
                c = c.container;
                if (d.nodeType === Node.TEXT_NODE) d = d.parentElement;
                if (c.nodeType === Node.TEXT_NODE) c = c.parentElement;
                if (a) {
                    if (d.nodeType !== Node.ELEMENT_NODE || !d.matchesSelector(a)) d = DOMUtils.getParent(d, a) || null;
                    if (c.nodeType !== Node.ELEMENT_NODE || !c.matchesSelector(a)) c = DOMUtils.getParent(c, a) || null
                }
                return d !== c ? null: d
            } else if (c instanceof PersistentNodeReference) return d = c.getNode(b),
            !d ? null: a && d.matchesSelector(a) ? d: a ? DOMUtils.getParent(d, a) : d
        },
        focus: function() {
            this.contentView_.focus()
        },
        contentKeyUp_: function() {
            this.trigger("keyup")
        },
        getS9IDNearCursor_: function() {
            var a = this.contentDoc_.getSelection().anchorNode;
            return a ? this.getS9IDNearElement_(a) : null
        },
        getS9IDNearElement_: function(a) {
            var b = (a = XMLUtilities.getParentWithS9ID(a)) ? a.tagName.toLowerCase() : "";
            return a && b !== "body" && b !== "html" ? XMLUtilities.getS9ID(a) : null
        },
        showDisabledUI_: function(a) {
            if (this.contentDoc_) {
                var b = this.contentDoc_.documentElement;
                this.stopWatchingChanges_();
                b.classList.add("s9-habitat-content-disabled");
                this.startWatchingChanges_()
            }
            if (a) this.disabledHeaderElem_ = Templates["project/editing/richTextDisabledHeader"]({
                text: a
            }),
            this.scrollableArea_.appendChild(this.disabledHeaderElem_),
            this.fadeAnimation_ && this.fadeAnimation_.cancel(),
            a = function() {
                this.fadeAnimation_ = null
            }.bind(this),
            this.fadeAnimation_ = DOMUtils.runFadeAnimation(this.disabledHeaderElem_, !0, a)
        },
        removeDisabledHeader_: function(a) {
            this.showDisabledUIDebouncer_.cancel();
            if (this.disabledHeaderElem_) {
                var b = function() {
                    DOMUtils.detachElement(this.disabledHeaderElem_);
                    this.disabledHeaderElem_ = null
                }.bind(this);
                a ? (this.fadeAnimation_ && this.fadeAnimation_.cancel(), a = function() {
                    this.fadeAnimation_ = null;
                    b()
                }.bind(this), this.fadeAnimation_ = DOMUtils.runFadeAnimation(this.disabledHeaderElem_, !1, a)) : b()
            }
        },
        setupEditing_: function() {
            this.teardownEditing_();
            this.setupEditingForContent_();
            this.setupEditingForRichTextToolbar_();
            this.setupEditingForLinks_();
            this.setupClickToSelectOverlay_();
            this.setupEditingForElementInspector_();
            this.setupEditingForClipboard_();
            this.setupEditingForBreadcrumbs_();
            this.setupEditingForPatternInsertionTransformers_();
            this.setupEditingForWidgets_()
        },
        setupEditingForContent_: function() {
            this.contentEditable_ = new ContentEditableView({
                contentView: this.contentView_,
                richTextEditingView: this,
                target: this.target_.body
            });
            this.listenTo(this.contentEditable_, "change", this.triggerChange);
            this.listenTo(this.contentEditable_, "keyup", this.contentKeyUp_);
            this.contentDoc_ = this.contentEditable_.getDocument();
            this.contentWin_ = this.contentEditable_.getWindow();
            this.domWatchers_.push(this.contentEditable_);
            this.listIndentationHandler_ = new ListIndentationHandler({
                target: this.target_.body
            });
            this.listenTo(this.listIndentationHandler_, "change", this.triggerChange);
            this.domWatchers_.push(this.listIndentationHandler_);
            this.contentWin_.addEventListener("focus", this.focusEventListener_);
            this.contentWin_.addEventListener("blur", this.blurEventListener_);
            this.listenTo(this.htmlEditingView_.getHTMLCodeEditingView(), "focus", this.blurEventListener_);
            this.contentDoc_.addEventListener("click", this.imageClickEvent_);
            this.contentDoc_.addEventListener("selectionchange", this.onSelectionChange_);
            this.contentDoc_.addEventListener("click", this.mouseClickEvent_);
            this.scrollableArea_.getDocument().addEventListener("mousedown", this.documentMousedownEvent_);
            this.listenTo(app.getDragManager(), "pattern:start", this.patternDragged_);
            this.listenTo(app.getDragManager(), "pattern:move", this.patternMoved_);
            this.listenTo(app.getDragManager(), "pattern:drop", this.patternDropped_);
            this.enabled_ ? this.enable() : this.disable()
        },
        setupClickToSelectOverlay_: function() {
            this.overlay_ = new ElementOverlayView({
                parentPane: this.contentPane_,
                overlayId: "rich-text-overlay"
            });
            this.overlay_.render();
            RichTextEditingView.CLICK_TO_SELECT_OVERLAY_SELECTORS_.forEach(function(a) {
                BackboneNativeAdapter.on(this.contentDoc_, "mouseover", a, this.overlayCandidateMouseoverEvent_);
                BackboneNativeAdapter.on(this.contentDoc_, "mouseout", a, this.overlayCandidateMouseoutEvent_)
            }.bind(this));
            this.listenTo(this.overlay_, "overlay:click", this.clickToSelectEvent_.bind(this))
        },
        setupEditingForWidgets_: function() { (this.widgetAPI_ = this.contentView_.getWidgetAPI()) ? this.listenTo(this.widgetAPI_, "configuration", this.widgetConfigurationEvent_) : console.error("Programming error: Widget API not found for configuration binding.")
        },
        setupEditingForLinks_: function() {
            this.linkEditingPopupView_ = new LinkEditingPopupView({
                model: this.model,
                editorView: this,
                parentPane: this.contentPane_,
                linkResolver: this.model.getLinkResolver(),
                contentView: this.contentView_
            });
            this.listenTo(this.linkEditingPopupView_, "change", this.linkChanged_);
            this.listenTo(this.linkEditingPopupView_, "remove", this.linkRemoved_);
            this.linkEditingPopupView_.render();
            BackboneNativeAdapter.on(this.contentDoc_, "mousemove", "[href]", this.linkMousemoveEvent_)
        },
        setupEditingForRichTextToolbar_: function() {
            this.richTextToolbarView_ = new RichTextToolbarView({
                model: this.model,
                richTextEditingView: this,
                contentEditable: this.contentEditable_,
                contentToolbarView: this.contentToolbarView_,
                undoManager: this.htmlEditingView_.getUndoManager()
            });
            this.richTextToolbarView_.render()
        },
        setupEditingForElementInspector_: function() {
            this.elementInspectorView_ = new RichTextElementInspectorView({
                richTextEditingView: this,
                parentPane: this.contentPane_
            });
            this.listenTo(this.elementInspectorView_, "remove", this.removeElement_);
            this.listenTo(this.elementInspectorView_, "change", this.changeSelectedElement_)
        },
        setupEditingForClipboard_: function() {
            this.clipboardHandler_ = new RichTextClipboardHandler({
                richTextEditingView: this,
                contentView: this.contentView_
            })
        },
        setupEditingForBreadcrumbs_: function() {
            this.breadcrumbsView_ = new RichTextBreadcrumbsView({
                richTextEditingView: this,
                contentPane: this.contentPane_,
                parentPane: DOMUtils.getParent(this.contentPane_, "#content")
            })
        },
        setupEditingForPatternInsertionTransformers_: function() {
            var a = [],
            b = new TableInsertionTransformer({
                richTextEditingView: this
            }),
            c = new VideoInsertionTransformer({
                richTextEditingView: this
            });
            a.push(b);
            a.push(c);
            this.patternInsertionTransformers_ = a
        },
        documentMousedownEvent_: function(a) {
            this.contentPane_.parentElement === a.target && this.blurEventListener_()
        },
        widgetEditEvent_: function(a) {
            this.widgetEditingSlideover_ = new WidgetEditingSlideoverView({
                parentPane: document.body,
                url: a.src,
                s9id: a.dataset.uuid,
                widgetFileURL: a.dataset.s9HabitatWidgetFileURL || null
            });
            this.widgetEditingSlideover_.render();
            this.listenTo(this.widgetEditingSlideover_, {
                configuration: function(b) {
                    var c = URI(a.getAttribute("src"));
                    c.search(b);
                    a.setAttribute("src", c.toString());
                    this.triggerChange()
                },
                savedFile: function() {
                    a.setAttribute("src", a.getAttribute("src"))
                },
                remove: function() {
                    this.stopListening(this.widgetEditingSlideover_);
                    this.widgetEditingSlideover_ = null
                }
            })
        },
        addWholeNodeSelectionOverlay_: function(a, b) {
            this.removeWholeNodeSelectionOverlay_();
            if (!RichTextElementInspectorView.isNodeEditableFromInspector(a) && a.tagName.toLowerCase() !== "iframe") {
                var b = typeof b !== "undefined" ? b: !0,
                c = DOMUtils.createRectOverlay(a);
                c.dataset.displaySelector = DOMUtils.getSelector(a, {
                    ignoreClassesMatching: ReaderContentView.HABITAT_PREFIX_REGEXP,
                    stripId: !0
                });
                c.classList.add(RichTextEditingView.WHOLE_ELEMENT_SELECTED_OVERLAY_CLASS_);
                b && c.classList.add(RichTextEditingView.WHOLE_ELEMENT_SELECTED_ANIMATE_OVERLAY_CLASS_);
                this.wholeNodeOverlayEl_ = c;
                this.contentPane_.appendChild(c)
            }
        },
        removeWholeNodeSelectionOverlay_: function() {
            DOMUtils.detachElement(this.wholeNodeOverlayEl_);
            this.wholeNodeOverlayEl_ = null
        },
        focusEventListener_: function() {
            this.trigger("focus")
        },
        blurEventListener_: function() {
            var a = this.elementInspectorView_.getEditableInspectedElement();
            this.removeWholeNodeSelectionOverlay_();
            this.selectedWholeNode_ = null;
            this.trigger("blur");
            this.elementInspectorView_.getInspectedElement() === null && a && a.tagName.toLowerCase() === "iframe" && this.overlayCandidateMouseoverEvent_({
                target: a
            })
        },
        onSelectionChange_: function() {
            this.removeWholeNodeSelectionOverlay_();
            this.selectedWholeNode_ = null;
            this.showDisabledUIDebouncer_.invokeNow();
            this.isEditingAllowed() && (DOMUtils.detachMatchingElements("." + RichTextEditingView.IMAGE_OVERLAY_CLASS, this.contentPane_), DOMUtils.normalizeTripleClickSelection(this.contentDoc_), this.trigger("selection", this.getS9IDNearCursor_(), !1))
        },
        mouseClickEvent_: function(a) {
            this.isEditingAllowed() && this.trigger("click", a.target)
        },
        overlayCandidateMouseoverEvent_: function(a) {
            this.getWholeNodeSelected() !== a.target && this.overlay_.show(a.target)
        },
        overlayCandidateMouseoutEvent_: function() {
            this.overlay_.hide()
        },
        clickToSelectEvent_: function() {
            var a = new PersistentNodeReference({
                isWithinContent: !0
            }),
            b = this.elementInspectorView_.getNearestInspectableElement(this.overlay_.getTargetElement());
            a.setNode(b);
            this.setSelection(a);
            this.overlay_.hide()
        },
        removeElement_: function(a) {
            this.overlay_.hide();
            this.setWholeNodeSelected(a);
            this.deleteWholeSelectedNode(!0)
        },
        changeSelectedElement_: function(a) {
            var b = a.tagName.toLowerCase() === "img";
            b || HTMLContent.isVideoElement(a) ? (this.setHasModalDialog(!0), app.getAssetManager().showAssetPicker({
                onClose: this.assetChanged_.bind(this, a),
                type: b ? "image": "video",
                directory: this.model.getChapter()
            })) : HTMLContent.isWidgetElement(a) && this.widgetEditEvent_(a)
        },
        linkMousemoveEvent_: function(a, b) {
            this.getContentView().getContentDocument().hasFocus() && !HTMLContent.isPhrasingElement(b) && this.linkEditingPopupView_.hoverFor(b)
        },
        widgetConfigurationEvent_: function(a, b) {
            var c = URI(a.getAttribute("src"));
            c.search(b);
            a.setAttribute("src", c.toString());
            this.triggerChange()
        },
        linkChanged_: function(a, b, c, d) {
            this.stopWatchingChanges_();
            a.setAttribute(b, c);
            if (d) a.textContent = d;
            this.startWatchingChanges_();
            b = this.contentWin_.getSelection();
            b.removeAllRanges();
            c = this.contentDoc_.createRange();
            c.selectNode(a);
            b.addRange(c);
            a = this.getRestorableRangeFor_(c);
            this.triggerChange({
                rangeBeforeChange: a,
                rangeAfterChange: a
            })
        },
        linkRemoved_: function(a) {
            this.stopWatchingChanges_();
            a = DOMUtils.unwrapElement(a);
            this.startWatchingChanges_();
            var b = this.contentWin_.getSelection();
            b.removeAllRanges();
            var c = this.contentDoc_.createRange();
            c.setStartBefore(a[0]);
            c.setEndAfter(a[a.length - 1]);
            b.addRange(c);
            a = this.getRestorableRangeFor_(c);
            this.triggerChange({
                rangeBeforeChange: a,
                rangeAfterChange: a
            })
        },
        imageClickEvent_: function(a) {
            a = a.target;
            if (a.tagName.toLowerCase() === "img") {
                var a = this.elementInspectorView_.getNearestInspectableElement(a),
                b = new PersistentNodeReference({
                    isWithinContent: !0
                });
                b.setNode(a);
                this.setSelection(b)
            }
        },
        replaceAsset: function(a, b) {
            this.assetChanged_(this.contentDoc_.querySelector(a), b, !0)
        },
        assetChanged_: function(a, b, c) {
            b ? b.isPending() ? (this.stopWatchingChanges_(), a.classList.add("s9-habitat-updating"), this.hasModalDialog_ = !0, app.getSaveHandler().add(this.model), app.getMessageView().show("Uploading..."), b.on("change:status",
            function e(b, c) {
                if (c === AssetModel.STATUS.COMPLETED) b.off("change:status", e, this),
                app.getMessageView().hide(),
                this.hasModalDialog_ = !1,
                this.startWatchingChanges_(),
                this.assetChanged_(a, b);
                else if (c === AssetModel.STATUS.FAILED) b.off("change:status", e, this),
                app.getMessageView().hide("Uploading..."),
                this.hasModalDialog_ = !1,
                a.classList.remove("s9-habitat-updating"),
                a.getAttribute("class") === "" && a.removeAttribute("class"),
                this.startWatchingChanges_(),
                this.model.isDirty() || app.getSaveHandler().remove(this.model),
                this.assetChanged_(a, null)
            },
            this)) : HTMLContent.isVideoElement(a) ? (a.classList.remove("s9-placeholder"), this.changeVideo_(a, b, c)) : (b = b.relativePath(this.model.get("filePath")), this.model.setAttributeOnNode(XMLUtilities.getS9ID(a), "src", b), this.updateDOMContent_(this.model.get("content"), !0, this.imageChangePreviewEvent_.bind(this, XMLUtilities.getS9ID(a)))) : this.setHasModalDialog(!1)
        },
        changeVideo_: function(a, b, c) {
            var d = new PersistentNodeReference({
                isWithinContent: !0
            });
            d.setNode(a);
            c && (d = this.getSelection());
            b.attributes.url ? this.createExternalVideo_(a, b, d, c) : this.createNativeVideo_(a, b, d, c)
        },
        createExternalVideo_: function(a, b, c, d) {
            var b = b.attributes,
            e = DOMUtils.createElement("iframe", {
                s9id: XMLUtilities.getS9ID(a),
                attributes: {
                    src: b.url,
                    width: b.width,
                    height: b.height,
                    frameborder: 0,
                    allowfullscreen: !0
                }
            });
            DOMUtils.replaceNode(a, e);
            this.updateAssetFigure_(e, b);
            this.videoLoadedEvent_(e, c, d)
        },
        updateAssetFigure_: function(a, b) {
            a.parentElement.classList.toggle("s9-video", a.tagName.toLowerCase() !== "video");
            var c = ["title", "description"],
            d = this.elementInspectorView_.getNearestInspectableElement(a);
            d && d.tagName.toLowerCase() === "figure" && c.forEach(function(a) {
                d.querySelectorAll('[data-attribute="' + a + '"]').forEach(function(c) {
                    if (a === "description") {
                        var d = "";
                        b.description && (d = (new HTMLSanitizer).importHTML(b[a], {
                            whitelist: !0,
                            rewritePaths: !1,
                            reparentNakedPhrasingContent: !1
                        }));
                        c.innerHTML = d
                    } else c.textContent = b[a] || ""
                })
            })
        },
        createNativeVideo_: function(a, b, c, d) {
            var b = b.attributes,
            e = DOMUtils.createElement("video", {
                s9id: XMLUtilities.getS9ID(a),
                attributes: {
                    controls: !0
                }
            });
            HTMLContent.VALID_VIDEO_ENCODINGS.forEach(function(a) {
                if (b.encodings[a.key]) {
                    var c = URLUtils.expand("{+apiHost}/redirectvideos?streamName={streamName}&projectId={shortName}&encoding={encoding}", {
                        shortName: app.getProjectModel().get("shortName"),
                        streamName: b.streamName,
                        encoding: a.key
                    });
                    e.appendChild(DOMUtils.createElement("source", {
                        attributes: {
                            src: c,
                            type: a.type
                        }
                    }))
                }
            });
            this.videoLoadedEventBound_ = this.videoLoadedEvent_.bind(this, e, c, d);
            e.addEventListener("loadedmetadata", this.videoLoadedEventBound_);
            DOMUtils.replaceNode(a, e);
            this.updateAssetFigure_(e, b)
        },
        videoLoadedEvent_: function(a, b, c) {
            this.setHasModalDialog(!1);
            a.removeEventListener("loadedmetadata", this.videoLoadedEventBound_);
            this.videoLoadedEventBound_ = null;
            c ? this.triggerChange({
                rangeBeforeChange: b
            }) : (this.setWholeNodeSelected(a), this.triggerChange({
                rangeBeforeChange: b,
                rangeAfterChange: this.getSelection()
            }))
        },
        imageChangePreviewEvent_: function(a) {
            var b = XMLUtilities.getNodeByS9ID(this.contentDoc_, a);
            b && (this.model.set("dirtyContent", !0), app.getSaveHandler().add(this.model), b.complete ? this.finishedChangingImage_(a) : (app.getMessageView().show("Loading..."), this.stopWatchingChanges_(), b.classList.add("s9-habitat-updating"), this.startWatchingChanges_(), b.addEventListener("load", this.newImageLoadedEvent_)))
        },
        finishedChangingImage_: function(a) {
            this.setHasModalDialog(!1);
            var a = XMLUtilities.getNodeByS9ID(this.contentDoc_, a),
            b = this.contentWin_.getSelection();
            b.removeAllRanges();
            var c = this.contentDoc_.createRange();
            c.setStartBefore(a);
            b.addRange(c);
            a = this.getRestorableRangeFor_(c);
            this.triggerChange({
                rangeBeforeChange: a,
                rangeAfterChange: a
            })
        },
        newImageLoadedEvent_: function(a) {
            a.target.removeEventListener("load", this.newImageLoadedEvent_);
            app.getMessageView().hide();
            this.stopWatchingChanges_();
            a.target.classList.remove("s9-habitat-updating");
            a.target.getAttribute("class") === "" && a.target.removeAttribute("class");
            this.startWatchingChanges_();
            this.finishedChangingImage_(XMLUtilities.getS9ID(a.target))
        },
        parseHTMLAroundBody_: function(a) {
            var b = a.match(/^([\s\S]*)(<body\b[^>]*>[\s\S]*<\/body>)([\s\S]*)$/i) || [];
            return {
                htmlPreBody: a.test(/<body/i) ? b[1] || "": a,
                htmlBody: b[2] || "",
                htmlPostBody: b[3] || ""
            }
        },
        hasHTMLOutsideBodyChanged_: function(a) {
            a = this.parseHTMLAroundBody_(a);
            return a.htmlPreBody !== this.htmlPreBody_ || a.htmlPostBody !== this.htmlPostBody_
        },
        updateDOMContent_: function(a, b, c) {
            this.hasHTMLOutsideBodyChanged_(a) ? this.updateFullDOMContent_(a, b, c) : this.updateDOMBodyContent_(a, b, c)
        },
        updateDOMBodyContent_: function(a, b, c) {
            this.beforeUpdatingDOM_();
            this.contentView_.replaceBodyNode(this.parseHTMLAroundBody_(a).htmlBody);
            this.contentWin_.setTimeout(function() {
                _.invoke(this.domWatchers_, "updateTarget", this.target_.body);
                this.afterUpdatingDOM_(b, c)
            }.bind(this), 1)
        },
        updateFullDOMContent_: function(a, b, c) {
            var d = this.parseHTMLAroundBody_(a);
            this.htmlPreBody_ = d.htmlPreBody;
            this.htmlPostBody_ = d.htmlPostBody;
            this.beforeUpdatingDOM_();
            this.processIframeLoaded_ = !0;
            this.contentView_.off("loaded", this.iframeLoadedListener_, this);
            this.iframeLoadedListener_ = function() {
                this.contentView_.off("loaded", this.iframeLoadedListener_, this);
                this.processIframeLoaded_ && this.afterUpdatingDOM_(b, c, !0)
            };
            this.contentView_.on("loaded", this.iframeLoadedListener_, this);
            this.contentView_.setContent(a)
        },
        beforeUpdatingDOM_: function() {
            this.stopWatchingChanges_()
        },
        afterUpdatingDOM_: function(a, b, c) {
            this.startWatchingChanges_();
            c && this.setupEditing_();
            a || this.triggerChange();
            this.trigger("domUpdated");
            b && b()
        },
        initializeAfterContentViewLoaded_: function() {
            if (this.contentView_.isLoaded()) this.onContentViewLoad_();
            else this.contentView_.on("loaded", this.onContentViewLoad_, this)
        },
        onContentViewLoad_: function() {
            this.target_ = this.contentView_.getContentDocument();
            this.contentView_.off("loaded", this.onContentViewLoad_, this);
            var a = this.parseHTMLAroundBody_(this.model.get("content"));
            this.htmlPreBody_ = a.htmlPreBody;
            this.htmlPostBody_ = a.htmlPostBody;
            this.setupEditing_()
        },
        stopWatchingChanges_: function() {
            _.invoke(this.domWatchers_, "stopWatchingChanges")
        },
        startWatchingChanges_: function() {
            _.invoke(this.domWatchers_, "startWatchingChanges")
        },
        patternDragged_: function(a) {
            _.invoke(this.domWatchers_, "disable");
            this.contentEditable_.clearRestorableState();
            var b = a.fromElement;
            b && this.modifyDocument(function() {
                b.classList.add(RichTextEditingView.ELEMENT_BEING_DRAGGED_CLASS_)
            }.bind(this));
            this.trigger("patternDragged")
        },
        patternMoved_: function(a) {
            DOMUtils.detachMatchingElements("." + RichTextEditingView.INSERTION_OVERLAY_CLASS, this.contentPane_);
            var b = a.target;
            if (this.target_.contains(b)) {
                var c = a.pattern.getRootElement();
                if (c = this.getInsertionPosition_(b, c, a.elementOffset)) {
                    this.drawInsertionLineOverlay_(b, c);
                    var d = b;
                    if (c === "beforebegin" || c === "afterend") d = b.parentNode;
                    this.trigger("patternMoved", {
                        nearestS9ID: this.getS9IDNearElement_(b),
                        parent: d,
                        pattern: a.pattern
                    })
                }
            }
        },
        patternDropped_: function(a) {
            if (this.canInsertPattern_(a)) if (a.fromElement) this.attemptPatternInsertion_(a, !0),
            this.afterPatternInsertion_(!0, a);
            else {
                for (var b = null,
                c = a.pattern,
                d = 0; d < this.patternInsertionTransformers_.length; d++) {
                    var e = this.patternInsertionTransformers_[d];
                    if (e.canTransform(c)) {
                        b = e.transform(c);
                        break
                    }
                }
                b ? b.then(function(b) {
                    a.pattern = b.pattern;
                    this.attemptPatternInsertion_(a, b.shouldFocus);
                    this.afterPatternInsertion_(!0, a)
                }.bind(this),
                function() {
                    this.afterPatternInsertion_(!1, a)
                }.bind(this)) : (this.attemptPatternInsertion_(a, !0), this.afterPatternInsertion_(!0, a))
            } else this.afterPatternInsertion_(!1, a)
        },
        canInsertPattern_: function(a) {
            if (!this.enabled_) return ! 1;
            var b = a.target;
            if (!this.target_.contains(a.target)) return ! 1;
            var c = a.pattern.getRootElement();
            return ! this.getInsertionPosition_(b, c, a.elementOffset) ? !1 : !0
        },
        attemptPatternInsertion_: function(a, b) {
            var c = a.target,
            d = a.pattern.getRootElement(),
            e = this.getInsertionPosition_(c, d, a.elementOffset),
            d = this.contentDoc_.createRange();
            d.setStartBefore(c);
            var d = this.getRestorableRangeFor_(d),
            f = a.pattern,
            g = f.getHTML();
            g && c && this.modifyDocument(function() {
                a.fromElement && DOMUtils.detachElement(a.fromElement);
                this.contentView_.insertHTML(c, e, g)
            }.bind(this));
            a.fromElement || ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.BLOCK_INSERTED,
                eventInfo: {
                    shortName: this.model.get("project").get("shortName"),
                    blockName: f.id,
                    blockCategory: f.get("category"),
                    blockPlacement: "preview"
                }
            });
            if (b) {
                var h;
                g && (h = this.placeCursorInPattern_((g.match(/<.*?\sdata-uuid="([^"]*)"/) || [])[1]));
                f.get("skipChangeTrigger") || this.triggerChange({
                    rangeBeforeChange: d,
                    rangeAfterChange: h
                })
            } else f.get("skipChangeTrigger") || this.triggerChange({
                rangeBeforeChange: d
            })
        },
        afterPatternInsertion_: function(a, b) {
            var c = this.htmlEditingView_.getHTMLCodeEditingView().getAceView();
            c.isFocused() && c.blur();
            this.contentWin_.focus();
            DOMUtils.detachMatchingElements("." + RichTextEditingView.INSERTION_OVERLAY_CLASS, this.contentPane_);
            var d = b.fromElement;
            d && this.modifyDocument(function() {
                d.classList.remove(RichTextEditingView.ELEMENT_BEING_DRAGGED_CLASS_)
            }.bind(this));
            _.invoke(this.domWatchers_, "enable");
            this.trigger("patternDropped", a)
        },
        getInsertionPosition_: function(a, b, c) {
            var d = a.tagName.toLowerCase();
            if (d === "html") return null;
            if (d === "svg" || DOMUtils.getParent(a, "svg")) return null;
            if (a.classList.contains(RichTextEditingView.ELEMENT_BEING_DRAGGED_CLASS_) || DOMUtils.getParent(a, "." + RichTextEditingView.ELEMENT_BEING_DRAGGED_CLASS_)) return null;
            c = c.top / a.offsetHeight;
            d = HTMLContent.canNest(b, a);
            a = HTMLContent.canNest(b, a.parentNode);
            return ! d && !a ? null: !d && a ? c < 0.5 ? "beforebegin": "afterend": d && !a ? "beforeend": c < 0.25 ? "beforebegin": c < 0.75 ? "beforeend": "afterend"
        },
        drawInsertionLineOverlay_: function(a, b) {
            var c = DOMUtils.createRectOverlay(a);
            c.classList.add(RichTextEditingView.INSERTION_OVERLAY_CLASS);
            c.dataset.insertionPosition = b;
            var d = parseFloat(c.style.top),
            e = d + parseFloat(c.style.height);
            if (b === "beforebegin" && a.previousElementSibling) {
                if (e = a.previousElementSibling.getBoundingClientRect(), e = e.top + e.height, e < d) c.style.top = (d + e) / 2 + "px"
            } else if (b === "afterend" && a.nextElementSibling) {
                var f = a.nextElementSibling.getBoundingClientRect().top;
                if (e < f) c.style.height = (e + f) / 2 - d + "px"
            }
            if (b === "beforebegin" || b === "afterend") d = a.parentNode.getBoundingClientRect(),
            c.style.left = d.left + "px",
            c.style.width = d.width + "px";
            this.contentPane_.appendChild(c)
        },
        teardownEditing_: function() {
            this.clipboardHandler_ && this.clipboardHandler_.remove();
            this.contentEditable_ && (this.stopListening(this.contentEditable_), this.contentEditable_.remove());
            this.listIndentationHandler_ && (this.stopListening(this.listIndentationHandler_), this.listIndentationHandler_.remove());
            this.richTextToolbarView_ && this.richTextToolbarView_.remove();
            this.linkEditingPopupView_ && (this.linkEditingPopupView_.remove(), this.stopListening(this.linkEditingPopupView_));
            this.breadcrumbsView_ && this.breadcrumbsView_.remove();
            if (this.patternInsertionTransformers_) for (var a = 0; a < this.patternInsertionTransformers_.length; a++) this.patternInsertionTransformers_[a].remove();
            this.elementInspectorView_ && this.elementInspectorView_.remove();
            this.contentWin_ && (this.contentWin_.removeEventListener("focus", this.focusEventListener_), this.contentWin_.removeEventListener("blur", this.blurEventListener_));
            if (this.overlay_) this.stopListening(this.overlay_),
            this.overlay_.remove(),
            this.overlay_ = null;
            if (a = this.contentDoc_) a.removeEventListener("selectionchange", this.onSelectionChange_),
            a.removeEventListener("click", this.mouseClickEvent_),
            a.removeEventListener("click", this.imageClickEvent_),
            BackboneNativeAdapter.off(a, "mousemove", "[href]", this.linkMousemoveEvent_),
            RichTextEditingView.CLICK_TO_SELECT_OVERLAY_SELECTORS_.forEach(function(a) {
                BackboneNativeAdapter.off(this.contentDoc_, "mouseover", a, this.overlayCandidateMouseoverEvent_);
                BackboneNativeAdapter.off(this.contentDoc_, "mouseout", a, this.overlayCandidateMouseoutEvent_)
            }.bind(this));
            this.stopListening(app.getDragManager());
            this.scrollableArea_.getDocument().removeEventListener("mousedown", this.documentMousedownEvent_);
            if (this.widgetAPI_) this.stopListening(this.widgetAPI_),
            this.widgetAPI_ = null;
            app.getKeyboardManager().remove(this.keyboard_);
            this.richTextToolbar_ && this.richTextToolbar_.remove()
        },
        placeCursorInPattern_: function(a) {
            if (!a) return null;
            a = XMLUtilities.getNodeByS9ID(this.contentDoc_, a);
            if (!a) return null;
            var b = this.contentDoc_.getSelection();
            b.removeAllRanges();
            var c = this.contentDoc_,
            d = c.createTreeWalker(a, NodeFilter.SHOW_TEXT,
            function(a) {
                return a.nodeValue.trim() === "" ? NodeFilter.FILTER_REJECT: NodeFilter.FILTER_ACCEPT
            }).nextNode(),
            c = c.createRange();
            d ? c.selectNodeContents(d) : (c.setStartBefore(a), c.collapse());
            b.addRange(c);
            return this.getRestorableRangeFor_(c)
        },
        undo_: function(a) {
            a.preventDefault();
            this.htmlEditingView_.getUndoManager().undo(function(a) {
                this.triggerChange(a)
            }.bind(this))
        },
        redo_: function(a) {
            a.preventDefault();
            this.htmlEditingView_.getUndoManager().redo(function(a) {
                this.triggerChange(a)
            }.bind(this))
        },
        deleteSelectedNode_: function(a) {
            if (this.isWholeNodeSelected()) a.preventDefault(),
            a.stopPropagation = !0,
            this.deleteWholeSelectedNode(!0)
        },
        getRestorableRangeFor_: function(a) {
            var b = new RestorableRange;
            b.save(a);
            return b
        }
    });
    RichTextEditingView.CLICK_TO_SELECT_OVERLAY_SELECTORS_ = ["iframe", "video"];
    RichTextEditingView.WHOLE_ELEMENT_SELECTED_OVERLAY_CLASS_ = "whole-element-selected-overlay";
    RichTextEditingView.WHOLE_ELEMENT_SELECTED_ANIMATE_OVERLAY_CLASS_ = "whole-element-selected-animate-overlay";
    RichTextEditingView.INSERTION_OVERLAY_CLASS = "pattern-insertion-overlay";
    RichTextEditingView.ELEMENT_BEING_DRAGGED_CLASS_ = "s9-habitat-is-being-dragged";
    RichTextEditingView.UNFINISHED_UPLOAD_MESSAGE_ = "There are pending uploads; please wait for them to complete them before continuing";
    window.VideoInsertionTransformer = BaseClass.extend({
        richTextEditingView_: null,
        initialize: function(a) {
            a = a || {};
            this.richTextEditingView_ = a.richTextEditingView;
            this.doc_ = a.document || document
        },
        canTransform: function(a) {
            return this.getFragmentFromClonedPattern_(a).querySelectorAll("video").length === 1
        },
        transform: function(a) {
            app.getAssetManager().showAssetPicker({
                onClose: this.onAssetPicked_.bind(this, a),
                type: "video",
                directory: this.richTextEditingView_.model.getChapter()
            });
            this.richTextEditingView_.setHasModalDialog(!0);
            return Q.promise(function(a, c) {
                this.handleModalResolution_ = function(d) {
                    d.then(a, c);
                    this.handleModalResolution_ = null
                }.bind(this)
            }.bind(this))
        },
        onAssetPicked_: function(a, b) {
            Q.promise(function(c) {
                if (b) {
                    var d = a.clone(),
                    e = this.getFragmentFromClonedPattern_(d);
                    e.querySelector("video").classList.add("s9-placeholder");
                    e = XMLUtilities.serializeFragment(e, this.doc_.createElement("span"));
                    d.set("html", e);
                    d.set("skipChangeTrigger", !0);
                    this.handleModalResolution_(Q.resolve({
                        pattern: d
                    }));
                    this.listenToOnce(this.richTextEditingView_, "patternDropped",
                    function() {
                        this.richTextEditingView_.setHasModalDialog(!1);
                        this.richTextEditingView_.replaceAsset(".s9-placeholder", b)
                    }.bind(this));
                    c()
                } else this.richTextEditingView_.setHasModalDialog(!1),
                this.handleModalResolution_(Q.reject())
            }.bind(this))
        },
        getFragmentFromClonedPattern_: function(a) {
            var a = a.getRootElement(),
            b = a.ownerDocument.createDocumentFragment();
            b.appendChild(a.cloneNode(!0));
            return b
        }
    });
    window.TermLinkEditingView = Backbone.View.extend({
        parentPane_: null,
        keyboard_: null,
        snippetView_: null,
        uiModel_: null,
        uiModelAttrs_: {
            selectedTerm: null,
            searchTerm: null
        },
        events: {
            "click .tabs li": "toggleTabEvent_",
            "click .matching-term": "selectTermEvent_",
            "click .clear-button": "clearSearchEvent_",
            "click .update-term": "updateLinkEvent_",
            "mousewheel .term-list": "mousewheelEvent_",
            "mousewheel .term-scrollbox": "mousewheelEvent_",
            'input input[name="term"]': "termInputEvent_",
            "click .snippet [href]": "clickSnippetLinkEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.uiModel_ = new Backbone.Model(_.extend({},
            this.uiModelAttrs_));
            this.parentPane_ = a.parentPane;
            a = a.term.trim() || "";
            this.uiModel_.set({
                selectedTerm: a,
                searchTerm: a
            });
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    cancel: this.closeEvent_.bind(this)
                })
            });
            this.listenTo(this.uiModel_, "change", this.renderTermFilterList_);
            this.listenTo(this.uiModel_, "change:searchTerm", this.searchTermChangeEvent_)
        },
        render: function() {
            throw "TermLinkEditingView.prototype.render() is an abstract method";
        },
        remove: function() {
            app.getKeyboardManager().remove(this.keyboard_);
            this.removeSnippetView_();
            TermLinkEditingView.__super__.remove.call(this)
        },
        focus: function() {
            var a = this.el.querySelector('section[data-tab="' + this.el.dataset.activeTab + '"] input');
            a && a.focus()
        },
        getTemplateData_: function() {
            throw "TermLinkEditingView.prototype.getTemplateData_() is an abstract method";
        },
        renderTermFilterList_: function() {
            throw "TermLinkEditingView.prototype.renderTermFilterList_() is an abstract method";
        },
        getTermFilterTemplateData_: function() {
            throw "TermLinkEditingView.prototype.getTermFilterTemplateData_() is an abstract method";
        },
        termInputEvent_: function(a, b) {
            this.uiModel_.set({
                selectedTerm: null,
                searchTerm: b.value.toLowerCase().trim()
            })
        },
        toggleTabEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) this.el.dataset.activeTab = b.dataset.tabId,
            this.focus(),
            this.trigger("resize")
        },
        updateLinkEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.trigger("change", this.uiModel_.get("selectedTerm"))
        },
        closeEvent_: function() {
            this.trigger("close")
        },
        mousewheelEvent_: function(a, b) {
            Hacks.preventVerticalParentScroll(a, b)
        },
        selectTermEvent_: function(a, b) {
            var c = b.dataset.term;
            this.uiModel_.set({
                selectedTerm: c,
                searchTerm: c
            })
        },
        clearSearchEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (this.uiModel_.set({
                selectedTerm: null,
                searchTerm: ""
            }), _.defer(function() {
                this.focus()
            }.bind(this)))
        },
        searchTermChangeEvent_: function() {
            var a = this.uiModel_.get("searchTerm"),
            b = this.el.querySelector('.choose-term-form input[name="term"]');
            if (b) b.value = a,
            b.classList.toggle("empty", !a)
        },
        removeSnippetView_: function() {
            if (this.snippetView_) this.snippetView_.remove(),
            this.snippetView_ = null
        },
        clickSnippetLinkEvent_: function(a, b) {
            a.preventDefault();
            var c = b.getAttribute("href");
            try {
                this.win_.open(this.getSelectedEntry_().getDocumentModel().getLinkResolver().resolve(c))
            } catch(d) {
                app.getMessageView().error(d.toString(), MessageView.DEFAULT_DISPLAY_TIME)
            }
        }
    });
    window.GlossaryLinkEditingView = TermLinkEditingView.extend({
        initialize: function(a) {
            GlossaryLinkEditingView.__super__.initialize.call(this, a);
            this.listenTo(app.getProjectModel().get("glossary"), "loaded change", this.renderTermFilterList_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/glossaryLinkEditing"](this.getTemplateData_()));
            this.renderTermFilterList_();
            this.parentPane_.appendChild(this.el);
            app.getKeyboardManager().activate(this.keyboard_)
        },
        getTemplateData_: function() {
            var a = this.getHelpURLs_();
            return {
                searchTerm: this.uiModel_.get("searchTerm"),
                glossaryURL: a.glossaryURL,
                userGuideURL: a.userGuideURL,
                structureURL: a.structureURL
            }
        },
        renderTermFilterList_: function() {
            var a = this.el.querySelector(".term-filter");
            if (a) {
                a.innerHTML = "";
                var b = this.getTermFilterTemplateData_(),
                c = Templates["project/editing/glossaryTermFilter"](b);
                if (b.definitionIsSnippet) this.removeSnippetView_(),
                this.snippetView_ = new SnippetContentView({
                    parentPane: c.querySelector(".snippet"),
                    model: this.getSelectedEntry_().get("definition")
                }),
                this.snippetView_.render();
                a.appendChild(c)
            }
        },
        getTermFilterTemplateData_: function() {
            var a = {
                preview: !1,
                hasTerms: !1
            },
            b = app.getProjectModel().get("glossary"),
            c = b.get("rootPiece"); ! c || !c.length ? (b = this.getHelpURLs_(), a.glossaryURL = b.glossaryURL, a.userGuideURL = b.userGuideURL, a.structureURL = b.structureURL) : (c = this.getSelectedEntry_()) ? (a.preview = !0, a.term = c.get("term"), b = c.get("definition"), b.getXMLNode().querySelector("text") ? a.definitionIsSnippet = !0 : a.definition = b.get("xml")) : (a.terms = this.getFilteredTerms_(b), a.hasTerms = !0);
            return a
        },
        getSelectedEntry_: function() {
            var a = app.getProjectModel().get("glossary"),
            b = this.uiModel_.get("selectedTerm");
            return a.getEntry(b)
        },
        getFilteredTerms_: function(a) {
            var b = this.uiModel_.get("searchTerm"),
            c = RegExp(StringUtils.escapeRegExp(b), "i");
            return a.get("rootPiece").filter(function(a) {
                return c.test(a.get("key"))
            }).map(function(a) {
                return {
                    id: a.get("key"),
                    term: a.get("term")
                }
            }).sort(function(a, b) {
                return a.id.localeCompare(b.id)
            })
        },
        getHelpURLs_: function() {
            var a = app.getProjectModel(),
            b = a.get("toc").get("glossaryPath"),
            c = {
                userGuideURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/92c9c39fa5f64df0985012727d499244/10824f38bea94cf29e36dec44a653d93"),
                structureURL: URLRouter.getStructurePath(a.get("shortName"))
            };
            if (b) b = ExhibitDocumentModel.getFilePathFromSourceLocation(b),
            c.glossaryURL = URLRouter.getURLForPath(a.get("shortName"), b);
            return c
        }
    });
    window.LinkEditingPopupView = Backbone.View.extend({
        model: null,
        contentView_: null,
        parentPane_: null,
        editorView_: null,
        overlayEl_: null,
        repositionTimer_: null,
        focusDeferTimer_: null,
        linkEditingView_: null,
        linkResolver_: null,
        uiModel_: null,
        uiModelAttrs_: {
            currentLink: null,
            editing: !1,
            hovering: !1
        },
        events: {
            "click .edit-link-button": "startEditingEvent_",
            "click .remove-link-button": "removeLinkEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.contentView_ = a.contentView;
            this.parentPane_ = a.parentPane;
            this.linkResolver_ = a.linkResolver;
            this.editorView_ = a.editorView;
            this.editorLostFocusEvent_ = this.editorLostFocusEvent_.bind(this);
            this.uiModel_ = new Backbone.Model(_.extend({},
            this.uiModelAttrs_));
            this.listenTo(this.uiModel_, "change:currentLink change:editing", this.render);
            this.listenTo(this.uiModel_, "change:currentLink", this.linkChangedEvent_);
            this.listenTo(this.editorView_, "change", this.editorChangeEvent_);
            this.listenTo(this.editorView_, "selection", this.editorSelectionEvent_);
            this.imageLoadedEventBound_ = this.imageLoadedEvent_.bind(this)
        },
        render: function() {
            var a = this.getTemplateData_();
            this.doc_.removeEventListener("mousedown", this.editorLostFocusEvent_);
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/linkEditingPopup"](a));
            this.overlayEl_ && DOMUtils.detachElement(this.overlayEl_);
            this.overlayEl_ = DOMUtils.createElement("div", {
                className: "edit-link-overlay"
            });
            this.overlayEl_.classList.toggle("visible", a.hasLink && !a.isPhrasing);
            a.isEditing && this.renderEditor_();
            this.parentPane_.appendChild(this.overlayEl_);
            this.parentPane_.appendChild(this.el);
            this.updateCoordinates_();
            this.doc_.addEventListener("mousedown", this.editorLostFocusEvent_)
        },
        remove: function() {
            this.clearTimers_(!0);
            this.editorView_ = null;
            if (this.linkEditingView_) this.linkEditingView_.remove(),
            this.linkEditingView_ = null;
            this.uiModel_.clear();
            DOMUtils.detachElement(this.overlayEl_);
            LinkEditingPopupView.__super__.remove.call(this);
            this.doc_.removeEventListener("mousedown", this.editorLostFocusEvent_)
        },
        hoverFor: function(a) {
            if (!this.uiModel_.get("editing")) {
                var b = !!this.uiModel_.get("currentLink"),
                c = this.uiModel_.get("hovering");
                if (!b || b && c) this.showFor(a),
                this.uiModel_.set("hovering", !0)
            }
        },
        showFor: function(a) {
            this.clearTimers_();
            a !== this.uiModel_.get("currentLink") && (this.stopEditing_(), this.uiModel_.set("currentLink", a));
            this.el.classList.remove("hidden");
            this.overlayEl_.classList.remove("hidden")
        },
        startEditing: function() {
            this.uiModel_.set({
                editing: !0
            })
        },
        getTemplateData_: function() {
            var a = this.uiModel_.get("currentLink"),
            b = {
                hasLink: !!a,
                isEditing: this.uiModel_.get("editing"),
                displayText: "",
                linkType: LinkEditingPopupView.LINK_TYPES_.LINK
            };
            if (a) {
                b.linkType = this.getLinkType_(a);
                if (b.linkType === LinkEditingPopupView.LINK_TYPES_.GLOSSARY) b.displayText = a.getAttribute("title");
                else {
                    var c = a.getAttribute("href") || "";
                    b.displayText = c;
                    try {
                        b.resolvedHref = this.linkResolver_.resolve(c)
                    } catch(d) {}
                }
                b.isPhrasing = HTMLContent.isPhrasingElement(a);
                b.isMultiline = this.isMultilineElement_(a)
            }
            return b
        },
        renderEditor_: function() {
            var a = this.uiModel_.get("currentLink"),
            b = this.el.querySelector(".inline-link-editor"),
            c = this.getLinkType_(a);
            this.removeLinkEditingView_();
            c === LinkEditingPopupView.LINK_TYPES_.GLOSSARY ? this.linkEditingView_ = new GlossaryLinkEditingView({
                term: a.getAttribute("title") || "",
                parentPane: b
            }) : c === LinkEditingPopupView.LINK_TYPES_.REMARK ? (a = URLUtils.getBracketLinkDetails(a.getAttribute("href")), this.linkEditingView_ = new RemarkLinkEditingView({
                term: a.value,
                parentPane: b
            })) : this.linkEditingView_ = new LinkEditingView({
                href: a.getAttribute("href") || "",
                text: a.textContent,
                model: this.model,
                parentPane: b
            });
            this.listenTo(this.linkEditingView_, "change", this.linkEditedEvent_);
            this.listenTo(this.linkEditingView_, "close", this.stopEditing_);
            this.listenTo(this.linkEditingView_, "resize", this.updateCoordinates_);
            this.linkEditingView_.render();
            this.focusDeferTimer_ = _.defer(function() {
                this.linkEditingView_.focus();
                this.clearTimers_(!0)
            }.bind(this))
        },
        isMultilineElement_: function(a) {
            return _.uniq(_.pluck(a.getClientRects(), "bottom")).length > 1
        },
        reset_: function() {
            this.clearTimers_();
            this.repositionTimer_ = this.win_.setTimeout(function() {
                this.uiModel_.set({
                    currentLink: null,
                    editing: !1,
                    hovering: !1
                });
                this.clearTimers_(!0)
            }.bind(this), LinkEditingPopupView.HIDE_TRANSITION_DURATION_);
            this.el.classList.add("hidden");
            this.overlayEl_.classList.add("hidden");
            this.doc_.removeEventListener("mousedown", this.editorLostFocusEvent_)
        },
        updateCoordinates_: function() {
            var a = this.uiModel_.get("currentLink");
            if (a) {
                var b = HTMLContent.isPhrasingElement(a),
                c = this.isMultilineElement_(a),
                d = a.getBoundingClientRect(); ["width", "height", "top", "left"].forEach(function(a) {
                    this.overlayEl_.style[a] = d[a] + "px"
                },
                this);
                a = 0;
                b && !c && (a = -Math.round(this.el.clientWidth) / 2 + d.width / 2);
                this.el.style.top = d.bottom + "px";
                this.el.style.left = d.left + a + "px"
            } else["left", "top"].forEach(function(a) {
                this.overlayEl_.style[a] = "0px";
                this.el.style[a] = "0px"
            },
            this)
        },
        editorChangeEvent_: function() {
            var a = this.uiModel_.get("currentLink");
            a && (a.ownerDocument.contains(a) ? this.updateCoordinates_() : this.reset_())
        },
        editorLostFocusEvent_: function(a) {
            for (a = a.srcElement; a;) {
                if (a.matchesSelector && a.matchesSelector(".edit-link-popup")) return;
                a = a.parentNode
            }
            this.reset_()
        },
        editorSelectionEvent_: function() {
            var a = this.editorView_.getNodeNearSelection("a, dfn"),
            b = this.uiModel_.get("currentLink");
            b && b.ownerDocument.contains(b) && this.updateCoordinates_();
            a ? (this.uiModel_.set("hovering", !1), this.showFor(a)) : this.reset_()
        },
        startEditingEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) ? this.contentView_.getIframeWindow().focus() : this.startEditing()
        },
        stopEditing_: function() {
            this.contentView_.getIframeWindow().focus();
            this.removeLinkEditingView_();
            this.uiModel_.set("editing", !1);
            this.clearTimers_(!0)
        },
        linkEditedEvent_: function(a, b) {
            var c = "href",
            d = this.getLinkType_(this.uiModel_.get("currentLink"));
            d === LinkEditingPopupView.LINK_TYPES_.GLOSSARY ? c = "title": d === LinkEditingPopupView.LINK_TYPES_.REMARK && (a = "[remark:" + a + "]");
            this.trigger("change", this.uiModel_.get("currentLink"), c, a, b);
            this.stopEditing_()
        },
        removeLinkEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.trigger("remove", this.uiModel_.get("currentLink"));
            this.contentView_.getIframeWindow().focus()
        },
        removeLinkEditingView_: function() {
            if (this.linkEditingView_) this.linkEditingView_.remove(),
            this.stopListening(this.linkEditingView_),
            this.linkEditingView_ = null
        },
        clearTimers_: function(a) {
            this.win_.clearTimeout(this.repositionTimer_);
            this.repositionTimer_ = null;
            if (a) this.win_.clearTimeout(this.focusDeferTimer_),
            this.focusDeferTimer_ = null
        },
        getLinkType_: function(a) {
            var b = a.getAttribute("href");
            if (a.tagName.toLowerCase() === "dfn") return LinkEditingPopupView.LINK_TYPES_.GLOSSARY;
            else if (URLUtils.isBracketLink(b) && URLUtils.getBracketLinkDetails(b).type === "remark") return LinkEditingPopupView.LINK_TYPES_.REMARK;
            return LinkEditingPopupView.LINK_TYPES_.LINK
        },
        imageLoadedEvent_: function(a) {
            this.updateCoordinates_();
            a.target.removeEventListener("load", this.imageLoadedEventBound_)
        },
        linkChangedEvent_: function() {
            var a = this.uiModel_.get("currentLink"),
            b = this.uiModel_.previous("currentLink");
            a && a.querySelectorAll("img").forEach(function(a) {
                a.addEventListener("load", this.imageLoadedEventBound_)
            },
            this);
            b && b.querySelectorAll("img").forEach(function(a) {
                a.removeEventListener("load", this.imageLoadedEventBound_)
            },
            this)
        }
    });
    LinkEditingPopupView.RESET_DELAY_ = 150;
    LinkEditingPopupView.HIDE_TRANSITION_DURATION_ = 250;
    LinkEditingPopupView.LINK_TYPES_ = {
        LINK: "link",
        GLOSSARY: "glossary",
        REMARK: "remark"
    };
    window.LinkEditingView = Backbone.View.extend({
        model: null,
        events: {
            "click .tabs li": "toggleTabEvent_",
            "click .popup-close-button": "closePopupEvent_",
            "click .dialog-cancel": "closePopupEvent_",
            "click .template-browser li": "toggleTypeEvent_",
            "mousewheel .template-browser": "mousewheelEvent_"
        },
        existingHref_: null,
        existingText_: null,
        parentPane_: null,
        keyboard_: null,
        form_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.existingHref_ = a.href ? a.href.trim() : null;
            this.existingText_ = a.text ? a.text.trim() : null;
            this.parentPane_ = a.parentPane;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    cancel: this.closeEvent_.bind(this),
                    tab: this.handleTabEvent_.bind(this)
                })
            });
            this.listenTo(app.getProjectModel().get("exhibitTemplates"), "loaded", this.render)
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/linkEditing"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            app.getKeyboardManager().activate(this.keyboard_);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.submitCurrentFormEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            app.getKeyboardManager().remove(this.keyboard_);
            LinkEditingView.__super__.remove.call(this)
        },
        focus: function() {
            var a = this.el.querySelector('section[data-tab="' + this.el.dataset.activeTab + '"] input:not([name="text"])');
            DOMUtils.selectAllAndFocusInput(a)
        },
        getTemplateData_: function() {
            var a = app.getProjectModel().get("exhibitTemplates"),
            b = a.getOrderedLabels();
            if (b[0]) b[0].isActive = !0;
            return {
                existingPath: this.existingHref_,
                existingText: this.existingText_,
                templatesLabels: b,
                templatesLoaded: a.isLoaded()
            }
        },
        toggleTabEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) this.el.dataset.activeTab = b.dataset.tabId,
            this.focus(),
            this.trigger("resize")
        },
        toggleTypeEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = this.el.querySelector(".template-browser li.active");
                c !== b && (c && c.classList.remove("active"), b.classList.add("active"))
            }
        },
        updateTextAndURL_: function() {
            var a = this.el.querySelector('input[name="href"]').value.trim();
            URLUtils.looksLikeSchemelessURL(a) && (a = "http://" + a);
            var b = this.el.querySelector('input[name="text').value.trim();
            this.updateLink_(a, b)
        },
        createCard_: function() {
            var a = this.el.querySelector(".card-creation-form form"),
            a = DOMUtils.getFormValues(a),
            b = this.el.querySelector(".template-browser li.active");
            a.type = b.dataset.type;
            this.saveNewCard_(a)
        },
        disableInputs_: function() {
            this.el.querySelectorAll("input,button").forEach(function(a) {
                a.setAttribute("disabled", "disabled")
            },
            this)
        },
        enableInputs_: function() {
            this.el.querySelectorAll("input,button").forEach(function(a) {
                a.removeAttribute("disabled")
            },
            this)
        },
        saveNewCard_: function(a) {
            this.el.classList.add("saving");
            this.disableInputs_();
            this.updateTOCForSave_(a)
        },
        updateTOCForSave_: function(a) {
            var b = new TOCDocumentModel({
                project: app.getProjectModel()
            });
            b.on("loaded",
            function(b) {
                this.createAndSaveCard_(b, a)
            },
            this);
            b.on("error",
            function(a, b) {
                this.enableInputs_();
                console.error("Failed to load the latest TOC", b);
                app.getMessageView().error(LinkEditingView.ERRORS_.CONNECTION_FAILED)
            },
            this);
            b.fetch()
        },
        createAndSaveCard_: function(a, b) {
            var c = new TOCExhibitModel;
            b.isNew = !0;
            c.set(b);
            var d = a.findExhibit(this.model.getSourceLocation());
            d ? (d.get("exhibits").add(c), a.generateExhibitPathsIfNeeded(), a.save({},
            {
                success: function() {
                    this.updateLink_(URI(c.get("path")).filename())
                }.bind(this),
                error: function(a, b) {
                    this.enableInputs_();
                    console.error("Failed to save the TOC", b);
                    app.getMessageView().error(LinkEditingView.ERRORS_.CONNECTION_FAILED)
                }.bind(this)
            })) : (this.enableInputs_(), app.getMessageView().error(LinkEditingView.ERRORS_.EXHIBIT_NOT_FOUND))
        },
        updateLink_: function(a, b) {
            this.el.classList.remove("saving");
            this.existingHref_ = a;
            this.enableInputs_();
            this.trigger("change", a, b)
        },
        closeEvent_: function() {
            this.trigger("close")
        },
        submitCurrentFormEvent_: function() {
            this.el.dataset.activeTab === LinkEditingView.NEW_CARD_TAB_ ? this.createCard_() : this.updateTextAndURL_()
        },
        handleTabEvent_: function(a) {
            var b = DOMUtils.getParent(a.target, "section").querySelectorAll("input");
            a.target === b[b.length - 1] && (b[0].focus(), a.preventDefault())
        },
        mousewheelEvent_: function(a, b) {
            Hacks.preventVerticalParentScroll(a, b)
        }
    });
    LinkEditingView.NEW_CARD_TAB_ = "new-card";
    LinkEditingView.ERRORS_ = {
        CONNECTION_FAILED: "Could not connect to the server. Please try again.",
        EXHIBIT_NOT_FOUND: "Could not find your exhibit in the latest revision. Please reload."
    };
    window.RemarkLinkEditingView = TermLinkEditingView.extend({
        initialize: function(a) {
            RemarkLinkEditingView.__super__.initialize.call(this, a);
            this.listenTo(app.getProjectModel().get("remarks"), "loaded change", this.renderTermFilterList_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/remarkLinkEditing"](this.getTemplateData_()));
            this.renderTermFilterList_();
            this.parentPane_.appendChild(this.el);
            app.getKeyboardManager().activate(this.keyboard_)
        },
        getTemplateData_: function() {
            var a = this.getHelpURLs_();
            return {
                searchTerm: this.uiModel_.get("searchTerm"),
                remarksURL: a.remarksURL,
                userGuideURL: a.userGuideURL
            }
        },
        renderTermFilterList_: function() {
            var a = this.el.querySelector(".term-filter");
            if (a) {
                a.innerHTML = "";
                var b = this.getTermFilterTemplateData_(),
                c = Templates["project/editing/remarksTermFilter"](b);
                if (b.preview) this.removeSnippetView_(),
                this.snippetView_ = new SnippetContentView({
                    parentPane: c.querySelector(".snippet"),
                    model: this.getSelectedEntry_()
                }),
                this.snippetView_.render();
                a.appendChild(c)
            }
        },
        getTermFilterTemplateData_: function() {
            var a = {
                preview: !1,
                hasTerms: !1
            },
            b = app.getProjectModel().get("remarks"),
            c = b.get("rootPiece"); ! c || !c.length ? (b = this.getHelpURLs_(), a.remarksURL = b.remarksURL, a.userGuideURL = b.userGuideURL) : this.getSelectedEntry_() ? a.preview = !0 : (a.terms = this.getFilteredTerms_(b), a.hasTerms = !0);
            return a
        },
        getSelectedEntry_: function() {
            var a = app.getProjectModel().get("remarks"),
            b = this.uiModel_.get("selectedTerm");
            return a.getRemark(b)
        },
        getFilteredTerms_: function(a) {
            var b = this.uiModel_.get("searchTerm"),
            c = RegExp(StringUtils.escapeRegExp(b), "i");
            return a.get("rootPiece").filter(function(a) {
                return c.test(a.get("key"))
            }).map(function(a) {
                return {
                    id: a.get("key")
                }
            }).sort(function(a, b) {
                return a.id.localeCompare(b.id)
            })
        },
        getHelpURLs_: function() {
            var a = app.getProjectModel(),
            b = a.get("toc").get("remarksPath"),
            c = {
                userGuideURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/92c9c39fa5f64df0985012727d499244/55504402f4804780afd3b9ddbd89ea8a")
            };
            if (b) b = ExhibitDocumentModel.getFilePathFromSourceLocation(b),
            c.remarksURL = URLRouter.getURLForPath(a.get("shortName"), b);
            return c
        }
    });
    window.ListIndentationHandler = BaseClass.extend({
        target_: null,
        contentDoc_: null,
        domObserver_: null,
        keyboard_: null,
        initialize: function(a) {
            this.target_ = a.target;
            this.contentDoc_ = this.target_.ownerDocument;
            this.watchDOM_();
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    tab: this.handleTabKey_.bind(this),
                    "shift+tab": this.handleTabKey_.bind(this)
                })
            })
        },
        updateTarget: function(a) {
            this.stopWatchingChanges();
            this.target_ = a;
            this.watchDOM_();
            this.enable()
        },
        enable: function() {
            app.getKeyboardManager().activate(this.keyboard_);
            this.startWatchingChanges()
        },
        disable: function() {
            app.getKeyboardManager().remove(this.keyboard_);
            this.stopWatchingChanges()
        },
        remove: function() {
            this.disable()
        },
        startWatchingChanges: function() {
            DOMUtils.startDOMObserver(this.domObserver_)
        },
        stopWatchingChanges: function() {
            DOMUtils.stopDOMObserver(this.domObserver_)
        },
        watchDOM_: function() {
            this.domObserver_ = new MutationSummary({
                callback: this.handleDOMChanges_.bind(this),
                rootNode: this.target_,
                queries: [{
                    element: "ol, ul"
                },
                {
                    element: "li"
                },
                {
                    element: "br"
                },
                {
                    characterData: !0
                }]
            })
        },
        handleDOMChanges_: function(a) {
            this.handleListChanges_(a[0]);
            this.handleListItemChanges_(a[1]);
            this.handleBreakChanges_(a[2]);
            this.handleCharacterDataChanges_(a[3])
        },
        handleListChanges_: function(a) {
            a.reparented.forEach(function(a) {
                this.isList_(a.parentNode) && a.previousElementSibling && a.previousElementSibling.appendChild(a)
            },
            this)
        },
        handleListItemChanges_: function(a) {
            a.added.forEach(function(a) {
                if (a.firstChild && a.firstChild.nodeName.toLowerCase() === "br" && (a = a.childNodes[1]) && a.nodeType === Node.TEXT_NODE) a.nodeValue = a.data.replace(/^\u00A0(\s*)$/, "$1")
            },
            this)
        },
        handleBreakChanges_: function(a) {
            a.removed.forEach(function(b) {
                b = a.getOldParentNode(b);
                b.tagName.toLowerCase() === "li" && this.fixDoubleIndentation_(b)
            },
            this)
        },
        handleCharacterDataChanges_: function(a) {
            a.removed.forEach(function(b) {
                for (; b !== this.target_;) if (b = a.getOldParentNode(b), this.isList_(b)) {
                    if (!b.firstElementChild) break;
                    this.fixDoubleIndentation_(b.firstElementChild);
                    break
                } else if (b.tagName.toLowerCase() === "li") {
                    this.fixDoubleIndentation_(b);
                    break
                }
            },
            this)
        },
        handleTabKey_: function(a) {
            var b = this.contentDoc_.getSelection();
            if (b && b.rangeCount && (b = b.getRangeAt(0), this.rangeContainedInSingleList_(b))) {
                var c = this.getSelectedListItems_(b);
                if (a.shiftKey) {
                    if (!this.canOutdent_(b, c)) return
                } else if (!this.canIndent_(b, c)) return;
                this.stopWatchingChanges();
                var d = new RestorableRange;
                d.save(b);
                a.shiftKey ? (c.included.forEach(this.outdentListItem_, this), c.excluded.forEach(this.indentListItem_, this)) : (c.included.forEach(this.indentListItem_, this), c.excluded.forEach(this.outdentListItem_, this));
                this.startWatchingChanges();
                d.restore(this.contentDoc_, !0);
                this.trigger("change", {
                    rangeBeforeChange: d,
                    rangeAfterChange: d
                })
            }
        },
        canIndent_: function(a, b) {
            if (!b.included[0].previousElementSibling) return ! 1;
            var c = Array(ListIndentationHandler.MAX_INDENTATION_ + 1).join("li ");
            return ! _.some(b.included,
            function(b) {
                return b.matchesSelector(c) ? !0 : _.some(b.querySelectorAll(c), a.intersectsNode, a)
            })
        },
        canOutdent_: function(a, b) {
            return _.some(b.included,
            function(a) {
                return ! DOMUtils.getParent(a, "li")
            }) ? !1 : !_.some(b.excluded,
            function(a) {
                return ! a.previousElementSibling
            })
        },
        indentListItem_: function(a) {
            for (var b = a.parentNode,
            c = a.previousElementSibling,
            d = null,
            e = c.childNodes.length - 1; e >= 0; e--) {
                var f = c.childNodes[e];
                if (!DOMUtils.isWhitespaceNode(f)) {
                    d = f;
                    break
                }
            }
            if (!d || !this.isList_(d)) b = this.contentDoc_.createElement(b.tagName.toLowerCase()),
            c.appendChild(b);
            c.lastElementChild.appendChild(a)
        },
        outdentListItem_: function(a) {
            for (ElementNestingUtils.splitParentAroundElement(a); a.nextSibling;) a.appendChild(a.nextSibling);
            var b = DOMUtils.getParent(a, "li");
            b.parentNode.insertBefore(a, b.nextSibling)
        },
        getSelectedListItems_: function(a) {
            var b = a.commonAncestorContainer; ! this.isList_(b) && b.nodeName.toLowerCase() !== "li" && (b = DOMUtils.getParent(b, "ol, ul, li"));
            var c = this.contentDoc_.createTreeWalker(b, NodeFilter.SHOW_ELEMENT, {
                acceptNode: function(a) {
                    return a.tagName.toLowerCase() === "li" ? NodeFilter.FILTER_ACCEPT: NodeFilter.FILTER_SKIP
                }
            }),
            b = this.getListItemsInRange_(a, c);
            c.currentNode = b[b.length - 1];
            a = this.getListItemsNotInRange_(a, c);
            return {
                included: b,
                excluded: a
            }
        },
        getListItemsInRange_: function(a, b) {
            var c = [];
            b.currentNode = a.startContainer;
            for (b.currentNode.nodeName.toLowerCase() !== "li" && b.parentNode(); a.intersectsNode(b.currentNode);) for (c.push(b.currentNode); ! b.nextSibling();) if (!b.parentNode()) return c;
            return c
        },
        getListItemsNotInRange_: function(a, b) {
            for (var c = [], d = b.currentNode; a.intersectsNode(b.currentNode);) if (!b.nextNode()) return c;
            for (; d.contains(b.currentNode);) for (c.push(b.currentNode); ! b.nextSibling();) if (!b.parentNode()) return c;
            return c
        },
        rangeContainedInSingleList_: function(a) {
            return this.isList_(a.commonAncestorContainer) || !!DOMUtils.getParent(a.commonAncestorContainer, "ol, ul")
        },
        fixDoubleIndentation_: function(a) {
            var b = _.find(a.childNodes,
            function(a) {
                return ! DOMUtils.isWhitespaceNode(a)
            });
            if (b && this.isList_(b)) if (a.previousElementSibling) {
                for (; a.firstChild;) a.previousElementSibling.appendChild(a.firstChild);
                DOMUtils.detachElement(a)
            } else DOMUtils.unwrapElement(a).forEach(function(a) {
                a.parentNode.tagName === a.nodeName ? DOMUtils.unwrapElement(a) : (ElementNestingUtils.fixElementNesting(a, this.contentDoc_), DOMUtils.reparentNakedPhrasingNodes(this.contentDoc_))
            },
            this)
        },
        isList_: function(a) {
            a = a.nodeName.toLowerCase();
            return a === "ol" || a === "ul"
        }
    });
    ListIndentationHandler.MAX_INDENTATION_ = 8;
    window.RichTextBlockFormatView = Backbone.View.extend({
        richTextToolbarView_: null,
        richTextEditingView_: null,
        contentDoc_: null,
        contentWin_: null,
        blockType_: null,
        disabled_: null,
        events: {
            "mousedown .ui-slider": "preventBlur_",
            'change input[name="block-type"]': "changeBlockTypeEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.richTextToolbarView_ = a.richTextToolbarView;
            this.richTextEditingView_ = a.richTextEditingView;
            this.contentWin_ = this.richTextEditingView_.getContentView().getIframeWindow();
            this.contentDoc_ = this.richTextEditingView_.getContentView().getIframeDocument();
            this.win_ = a.window || window;
            this.listenTo(this.richTextEditingView_, "blur", this.onBlur_);
            this.listenTo(this.richTextEditingView_, "focus", this.onFocus_);
            this.listenTo(this.richTextEditingView_, "selection", this.updateContentBlockType_);
            this.listenTo(this.richTextEditingView_, "change", this.updateContentBlockType_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/richTextBlockFormat"](this.getTemplateData_()));
            this.richTextToolbarView_.getRichTextBlockFormatArea().appendChild(this.el);
            this.updateToggle_(null);
            this.disabled_ = !0
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            RichTextBlockFormatView.__super__.remove.apply(this, arguments)
        },
        onBlur_: function() {
            this.disabled_ || this.disable_()
        },
        onFocus_: function() {
            this.richTextEditingView_.isEditingAllowed() && this.win_.setTimeout(this.updateContentBlockType_.bind(this), 1)
        },
        getTemplateData_: function() {
            var a = RichTextBlockFormatView.SUPPORTED_BLOCK_TYPES,
            b = Object.keys(a).map(function(b) {
                return {
                    displayValue: a[b],
                    value: b,
                    checked: b === this.blockType_
                }
            },
            this);
            return {
                currentBlockType: this.getDisplayBlockType_(this.blockType_),
                blockTypes: b
            }
        },
        getDisplayBlockType_: function(a) {
            return RichTextBlockFormatView.SUPPORTED_BLOCK_TYPES[a] || null
        },
        disable_: function() {
            this.el.querySelector(".ui-slider").classList.add("disabled");
            this.updateToggle_(null);
            this.disabled_ = !0
        },
        enable_: function() {
            this.el.querySelector(".ui-slider").classList.remove("disabled");
            this.disabled_ = !1
        },
        updateToggle_: function(a) {
            var b = this.getDisplayBlockType_(a);
            if (b) this.blockType_ = a,
            this.el.querySelector(".current-block-type").textContent = b,
            this.el.querySelector('input[name="block-type"][value="' + this.blockType_ + '"]').checked = !0;
            else {
                this.el.querySelector(".current-block-type").textContent = "Format text";
                if (this.blockType_) this.el.querySelector('input[name="block-type"][value="' + this.blockType_ + '"]').checked = !1;
                this.blockType_ = null
            }
        },
        preventBlur_: function(a) {
            DOMUtils.isSecondaryClick(a) || a.preventDefault()
        },
        updateContentBlockType_: function() {
            var a = this.formattableBlockElement_(),
            b = this.formattableBlockElement_(this.contentWin_.getSelection().focusNode);
            a && b && a === b ? (a = a.tagName.toLowerCase(), a !== this.blockType_ && (this.disabled_ && this.enable_(), this.updateToggle_(a))) : this.disabled_ || this.disable_()
        },
        formattableBlockElement_: function(a) {
            if (!a && (a = this.contentWin_.getSelection().anchorNode, !a)) return null;
            if (a.nodeType == Node.TEXT_NODE) a = a.parentElement;
            for (; a;) {
                var b = a.tagName.toLowerCase();
                if (RichTextBlockFormatView.FORMATTABLE_BLOCK_TYPES[b]) break;
                if (HTMLContent.isCategory(HTMLContent.CATEGORY.BLOCK, a)) return null;
                a = a.parentElement
            }
            return a
        },
        changeBlockTypeEvent_: function() {
            var a = this.el.querySelector('input[name="block-type"]:checked');
            a ? this.setBlockType_(a.value) : console.error("Somehow we do not have a checked radio button needed for formatting the block type!")
        },
        setBlockType_: function(a) {
            var b = this.richTextEditingView_.getSelection(),
            c = this.formattableBlockElement_(),
            d = this.contentDoc_.createElement(a);
            for (Array.prototype.forEach.call(c.attributes,
            function(a) {
                d.setAttribute(a.name, a.value)
            }); c.childNodes.length > 0;) a = c.firstChild,
            c.removeChild(a),
            d.appendChild(a);
            c.parentNode.replaceChild(d, c);
            b.restore(this.contentDoc_);
            this.richTextEditingView_.triggerChange({
                rangeBeforeChange: b,
                rangeAfterChange: b
            })
        }
    });
    RichTextBlockFormatView.SUPPORTED_BLOCK_TYPES = {
        p: "Paragraph",
        h1: "Heading 1",
        h2: "Heading 2",
        h3: "Heading 3",
        h4: "Heading 4",
        h5: "Heading 5",
        h6: "Heading 6",
        blockquote: "Blockquote"
    };
    RichTextBlockFormatView.FORMATTABLE_BLOCK_TYPES = {
        address: !0,
        article: !0,
        aside: !0,
        blockquote: !0,
        dd: !0,
        div: !0,
        dl: !0,
        dt: !0,
        footer: !0,
        h1: !0,
        h2: !0,
        h3: !0,
        h4: !0,
        h5: !0,
        h6: !0,
        header: !0,
        hgroup: !0,
        main: !0,
        nav: !0,
        p: !0,
        pre: !0,
        section: !0
    };
    window.RichTextPaletteView = Backbone.View.extend({
        model: null,
        richTextToolbarView_: null,
        richTextEditingView_: null,
        sliderEnableTimer_: null,
        contentDoc_: null,
        contentWin_: null,
        disabled_: null,
        keyboard_: null,
        contentConfig_: null,
        lastSelectedNode_: null,
        events: {
            "mousedown button": "buttonMouseEvent_",
            "mousedown .link-slider li": "linkSelectionEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.richTextToolbarView_ = a.richTextToolbarView;
            this.richTextEditingView_ = a.richTextEditingView;
            this.contentWin_ = this.richTextEditingView_.getContentView().getIframeWindow();
            this.contentDoc_ = this.richTextEditingView_.getContentView().getIframeDocument();
            this.win_ = a.window || window;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    bold: this.buttonKeyboardEvent_.bind(this, "bold"),
                    italicize: this.buttonKeyboardEvent_.bind(this, "italic"),
                    underline: this.buttonKeyboardEvent_.bind(this, "underline"),
                    link: this.applyLink_.bind(this, "link")
                })
            });
            this.contentConfig_ = app.getProjectModel().get("contentConfig");
            this.listenToOnce(this.contentConfig_, "loaded", this.contentConfigLoaded_);
            this.listenTo(this.richTextEditingView_, "blur", this.onBlur_);
            this.listenTo(this.richTextEditingView_, "focus", this.onFocus_);
            this.listenTo(this.richTextEditingView_, "enable", this.onEnable_);
            this.listenTo(this.richTextEditingView_, "selection", this.selectionChanged_);
            this.listenTo(this.richTextEditingView_, "change", this.updateToolbar_);
            this.listenTo(app, "contentPaneResized", this.render);
            this.renderBound_ = this.render.bind(this);
            this.win_.addEventListener("resize", this.renderBound_)
        },
        remove: function() {
            app.getKeyboardManager().remove(this.keyboard_);
            this.clearTimers_();
            this.win_.removeEventListener("resize", this.renderBound_);
            DOMUtils.detachElement(this.el);
            RichTextPaletteView.__super__.remove.call(this)
        },
        render: function() {
            this.clearTimers_();
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/editing/richTextPalette"](a));
            this.richTextToolbarView_.getRichTextPaletteArea().appendChild(this.el);
            this.disabled_ = !0
        },
        onBlur_: function() {
            this.disable_()
        },
        onFocus_: function() {
            this.richTextEditingView_.isEditingAllowed() && this.win_.setTimeout(this.updateToolbar_.bind(this), 1)
        },
        onEnable_: function() {
            app.getKeyboardManager().activate(this.keyboard_)
        },
        getTemplateData_: function() {
            for (var a = this.getEntries_(), b = this.determineAvailableWidth_(), c = RichTextPaletteView.OVERFLOW_LEEWAY_, d = 0; c < b && d < a.length;) a[d].separator || (c += RichTextPaletteView.ENTRY_WIDTH_),
            d++;
            c > b && (d = Math.max(d - 1, 0));
            b = a.splice(d, a.length - d);
            a.length && a[a.length - 1].separator && a.pop();
            b.length && (b[0].separator && b.shift(), b[b.length - 1].separator && b.pop());
            b.length === 1 && (a = this.getEntries_(), b = []);
            return {
                entries: a,
                overflowRows: this.getOverflowRows_(b)
            }
        },
        getOverflowRows_: function(a) {
            for (var b = 0,
            c = [], d = [{
                entries: c
            }]; a.length;) {
                var e = a.shift();
                if (e.links) a.unshift.apply(a, e.links);
                else {
                    if (e.separator) {
                        if (b === 0) continue
                    } else b++;
                    c.push(e);
                    b === RichTextPaletteView.ENTRIES_PER_ROW_ && (c = [], b = 0, d.push({
                        entries: c
                    }))
                }
            }
            c.length || d.pop();
            return d
        },
        determineAvailableWidth_: function() {
            var a = this.richTextToolbarView_.getContentToolbarView().getElement().getBoundingClientRect(),
            b = this.richTextToolbarView_.getRichTextPaletteArea().getBoundingClientRect();
            return Math.max(a.right - b.left, 0)
        },
        getEntries_: function() {
            var a = app.userHasPermission(PermissionsModel.PERMISSIONS.BETA_USER),
            b = RichTextPaletteView.ITEMS_.slice(0),
            c = _.clone(RichTextPaletteView.BUTTONS_);
            this.addContentButtonEntries_(b, c);
            return b.reduce(function(b, e) {
                var f = c[e];
                e === "-" ? b.length && !b[b.length - 1].separator && b.push({
                    separator: !0
                }) : e === "link" ? b.push(this.getLinksTemplate_()) : f ? (!f.beta || a) && b.push(this.getButtonTemplate_(f)) : console.error("Programming Error: Unknown button " + e + ". Only use buttons in the RichTextPaletteView.BUTTONS_ mapping.");
                return b
            }.bind(this), [])
        },
        addContentButtonEntries_: function(a, b) {
            if (this.contentConfig_.isLoaded() && this.richTextEditingView_.getNodeNearSelection()) {
                var c = this.contentConfig_.get("contentButtons");
                if (c) for (var d in c) if (this.richTextEditingView_.getNodeNearSelection(d)) {
                    var e = c[d].options;
                    a.push("-");
                    e.forEach(function(c) {
                        a.push(c.title);
                        b[c.title] = {
                            title: c.title,
                            command: RichTextPaletteView.CUSTOM_CONTENT_COMMAND_,
                            isCustomContentButton: !0,
                            cssClasses: c.classes.slice(0).join(","),
                            selector: d,
                            icon: c.icon
                        }
                    })
                }
            }
        },
        getLinksTemplate_: function() {
            var a = app.getKeyboardResolver().getHumanReadableKeyBinding("link"),
            a = [{
                command: "createLink",
                linkType: RichTextPaletteView.LINK_TYPES_.LINK,
                title: "Insert Link (" + a + ")",
                usesExecCommand: !0
            }],
            b = app.getProjectModel().get("toc");
            b.get("glossaryPath") && a.push({
                command: "createLink",
                linkType: RichTextPaletteView.LINK_TYPES_.GLOSSARY,
                title: "Insert Definition",
                usesExecCommand: !0
            });
            b.get("remarksPath") && a.push({
                command: "createLink",
                linkType: RichTextPaletteView.LINK_TYPES_.REMARK,
                title: "Insert Remark",
                usesExecCommand: !0
            });
            return {
                links: a
            }
        },
        getButtonTemplate_: function(a) {
            var b = a.title,
            c = app.getKeyboardResolver().getHumanReadableKeyBinding(a.binding);
            c && (b += " (" + c + ")");
            return {
                command: a.command,
                title: b,
                usesExecCommand: a.usesExecCommand,
                isCustomContentButton: a.isCustomContentButton,
                cssClasses: a.cssClasses,
                selector: a.selector,
                icon: a.icon
            }
        },
        disable_: function() {
            this.disableButtons_();
            app.getKeyboardManager().remove(this.keyboard_);
            this.disabled_ = !0
        },
        disableButtons_: function(a) { (a ? this.el.querySelectorAll("button[data-uses-exec-command]") : this.el.querySelectorAll("button")).forEach(function(a) {
                a.disabled = !0;
                a.classList.remove("pressed");
                this.disableLinkSlider_(a)
            },
            this)
        },
        disableLinkSlider_: function(a) {
            var b = this.el.querySelector(".link-slider");
            if (b) {
                if (b.contains(a)) a.dataset.linkType = RichTextPaletteView.LINK_TYPES_.LINK;
                b.classList.add("disabled")
            }
        },
        enable_: function() {
            this.el.querySelectorAll("button").forEach(function(a) {
                a.disabled = !1
            });
            app.getKeyboardManager().activate(this.keyboard_);
            this.disabled_ = !1
        },
        buttonMouseEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a.stopPropagation(), this.applyCommand_(b.dataset.command, b))
        },
        linkSelectionEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a.stopPropagation(), this.applyLink_(b.dataset.linkType))
        },
        buttonKeyboardEvent_: function(a, b) {
            b.preventDefault();
            this.applyCommand_(a)
        },
        applyCommand_: function(a, b) {
            if (a === "showOverflowToolbar") this.el.querySelector(".overflow-button").classList.toggle("pressed");
            else if (b && a === "createLink") {
                var c = b.dataset.linkType;
                c && !this.getSelectionLinkType_() ? this.applyLink_(c) : this.removeLink_()
            } else b && a === RichTextPaletteView.CUSTOM_CONTENT_COMMAND_ ? this.applyCustomContentButton_(b) : this.richTextEditingView_.execCommand(a, null, this.updateToolbar_.bind(this))
        },
        applyCustomContentButton_: function(a) {
            var b = a.dataset.cssClasses.split(","),
            c = a.dataset.selector,
            d = this.richTextEditingView_.getNodeNearSelection(c);
            if (d) {
                var e = b.every(function(a) {
                    return d.classList.contains(a)
                }),
                f = this.richTextEditingView_.getSelection();
                this.el.querySelectorAll('button[data-selector="' + c + '"]').forEach(function(a) {
                    a.classList.remove("pressed");
                    a.dataset.cssClasses.split(",").forEach(function(a) {
                        d.classList.remove(a)
                    })
                });
                b.forEach(function(a) {
                    e || d.classList.add(a)
                });
                e ? a.classList.remove("pressed") : a.classList.add("pressed");
                this.richTextEditingView_.triggerChange({
                    rangeBeforeChange: f,
                    rangeAfterChange: f
                })
            }
        },
        applyLink_: function(a) {
            if (!this.getSelectionLinkType_() && this.selectionIsLinkable_()) {
                var b = RichTextPaletteView.EMPTY_LINK_HREF_ + "-" + UUID();
                this.richTextEditingView_.execCommand("createLink", b,
                function() {
                    var c = this.contentDoc_.querySelectorAll('a[href="' + b + '"]'),
                    c = c.map(function(b) {
                        b.setAttribute("href", "");
                        if (a === RichTextPaletteView.LINK_TYPES_.GLOSSARY) {
                            var c = b.ownerDocument.createElement("dfn");
                            c.setAttribute("title", "");
                            DOMUtils.replaceNode(b, c, !0);
                            b = c
                        } else a === RichTextPaletteView.LINK_TYPES_.REMARK && b.setAttribute("href", "[remark:]");
                        return b
                    }),
                    d = this.contentWin_.getSelection();
                    d.removeAllRanges();
                    var e = this.contentDoc_.createRange();
                    e.selectNodeContents(c[0]);
                    d.addRange(e);
                    d = this.richTextEditingView_.getLinkEditingPopupView();
                    d.showFor(c[0]);
                    d.startEditing()
                }.bind(this))
            }
        },
        selectionChanged_: function() {
            var a = this.richTextEditingView_.getNodeNearSelection();
            if (!a || a !== this.lastSelectedNode_) this.render(),
            this.lastSelectedNode_ = a;
            this.updateToolbar_()
        },
        contentConfigLoaded_: function() {
            this.render();
            this.updateToolbar_()
        },
        updateToolbar_: function() {
            this.clearTimers_();
            this.richTextEditingView_.getSelection() ? (this.disabled_ && this.enable_(), this.richTextEditingView_.isWholeNodeSelected() && this.disableButtons_(!0), this.el.querySelectorAll("button").forEach(function(a) {
                var b = !1,
                c = a.dataset.command;
                c === RichTextPaletteView.CUSTOM_CONTENT_COMMAND_ ? b = this.isCustomContentButtonPressed_(a) : (b = this.contentDoc_.queryCommandState(c), c === "createLink" && (b = this.updateLinkButtonState_(a)));
                a.classList.toggle("pressed", b)
            },
            this)) : this.disable_()
        },
        updateLinkButtonState_: function(a) {
            var b = this.getSelectionLinkType_(),
            c = this.contentWin_.getSelection().isCollapsed,
            d = !!b,
            e = this.el.querySelector(".link-slider");
            if (e && e.contains(a)) {
                if (b = this.selectionIsLinkable_(), a.disabled = c || !b, e.classList.add("disabled"), !d && b) this.sliderEnableTimer_ = this.win_.setTimeout(function() {
                    e.classList.remove("disabled");
                    this.sliderEnableTimer_ = null
                }.bind(this), RichTextPaletteView.SLIDER_ENABLE_DELAY_)
            } else {
                var f = b === a.dataset.linkType,
                d = d && f;
                a.disabled = c || b && !f
            }
            return d
        },
        isCustomContentButtonPressed_: function(a) {
            var b = a.dataset.cssClasses.split(","),
            c = this.richTextEditingView_.getNodeNearSelection(a.dataset.selector);
            return ! c ? !1 : b.every(function(a) {
                return c.classList.contains(a)
            })
        },
        removeLink_: function() {
            var a = this.contentWin_.getSelection().getRangeAt(0),
            b = a.commonAncestorContainer,
            c = [],
            d = new RestorableRange;
            d.save(a);
            b.nodeType === Node.ELEMENT_NODE && b.querySelectorAll("dfn").forEach(function(a) {
                var b = this.replaceDefinition_(a);
                c.push({
                    definition: a,
                    uuid: b
                })
            },
            this);
            if (a = DOMUtils.getParent(b.nodeType === Node.ELEMENT_NODE ? b.firstChild: b, "dfn")) {
                var e = this.replaceDefinition_(a);
                c.push({
                    definition: a,
                    uuid: e
                })
            }
            d.restore(b.ownerDocument);
            this.richTextEditingView_.execCommand("unlink", null, this.updateToolbar_.bind(this));
            c.forEach(function(a) {
                this.restoreDefinition_(a.definition, a.uuid)
            },
            this)
        },
        replaceDefinition_: function(a) {
            var b = a.ownerDocument.createElement("a"),
            c = UUID();
            b.setAttribute(RichTextPaletteView.DFN_ID_ATTRIBUTE_NAME_, c);
            DOMUtils.replaceNode(a, b, !0);
            return c
        },
        restoreDefinition_: function(a, b) {
            a.ownerDocument.querySelectorAll("a[" + RichTextPaletteView.DFN_ID_ATTRIBUTE_NAME_ + '="' + b + '"]').forEach(function(b) {
                var d = a.cloneNode();
                DOMUtils.replaceNode(b, d, !0)
            })
        },
        getSelectionLinkType_: function() {
            var a = DOMUtils.getRange(this.contentWin_);
            if (!a) return null;
            var b = a.cloneContents().querySelector("a, dfn");
            if (!b) {
                a = a.commonAncestorContainer;
                if (a.nodeType === Node.ELEMENT_NODE) {
                    var c = a.tagName.toLowerCase();
                    if (c === "a" || c === "dfn") b = a
                }
                b || (b = DOMUtils.getParent(a, "a, dfn"))
            }
            return ! b ? null: b.tagName.toLowerCase() === "dfn" ? RichTextPaletteView.LINK_TYPES_.GLOSSARY: /\[remark/.test(b.getAttribute("href")) ? RichTextPaletteView.LINK_TYPES_.REMARK: RichTextPaletteView.LINK_TYPES_.LINK
        },
        selectionIsLinkable_: function() {
            var a = this.contentWin_.getSelection();
            if (a.isCollapsed) return ! 1;
            a = a.getRangeAt(0);
            return a.endContainer.parentElement !== a.startContainer.parentElement ? !1 : a.cloneContents().querySelectorAll("*").every(function(a) {
                return a.nodeType !== Node.ELEMENT_NODE || HTMLContent.isPhrasingElement(a)
            })
        },
        clearTimers_: function() {
            if (this.sliderEnableTimer_) this.win_.clearTimeout(this.sliderEnableTimer_),
            this.sliderEnableTimer_ = null
        }
    });
    RichTextPaletteView.ITEMS_ = "orderedList,unorderedList,-,link,-,bold,italic,underline,superscript,subscript".split(",");
    RichTextPaletteView.BUTTONS_ = {
        bold: {
            command: "bold",
            binding: "bold",
            title: "Bold",
            usesExecCommand: !0
        },
        italic: {
            command: "italic",
            binding: "italicize",
            title: "Italicize",
            usesExecCommand: !0
        },
        underline: {
            command: "underline",
            binding: "underline",
            title: "Underline",
            usesExecCommand: !0
        },
        superscript: {
            command: "superscript",
            title: "Superscript",
            usesExecCommand: !0
        },
        subscript: {
            command: "subscript",
            title: "Subscript",
            usesExecCommand: !0
        },
        orderedList: {
            command: "insertOrderedList",
            title: "Numbered List",
            usesExecCommand: !0
        },
        unorderedList: {
            command: "insertUnorderedList",
            title: "Bulleted List",
            usesExecCommand: !0
        }
    };
    RichTextPaletteView.LINK_TYPES_ = {
        LINK: "link",
        GLOSSARY: "glossary",
        REMARK: "remark"
    };
    RichTextPaletteView.OVERFLOW_LEEWAY_ = 175;
    RichTextPaletteView.ENTRY_WIDTH_ = 40;
    RichTextPaletteView.ENTRIES_PER_ROW_ = 5;
    RichTextPaletteView.SLIDER_ENABLE_DELAY_ = 200;
    RichTextPaletteView.CUSTOM_CONTENT_COMMAND_ = "custom";
    RichTextPaletteView.EMPTY_LINK_HREF_ = "s9-rich-text-palette-view-fake-empty-string";
    RichTextPaletteView.DFN_ID_ATTRIBUTE_NAME_ = "s9-habitat-dfn-identifier";
    window.RichTextToolbarView = Backbone.View.extend({
        model: null,
        contentToolbarView_: null,
        richTextEditingView_: null,
        undoManager_: null,
        contentEditable_: null,
        richTextBlockFormatView_: null,
        richTextPaletteView_: null,
        richTextUndoRedoView_: null,
        initialize: function(a) {
            a = a || {};
            this.contentToolbarView_ = a.contentToolbarView;
            this.richTextEditingView_ = a.richTextEditingView;
            this.undoManager_ = a.undoManager;
            this.contentEditable_ = a.contentEditable || null;
            this.richTextBlockFormatView_ = new RichTextBlockFormatView({
                richTextToolbarView: this,
                richTextEditingView: this.richTextEditingView_
            });
            this.richTextPaletteView_ = new RichTextPaletteView({
                model: this.model,
                richTextToolbarView: this,
                richTextEditingView: this.richTextEditingView_
            });
            this.richTextUndoRedoView_ = new RichTextUndoRedoView({
                richTextToolbarView: this,
                richTextEditingView: this.richTextEditingView_,
                undoManager: this.undoManager_
            })
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            this.richTextPaletteView_ && this.richTextPaletteView_.remove();
            this.richTextBlockFormatView_ && this.richTextBlockFormatView_.remove();
            this.richTextUndoRedoView_ && this.richTextUndoRedoView_.remove();
            RichTextToolbarView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/richTextToolbar"]());
            this.contentToolbarView_.getRichTextToolbarArea().appendChild(this.el);
            this.richTextBlockFormatView_.render();
            this.richTextUndoRedoView_.render();
            this.richTextPaletteView_.render()
        },
        getContentToolbarView: function() {
            return this.contentToolbarView_
        },
        getRichTextBlockFormatArea: function() {
            return this.el.querySelector("#rich-text-block-format-area")
        },
        getRichTextPaletteArea: function() {
            return this.el.querySelector("#rich-text-palette-area")
        },
        getRichTextUndoRedoArea: function() {
            return this.el.querySelector("#rich-text-undo-redo-area")
        }
    });
    window.RichTextUndoRedoView = Backbone.View.extend({
        richTextToolbarView_: null,
        richTextEditingView_: null,
        undoManager_: null,
        events: {
            "mousedown #rich-text-undo-button": "undo_",
            "mousedown #rich-text-redo-button": "redo_"
        },
        initialize: function(a) {
            a = a || {};
            this.richTextToolbarView_ = a.richTextToolbarView;
            this.richTextEditingView_ = a.richTextEditingView;
            this.undoManager_ = a.undoManager;
            this.listenTo(this.undoManager_, "change", this.updateButtons_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/richTextUndoRedo"]());
            this.richTextToolbarView_.getRichTextUndoRedoArea().appendChild(this.el);
            this.updateButtons_()
        },
        updateButtons_: function() {
            var a = this.el.querySelector("#rich-text-undo-button");
            if (a) a.disabled = !this.undoManager_.hasUndo();
            if (a = this.el.querySelector("#rich-text-redo-button")) a.disabled = !this.undoManager_.hasRedo()
        },
        remove: function() {
            this.stopListening(this.undoManager_, "change", this.updateButtons_);
            DOMUtils.detachElement(this.el);
            RichTextUndoRedoView.__super__.remove.apply(this, arguments)
        },
        undo_: function(a) {
            a.preventDefault();
            this.undoManager_.undo(function(a) {
                this.richTextEditingView_.triggerChange(a)
            }.bind(this))
        },
        redo_: function(a) {
            a.preventDefault();
            this.undoManager_.redo(function(a) {
                this.richTextEditingView_.triggerChange(a)
            }.bind(this))
        }
    });
    window.ElementOverlayView = Backbone.View.extend({
        overlayTarget_: null,
        events: {
            mouseover: "mouseoverOverlayEvent_",
            mouseout: "mouseoutOverlayEvent_",
            mousedown: "mousedownOverlayEvent_",
            click: "clickOverlayEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.chiclets_ = a.chiclets || [];
            this.overlayId = a.overlayId || ""
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/editing/elementOverlay"]({
                chiclets: this.chiclets_,
                overlayId: this.overlayId
            }));
            this.parentPane_.appendChild(this.el)
        },
        setChicletContent: function(a, b) {
            var c = _.findWhere(this.chiclets_, {
                id: a
            });
            if (b !== c.text) c.text = b,
            this.render()
        },
        setChiclets: function(a) {
            this.chiclets_ = _.clone(a);
            this.render()
        },
        getChicletElement: function(a) {
            return this.el.querySelector('.edit-button[data-overlay-id="' + a + '"]')
        },
        getIdentifierElement: function() {
            return ! this.overlayTarget_ ? null: this.el.querySelector(ElementOverlayView.IDENTIFIER_SELECTOR)
        },
        createIdentifierChiclet: function(a) {
            return {
                id: ElementOverlayView.IDENTIFIER_ID,
                align: "left",
                text: a,
                className: "identifier"
            }
        },
        show: function(a, b) {
            this.overlayTarget_ = a;
            this.reposition_();
            this.el.classList.add("show");
            this.chiclets_.length && (this.el.classList.add("active"), b && this.el.classList.add("contents-interactive"))
        },
        remove: function() {
            this.overlayTarget_ = null;
            ElementOverlayView.__super__.remove.call(this)
        },
        hide: function() {
            this.overlayTarget_ = null;
            this.el.classList.remove("show");
            this.el.classList.remove("active");
            this.el.classList.remove("contents-interactive")
        },
        getTargetElement: function() {
            return this.overlayTarget_
        },
        mouseoverOverlayEvent_: function(a, b) {
            this.trigger("overlay:mouseover", a, b)
        },
        mouseoutOverlayEvent_: function(a, b) {
            this.trigger("overlay:mouseout", a, b)
        },
        clickOverlayEvent_: function(a) {
            var b = a.target.dataset.overlayId;
            b ? this.trigger("overlay:" + b + ":click", a, a.target) : this.trigger("overlay:click", a, a.target)
        },
        reposition_: function() {
            var a = DOMUtils.getComputedStyle(this.overlayTarget_),
            b = this.overlayTarget_.getBoundingClientRect();
            this.el.style.left = b.left + "px";
            this.el.style.top = b.top + "px";
            this.el.style.width = a.width;
            this.el.style.height = a.height
        },
        mousedownOverlayEvent_: function(a) {
            a.preventDefault()
        }
    });
    ElementOverlayView.IDENTIFIER_ID = "identifier";
    ElementOverlayView.IDENTIFIER_SELECTOR = ".identifier";
    window.RichTextElementInspectorView = Backbone.View.extend({
        overlay_: null,
        parentPane_: null,
        richTextEditingView_: null,
        inspectedElement_: null,
        lastMouseCoordinates_: null,
        shouldStayOpen_: !1,
        hideTimeout_: null,
        dragView_: null,
        isDragging_: !1,
        temporaryPattern_: null,
        isInIframe_: !1,
        initialize: function(a) {
            a = a || {};
            this.richTextEditingView_ = a.richTextEditingView;
            this.parentPane_ = a.parentPane;
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.overlay_ = new ElementOverlayView({
                parentPane: this.parentPane_,
                overlayId: "element-inspector-overlay"
            });
            this.overlay_.render();
            this.listenTo(this.overlay_, "overlay:remove:click", this.removeElementEvent_.bind(this));
            this.listenTo(this.overlay_, "overlay:edit:click", this.changeElementEvent_.bind(this));
            this.listenTo(this.richTextEditingView_, "selection", this.selectionChanged_);
            this.listenTo(this.richTextEditingView_, "focus", this.selectionChanged_);
            this.listenTo(this.richTextEditingView_, "blur", this.selectionRemoved_);
            this.listenTo(this.richTextEditingView_, "patternDragged", this.patternDragged_);
            this.listenTo(this.richTextEditingView_, "change", this.editorChanged_);
            this.listenTo(this.richTextEditingView_, "keyup", this.editorTyped_);
            this.beforeStartBound_ = this.beforeStart_.bind(this);
            this.onStartBound_ = this.onStart_.bind(this);
            this.onMoveBound_ = this.onMove_.bind(this);
            this.onDropBound_ = this.onDrop_.bind(this);
            this.mouseMovedBound_ = _.throttle(this.mouseMoved_, 25).bind(this);
            this.iframeMouseoutEventBound_ = this.iframeMouseoutEvent_.bind(this);
            this.iframeMouseoverEventBound_ = this.iframeMouseoverEvent_.bind(this)
        },
        render: function() {
            this.cleanUp_();
            this.inspectedElement_ && (RichTextElementInspectorView.isNodeEditableFromInspector(this.inspectedElement_) || this.startHideTimeout_(), this.overlay_.setChiclets(this.getChicletsForInspectedElement_()), this.show_(), this.bindDocumentEvents_(), this.bindDragDropEvents_())
        },
        remove: function() {
            this.cleanUp_();
            this.overlay_.remove();
            RichTextElementInspectorView.__super__.remove.call(this)
        },
        getInspectedElement: function() {
            return this.inspectedElement_
        },
        getEditableInspectedElement: function() {
            return this.inspectedElement_ ? RichTextElementInspectorView.getEditableElement_(this.inspectedElement_) : null
        },
        cleanUp_: function() {
            this.cancelHideTimeout_();
            this.hide_();
            this.unbindDragDropEvents_();
            this.unbindDocumentEvents_();
            this.shouldStayOpen_ = !1;
            this.overlay_.hide()
        },
        getSelectorForElement_: function(a) {
            a = RichTextElementInspectorView.getEditableElement_(a);
            return HTMLContent.isVideoElement(a) ? "Video": a.tagName.toLowerCase() === "img" ? "Image": HTMLContent.isWidgetElement(a) ? WidgetUtils.getWidgetName(a.dataset.s9HabitatWidgetFileURL) || "Widget": DOMUtils.getSelector(a, {
                ignoreClassesMatching: ReaderContentView.HABITAT_PREFIX_REGEXP,
                stripId: !0
            })
        },
        getChicletsForInspectedElement_: function() {
            var a = [],
            b = this.getSelectorForElement_(this.inspectedElement_);
            a.push(this.overlay_.createIdentifierChiclet(b));
            this.richTextEditingView_.isEditingAllowed() && (RichTextElementInspectorView.isNodeEditableFromInspector(this.inspectedElement_) && (b = RichTextElementInspectorView.getEditableElement_(this.inspectedElement_), a.push({
                id: "edit",
                align: "left",
                text: HTMLContent.isWidgetElement(b) ? "Edit": "Change",
                className: RichTextElementInspectorView.OVERLAY_CHANGE_CLASS_
            })), this.isNodeRemovable_() && a.push({
                id: "remove",
                align: "right",
                className: RichTextElementInspectorView.OVERLAY_REMOVE_CLASS_
            }));
            return a
        },
        redrawSelector_: function() {
            if (this.inspectedElement_ && this.overlay_.getTargetElement()) {
                var a = this.getSelectorForElement_(this.inspectedElement_);
                this.overlay_.getChicletElement(ElementOverlayView.IDENTIFIER_ID).text !== a && (this.overlay_.setChicletContent(ElementOverlayView.IDENTIFIER_ID, a), this.show_())
            }
        },
        show_: function() {
            if (this.inspectedElement_) RichTextElementInspectorView.isNodeEditableFromInspector(this.inspectedElement_) ? (this.cancelHideTimeout_(), this.shouldStayOpen_ = !0, this.overlay_.show(this.inspectedElement_, !0)) : this.overlay_.show(this.inspectedElement_)
        },
        hide_: function() {
            this.cancelHideTimeout_();
            this.overlay_.hide()
        },
        startHideTimeout_: function() {
            this.cancelHideTimeout_();
            this.hideTimeout_ = this.win_.setTimeout(this.hide_.bind(this), RichTextElementInspectorView.HIDE_DELAY_)
        },
        cancelHideTimeout_: function() {
            if (this.hideTimeout_) this.win_.clearTimeout(this.hideTimeout_),
            this.hideTimeout_ = null
        },
        changeElementEvent_: function() {
            this.trigger("change", RichTextElementInspectorView.getEditableElement_(this.inspectedElement_))
        },
        removeElementEvent_: function() {
            this.trigger("remove", this.inspectedElement_)
        },
        bindDocumentEvents_: function() {
            var a = this.richTextEditingView_.getContentView().getContentDocument();
            a.addEventListener("mousemove", this.mouseMovedBound_);
            a.addEventListener("mouseover", this.iframeMouseoverEventBound_);
            a.addEventListener("mouseout", this.iframeMouseoutEventBound_)
        },
        unbindDocumentEvents_: function() {
            var a = this.richTextEditingView_.getContentView().getContentDocument();
            a.removeEventListener("mousemove", this.mouseMovedBound_);
            a.removeEventListener("mouseover", this.iframeMouseoverEventBound_);
            a.removeEventListener("mouseout", this.iframeMouseoutEventBound_)
        },
        bindDragDropEvents_: function() {
            this.dragView_ && this.dragView_.remove();
            this.dragView_ = app.getDragManager().makeDraggable({
                el: this.overlay_.getIdentifierElement(),
                beforeStart: this.beforeStartBound_,
                onStart: this.onStartBound_,
                onMove: this.onMoveBound_,
                onDrop: this.onDropBound_
            },
            {
                useNearestElement: !0
            })
        },
        unbindDragDropEvents_: function() {
            this.dragView_ && this.dragView_.remove();
            this.dragView_ = null
        },
        wasMouseMoved_: function(a) {
            return ! this.lastMouseCoordinates_ ? !0 : this.lastMouseCoordinates_.screenX !== a.screenX || this.lastMouseCoordinates_.screenY !== a.screenY ? !0 : !1
        },
        mouseMoved_: function(a) {
            if (this.wasMouseMoved_(a)) this.lastMouseCoordinates_ = {
                screenX: a.screenX,
                screenY: a.screenY
            },
            this.show_(),
            this.shouldStayOpen_ || this.startHideTimeout_()
        },
        iframeMouseoverEvent_: function(a) {
            if (! (a.target.nodeType !== Node.ELEMENT_NODE || a.target.tagName.toLowerCase() !== "iframe")) this.isInIframe_ = !0
        },
        iframeMouseoutEvent_: function(a) {
            if (! (a.target.nodeType != Node.ELEMENT_NODE || a.target.tagName.toLowerCase() !== "iframe")) this.isInIframe_ = !1
        },
        getCurrentlySelectedNode_: function() {
            return ! this.richTextEditingView_.isEditingAllowed() ? null: this.richTextEditingView_.getNodeNearSelection()
        },
        getNearestInspectableElement: function(a) {
            a || (a = this.getCurrentlySelectedNode_());
            if (!a) return null;
            for (; a && !this.isNodeInspectable_(a);) a = a.parentElement;
            var b = RichTextElementInspectorView.isNodeEditableFromInspector(a),
            c = !1,
            d = a;
            do {
                var e = d.tagName.toLowerCase();
                if (e === "figcaption") break;
                else if (e === "figure") {
                    RichTextElementInspectorView.hasMultipleEditableElements_(d) || (a = d);
                    break
                } else if (!b && e === "table") if (c) break;
                else a = d, c = !0;
                d = d.parentElement
            } while ( d );
            return a
        },
        isNodeInspectable_: function(a) {
            return a.nodeType !== Node.ELEMENT_NODE ? !1 : a.tagName.toLowerCase() === "iframe" ? !0 : a.tagName.toLowerCase() === "video" ? !0 : RichTextElementInspectorView.isNodeEditableFromInspector(a) ? !0 : this.win_.getComputedStyle(a).display === "inline" ? !1 : this.win_.getComputedStyle(a).display === "inline-block" ? !1 : !0
        },
        isNodeRemovable_: function() {
            return this.inspectedElement_.tagName.toLowerCase() !== "body"
        },
        selectionChanged_: function(a, b) {
            var c;
            if (b) {
                c = this.getCurrentlySelectedNode_();
                if (!this.isNodeInspectable_(c)) {
                    this.selectionRemoved_();
                    return
                }
                if (RichTextElementInspectorView.getEditableElement_(c).tagName.toLowerCase() === "iframe") this.isInIframe_ = !0
            } else c = this.getNearestInspectableElement();
            if (c !== this.inspectedElement_) this.inspectedElement_ = c,
            this.render()
        },
        selectionRemoved_: function() {
            if (this.isInIframe_) this.isInIframe_ = !1;
            else if (this.inspectedElement_ !== null) this.inspectedElement_ = null,
            this.render()
        },
        editorChanged_: function() {
            if (this.inspectedElement_) this.inspectedElement_ = this.getNearestInspectableElement(),
            this.redrawSelector_()
        },
        editorTyped_: function() {
            this.shouldStayOpen_ || this.hide_()
        },
        patternDragged_: function() {
            this.isDragging_ || this.selectionRemoved_()
        },
        beforeStart_: function() {
            var a = this.doc_.createElement("div");
            a.classList.add(RichTextElementInspectorView.DRAG_GHOST_CLASS_);
            var b = this.getSelectorForElement_(this.inspectedElement_);
            a.innerHTML = StringUtils.escapeHTML(b);
            DOMUtils.getParent(this.parentPane_, "#document-area").appendChild(a);
            return a
        },
        onStart_: function(a, b, c) {
            this.isDragging_ = !0;
            this.el.classList.add(RichTextElementInspectorView.HAS_DRAG_CLASS_);
            this.hide_();
            c.classList.add(RichTextElementInspectorView.MID_FLIGHT_GHOST_CLASS_);
            a = this.richTextEditingView_.getContentView().getContentForElement(this.inspectedElement_, "outer");
            this.temporaryPattern_ = new PatternSnippetModel({
                html: a,
                category: "Temporary",
                label: "Temporary Pattern",
                id: "temporary-element-inspector-pattern",
                isCustom: !0
            });
            app.getDragManager().trigger("pattern:start", {
                pattern: this.temporaryPattern_,
                fromElement: this.inspectedElement_
            })
        },
        onMove_: function(a, b, c, d) {
            app.getDragManager().trigger("pattern:move", {
                pattern: this.temporaryPattern_,
                target: b,
                elementOffset: d
            })
        },
        onDrop_: function(a, b, c, d) {
            DOMUtils.detachElement(c);
            app.getDragManager().trigger("pattern:drop", {
                pattern: this.temporaryPattern_,
                target: b,
                elementOffset: d,
                fromElement: this.inspectedElement_
            });
            this.el.classList.remove(RichTextElementInspectorView.HAS_DRAG_CLASS_);
            this.isDragging_ = !1
        }
    });
    RichTextElementInspectorView.HIDE_DELAY_ = 3500;
    RichTextElementInspectorView.DRAG_GHOST_CLASS_ = "element-inspector-drag-ghost";
    RichTextElementInspectorView.MID_FLIGHT_GHOST_CLASS_ = "mid-flight";
    RichTextElementInspectorView.HAS_DRAG_CLASS_ = "has-active-drag";
    RichTextElementInspectorView.OVERLAY_REMOVE_CLASS_ = "trash";
    RichTextElementInspectorView.OVERLAY_CHANGE_CLASS_ = "change";
    RichTextElementInspectorView.isNodeEditableFromInspector = function(a) {
        if (!a || a.nodeType !== Node.ELEMENT_NODE) return ! 1;
        a = RichTextElementInspectorView.getEditableElement_(a);
        return RichTextElementInspectorView.isEditableNode_(a)
    };
    RichTextElementInspectorView.hasMultipleEditableElements_ = function(a) {
        if (!a) return ! 1;
        a = a.querySelectorAll("img, video, iframe");
        a = _.filter(a, RichTextElementInspectorView.isEditableNode_);
        return a.length > 1
    };
    RichTextElementInspectorView.getEditableElement_ = function(a) {
        if (a.tagName.toLowerCase() == "figure") {
            var b = a.querySelectorAll("img, video, iframe"),
            b = _.filter(b, RichTextElementInspectorView.isEditableNode_);
            if (b.length === 1) return b[0]
        }
        return a
    };
    RichTextElementInspectorView.isEditableNode_ = function(a) {
        return a.nodeType !== Node.ELEMENT_NODE ? !1 : HTMLContent.isVideoElement(a) || HTMLContent.isWidgetElement(a) || a.tagName.toLowerCase() === "img"
    };
    window.TableCreationView = PopupView.extend({
        tableSize_: null,
        rowInputEl_: null,
        colInputEl_: null,
        form_: null,
        events: {
            "mouseover td": "cellHoverEvent_",
            "click td": "cellClickEvent_",
            "click table": "tableClickEvent_",
            "keyup .row-input": "sizeInputEvent_",
            "keyup .col-input": "sizeInputEvent_"
        },
        initialize: function(a) {
            a = a || {};
            a.className = a.className || "table-creation-modal";
            TableCreationView.__super__.initialize.call(this, a);
            this.tableSize_ = TableCreationView.DEFAULT_TABLE_SIZE_
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            var a = [],
            b = [];
            a.length = TableCreationView.DISPLAY_GRID_SIZE_.rows;
            b.length = TableCreationView.DISPLAY_GRID_SIZE_.cols;
            this.setElement(Templates["project/editing/tableCreationModal"]({
                rows: a,
                cols: b
            }));
            this.tableEl_ = this.el.querySelector("table");
            this.rowInputEl_ = this.el.querySelector(".row-input");
            this.colInputEl_ = this.el.querySelector(".col-input");
            this.rowInputEl_.value = this.tableSize_.rows;
            this.colInputEl_.value = this.tableSize_.cols;
            for (var c = 0; c < this.tableSize_.rows && c < a.length; c++) for (var d = 0; d < this.tableSize_.cols && d < b.length; d++) this.tableEl_.rows[c].children[d].classList.add("selected");
            TableCreationView.__super__.render.call(this);
            this.open();
            this.gridMouseleaveEventBound_ = this.gridMouseleaveEvent_.bind(this);
            this.tableEl_.addEventListener("mouseleave", this.gridMouseleaveEventBound_);
            this.form_ = new FormView({
                el: this.el.querySelector("form")
            });
            this.listenTo(this.form_, "cancel", this.cancelSelectionEvent_);
            this.listenTo(this.form_, "submit", this.submitSelectionEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            this.tableEl_ && this.tableEl_.removeEventListener("mouseleave", this.gridMouseleaveEventBound_);
            TableCreationView.__super__.remove.call(this)
        },
        close: function(a) {
            a = !!a;
            this.doClose_();
            this.trigger("close", a, this.tableSize_)
        },
        submitSelectionEvent_: function() {
            this.el.querySelector(".submit-selection").disabled !== !0 && this.close(!0)
        },
        cancelSelectionEvent_: function() {
            this.close(!1)
        },
        gridMouseleaveEvent_: function() {
            this.tableEl_.querySelectorAll(":scope td").forEach(function(a) {
                a.classList.remove("highlight")
            })
        },
        sizeInputEvent_: function() {
            var a = parseInt(this.rowInputEl_.value, 10),
            b = parseInt(this.colInputEl_.value, 10);
            if (a > 0 && a <= TableCreationView.MAX_TABLE_SIZE_.rows && b > 0 && b <= TableCreationView.MAX_TABLE_SIZE_.cols) {
                var c = this.selectGridCells_(a - 1, b - 1);
                c.inner.forEach(function(a) {
                    a.classList.add("selected");
                    a.classList.remove("highlight")
                });
                c.outer.forEach(function(a) {
                    a.classList.remove("selected");
                    a.classList.remove("highlight")
                });
                if (this.rowInputEl_.value !== a.toString()) this.rowInputEl_.value = a;
                if (this.colInputEl_.value !== b.toString()) this.colInputEl_.value = b;
                this.tableSize_ = {
                    rows: a,
                    cols: b
                };
                this.el.querySelector(".submit-selection").disabled = !1
            } else this.el.querySelector(".submit-selection").disabled = !0
        },
        cellHoverEvent_: function(a, b) {
            var c = DOMUtils.getParent(b, "tr"),
            d = _.indexOf(this.tableEl_.rows, c),
            c = _.indexOf(c.children, b),
            d = this.selectGridCells_(d, c);
            d.inner.forEach(function(a) {
                a.classList.add("highlight")
            });
            d.outer.forEach(function(a) {
                a.classList.remove("highlight")
            })
        },
        cellClickEvent_: function(a, b) {
            var c = DOMUtils.getParent(b, "tr"),
            d = _.indexOf(this.tableEl_.rows, c),
            c = _.indexOf(c.children, b),
            e = this.selectGridCells_(d, c);
            e.inner.forEach(function(a) {
                a.classList.add("selected")
            });
            e.outer.forEach(function(a) {
                a.classList.remove("selected")
            });
            this.rowInputEl_.value = d + 1;
            this.colInputEl_.value = c + 1;
            this.tableSize_ = {
                rows: d + 1,
                cols: c + 1
            };
            this.el.querySelector(".submit-selection").disabled = !1;
            this.el.querySelector(".submit-selection").focus()
        },
        tableClickEvent_: function(a) {
            if (a.toElement === this.tableEl_) {
                for (var b = a = -1,
                c = this.tableEl_.querySelectorAll(".highlight"), d = 0; d < c.length; d++) var e = c[d],
                f = DOMUtils.getParent(e, "tr"),
                g = _.indexOf(this.tableEl_.rows, f),
                e = _.indexOf(f.children, e),
                a = a < g ? g: a,
                b = b < e ? e: b;
                if (a !== -1 && b !== -1) c = this.selectGridCells_(a, b),
                c.inner.forEach(function(a) {
                    a.classList.add("selected")
                }),
                c.outer.forEach(function(a) {
                    a.classList.remove("selected")
                }),
                this.rowInputEl_.value = a + 1,
                this.colInputEl_.value = b + 1,
                this.tableSize_ = {
                    rows: a + 1,
                    cols: b + 1
                },
                this.el.querySelector(".submit-selection").disabled = !1,
                this.el.querySelector(".submit-selection").focus()
            }
        },
        selectGridCells_: function(a, b) {
            for (var c = this.tableEl_.rows,
            d = [], e = [], f = 0, g = c.length; f < g; f++) for (var h = 0,
            i = c[0].children.length; h < i; h++) f <= a && h <= b ? d.push(c[f].children[h]) : e.push(c[f].children[h]);
            return {
                inner: d,
                outer: e
            }
        }
    });
    TableCreationView.DEFAULT_TABLE_SIZE_ = {
        rows: 3,
        cols: 3
    };
    TableCreationView.DISPLAY_GRID_SIZE_ = {
        rows: 10,
        cols: 10
    };
    TableCreationView.MAX_TABLE_SIZE_ = {
        rows: 99,
        cols: 99
    };
    window.TableInsertionTransformer = BaseClass.extend({
        pattern_: null,
        tableCreationView_: null,
        richTextEditingView_: null,
        initialize: function(a) {
            a = a || {};
            this.richTextEditingView_ = a.richTextEditingView;
            this.tableCreationView_ = a.tableCreationView || new TableCreationView;
            this.listenTo(this.tableCreationView_, "close", this.onModalClose_)
        },
        remove: function() {
            this.tableCreationView_.remove();
            TableInsertionTransformer.__super__.remove.call(this)
        },
        canTransform: function(a) {
            a = a.getRootElement();
            if (!a) return ! 1;
            var b = a.ownerDocument.createDocumentFragment();
            b.appendChild(a.cloneNode(!0));
            a = b.querySelectorAll("table");
            return a.length === 1 && a[0].childElementCount === 0
        },
        transform: function(a) {
            this.pattern_ = a;
            this.tableCreationView_.render();
            this.richTextEditingView_.setHasModalDialog(!0);
            return Q.promise(function(a, c) {
                this.handleModalResolution_ = function(d) {
                    d.then(a, c)
                }
            }.bind(this))
        },
        onModalClose_: function(a, b) {
            Q.promise(function(c) {
                this.richTextEditingView_.setHasModalDialog(!1);
                if (a) {
                    var d = this.buildTable_(b);
                    this.handleModalResolution_(Q.resolve({
                        pattern: d
                    }))
                } else this.handleModalResolution_(Q.reject(TableInsertionTransformer.STATUS_NO_SELECTION_));
                c()
            }.bind(this))
        },
        buildTable_: function(a) {
            var b = this.pattern_.getRootElement();
            if (!b) return this.pattern_;
            var c = b.ownerDocument,
            d = c.createDocumentFragment(),
            b = b.cloneNode(!0);
            d.appendChild(b);
            for (var b = "<tr>",
            e = 0; e < a.cols; e++) b += "<td>" + TableInsertionTransformer.DEFAULT_CELL_TEXT_ + "</td>";
            b += "</tr>";
            for (var f = "",
            e = 0; e < a.rows; e++) f += b;
            d.querySelector("table").innerHTML = f;
            a = this.pattern_.clone();
            c = XMLUtilities.serializeFragment(d, c.createElement("span"));
            a.set("html", c);
            return a
        }
    });
    TableInsertionTransformer.DEFAULT_CELL_TEXT_ = "Table Cell";
    TableInsertionTransformer.STATUS_NO_SELECTION_ = "No valid table dimensions selected";
    window.SlideView = Backbone.View.extend({});
    window.WidgetEditingSlideView = SlideView.extend({
        parentPane_: null,
        controller_: null,
        events: {
            "input .widget-generated-editor": "formInputEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.controller_ = a.controller
        },
        remove: function() {
            this.cleanup_();
            WidgetEditingSlideView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            this.cleanup_();
            this.setElement(Templates["project/editing/widgetEditingSlide"](this.getTemplateData_()));
            this.checkForEditor_().then(function(a) {
                this.el.dataset.state = a ? "iframe": "form"
            }.bind(this),
            function() {
                this.el.dataset.state = "form"
            }.bind(this)).done();
            this.waitForIframe_().fail(function() {
                this.el.dataset.state = "form"
            }.bind(this)).done();
            this.parentPane_.appendChild(this.el);
            this.manager_ = new WidgetMessageManager({
                target: this.el.querySelector("iframe")
            });
            this.editor_ = new WidgetEditorAPI({
                widgetFileURL: this.controller_.getFilesAPIURL(),
                manager: this.manager_
            });
            this.listenTo(this.editor_, "configuration", this.editorConfigurationEvent_);
            this.listenTo(this.editor_, "fileConfiguration", this.editorFileConfigurationEvent_);
            this.listenTo(this.controller_.getModel(), "change", this.modelChangeEvent_);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_)
        },
        enable: function() {
            this.el.classList.remove("disabled")
        },
        disable: function() {
            this.el.classList.add("disabled")
        },
        cleanup_: function() {
            DOMUtils.detachElement(this.el);
            if (this.manager_) this.manager_.remove(),
            this.manager_ = null;
            if (this.editor_) this.editor_.remove(),
            this.stopListening(this.editor_),
            this.editor_ = null;
            if (this.form_) this.form_.remove(),
            this.form_ = null;
            this.stopListening(this.controller_.getModel())
        },
        getTemplateData_: function() {
            var a = this.getEditorURL_(),
            b = URI(a).search(!0);
            return {
                src: a,
                srcOnInklingOrigin: URLUtils.onInklingOrigin(a),
                name: WidgetUtils.getWidgetName(this.controller_.getFilesAPIURL()) || "Widget",
                params: Object.keys(b).map(function(a) {
                    return {
                        title: StringUtils.capitalize(a),
                        key: a,
                        value: b[a]
                    }
                })
            }
        },
        checkForEditor_: function() {
            var a = Q.defer(); (new HabitatRequest({
                url: this.getEditorURL_(),
                onSuccess: function() {
                    a.resolve(!0)
                },
                onFailure: function(b) {
                    b.status === 404 ? a.resolve(!1) : a.reject()
                }
            })).send();
            return a.promise
        },
        waitForIframe_: function() {
            var a = Q.defer(),
            b = this.el.querySelector("iframe");
            b.addEventListener("load", a.resolve);
            b.addEventListener("error", a.reject);
            return a.promise
        },
        getEditorURL_: function() {
            return WidgetUtils.getEditorPath(this.controller_.getTargetURL())
        },
        editorConfigurationEvent_: function(a, b) {
            this.controller_.getModel().setParams(b)
        },
        editorFileConfigurationEvent_: function(a, b) {
            this.controller_.getModel().setFileContent(b)
        },
        modelChangeEvent_: function() {
            this.el.querySelector(".action-button").removeAttribute("disabled")
        },
        formSubmitEvent_: function() {
            this.controller_.save()
        },
        formInputEvent_: function(a, b) {
            var c = DOMUtils.getFormValues(b);
            this.controller_.getModel().setParams(c)
        }
    });
    window.SlideoverView = Backbone.View.extend({
        currentSlide_: 0,
        className_: null,
        slidesViewport_: null,
        views_: null,
        slideConstructors_: [],
        keyboard_: null,
        events: {
            "mousedown .close-button": "closeButtonMousedownEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.views_ = [];
            this.className_ = a.className;
            this.slideConstructors_.length || console.error("Programming error: attempt to create a slideshow with no slides.");
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: {
                    esc: this.close.bind(this)
                }
            })
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/slideoverDialog"](this.getTemplateData_()));
            this.parentPane_.classList.add("disable-scrolling");
            this.parentPane_.appendChild(this.el);
            this.slidesViewport_ = this.el.querySelector(".slides");
            this.goto_(this.currentSlide_);
            this.animateOpen_();
            app.getKeyboardManager().activate(this.keyboard_)
        },
        remove: function() {
            if (this.openingAnimation_) this.openingAnimation_.cancel(),
            this.openingAnimation_ = null;
            if (this.slideChangeAnimation_) this.slideChangeAnimation_.cancel(),
            this.slideChangeAnimation_ = null;
            this.views_.forEach(function(a) {
                a.remove()
            });
            this.views_ = [];
            this.parentPane_.classList.remove("disable-scrolling");
            app.getKeyboardManager().remove(this.keyboard_);
            SlideoverView.__super__.remove.call(this)
        },
        next: function() {
            this.goto_(this.currentSlide_ + 1)
        },
        previous: function() {
            this.currentSlide_ <= 0 || this.goto_(this.currentSlide_ - 1)
        },
        close: function() {
            this.animateClose_(this.remove.bind(this))
        },
        getModel: function() {
            throw "SlideoverView.prototype.getModel is an abstract method";
        },
        getTemplateData_: function() {
            return {
                className: this.className_
            }
        },
        goto_: function(a) {
            if (!this.views_[a]) {
                var b = this.slideConstructors_[a];
                if (!b) {
                    console.error("Programming error: attempt to display a slide that is not available: ", a);
                    return
                }
                b = new b({
                    parentPane: this.slidesViewport_,
                    controller: this
                });
                b.render();
                this.views_[a] = b
            }
            this.animateToSlide_(a);
            this.views_[a].focus && this.views_[a].focus()
        },
        animateToSlide_: function(a) {
            this.slideChangeAnimation_ && this.slideChangeAnimation_.cancel();
            var b = this.slidesViewport_.getBoundingClientRect(),
            c = b.left,
            d = b.width * -a;
            this.slidesViewport_.classList.add("animating-slide");
            this.slideChangeAnimation_ = new Animation({
                duration: 250,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(a) {
                    this.slidesViewport_.style.marginLeft = c + (d - c) * a + "px"
                }.bind(this),
                onComplete: function() {
                    this.slidesViewport_.style.marginLeft = a * -100 + "%";
                    this.slideChangeAnimation_ = null;
                    this.slidesViewport_.classList.remove("animating-slide");
                    this.currentSlide_ = a
                }.bind(this)
            })
        },
        animateOpen_: function(a) {
            this.el.classList.add("animating-open");
            this.animateTop_(this.el.offsetTop, 0,
            function() {
                this.el.classList.remove("animating-open");
                a && a()
            }.bind(this))
        },
        animateClose_: function(a) {
            this.el.classList.add("animating-close");
            this.animateTop_(this.el.offsetTop, this.parentPane_.offsetHeight,
            function() {
                this.el.classList.remove("animating-close");
                a && a()
            }.bind(this))
        },
        animateTop_: function(a, b, c) {
            this.openingAnimation_ && this.openingAnimation_.cancel();
            this.openingAnimation_ = new Animation({
                duration: 250,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(c) {
                    this.el.style.top = a + (b - a) * c + "px"
                }.bind(this),
                onComplete: function() {
                    this.openingAnimation_ = null;
                    this.el.style.top = b + "px";
                    c && c()
                }.bind(this)
            })
        },
        closeButtonMousedownEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.close())
        }
    });
    window.WidgetEditingSlideoverView = SlideoverView.extend({
        slideConstructors_: [WidgetEditingSlideView],
        iframeURL_: null,
        widgetFileURL_: null,
        model: null,
        initialize: function(a) {
            a = _.extend({},
            a, {
                className: "widget-editing"
            });
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            WidgetEditingSlideoverView.__super__.initialize.call(this, a);
            this.iframeURL_ = a.url;
            this.widgetFileURL_ = a.widgetFileURL;
            var b = URI(this.iframeURL_).search(!0);
            this.model = new WidgetConfigurationModel(b, {
                widgetFileURL: a.widgetFileURL,
                s9id: a.s9id
            });
            this.listenTo(this.model, "change", this.modelChangeEvent_);
            a = app.getSaveHandler();
            this.listenTo(a, "save", this.saveEvent_);
            this.listenTo(a, "save_completed", this.saveCompletedEvent_);
            this.listenTo(a, "save_failed", this.saveFailedEvent_)
        },
        getModel: function() {
            return this.model
        },
        getTargetURL: function() {
            return this.iframeURL_
        },
        getFilesAPIURL: function() {
            return this.widgetFileURL_
        },
        save: function() {
            app.getSaveHandler().save()
        },
        remove: function() {
            WidgetEditingSlideoverView.__super__.remove.apply(this, arguments);
            this.trigger("remove")
        },
        close: function() {
            WidgetEditingSlideoverView.__super__.close.apply(this, arguments);
            app.getSaveHandler().remove(this.model)
        },
        modelChangeEvent_: function() {
            app.getSaveHandler().add(this.model)
        },
        saveEvent_: function() {
            this.views_[this.currentSlide_].disable();
            this.trigger("configuration", this.model.toJSON())
        },
        saveCompletedEvent_: function() {
            this.model.getFileContent() && this.trigger("savedFile");
            this.close()
        },
        saveFailedEvent_: function(a) {
            a === this.model && this.views_[this.currentSlide_].enable()
        }
    });
    window.AnswersView = Backbone.View.extend({
        initialize: function(a) {
            this.doc_ = a.doc
        },
        render: function() {
            this.doc_.querySelectorAll("div.s9-answer").forEach(function(a) {
                var b = a.previousElementSibling;
                if (!b || !b.classList.contains("s9-answer-toggle")) b = DOMUtils.createElement("span", {
                    className: "s9-answer-toggle " + AnswersView.CLASS_ACTIVE_ + " " + ReaderContentView.CONTENT_REMOVAL_CLASS_NAME,
                    dataset: {
                        answerId: XMLUtilities.getS9ID(a)
                    },
                    attributes: {
                        contenteditable: "false"
                    },
                    html: this.getHideValue_(a)
                }),
                DOMUtils.insertSibling(b, "before", a)
            },
            this)
        },
        toggleAnswer: function(a) {
            var b = XMLUtilities.getNodeByS9ID(this.doc_, a.dataset.answerId);
            a.classList.toggle(AnswersView.CLASS_ACTIVE_);
            a.classList.contains(AnswersView.CLASS_ACTIVE_) ? (a.innerHTML = this.getHideValue_(b), DOMUtils.setStyles(b, {
                height: "auto",
                opacity: 1
            })) : (a.innerHTML = this.getShowValue_(b), DOMUtils.setStyles(b, {
                height: 0,
                opacity: 0
            }))
        },
        getShowValue_: function(a) {
            return (a = a.querySelector(".s9-show-answer-value")) ? a.innerHTML: AnswersView.DEFAULT_SHOW_
        },
        getHideValue_: function(a) {
            return (a = a.querySelector(".s9-hide-answer-value")) ? a.innerHTML: AnswersView.DEFAULT_HIDE_
        }
    });
    AnswersView.DEFAULT_SHOW_ = "Show Answer";
    AnswersView.DEFAULT_HIDE_ = "Hide Answer";
    AnswersView.CLASS_ACTIVE_ = "s9-active";
    window.FileDocumentView = DocumentView.extend({
        model: null,
        codeView_: null,
        revisionToggle_: null,
        compareSlideoverView_: null,
        initialize: function(a) {
            a = a || {};
            if (! (this.model instanceof FileDocumentModel)) throw "The model for FileDocumentView must be an FileDocumentModel or a FileDocumentModel subclass"; ! this.getMode() && app.getRouter().getLineNumber() && this.setMode_(DocumentView.MODES.CODE, !0);
            a.isSubclass = !0;
            FileDocumentView.__super__.initialize.call(this, a);
            this.model.on("loaded", this.render, this);
            this.model.on("validationComplete", this.validationCompleteEvent_, this);
            this.model.on("change:revision", this.revisionChangedEvent_, this)
        },
        render: function() {
            FileDocumentView.__super__.render.call(this);
            this.drawRevisionToggle_()
        },
        remove: function() {
            this.removeRevisionToggle_();
            this.model.off("loaded", this.render, this);
            this.model.off("validationComplete", this.validationCompleteEvent_, this);
            this.model.off("change:revision", this.revisionChangedEvent_, this);
            FileDocumentView.__super__.remove.call(this)
        },
        getDefaultMode: function() {
            return DocumentView.MODES.CODE
        },
        getDocumentTitle: function() {
            return this.model.getFilename()
        },
        showValidationErrors: function(a) {
            this.setMode_(DocumentView.MODES.CODE);
            this.codeView_.setValidationErrors(a)
        },
        clearValidationErrors: function() {
            this.codeView_ && this.codeView_.clearValidationErrors()
        },
        validationCompleteEvent_: function(a) {
            a ? this.showValidationErrors(a) : this.clearValidationErrors()
        },
        revisionChangedEvent_: function() {
            var a = this.model.get("project"),
            a = URLRouter.getURLForPath(a.get("shortName"), this.model.get("filePath"), this.model.get("revision"));
            app.getRouter().navigate(a)
        },
        drawRevisionToggle_: function() {
            this.removeRevisionToggle_();
            this.revisionToggle_ = new RevisionToggleView({
                parentPane: this.getControlsPane_().querySelector("#revision-toggles-area"),
                controlsPane: this.getControlsPane_(),
                model: this.model
            });
            this.revisionToggle_.render();
            this.listenTo(this.revisionToggle_, "revisionSelected", this.selectRevisionEvent_)
        },
        removeRevisionToggle_: function() {
            this.revisionToggle_ && (this.stopListening(this.revisionToggle_), this.revisionToggle_.remove())
        },
        selectRevisionEvent_: function(a) {
            this.model.supportsComparison() && this.model.isOnHead() ? (this.compareSlideoverView_ = new RevisionsCompareSlideoverView({
                parentPane: this.doc_.body,
                model: this.model,
                revision: a
            }), this.compareSlideoverView_.render(), this.listenTo(this.compareSlideoverView_, "revisionRestored", this.render.bind(this))) : app.getSaveHandler().canNavigateAway() && this.switchToRevision_(a)
        },
        switchToRevision_: function(a) {
            app.getRouter().openFile(this.model.get("filePath"), a)
        },
        supportsContentToolbar_: function() {
            return ! 1
        },
        getScrollPosition_: function() {
            return this.codeView_ ? this.codeView_.getScrollPosition() : FileDocumentView.__super__.getScrollPosition_.apply(this)
        },
        getCodeType_: function() {
            return this.model.getFileExtension()
        },
        getViewClasses_: function() {
            var a = FileDocumentView.__super__.getViewClasses_.call(this);
            a.push("file-document");
            return a
        },
        showCloseButtonInCodeMode_: function() {
            return ! 1
        },
        showFilenameHeader_: function() {
            return ! 1
        },
        codeCloseEvent_: function() {},
        code_: function(a) {
            var b = this.model.get("contentMimeType"),
            c = this.showFilenameHeader_() ? this.model.getFilename() : null;
            this.codeModeSupportsType_(b) ? (this.codeView_ = new CodeView({
                model: this.model,
                parentPane: this.getContentPane_(),
                sidebarPane: this.getSidebarPane_(),
                documentView: this,
                position: a,
                title: c,
                type: this.getCodeType_(),
                showCloseButton: this.showCloseButtonInCodeMode_()
            }), this.attachCodeListeners_(), this.codeView_.on("close", this.codeCloseEvent_, this), this.codeView_.on("rendered", this.codeRenderedEvent_, this), this.codeView_.render()) : this.displayNotSupported_(this.currentMode_)
        },
        codeModeSupportsType_: function(a) {
            return /^text\//.test(a) || FileDocumentView.CODE_MODE_MIME_TYPES_.indexOf(a) !== -1
        },
        codeRenderedEvent_: function() {
            this.codeView_.hasValidationErrors() ? this.showSidebar() : this.hideSidebar()
        },
        attachCodeListeners_: function() {
            this.codeView_.on("loaded",
            function() {
                this.trigger("loaded")
            },
            this)
        },
        codeRemove_: function() {
            if (this.codeView_) this.codeView_.off("close", this.codeCloseEvent_, this),
            this.codeView_.off("rendered", this.codeRenderedEvent_, this),
            this.codeView_.remove(),
            this.codeView_ = null
        }
    });
    FileDocumentView.newForType = function(a, b) {
        var c = FileDocumentView.registry_[a];
        c || (c = FileDocumentView);
        return new c(b)
    };
    FileDocumentView.classForType = function(a) {
        return FileDocumentView.registry_[a] || null
    };
    FileDocumentView.registry_ = {};
    FileDocumentView.registerType_ = function(a, b) {
        FileDocumentView.registry_[a] = b
    };
    FileDocumentView.CODE_MODE_MIME_TYPES_ = ["image/svg+xml", "application/javascript"];
    window.ExhibitDocumentView = FileDocumentView.extend({
        model: null,
        initialize: function(a) {
            a = a || {};
            if (!a.isSubclass) throw "ExhibitDocumentView is an abstract class";
            if (this.model instanceof ExhibitDocumentModel === !1) throw "The model for ExhibitDocumentView must be an ExhibitDocumentModel or an ExhibitDocumentModel subclass"; ! this.getMode() && app.getRouter().getIssueID() && this.setMode_(DocumentView.MODES.PROOF, !0);
            a.isSubclass = !0;
            ExhibitDocumentView.__super__.initialize.call(this, a);
            this.listenTo(this.model, "change:designation change:enumeration", this.initializeTitle_)
        },
        getDefaultMode: function() {
            return DocumentView.MODES.EDIT
        },
        allowModeToggle_: function() {
            return this.allowToggle_()
        },
        allowToggle_: function() {
            var a = !0;
            this.codeView_ && (a = a && this.codeView_.updateDocument());
            this.sidebarView_ && (a = a && this.sidebarView_.canChangeModes());
            return a
        },
        supportsContentToolbar_: function() {
            return ! 0
        },
        getCodeType_: function() {
            return "xml"
        },
        getViewClasses_: function() {
            var a = ExhibitDocumentView.__super__.getViewClasses_.call(this);
            a.push(this.model.get("documentType") + "-document");
            return a
        },
        getDocumentTitle: function() {
            var a = this.model.get("designation"),
            b = this.model.get("enumeration"),
            c = "";
            a && b ? c = a + " " + b + ": ": a && (c = a + ": ");
            a = this.model.get("title") || "";
            return c + a
        }
    });
    ExhibitDocumentView.getTypeName = function(a) {
        a = FileDocumentView.classForType(a);
        return ! a ? null: !a.prototype.getDocumentTypeName ? null: a.prototype.getDocumentTypeName()
    };
    window.S9MLDocumentView = ExhibitDocumentView.extend({
        codeOpenButton_: null,
        events: _.extend({},
        ExhibitDocumentView.prototype.events, {
            "click #content [href]": "handleLinkClickEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            S9MLDocumentView.__super__.initialize.call(this, a);
            this.switchToCodeModeBound_ = this.switchToCodeMode_.bind(this);
            this.listenTo(app.getSaveHandler(), "save_successful", this.saveSuccessfulEvent_)
        },
        render: function() {
            S9MLDocumentView.__super__.render.call(this);
            this.getMode() === DocumentView.MODES.EDIT ? this.addCodeButton_() : this.removeCodeButton_()
        },
        remove: function() {
            this.removeCodeButton_();
            S9MLDocumentView.__super__.remove.call(this)
        },
        getWidth: function() {
            return S9MLDocumentView.BLUEPRINT_WIDTH
        },
        setWidth: function() {},
        getFontSize: function() {
            return S9MLDocumentView.BLUEPRINT_FONT_SIZE
        },
        setFontSize: function() {},
        getContentDocument: function() {
            return this.doc_
        },
        setMode_: function(a, b) {
            if (a === DocumentView.MODES.EDIT && !this.model.isOnHead()) a = DocumentView.MODES.CODE;
            S9MLDocumentView.__super__.setMode_.call(this, a, b)
        },
        showCloseButtonInCodeMode_: function() {
            return this.model.isOnHead()
        },
        codeCloseEvent_: function() {
            this.allowModeToggle_() && (this.setMode_(DocumentView.MODES.EDIT), this.addCodeButton_())
        },
        switchToCodeMode_: function() {
            this.allowModeToggle_() && (this.setMode_(DocumentView.MODES.CODE), this.removeCodeButton_())
        },
        addCodeButton_: function() {
            this.removeCodeButton_();
            this.codeOpenButton_ = this.doc_.createElement("button");
            this.contentToolbarView_.getCodeModeControlArea().appendChild(this.codeOpenButton_);
            this.codeOpenButton_.addEventListener("click", this.switchToCodeModeBound_)
        },
        removeCodeButton_: function() {
            if (this.codeOpenButton_) this.codeOpenButton_.removeEventListener("click", this.switchToCodeModeBound_),
            DOMUtils.detachElement(this.codeOpenButton_),
            this.codeOpenButton_ = null
        },
        supportsContentToolbar_: function() {
            return this.getMode() !== DocumentView.MODES.CODE
        },
        handleLinkClickEvent_: function(a, b) {
            var c = this.model.getLinkResolver();
            if (c && (a.preventDefault(), this.currentMode_ !== DocumentView.MODES.EDIT)) {
                var d = b.getAttribute("href");
                try {
                    this.win_.open(c.resolve(d))
                } catch(e) {
                    app.getMessageView().error(e, MessageView.DEFAULT_DISPLAY_TIME)
                }
            }
        },
        saveSuccessfulEvent_: function(a) {
            a === this.model && this.render()
        }
    });
    S9MLDocumentView.BLUEPRINT_WIDTH = "auto";
    S9MLDocumentView.BLUEPRINT_FONT_SIZE = "100%";
    window.AssessmentFigureDocumentView = S9MLDocumentView.extend({
        model: null,
        loaded_: !1,
        proofingView_: null,
        view_: null,
        events: _.extend({},
        S9MLDocumentView.prototype.events, {
            "click .assessment-slide": "selectSlideEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            AssessmentFigureDocumentView.__super__.initialize.call(this, a);
            this.model.set("selectedSlide", 0);
            this.setupKeyboard_()
        },
        getDocumentTypeName: function() {
            return "Assessment"
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return this.view_ && this.view_.getScaledImage()
        },
        incrementSlide: function() {
            this.selectSlide(this.model.get("selectedSlide") + 1)
        },
        decrementSlide: function() {
            this.selectSlide(this.model.get("selectedSlide") - 1)
        },
        selectSlide: function(a) {
            app.getMessageView().show("Loading...");
            var b = this.model.get("rootPiece").get("questions").length - 1;
            a > b && (a = b);
            a < 0 && (a = 0);
            this.model.set({
                selectedSlide: a
            });
            this.render()
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    right: this.incrementSlide.bind(this),
                    left: this.decrementSlide.bind(this)
                })
            })
        },
        selectSlideEvent_: function(a, b) {
            this.selectSlide(parseInt(b.dataset.index, 10))
        },
        createView_: function(a) {
            var b = this.getContentPane_(),
            c = Templates["project/document/exhibit/assessment/assessmentView"](this.getTemplateData_());
            b.appendChild(c);
            var b = this.model.get("rootPiece").get("questions"),
            d = this.model.get("selectedSlide"),
            b = b.at(d),
            c = c.querySelector(".coordinate-box");
            this.view_ = new QuestionFigureView({
                model: b,
                parentPane: c,
                position: a
            });
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            app.getKeyboardManager().activate(this.keyboard_);
            this.view_.render()
        },
        removeView_: function() {
            app.getKeyboardManager().remove(this.keyboard_);
            this.view_.remove()
        },
        updateSubExhibitList_: function() {
            var a = this.model.get("rootPiece").get("questions"),
            a = a.map(function(a, c) {
                return {
                    title: "Question " + (c + 1),
                    id: XMLUtilities.getS9ID(a.getXMLNode())
                }
            },
            this);
            this.model.set("subExhibits", a)
        },
        updateSubExhibitId_: function() {
            var a = this.model.get("selectedSlide"),
            b = this.model.get("subExhibits");
            b && b.length && this.model.set("subExhibitId", b[a].id)
        },
        proof_: function(a) {
            this.createView_(a);
            this.updateSubExhibitList_();
            this.updateSubExhibitId_();
            a = this.el.querySelector("#assessment-anchor > .coordinate-box");
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: a,
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render();
            this.model.on("change:selectedSlide", this.updateSubExhibitId_, this)
        },
        proofRemove_: function() {
            this.model.off("change:selectedSlide", this.updateSubExhibitId_, this);
            this.proofingView_.remove();
            this.removeView_()
        },
        edit_: function(a) {
            this.createView_(a);
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model,
                hideCiteField: !0,
                hideCaptionField: !0
            });
            this.sidebarView_.render();
            this.model.get("rootPiece").on("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().on("save", this.onSave_, this)
        },
        editRemove_: function() {
            this.model.get("rootPiece").off("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            if (this.sidebarView_) this.sidebarView_.remove(),
            this.sidebarView_ = null;
            this.removeView_();
            this.model.ensureXMLSerialized()
        },
        getTemplateData_: function() {
            var a = this.model.get("rootPiece").toJSON(),
            b = this.model.get("selectedSlide");
            a.questions.forEach(function(a, d) {
                a.index = d;
                a.slideNumber = d + 1;
                a.selected = d == b
            });
            return a
        },
        onSave_: function() {
            this.model.updateFromXML()
        },
        modelDirtyEvent_: function() {
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model)
        }
    });
    FileDocumentView.registerType_("assessment", AssessmentFigureDocumentView);
    window.ConfigDocumentView = ExhibitDocumentView.extend({
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            ConfigDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Configuration"
        },
        getDocumentTitle: function() {
            return "Config"
        },
        showValidationErrors: function(a) {
            this.setMode_(DocumentView.MODES.EDIT);
            this.codeView_.setValidationErrors(a)
        },
        edit_: function() {
            this.code_()
        },
        editRemove_: function() {
            this.codeRemove_()
        },
        supportsContentToolbar_: function() {
            return ! 1
        }
    });
    FileDocumentView.registerType_("config", ConfigDocumentView);
    window.ValidationFormEditorView = Backbone.View.extend({
        validationErrors_: null,
        canChangeModes: function() {
            return this.hasValidationErrors() ? (app.getMessageView().error(ValidationFormEditorView.VALIDATION_ERRORS_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME), !1) : !0
        },
        setValidationErrors: function(a, b) {
            this.validationErrors_ = a;
            this.selectedValidationError_ = 0; ! b && this.hasValidationErrors() && app.getMessageView().error(ValidationFormEditorView.SAVE_ERRORS_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME)
        },
        hasValidationErrors: function() {
            return this.validationErrors_.length !== 0
        },
        updateDocument: function() {
            throw Error("Programming Error: updateDocument is abstract and subclasses must override it.");
        },
        saveEvent_: function(a) {
            this.updateDocument() || a.preventDefault()
        }
    });
    ValidationFormEditorView.SAVE_ERRORS_MESSAGE_ = "There were validation errors while saving; please correct them before continuing";
    ValidationFormEditorView.VALIDATION_ERRORS_MESSAGE_ = "There were validation errors; please correct them before continuing";
    window.AnnotationFormEditorView = ValidationFormEditorView.extend({
        events: _.extend({},
        ValidationFormEditorView.prototype.events, {
            "keyup input, textarea": "updateAnnotation_",
            "click input, textarea": "updateAnnotation_"
        }),
        parentPane_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.doc_ = a.doc || document;
            this.model.on("change", this.render, this);
            app.getSaveHandler().on("save", this.saveEvent_, this);
            this.validationErrors_ = []
        },
        remove: function() {
            this.autogrows_ && this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this);
            app.getKeyboardManager().remove(this.mutingKeyboard_);
            this.model.off("change", this.render, this);
            app.getSaveHandler().off("save", this.saveEvent_, this);
            AnnotationFormEditorView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            if (!this.el.contains(this.doc_.activeElement)) DOMUtils.detachElement(this.el),
            this.setElement(Templates["project/document/exhibit/editing/annotationFormEditor"](this.model.toJSON())),
            this.parentPane_.appendChild(this.el),
            this.el.querySelector('input[name="orientation"][value="' + this.model.get("orientation") + '"]').checked = !0,
            this.addAutogrows_()
        },
        addAutogrows_: function() {
            Array.isArray(this.autogrows_) && this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this);
            this.autogrows_ = this.el.querySelectorAll("textarea").map(function(a) {
                a = new Autogrow({
                    el: a,
                    maxHeight: 150
                });
                a.render();
                return a
            },
            this)
        },
        updateDocument: function(a) {
            var b = DOMUtils.getFormValues(this.el);
            b.x = parseInt(b.x, 10);
            b.y = parseInt(b.y, 10);
            b.isActive = !!(b.isActive && b.isActive[0] === "on");
            var c = b.snippet;
            delete b.snippet;
            var d = [];
            this.model.set(b, {
                error: function(a, b) {
                    d.push(b)
                }
            });
            this.model.get("snippet").set("xml", c, {
                error: function(a, b) {
                    d.push(b)
                }
            });
            this.setValidationErrors(d, a);
            return ! this.hasValidationErrors()
        },
        updateAnnotation_: function() {
            this.updateDocument(!0);
            app.getSaveHandler().add(this.model.getDocumentModel())
        }
    });
    window.BaseImageFormEditorView = ValidationFormEditorView.extend({
        events: _.extend({},
        ValidationFormEditorView.prototype.events, {
            "keyup textarea": "updateModelEvent_",
            "click textarea": "updateModelEvent_"
        }),
        model: null,
        hideCaptionSettings_: !1,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.hideCaptionSettings_ = !!a.hideCaptionSettings;
            this.model.on("change:caption change:cite", this.render, this);
            app.getSaveHandler().on("save", this.saveEvent_, this);
            this.validationErrors_ = []
        },
        render: function() {
            throw Error("Programming Error: render is abstract and subclasses must override it.");
        },
        remove: function() {
            this.cleanup_();
            this.model.off("change:caption change:cite", this.render, this);
            app.getSaveHandler().off("save", this.saveEvent_, this);
            BaseImageFormEditorView.__super__.remove.call(this)
        },
        cleanup_: function() {
            this.autogrows_ && this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this)
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            return {
                hideCaptionSettings: this.hideCaptionSettings_,
                caption: a.caption,
                cite: a.cite
            }
        },
        updateDocument: function(a) {
            if (this.hideCaptionSettings_) return ! 0;
            var b = [];
            this.model.set({
                caption: this.el.querySelector('[name="image-subcaption"]').value || null,
                cite: this.el.querySelector('[name="image-subcite"]').value || null
            },
            {
                error: function(a, d) {
                    b.push(d)
                }
            });
            this.setValidationErrors(b, a);
            return ! this.hasValidationErrors()
        },
        updateModelEvent_: function() {
            this.updateDocument(!0);
            app.getSaveHandler().add(this.model.getDocumentModel())
        },
        addAutogrows_: function() {
            this.autogrows_ = this.el.querySelectorAll("textarea").map(function(a) {
                a = new Autogrow({
                    el: a,
                    maxHeight: 150
                });
                a.render();
                return a
            },
            this)
        }
    });
    window.AnnotationsView = Backbone.View.extend({
        events: {
            "mousewheel .label": "mouseWheelEvent_",
            "click .annotation": "toggleAnnotationEvent_",
            "mousedown .annotation": "preventSelect_"
        },
        collection: null,
        fontsLoaded_: !1,
        parentPane_: null,
        enumeration_: null,
        scaledImage_: null,
        snippetViews_: null,
        destinationViews_: null,
        offsets_: null,
        revealSingleAnnotation_: !1,
        activeAnnotation_: null,
        initialize: function(a) {
            this.parentPane_ = a.parent;
            this.enumeration_ = a.enumeration;
            this.scaledImage_ = a.scaledImage || null;
            this.win_ = a.window || window;
            this.revealSingleAnnotation_ = typeof a.revealSingleAnnotation === "undefined" ? !0 : !!a.revealSingleAnnotation;
            this.offsets_ = {};
            this.snippetViews_ = {};
            this.destinationViews_ = {};
            this.collection.on("add remove", this.render, this);
            this.collection.on("change:isActive", this.annotationActiveChangeEvent_, this);
            if (this.scaledImage_) this.scaledImage_.on("scale", this.onScale_, this);
            this.fontChecker_ = new Hacks.FontChecker({
                fontNames: Hacks.ANNOTATION_FONTS,
                callback: function() {
                    this.fontsLoaded_ = !0;
                    this.trigger("fontsLoaded")
                }.bind(this)
            })
        },
        remove: function() {
            this.revealSingleAnnotation_ ? this.activeAnnotation_ && this.activeAnnotation_.set("isActive", !1, {
                silent: !0
            }) : this.collection.forEach(function(a) {
                a.set("isActive", !1, {
                    silent: !0
                })
            },
            this);
            this.fontChecker_.remove();
            this.fontLoadEvent_ && this.off("fontsLoaded", this.fontLoadEvent_, this);
            this.collection.off("add remove", this.render, this);
            this.collection.off("change:isActive", this.annotationActiveChangeEvent_, this);
            this.scaledImage_ && this.scaledImage_.off("scale", this.onScale_, this);
            Object.keys(this.snippetViews_).forEach(function(a) {
                this.snippetViews_[a].remove()
            },
            this);
            this.snippetViews_ = {};
            this.removeDestinations_();
            AnnotationsView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            if (!this.fontsLoaded_ && !this.fontLoadEvent_) this.fontLoadEvent_ = function() {
                this.off("fontsLoaded", this.fontLoadEvent_, this);
                this.fontLoadEvent_ = null;
                this.render()
            },
            this.on("fontsLoaded", this.fontLoadEvent_, this);
            Object.keys(this.snippetViews_).forEach(function(a) {
                this.snippetViews_[a].remove()
            },
            this);
            this.snippetViews_ = {};
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/common/annotationsCollection"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            var a = this.el.querySelectorAll(".annotation-wrapper");
            a.forEach(function(a) {
                var c = this.collection.get(a.querySelector(".annotation").dataset.cid);
                this.renderSnippetContent_(a, c);
                this.adjustAnnotation_(a, c)
            },
            this);
            this.trigger("renderComplete", a)
        },
        renderSingleAnnotation_: function(a) {
            var b = a.hasChanged("isActive"),
            c = this.getModelTemplateData_(a, this.collection.indexOf(a)),
            d = this.el.querySelector('[data-cid="' + a.cid + '"]').parentElement,
            c = (0, Templates["project/document/exhibit/common/annotation"])(c);
            DOMUtils.replaceNode(d, c);
            this.renderSnippetContent_(c, a);
            this.adjustAnnotation_(c, a, b);
            this.setImagePadding_(b);
            b && a.get("isActive") && this.scrollToAnnotation_(a);
            this.trigger("renderComplete", [c])
        },
        renderSnippetContent_: function(a, b) {
            this.snippetViews_[b.cid] && (this.snippetViews_[b.cid].remove(), this.snippetViews_[b.cid] = null);
            if (b.get("snippet")) {
                var c = a.querySelector(".label.snippet");
                c.innerHTML = "";
                c = this.createSnippetContentView_({
                    model: b.get("snippet"),
                    parentPane: c
                },
                a, b);
                c.render(); (c.hasImages() || c.hasAudio() || c.hasVideo()) && a.querySelector(".annotation").classList.add("maximize");
                this.snippetViews_[b.cid] = c
            }
        },
        createSnippetContentView_: function(a) {
            return new SnippetContentView(a)
        },
        getTemplateData_: function() {
            var a = {};
            a.annotations = this.collection.toJSON();
            a.annotations.forEach(function(a, c) {
                _.extend(a, this.getModelLabelData_(a, c))
            },
            this);
            return a
        },
        scrollToAnnotation_: function(a) {
            if (this.scaledImage_) {
                var b = this.scaledImage_.getPosition();
                if (b) {
                    var b = b.zoom,
                    c = this.offsets_[a.cid],
                    d = a.get("x") + c.marginLeft / b,
                    a = a.get("y") + c.marginTop / b;
                    this.scaledImage_.scrollToContain(d, a, c.offsetWidth / b, c.offsetHeight / b)
                }
            }
        },
        setImagePadding_: function(a) {
            if (this.scaledImage_) {
                var a = !!a,
                b = this.scaledImage_.getPosition();
                if (b) {
                    var c = {
                        left: 0,
                        top: 0,
                        right: 0,
                        bottom: 0
                    };
                    this.collection.forEach(function(a) {
                        var e = this.offsets_[a.cid],
                        f = Math.floor(a.get("x") + e.marginLeft / b.zoom),
                        a = Math.floor(a.get("y") + e.marginTop / b.zoom),
                        g = Math.floor(e.offsetWidth / b.zoom),
                        e = Math.floor(e.offsetHeight / b.zoom);
                        c = {
                            left: Math.max(c.left, -1 * f),
                            top: Math.max(c.top, -1 * a),
                            right: Math.max(c.right, f + g - b.contentWidth),
                            bottom: Math.max(c.bottom, a + e - b.contentHeight)
                        }
                    },
                    this);
                    this.scaledImage_.setPadding(c, a)
                }
            }
        },
        getModelTemplateData_: function(a, b) {
            var c = a.toJSON();
            _.extend(c, this.getModelLabelData_(c, b));
            return c
        },
        getModelLabelData_: function(a, b) {
            var c = a.answers && a.answers.length ? "?": "i",
            d = "";
            a.label ? d = a.label: this.enumeration_ && (d = this.enumeration_.getEnumerationForIndex(b));
            return {
                closedLabel: d || c,
                openLabel: d
            }
        },
        isAnnotationContent: function(a) {
            var b = DOMUtils.getParent(a, ".annotation");
            return (a.classList.contains("annotation") || b) && !a.classList.contains("rotation-block")
        },
        onScale_: function(a, b) {
            b && this.setImagePadding_(!1)
        },
        toggleAnnotationEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a) && !a.target.getAttribute("href") && !DOMUtils.getParent(a.target, "[href]")) {
                var c = this.collection.get(b.dataset.cid);
                c.set("isActive", !c.get("isActive"))
            }
        },
        annotationActiveChangeEvent_: function(a, b) {
            if (this.revealSingleAnnotation_) if (b && this.activeAnnotation_ !== a) {
                var c = this.activeAnnotation_;
                this.activeAnnotation_ = a;
                c && c.set("isActive", !1)
            } else if (this.activeAnnotation_ === a) this.activeAnnotation_ = null;
            this.renderSingleAnnotation_(a)
        },
        adjustAnnotation_: function(a, b, c) {
            this.adjustAnnotationPosition_(b.cid, c);
            this.drawDestinations_(b)
        },
        getAnnotationOffset: function(a) {
            return _.clone(this.offsets_[a.cid])
        },
        adjustAnnotationPosition_: function(a, b) {
            var c = this.collection.get(a),
            d = this.el.querySelector('[data-cid="' + a + '"]');
            DOMUtils.setStyles(d, {
                width: null,
                minWidth: null,
                height: null,
                marginLeft: null,
                marginTop: null
            });
            d.classList.remove("opened");
            var e = this.getAnnotationOffset_(d);
            this.offsets_[a] = {
                marginLeft: parseInt(e.marginLeft, 10),
                marginTop: parseInt(e.marginTop, 10),
                width: parseInt(e.width, 10),
                height: parseInt(e.height, 10),
                offsetWidth: e.offsetWidth,
                offsetHeight: e.offsetHeight
            };
            if (b) {
                d.classList.toggle("active");
                var f = this.getAnnotationOffset_(d);
                DOMUtils.setStyles(d, {
                    marginLeft: f.marginLeft,
                    marginTop: f.marginTop,
                    width: f.width,
                    minWidth: f.width,
                    height: f.height
                });
                Hacks.forceLayout(d);
                d.classList.toggle("active");
                d.classList.add("transitions-enabled");
                var g = BrowserFeatures.getEventName("transitionend");
                d.addEventListener(g,
                function i() {
                    d.removeEventListener(g, i);
                    d.classList.contains("active") && d.classList.add("opened");
                    Hacks.forceLayout(d)
                })
            }
            DOMUtils.setStyles(d, {
                marginLeft: e.marginLeft,
                marginTop: e.marginTop,
                minWidth: e.width,
                width: b ? e.width: null,
                height: e.height
            });
            DOMUtils.setStyles(d.parentElement, {
                top: c.get("y") + "px",
                left: c.get("x") + "px"
            }); ! b && d.classList.contains("active") && d.classList.add("opened")
        },
        drawDestinations_: function(a) {
            this.removeDestinations_(a);
            a.get("destinations").forEach(function(b) {
                var c = this.el.querySelector('.annotation[data-cid="' + a.cid + '"]'),
                b = this.createDestination_({
                    model: b,
                    parent: c.parentElement,
                    coordinateBox: this.parentPane_,
                    scaledImage: this.scaledImage_,
                    useParentPosition: !0
                });
                b.render();
                this.destinationViews_[a.cid] = this.destinationViews_[a.cid] || [];
                this.destinationViews_[a.cid].push(b)
            },
            this)
        },
        removeDestinations_: function(a) {
            if (!a || this.destinationViews_[a.cid])(a ? [a.cid] : Object.keys(this.destinationViews_)).forEach(function(a) {
                var c = this.destinationViews_[a];
                c && (c.forEach(function(a) {
                    a.remove()
                },
                this), this.destinationViews_[a] = null)
            },
            this)
        },
        createDestination_: function(a) {
            return new PointerView(a)
        },
        getAnnotationOffset_: function(a) {
            var b, c, d, e;
            b = a.offsetWidth;
            c = a.offsetHeight;
            e = DOMUtils.getComputedStyle(a);
            d = e.width;
            e = e.height;
            var f = 0,
            g = 0;
            a.classList.contains("tailleft") ? (g = -c / 2, f = AnnotationsView.TAIL_LENGTH_) : a.classList.contains("tailright") ? (f = -b - AnnotationsView.TAIL_LENGTH_, g = -c / 2) : a.classList.contains("tailup") ? (f = -b / 2, g = AnnotationsView.TAIL_LENGTH_) : a.classList.contains("taildown") && (f = -b / 2, g = -c - AnnotationsView.TAIL_LENGTH_);
            return {
                marginLeft: f + "px",
                marginTop: g + "px",
                width: d,
                height: e,
                offsetWidth: b,
                offsetHeight: c
            }
        },
        focus: function() {},
        unfocus: function() {},
        mouseWheelEvent_: function(a) {
            a.stopPropagation()
        },
        preventSelect_: function(a) {
            a.stopPropagation();
            a.preventDefault()
        }
    });
    AnnotationsView.TAIL_LENGTH_ = 7;
    window.PointerView = Backbone.View.extend({
        model: null,
        parent_: null,
        scaledImage_: null,
        coordinateBox_: null,
        startEl_: null,
        endEl_: null,
        lineEl_: null,
        injectPosition_: "top",
        extraClasses_: null,
        hidden_: !1,
        useParentPosition_: !1,
        initialize: function(a) {
            this.doc_ = a.document || document;
            this.injectPosition_ = a.injectPosition || "top";
            this.extraClasses_ = a.extraClasses || "";
            this.parent_ = a.parent;
            this.coordinateBox_ = a.coordinateBox;
            this.scaledImage_ = a.scaledImage;
            this.useParentPosition_ = !!a.useParentPosition;
            this.model.on("all", this.reposition, this);
            if (this.scaledImage_) this.scaledImage_.on("scale", this.onScale_, this)
        },
        onScale_: function() {
            this.hidden_ || this.reposition()
        },
        render: function() {
            if (this.model) DOMUtils.detachElement(this.el),
            this.setElement(Templates["common/arrow"](this.getTemplateData_())),
            this.lineEl_ = this.el.querySelector(".line"),
            this.startEl_ = this.el.querySelector(".start"),
            this.endEl_ = this.el.querySelector(".end"),
            this.parent_.insertBefore(this.el, this.injectPosition_ === "top" ? this.parent_.firstElementChild: null),
            this.reposition()
        },
        remove: function() {
            this.model.off("all", this.reposition, this);
            this.scaledImage_ && this.scaledImage_.off("scale", this.onScale_, this);
            PointerView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            return {
                extraClasses_: this.extraClasses_
            }
        },
        getParentPosition_: function() {
            if (this.useParentPosition_) {
                var a = DOMUtils.getComputedStyle(this.parent_);
                return {
                    x: parseInt(a.left, 10),
                    y: parseInt(a.top, 10)
                }
            } else return a = DOMUtils.getOffset(this.parent_, this.coordinateBox_),
            {
                x: a.left,
                y: a.top
            }
        },
        reposition: function() {
            var a = this.getPositionFromModel_(),
            b = this.getParentPosition_();
            if (this.scaledImage_) {
                var c = this.scaledImage_.toScaledCoordinates({
                    left: a.x,
                    top: a.y
                });
                if (!c) return;
                a.x = c.left;
                a.y = c.top
            }
            DOMUtils.setStyles(this.endEl_, {
                left: a.x - b.x + "px",
                top: a.y - b.y + "px"
            });
            this.renderLine_()
        },
        getPositionFromModel_: function() {
            return {
                x: this.model.get("x"),
                y: this.model.get("y")
            }
        },
        renderLine_: function() {
            var a = this.getRelativeOffset_(),
            b = a.x1 - a.x0,
            c = a.y1 - a.y0,
            d = Math.atan(c / b),
            e = Math.round(d / Math.PI * 180),
            f = Math.sin(d),
            b = f ? c / f: b,
            c = (Math.cos(d) - 1) * Math.abs(b) / 2,
            d = Math.sin(d) * Math.abs(b) / 2,
            c = Math.round(c),
            d = Math.round(d),
            b = Math.round(b);
            b > 0 ? (this.lineEl_.classList.add("right-oriented"), this.lineEl_.classList.remove("left-oriented"), DOMUtils.setStyles(this.lineEl_, {
                left: a.x0 + c + "px",
                top: a.y0 + d + 1 + "px"
            }), this.endEl_.style.webkitTransform = "rotate(" + (180 + e) + "deg)") : (this.lineEl_.classList.add("left-oriented"), this.lineEl_.classList.remove("right-oriented"), DOMUtils.setStyles(this.lineEl_, {
                left: a.x1 + c + "px",
                top: a.y1 + d + 1 + "px"
            }), this.endEl_.style.webkitTransform = "rotate(" + e + "deg)");
            DOMUtils.setStyles(this.lineEl_, {
                width: Math.abs(b) + "px",
                webkitTransform: "rotate(" + e + "deg)"
            })
        },
        getRelativeOffset_: function() {
            var a = DOMUtils.getComputedStyle(this.endEl_);
            return {
                x0: 0,
                y0: 0,
                x1: parseInt(a.left, 10),
                y1: parseInt(a.top, 10)
            }
        },
        show: function() {
            if (this.hidden_ && (this.hidden_ = !1, this.el.show(), this.scaledImage_)) this.onScale_()
        },
        hide: function() {
            if (!this.hidden_) this.hidden_ = !0,
            this.el.hide()
        }
    });
    window.EditablePointerView = PointerView.extend({
        events: _.extend({},
        PointerView.prototype.events, {
            "click .delete-arrow": "deleteArrowEvent_"
        }),
        render: function() {
            EditablePointerView.__super__.render.apply(this, arguments);
            this.el.querySelectorAll(".handle").forEach(this.setupDragHandle_, this)
        },
        getTemplateData_: function() {
            return {
                extraClasses: this.extraClasses_,
                isEditable: !0
            }
        },
        deleteArrowEvent_: function() {
            this.model.collection.remove(this.model);
            this.remove()
        },
        setupDragHandle_: function(a) {
            new Drag(a, {
                preventDefault: !0,
                stopPropagation: !0,
                snap: 2,
                onDrag: function() {
                    this.renderLine_()
                }.bind(this),
                onComplete: function() {
                    this.model && this.model.set(this.getCoordinateBoxOffset_())
                }.bind(this)
            })
        },
        getCoordinateBoxOffset_: function() {
            var a = DOMUtils.getComputedStyle(this.parent_),
            b = parseInt(a.left, 10) || 0,
            a = parseInt(a.top, 10) || 0,
            c = DOMUtils.getComputedStyle(this.endEl_),
            d = parseInt(c.left, 10),
            c = parseInt(c.top, 10),
            b = {
                left: Math.max(Math.round(b + d), 0),
                top: Math.max(Math.round(a + c), 0)
            };
            if (this.scaledImage_) b = this.scaledImage_.toRawCoordinates(b),
            b.left = Math.round(b.left),
            b.top = Math.round(b.top);
            return {
                x: b.left,
                y: b.top
            }
        }
    });
    window.EditableAnnotationsView = AnnotationsView.extend({
        hideAddPoptipButton_: !1,
        documentModel_: null,
        destinationsClass: EditablePointerView,
        rotateInfo_: null,
        selectedAnnotations_: null,
        containerDimensions_: null,
        draggers_: null,
        destinationCreators_: null,
        keyboard_: null,
        disableDelete_: !1,
        events: _.extend({},
        AnnotationsView.prototype.events, {
            "click button.add-annotation": "addAnnotationClickEvent_",
            "mousedown .rotation-block": "startRotation_",
            "click .annotation": "clickAnnotationEvent_",
            "dblclick .annotation": "dblClickAnnotationEvent_"
        }),
        initialize: function(a) {
            this.doc_ = a.doc || document;
            this.win_ = a.window || window;
            this.containerDimensions_ = a.containerDimensions;
            this.disableDelete_ = !!a.disableDelete;
            this.draggers_ = {};
            this.destinationCreators_ = {};
            this.documentModel_ = a.documentModel;
            this.hideAddPoptipButton_ = !!a.hideAddPoptipButton;
            EditableAnnotationsView.__super__.initialize.call(this, a);
            this.drag_ = this.drag_.bind(this);
            this.endRotation_ = this.endRotation_.bind(this);
            this.selectedAnnotations_ = new Backbone.Collection;
            this.selectedAnnotations_.on("all", this.selectionChangeEvent_, this);
            this.collection.on("all", this.modelEvent_, this);
            this.collection.on("change", this.modelChangeEvent_, this);
            this.onScaleDebounced_ = _.debounce(this.onScaleDebounced_, 100);
            this.parentClickEventBound_ = this.parentClickEvent_.bind(this);
            this.parentPane_.addEventListener("click", this.parentClickEventBound_);
            this.setupKeyboard_()
        },
        render: function() {
            EditableAnnotationsView.__super__.render.apply(this, arguments);
            app.getKeyboardManager().activate(this.keyboard_)
        },
        remove: function() {
            this.selectedAnnotations_.off("all", this.selectionChangeEvent_, this);
            this.parentPane_.removeEventListener("click", this.parentClickEventBound_);
            this.collection.off("all", this.modelEvent_, this);
            this.collection.off("change", this.modelChangeEvent_, this);
            Object.keys(this.draggers_).forEach(function(a) {
                this.draggers_[a].detach();
                this.draggers_[a].cancel()
            },
            this);
            this.draggers_ = {};
            this.removeDestinationCreators_();
            if (this.scaleThrottleTimer_) this.win_.clearTimeout(this.scaleThrottleTimer_),
            this.scaleThrottleTimer_ = null;
            app.getKeyboardManager().remove(this.keyboard_);
            EditableAnnotationsView.__super__.remove.apply(this, arguments)
        },
        deselectAnnotations: function() {
            this.selectedAnnotations_.reset()
        },
        getSelectedAnnotations: function() {
            return this.selectedAnnotations_
        },
        createSnippetContentView_: function(a, b) {
            a.contentPane = this.el;
            a.popupAnchor = b.querySelector(".annotation");
            return new EditableSnippetContentView(a)
        },
        repositionAnnotation_: function(a) {
            this.adjustAnnotationPosition_(a.cid, !1);
            this.setImagePadding_(!1);
            this.trigger("renderComplete", [this.el.querySelector('[data-cid="' + a.cid + '"]').parentElement])
        },
        setupKeyboard_: function() {
            var a = EditableAnnotationsView.REGULAR_NUDGE_FACTOR_,
            b = EditableAnnotationsView.SHIFT_NUDGE_FACTOR_,
            c = EditableAnnotationsView.DIRECTION_,
            d = this.moveSelectedAnnotations_;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    up: d.bind(this, a, c.UP),
                    left: d.bind(this, a, c.LEFT),
                    right: d.bind(this, a, c.RIGHT),
                    down: d.bind(this, a, c.DOWN),
                    "shift+up": d.bind(this, b, c.UP),
                    "shift+left": d.bind(this, b, c.LEFT),
                    "shift+right": d.bind(this, b, c.RIGHT),
                    "shift+down": d.bind(this, b, c.DOWN),
                    backspace: this.deleteSelectedAnnotations_.bind(this)
                })
            })
        },
        selectionChangeEvent_: function(a, b) {
            if (a === "add" || a === "remove") {
                var c = this.el.querySelector('.annotation[data-cid="' + b.cid + '"]');
                a === "add" ? c.classList.add("selected-annotation") : c.classList.remove("selected-annotation")
            } else a === "reset" && this.el.querySelectorAll(".annotation[data-cid]").forEach(function(a) {
                b.get(a.dataset.cid) ? a.classList.add("selected-annotation") : a.classList.remove("selected-annotation")
            },
            this)
        },
        onScale_: function(a, b) {
            b && Object.keys(this.destinationCreators_).forEach(function(a) {
                this.destinationCreators_[a].hide()
            },
            this);
            Object.keys(this.snippetViews_).forEach(function(a) { (a = this.snippetViews_[a]) && a.reposition()
            },
            this);
            EditableAnnotationsView.__super__.onScale_.apply(this, arguments);
            this.onScaleDebounced_()
        },
        onScaleDebounced_: function() {
            Object.keys(this.destinationCreators_).forEach(function(a) {
                this.destinationCreators_[a].show()
            },
            this);
            var a = this.getDragLimit_();
            Object.keys(this.draggers_).forEach(function(b) {
                this.draggers_[b].setOptions({
                    limit: a
                })
            },
            this)
        },
        modelChangeEvent_: function(a) {
            a.hasChanged("isActive") || (a.hasChanged("x") || a.hasChanged("y") || a.hasChanged("orientation") ? this.renderSingleAnnotation_(a) : this.repositionAnnotation_(a))
        },
        modelEvent_: function(a, b) {
            if (["add", "remove", "change"].indexOf(a) !== -1 && !(a === "change" && b.hasChanged("isActive") && Object.keys(b.changedAttributes()).length === 1)) {
                var c = b.getDocumentModel();
                c.set("dirtyContent", !0);
                app.getSaveHandler().add(c)
            }
        },
        getTemplateData_: function() {
            var a = {
                isEditable: !0
            };
            a.annotations = this.collection.toJSON();
            a.annotations.forEach(function(a, c) {
                var d = this.collection.at(c);
                _.extend(a, this.getModelLabelData_(a, c));
                a.isEditable = !0;
                a.isSelected = !!this.selectedAnnotations_.get(d.cid)
            },
            this);
            a.showAddPoptipButton = !this.hideAddPoptipButton_;
            return a
        },
        getModelTemplateData_: function(a, b) {
            var c = a.toJSON();
            c.isEditable = !0;
            _.extend(c, this.getModelLabelData_(c, b));
            c.isSelected = !!this.selectedAnnotations_.get(a.cid);
            return c
        },
        adjustAnnotation_: function(a, b) {
            this.adjustAnnotationPosition_(b.cid, !1);
            this.drawDestinations_(b);
            this.drawDestinationCreator_(a, b);
            this.setupDrag_(a, b)
        },
        createDestination_: function(a) {
            return new EditablePointerView(a)
        },
        drawDestinationCreator_: function(a, b) {
            var c = new DestinationModel(this.getXYOffset_(b));
            this.destinationCreators_[b.cid] && this.destinationCreators_[b.cid].remove();
            var d = new EditablePointerView({
                model: c,
                parent: a,
                coordinateBox: this.parentPane_,
                extraClasses: "new",
                injectPosition: "bottom",
                scaledImage: this.scaledImage_,
                useParentPosition: !0
            });
            d.render();
            this.destinationCreators_[b.cid] = d;
            var e = function() {
                c.off("change", e, this);
                b.get("destinations").add(c);
                this.renderSingleAnnotation_(b);
                this.collection.trigger("change", b)
            };
            c.on("change", e, this)
        },
        getXYOffset_: function(a) {
            var b = AnnotationsView.TAIL_LENGTH_,
            c = 0,
            d = 0;
            switch (a.get("orientation")) {
            case "tailup":
                d = -b;
                break;
            case "taildown":
                d = b;
                break;
            case "tailleft":
                c = -b;
                break;
            case "tailright":
                c = b
            }
            return {
                x: a.get("x") + c,
                y: a.get("y") + d
            }
        },
        removeDestinationCreators_: function() {
            Object.keys(this.destinationCreators_).forEach(function(a) {
                this.destinationCreators_[a].remove()
            },
            this);
            this.destinationCreators_ = {}
        },
        getDragLimit_: function() {
            if (!this.scaledImage_) return {
                x: [0, this.containerDimensions_.x],
                y: [0, this.containerDimensions_.y]
            };
            var a = this.scaledImage_.getScaledBounds();
            return ! a ? null: {
                x: [a.left, a.left + a.width],
                y: [a.top, a.top + a.height]
            }
        },
        setupDrag_: function(a, b) {
            var c = this.getDragLimit_(),
            d = this;
            this.draggers_[b.cid] && (this.draggers_[b.cid].detach(), this.draggers_[b.cid].cancel());
            this.draggers_[b.cid] = new Drag(a, {
                handle: a.querySelector(".annotation"),
                snap: 2,
                limit: c,
                onStart: function() {
                    d.rotateInfo_ && this.stop()
                },
                onDrag: function() {
                    b.get("destinations").forEach(function(a) {
                        a.trigger("change")
                    })
                },
                onComplete: function(a) {
                    a = DOMUtils.getComputedStyle(a);
                    a = {
                        top: parseInt(a.top, 10),
                        left: parseInt(a.left, 10)
                    };
                    if (d.scaledImage_) a = d.scaledImage_.toRawCoordinates(a),
                    a.left = Math.round(a.left),
                    a.top = Math.round(a.top);
                    b.set({
                        x: a.left,
                        y: a.top
                    })
                }
            })
        },
        startRotation_: function(a) {
            var b = DOMUtils.getParent(a.target, ".annotation"),
            c = DOMUtils.getOffset(DOMUtils.getParent(a.target, ".annotation-wrapper"));
            b.classList.add("rotating");
            var d = this.calcTailPosition_(c, {
                x: a.pageX,
                y: a.pageY
            });
            this.rotateInfo_ = {
                rotatingEl: b,
                wrapper: DOMUtils.getParent(b, ".annotation-wrapper"),
                origin: c,
                tailPos: d,
                cid: b.dataset.cid
            };
            this.doc_.addEventListener("mousemove", this.drag_);
            this.doc_.addEventListener("mouseup", this.endRotation_);
            a.preventDefault();
            a.stopPropagation()
        },
        drag_: function(a) {
            var b = this.rotateInfo_,
            c = this.calcTailPosition_(b.origin, {
                x: a.pageX,
                y: a.pageY
            });
            if (b.tailPos !== c) b.wrapper.classList.remove(b.tailPos),
            b.wrapper.classList.add(c),
            this.collection.get(b.cid).set("orientation", c),
            b.tailPos = c;
            a.preventDefault()
        },
        endRotation_: function(a) {
            this.doc_.removeEventListener("mousemove", this.drag_);
            this.doc_.removeEventListener("mouseup", this.endRotation_);
            if (this.rotateInfo_) this.rotateInfo_.rotatingEl.classList.remove("rotating"),
            this.rotateInfo_ = null,
            a.preventDefault()
        },
        calcTailPosition_: function(a, b) {
            var c = Math.atan2(b.y - a.top, b.x - a.left);
            return - Math.PI / 4 < c && c <= Math.PI / 4 ? "tailleft": -3 * Math.PI / 4 < c && c <= -Math.PI / 4 ? "taildown": Math.PI / 4 < c && c <= 3 * Math.PI / 4 ? "tailup": "tailright"
        },
        moveSelectedAnnotations_: function(a, b) {
            var c = b.attribute;
            a *= b.magnitude;
            this.selectedAnnotations_.forEach(function(b) {
                var e = b.get(c);
                e += a;
                b.set(c, e)
            },
            this)
        },
        deleteSelectedAnnotations_: function(a) {
            this.disableDelete_ || (a.preventDefault(), this.collection.remove(this.selectedAnnotations_.toArray()), this.selectedAnnotations_.reset())
        },
        parentClickEvent_: function() {
            this.collection.forEach(function(a) {
                a.get("isActive") && a.set("isActive", !1)
            },
            this)
        },
        addAnnotationClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a = this.doc_.querySelector(".scrollable-content"), this.collection.add(new AnnotationModel({
                x: Math.round(a.scrollLeft + a.offsetWidth / 2),
                y: Math.round(a.scrollTop + a.offsetHeight / 2),
                orientation: AnnotationModel.TAIL_UP,
                text: ""
            },
            {
                documentModel: this.documentModel_
            })))
        },
        clickAnnotationEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.stopPropagation();
                a.preventDefault();
                var c = this.collection.get(b.dataset.cid);
                c.get("isActive") || (a.shiftKey ? this.selectedAnnotations_.add(c) : this.selectedAnnotations_.contains(c) ? this.toggleAnnotationEvent_(a, b) : (this.activeAnnotation_ && this.activeAnnotation_.set("isActive", !1), this.selectedAnnotations_.reset(c)))
            }
        },
        dblClickAnnotationEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                var c = this.collection.get(b.dataset.cid);
                c.get("isActive") || this.toggleAnnotationEvent_(a, b); (c = this.snippetViews_[c.cid]) && c.startEditing("text", 0)
            }
        }
    });
    EditableAnnotationsView.REGULAR_NUDGE_FACTOR_ = 1;
    EditableAnnotationsView.SHIFT_NUDGE_FACTOR_ = 10;
    EditableAnnotationsView.DIRECTION_ = {
        UP: {
            attribute: "y",
            magnitude: -1
        },
        LEFT: {
            attribute: "x",
            magnitude: -1
        },
        RIGHT: {
            attribute: "x",
            magnitude: 1
        },
        DOWN: {
            attribute: "y",
            magnitude: 1
        }
    };
    window.SliderView = Backbone.View.extend({
        events: {
            "change .track": "changeEvt_",
            "mousedown .track": "mouseDownEvt_",
            "mouseup .track": "mouseUpEvt_"
        },
        value_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.minValue_ = a.minValue || 0;
            this.maxValue_ = a.maxValue || 100
        },
        render: function() {
            this.setElement(Templates["project/document/exhibit/common/sliderView"]());
            this.parentPane_.appendChild(this.el);
            this.track_ = this.el.querySelector("input")
        },
        remove: function() {
            this.animation_ && this.animation_.cancel();
            SliderView.__super__.remove.apply(this, arguments)
        },
        setValue: function(a, b) {
            var c = this.value_;
            if (a !== c && (this.setValue_(a, !0), this.track_ && a !== null)) b && c !== null ? this.setValueAnimate_(a) : this.track_.valueAsNumber = this.valueToPercentage_(a)
        },
        getValue: function() {
            return this.value_
        },
        setValue_: function(a, b) {
            var c = this.value_;
            this.value_ = a; ! b && c !== a && this.trigger("change", this.value_);
            this.el.querySelector(".slider").classList.toggle("novalue", this.value_ === null)
        },
        setValueAnimate_: function(a) {
            this.animation_ && this.animation_.cancel();
            var b = this.track_.valueAsNumber,
            c = this.valueToPercentage_(a) - b;
            this.animation_ = new Animation({
                duration: SliderView.ANIMATION_DURATION_,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(a) {
                    this.setValueAnimateTick_(b + a * c)
                }.bind(this)
            })
        },
        setValueAnimateTick_: function(a) {
            this.track_.valueAsNumber = a
        },
        mouseDownEvt_: function() {
            this.el.querySelector(".slider").classList.add("dragging")
        },
        mouseUpEvt_: function() {
            this.el.querySelector(".slider").classList.remove("dragging")
        },
        changeEvt_: function() {
            this.setValue_(this.percentageToValue_(this.track_.valueAsNumber))
        },
        valueToPercentage_: function(a) {
            a = (a - this.minValue_) / (this.maxValue_ - this.minValue_) * 100;
            a < 0 ? a = 0 : a > 100 && (a = 100);
            return a
        },
        percentageToValue_: function(a) {
            a = a / 100 * (this.maxValue_ - this.minValue_) + this.minValue_;
            return a = MathUtils.round(a, 3)
        }
    });
    SliderView.ANIMATION_DURATION_ = 250;
    window.DiscreteSliderView = SliderView.extend({
        events: _.extend({},
        SliderView.prototype.events, {
            "click .value-marker": "markerClickedEvt_"
        }),
        initialize: function(a) {
            DiscreteSliderView.__super__.initialize.call(this, a);
            this.legend_ = a.legend;
            this.startLabel_ = a.startLabel;
            this.endLabel_ = a.endLabel;
            this.markers_ = a.markers
        },
        render: function() {
            this.setElement(Templates["project/document/exhibit/common/discreteSliderView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.track_ = this.el.querySelector("input")
        },
        remove: function() {
            this.el.querySelector(".slider").classList.remove("discrete");
            DiscreteSliderView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            var a = {};
            a.markers = this.markers_;
            for (var b = 0; b < a.markers.length; b++) {
                var c = a.markers[b];
                c.percentage = this.valueToPercentage_(c.value)
            }
            a.startLabel = this.startLabel_;
            a.endLabel = this.endLabel_;
            a.legend = this.legend_;
            return a
        },
        setValueAnimateTick_: function(a) {
            DiscreteSliderView.__super__.setValueAnimateTick_.apply(this, arguments);
            this.sendFractionalChange_(this.percentageToValue_(a))
        },
        setValue_: function(a, b) {
            if (a === null) this.updateLabel_(""),
            DiscreteSliderView.__super__.setValue_.call(this, null, b);
            else {
                var c = this.findNearestMarker_(a);
                DiscreteSliderView.__super__.setValue_.call(this, c.value, b);
                this.updateLabel_(c.label || c.value);
                b || this.sendFractionalChange_(a)
            }
        },
        updateLabel_: function(a) {
            var b = this.el.querySelector(".label .value");
            if (b) b.innerHTML = a
        },
        sendFractionalChange_: function(a) {
            var b = this.findNearestMarkers_(a);
            this.trigger("fractionalChange", a, b[0] !== null ? b[0].value: null, b[1] !== null ? b[1].value: null)
        },
        mouseDownEvt_: function() {
            this.el.querySelector(".slider").classList.add("dragging")
        },
        mouseUpEvt_: function() {
            DiscreteSliderView.__super__.mouseUpEvt_.apply(this, arguments);
            this.el.querySelector(".slider").classList.remove("dragging");
            this.setValueAnimate_(this.findNearestMarker_(this.percentageToValue_(this.track_.valueAsNumber)).value)
        },
        markerClickedEvt_: function(a, b) {
            this.setValue(b.dataset.markerValue, !0);
            this.trigger("change", this.value_)
        },
        findNearestMarker_: function(a) {
            var b = this.findNearestMarkers_(a),
            c = b[0],
            b = b[1];
            return c === null ? b: b === null ? c: b.value - a < a - c.value ? b: c
        },
        findNearestMarkers_: function(a) {
            for (var b = null,
            c = null,
            d = 0; d < this.markers_.length; d++) {
                var e = this.markers_[d];
                if (a === e.value) {
                    b = c = e;
                    break
                } else if (e.value > a) {
                    c = e;
                    break
                }
                b = e
            }
            return [b, c]
        }
    });
    window.EditableDiscreteSliderView = DiscreteSliderView.extend({
        events: _.extend({},
        DiscreteSliderView.prototype.events, {
            "click .delete-button": "deleteEvent_",
            "click .add-slide": "addSlideEvent_",
            "click .make-even": "makeEvenEvent_",
            "mousemove .track": "mousemoveSliderEvent_",
            "mouseout .add-marker": "mouseoutEvent_",
            "click .add-marker": "addMarkerEvent_",
            "mousedown .value-marker": "mousedownEvent_",
            "mouseup .value-marker": "mouseupEvent_",
            "mouseover .value-marker": "mouseoverEvent_",
            "mousemove .add-marker": "mousemoveAddMarkerEvent_"
        }),
        model: null,
        draggables_: null,
        draggingSlider_: !1,
        initialize: function(a) {
            a = a || {};
            a.minValue = this.model.get("startStep");
            a.maxValue = this.model.get("endStep");
            a.startLabel = this.model.get("startContents");
            a.endLabel = this.model.get("endContents");
            a.legend = this.model.get("legend");
            this.draggables_ = [];
            EditableDiscreteSliderView.__super__.initialize.call(this, a);
            app.on("contentPaneResized", this.updateDrag_, this);
            this.model.get("steps").on("change:label", this.labelChangeEvent_, this)
        },
        remove: function() {
            app.off("contentPaneResized", this.updateDrag_, this);
            this.draggables_.forEach(function(a) {
                a.detach();
                a.cancel()
            });
            EditableDiscreteSliderView.__super__.remove.call(this);
            this.model.get("steps").off("change:label", this.labelChangeEvent_, this)
        },
        getTemplateData_: function() {
            var a = EditableDiscreteSliderView.__super__.getTemplateData_.call(this);
            a.isEditable = !0;
            a.showDelete = this.model.get("steps").length > 1;
            return a
        },
        updateDrag_: function() {
            this.draggables_.forEach(function(a) {
                a.detach();
                a.cancel()
            });
            this.draggables_ = [];
            this.el.querySelectorAll(".value-marker").forEach(function(a) {
                this.bindDrag_(a)
            },
            this)
        },
        markerClickedEvt_: function(a, b) { ! a.target.classList.contains("delete-button") && !DOMUtils.getParent(a.target, ".delete-button") && EditableDiscreteSliderView.__super__.markerClickedEvt_.call(this, a, b)
        },
        addMarkerEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.addSlide_(b.dataset.value))
        },
        mouseDownEvt_: function() {
            EditableDiscreteSliderView.__super__.mouseDownEvt_.apply(this, arguments);
            this.el.querySelector(".add-marker").classList.remove("show-add-marker");
            this.draggingSlider_ = !0
        },
        mouseUpEvt_: function() {
            EditableDiscreteSliderView.__super__.mouseUpEvt_.apply(this, arguments);
            this.draggingSlider_ = !1
        },
        mousemoveSliderEvent_: function(a) {
            this.draggingSlider_ || this.moveAddMarker_(a.offsetX / this.track_.offsetWidth * 100)
        },
        mousemoveAddMarkerEvent_: function(a) {
            this.moveAddMarker_((a.x - this.track_.getBoundingClientRect().left) / this.track_.offsetWidth * 100)
        },
        moveAddMarker_: function(a) {
            var b = this.el.querySelector(".add-marker"),
            c = EditableDiscreteSliderView.ADD_MARKER_WIDTH_ / this.track_.offsetWidth * 100,
            d = this.el.querySelector(".value-marker").offsetWidth / this.track_.offsetWidth * 100,
            e = d / 2,
            f = a - c / 2,
            g = a + c / 2;
            this.markers_.some(function(b, c) {
                if (f > b.percentage - e && f < b.percentage + e) return a = b.percentage + d * 1.5,
                !0;
                else if (g > b.percentage - e && g < b.percentage + e) return a = b.percentage - d * 1.5,
                !0;
                else if (b.percentage - e > f && b.percentage + e < g) return a = c === this.markers_.length - 1 ? b.percentage - d * 1.5 : b.percentage + d * 1.5,
                !0
            },
            this);
            a < 0 && (a = 0);
            a > 100 && (a = 100);
            b.style.left = Math.round(a * 1E4) / 1E4 + "%";
            b.classList.add("show-add-marker");
            c = this.minValue_;
            b.dataset.value = c + (this.maxValue_ - c) * a / 100
        },
        mouseoutEvent_: function() {
            this.el.querySelector(".add-marker").classList.remove("show-add-marker")
        },
        mouseoverEvent_: function() {
            this.el.querySelector(".add-marker").classList.remove("show-add-marker")
        },
        deleteEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = this.model.get("steps"),
                d = parseInt(DOMUtils.getParent(b, ".value-marker").dataset.position, 10);
                c.remove(c.at(d));
                d - 1 >= 0 && (d -= 1);
                this.trigger("slideChange", d)
            }
        },
        addSlideEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.addSlide_())
        },
        addSlide_: function(a) {
            var b = this.model.get("steps"),
            c = this.minValue_,
            d = this.maxValue_;
            b.length === 1 ? b.at(0).get("number") <= (c + d) / 2 ? this.addSlideHelper_(d) : this.addSlideHelper_(c) : (a || a === 0 || (a = b.at(b.length - 2).get("number"), b = b.at(b.length - 1).get("number"), a += (b - a) / 2), this.addSlideHelper_(a))
        },
        addSlideHelper_: function(a) {
            var b = this.model.getDocumentModel();
            app.getAssetManager().showAssetPicker({
                type: "image",
                directory: b.getChapter(),
                onClose: function(c) {
                    c && (c = c.relativePath(b.get("filePath")), a = MathUtils.round(a, EditableDiscreteSliderView.ROUND_VALUE_), this.addSlideToCollection_(new StepModel({
                        image: c,
                        number: a,
                        annotations: new AnnotationCollection
                    })))
                }.bind(this)
            })
        },
        addSlideToCollection_: function(a) {
            var b = this.model.get("steps"),
            c = b.length,
            d = a.get("number");
            b.some(function(a, b) {
                if (a.get("number") > d) return c = b,
                !0
            });
            var e = b.toArray().slice(c);
            b.remove(e, {
                silent: !0
            });
            b.add([a].concat(e));
            this.trigger("slideChange", c)
        },
        makeEvenEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var a = this.model.get("steps"),
                b = a.length,
                c = this.minValue_,
                d = this.maxValue_;
                if (b === 1) a.at(0).set("number", MathUtils.round((d + c) / 2, EditableDiscreteSliderView.ROUND_VALUE_));
                else {
                    var e = (d - c) / (b - 1);
                    a.forEach(function(a, g) {
                        g === b - 1 ? a.set("number", d) : a.set("number", MathUtils.round(c + g * e, EditableDiscreteSliderView.ROUND_VALUE_))
                    })
                }
                this.trigger("slideChange")
            }
        },
        bindDrag_: function(a) {
            this.draggables_.push(new Drag.Move(a, {
                container: this.track_,
                limit: {
                    y: [0, 0]
                },
                snap: 0,
                includeMargins: !1,
                onDrop: this.onDropEvent_.bind(this)
            }))
        },
        onDropEvent_: function(a) {
            var b = this.minValue_,
            c = this.maxValue_,
            d = MathUtils.round(b + (c - b) * ((a.offsetLeft + (a.offsetLeft < this.track_.offsetWidth / 2 ? a.offsetWidth / 2 : a.offsetWidth)) / (this.track_.offsetWidth - a.offsetWidth / 2)), EditableDiscreteSliderView.ROUND_VALUE_);
            d > c && (d = c);
            d < b && (d = b);
            b = this.model.get("steps");
            a = b.at(a.dataset.position);
            a.set("number", d);
            b.remove(a);
            this.addSlideToCollection_(a)
        },
        mousedownEvent_: function() {
            this.el.querySelector(".add-marker").classList.add("dragging")
        },
        mouseupEvent_: function() {
            this.el.querySelector(".add-marker").classList.remove("dragging")
        },
        labelChangeEvent_: function(a, b) {
            var c = this.model.get("steps").indexOf(a);
            this.el.querySelectorAll(".marker-label")[c].textContent = b;
            this.el.querySelector(".label .value").textContent = b
        }
    });
    EditableDiscreteSliderView.ROUND_VALUE_ = 3;
    EditableDiscreteSliderView.ADD_MARKER_WIDTH_ = 28;
    window.EditableExhibitSidebarView = Backbone.View.extend({
        model: null,
        images_: null,
        image_: null,
        selectedAnnotations_: null,
        selectedAnnotation_: null,
        mutingKeyboard_: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.selectedAnnotations_ = a.selectedAnnotations || null;
            this.hideCiteField_ = !!a.hideCiteField;
            this.hideCaptionField_ = !!a.hideCaptionField;
            this.image_ = a.image || null;
            this.images_ = a.images || null;
            this.currentSlide_ = a.currentSlide || null;
            this.selectedAnnotation_ = this.getSelectedAnnotation_();
            this.mutingKeyboard_ = app.getKeyboardManager().createKeyboard({
                stopPropagation: !0,
                bindings: app.getKeyboardResolver().resolve({
                    save: function(a) {
                        a.stopPropagation = !1
                    },
                    toggleMode: function(a) {
                        a.stopPropagation = !1
                    }
                })
            });
            if (this.images_ && this.image_ && this.images_.indexOf(this.image_) === -1) throw Error("Image being edited should be a member of the image collection.");
            if (this.selectedAnnotations_) this.selectedAnnotations_.on("add remove reset", this.selectedAnnotationChange_, this)
        },
        remove: function() {
            this.selectedAnnotations_ && this.selectedAnnotations_.off("add remove reset", this.selectedAnnotationChange_, this);
            this.cleanup_();
            this.el.innerHTML = ""
        },
        render: function() {
            this.cleanup_();
            this.el.innerHTML = "";
            this.el.appendChild(Templates["project/document/exhibit/editing/editableExhibitSidebar"](this.getTemplateData_()));
            app.getKeyboardManager().activate(this.mutingKeyboard_, this.el);
            if (this.selectedAnnotation_) this.annotationForm_ = new AnnotationFormEditorView({
                parentPane: this.el.querySelector(".primary-settings"),
                model: this.selectedAnnotation_
            }),
            this.annotationForm_.render();
            else if (this.exhibitFormEditor_ = new ExhibitFormEditorView({
                parentPane: this.el.querySelector(".primary-settings"),
                model: this.model.get("rootPiece"),
                hideCiteField: this.hideCiteField_,
                hideCaptionField: this.hideCaptionField_
            }), this.exhibitFormEditor_.render(), this.model.get("rootPiece") instanceof SliderFigureModel) this.imageFormEditor_ = new SliderFigureFormEditorView({
                parentPane: this.el.querySelector(".secondary-settings"),
                model: this.currentSlide_,
                hideCaptionSettings: !0
            }),
            this.imageFormEditor_.render();
            else if (this.images_) this.multiImageFormEditor_ = new MultiImageFormEditorView({
                parentPane: this.el.querySelector(".secondary-settings"),
                collection: this.images_,
                hideCaptionSettings: !1,
                selectedIndex: this.images_.indexOf(this.image_)
            }),
            this.multiImageFormEditor_.render(),
            this.multiImageFormEditor_.on("imageSelected", this.imageSelectedEvent_, this);
            else if (this.image_ instanceof LayeredFigureModel) this.imageFormEditor_ = new LayeredImageFormEditorView({
                parentPane: this.el.querySelector(".secondary-settings"),
                model: this.image_,
                hideCaptionSettings: !0
            }),
            this.imageFormEditor_.render();
            else if (this.image_) this.imageFormEditor_ = new ImageFormEditorView({
                parentPane: this.el.querySelector(".secondary-settings"),
                model: this.image_,
                hideCaptionSettings: !0
            }),
            this.imageFormEditor_.render()
        },
        canChangeModes: function() {
            var a = !0;
            this.exhibitFormEditor_ && (a = a && this.exhibitFormEditor_.canChangeModes());
            this.annotationForm_ && (a = a && this.annotationForm_.canChangeModes());
            this.imageFormEditor_ && (a = a && this.imageFormEditor_.canChangeModes());
            this.multiImageFormEditor_ && (a = a && this.multiImageFormEditor_.canChangeModes());
            return a
        },
        getTemplateData_: function() {
            return {
                hasSecondarySettings: !(!this.image_ && !(this.images_ || this.model.get("rootPiece") instanceof SliderFigureModel && this.currentSlide_)) && !this.selectedAnnotation_
            }
        },
        cleanup_: function() {
            app.getKeyboardManager().remove(this.mutingKeyboard_);
            this.annotationForm_ && this.annotationForm_.remove();
            this.exhibitFormEditor_ && this.exhibitFormEditor_.remove();
            this.imageFormEditor_ && this.imageFormEditor_.remove();
            this.multiImageFormEditor_ && (this.multiImageFormEditor_.off("imageSelected", this.imageSelectedEvent_, this), this.multiImageFormEditor_.remove());
            this.multiImageFormEditor_ = this.imageFormEditor_ = this.exhibitFormEditor_ = this.annotationForm_ = null
        },
        getSelectedAnnotation_: function() {
            return this.selectedAnnotations_ && this.selectedAnnotations_.length === 1 ? this.selectedAnnotations_.at(0) : null
        },
        selectedAnnotationChange_: function() {
            var a = this.getSelectedAnnotation_();
            if (a !== this.selectedAnnotation_) this.selectedAnnotation_ = a,
            this.render()
        },
        imageSelectedEvent_: function(a) {
            this.image_ = a;
            this.trigger("imageSelected", a)
        },
        updateAnnotations: function(a) {
            this.selectedAnnotations_ && this.selectedAnnotations_.off("add remove reset", this.selectedAnnotationChange_, this);
            this.selectedAnnotations_ = a;
            this.selectedAnnotation_ = this.getSelectedAnnotation_();
            if (this.selectedAnnotations_) this.selectedAnnotations_.on("add remove reset", this.selectedAnnotationChange_, this)
        },
        updateImages: function(a, b) {
            this.image_ = a;
            if (b !== void 0) this.images_ = b
        }
    });
    window.FigureCaptionView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.requiredAttrs_ = a.requiredAttrs || null;
            this.enumerationOverride_ = a.enumerationOverride
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/document/exhibit/common/figureCaption"](a));
            this.requiredMissing_() && this.el.hide();
            this.parentPane_.appendChild(this.el)
        },
        requiredMissing_: function() {
            return ! Array.isArray(this.requiredAttrs_) || this.requiredAttrs_.length === 0 ? !1 : this.requiredAttrs_.every(function(a) {
                return ! this.model.get(a)
            },
            this)
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.prefix = this.generateCaptionPrefix_(a.designation, this.enumerationOverride_ || a.enumeration);
            a.caption = this.expandImages_(a.caption);
            a.cite = this.expandImages_(a.cite);
            if (this.enumerationOverride_) a.isSubcaption = !0;
            return a
        },
        expandImages_: function(a) {
            if (!a) return a;
            var b = this.model.getDocumentModel().url({
                addFilename: !1
            });
            b && (a = a.replace(FigureCaptionView.IMG_SRC_REGEX_,
            function(a, d, e, f, g) {
                return d + b + f + g
            }));
            return a = a.replace(/(<img\s[^>]*?)(\/?>)/g,
            function(a, b, e) {
                var a = b.match(/\sheight=(["'])(.*?)\1/),
                f = b.match(/\swidth=(["'])(.*?)\1/),
                g = "";
                a && (g += "height:" + a[2] + ";");
                f && (g += "width:" + f[2] + ";");
                g && (b += ' style="' + g + '"');
                return b + e
            })
        },
        revertImages_: function(a) {
            if (!a) return a;
            var b = this.model.getDocumentModel().url({
                addFilename: !1
            });
            b && (a = a.replace(FigureCaptionView.IMG_SRC_REGEX_,
            function(a, d, e, f, g) {
                f.indexOf(b) === 0 && (f = f.replace(b, ""));
                return d + f + g
            }));
            return a = a.replace(FigureCaptionView.IMG_STYLE_REGEX_, "$1")
        },
        generateCaptionPrefix_: function(a, b) {
            var c = _.compact([a, b]).join(" ");
            c.length > 0 && (c += ":");
            return c
        }
    });
    FigureCaptionView.IMG_SRC_REGEX_ = /(<img[^>]*?\ssrc=(["']))([^>]*?)(\2)/g;
    FigureCaptionView.IMG_STYLE_REGEX_ = /(<img[^>]*?)\sstyle=(["'])[^>]*?\2/g;
    window.EditableFigureCaptionView = FigureCaptionView.extend({
        events: _.extend({},
        FigureCaptionView.prototype.events, {
            dblclick: "captionDblClickEvent_"
        }),
        contentPane_: null,
        currentEditableAttr_: null,
        exhibitHTMLEditingView_: null,
        initialize: function(a) {
            this.contentPane_ = a.contentPane;
            EditableFigureCaptionView.__super__.initialize.call(this, a);
            this.model.on("change:designation change:enumeration change:title change:caption change:cite", this.rerenderContents_, this)
        },
        remove: function() {
            this.model.off("change:designation change:enumeration change:title change:caption change:cite", this.rerenderContents_, this);
            this.cleanup_();
            EditableFigureCaptionView.__super__.remove.call(this)
        },
        cleanup_: function() {
            if (this.exhibitHTMLEditingView_) this.exhibitHTMLEditingView_.off("close", this.editPopupCloseHandler_, this),
            this.exhibitHTMLEditingView_.off("change", this.popupContentChangeEvent_, this),
            this.exhibitHTMLEditingView_.remove(),
            this.exhibitHTMLEditingView_ = null
        },
        getTemplateData_: function() {
            var a = EditableFigureCaptionView.__super__.getTemplateData_.apply(this, arguments);
            a.isEditable = !0;
            return a
        },
        startRichTextEditing_: function(a, b) {
            if (this.currentEditableAttr_ !== b) this.setEditing_(b),
            this.cleanup_(),
            this.exhibitHTMLEditingView_ = new ExhibitHTMLEditingView({
                parentPane: this.el,
                anchor: a,
                targetEl: a
            }),
            this.exhibitHTMLEditingView_.on("change", this.popupContentChangeEvent_, this),
            this.exhibitHTMLEditingView_.on("close", this.editPopupCloseHandler_, this),
            this.exhibitHTMLEditingView_.render()
        },
        popupContentChangeEvent_: function(a) {
            if (this.currentEditableAttr_ === "caption" || this.currentEditableAttr_ === "cite") a = this.revertImages_(a);
            this.model.set(this.currentEditableAttr_, a);
            app.getSaveHandler().add(this.model.getDocumentModel())
        },
        setEditing_: function(a) {
            this.currentEditableAttr_ = a ? a: null
        },
        editPopupCloseHandler_: function() {
            this.setEditing_(!1)
        },
        rerenderContents_: function() {
            var a = DOMUtils.getComputedStyle(this.el).height,
            b = this.getTemplateData_();
            this.el.querySelector(".title-prefix").textContent = b.prefix;
            var c = document.createElement("div"),
            d = this.el.querySelector(".title");
            c.innerHTML = b.title;
            if (d.innerHTML !== c.innerHTML) d.innerHTML = b.title || "";
            d = this.el.querySelector(".caption");
            c.innerHTML = b.caption;
            if (d.innerHTML !== c.innerHTML) d.innerHTML = b.caption || "";
            d = this.el.querySelector("cite");
            c.innerHTML = b.cite;
            if (d.innerHTML !== c.innerHTML) d.innerHTML = b.cite || "";
            this.requiredMissing_() ? this.el.hide() : this.el.show();
            a !== DOMUtils.getComputedStyle(this.el).height && app.trigger("contentPaneResized")
        },
        captionDblClickEvent_: function(a) {
            a.target && (a.target.classList.contains("title") ? this.startRichTextEditing_(a.target, "title") : a.target.classList.contains("caption") ? this.startRichTextEditing_(a.target, "caption") : a.target.tagName.toLowerCase() === "cite" ? this.startRichTextEditing_(a.target, "cite") : DOMUtils.getParent(a.target, ".title") ? this.startRichTextEditing_(DOMUtils.getParent(a.target, ".title"), "title") : DOMUtils.getParent(a.target, ".caption") ? this.startRichTextEditing_(DOMUtils.getParent(a.target, ".caption"), "caption") : DOMUtils.getParent(a.target, "cite") && this.startRichTextEditing_(DOMUtils.getParent(a.target, "cite"), "cite"))
        }
    });
    window.FramesView = Backbone.View.extend({
        model: null,
        frames_: null,
        enumeration_: null,
        showLabels_: !1,
        initialize: function(a) {
            this.doc_ = a.doc || document;
            this.frames_ = [];
            this.parentPane_ = a.parentPane;
            this.scaledImage_ = a.scaledImage;
            this.enumeration_ = a.enumeration || null;
            this.showLabels_ = !!a.showLabels
        },
        render: function() {
            this.cleanupFrames_();
            this.frames_ = this.model.map(function(a, b) {
                var c = DOMUtils.createElement("aside", {
                    className: "frame-rectangle scalable",
                    dataset: {
                        cid: a.cid,
                        rawX: a.get("frameX"),
                        rawY: a.get("frameY")
                    },
                    styles: {
                        left: a.get("frameX") + "px",
                        top: a.get("frameY") + "px"
                    },
                    doc: this.doc_
                });
                this.renderLabel_(a, b, c);
                this.parentPane_.appendChild(c);
                return c
            },
            this);
            this.rescaleFrames_({
                left: 0,
                top: 0,
                zoom: 1
            });
            if (this.scaledImage_) this.scaledImage_.on("scale", this.rescaleFrames_, this)
        },
        renderLabel_: function(a, b, c) {
            this.showLabels_ && ((a = a.get("annotation") && a.get("annotation").get("label")) || (a = this.enumeration_ ? this.enumeration_.getEnumerationForIndex(b) : "i"), c.appendChild(DOMUtils.createElement("span", {
                className: "enumeration-label",
                text: a
            })))
        },
        remove: function() {
            this.cleanupFrames_();
            this.scaledImage_ && this.scaledImage_.off("scale", this.rescaleFrames_, this)
        },
        cleanupFrames_: function() {
            this.frames_.forEach(function(a) {
                DOMUtils.detachElement(a)
            },
            this);
            this.frames_ = []
        },
        rescaleFrames_: function(a) {
            this.frames_.forEach(function(b) {
                var c = this.model.get(b.dataset.cid);
                DOMUtils.setStyles(b, {
                    width: c.get("frameWidth") * a.zoom + "px",
                    height: c.get("frameHeight") * a.zoom + "px"
                })
            },
            this)
        }
    });
    window.EditableFramesView = FramesView.extend({
        dragHandlers_: null,
        resizeHandlers_: null,
        selectedFrames_: null,
        initialize: function(a) {
            this.dragHandlers_ = {};
            this.resizeHandlers_ = {};
            this.selectedFrames_ = new Backbone.Collection;
            app.getSaveHandler().on("save", this.onSave_, this);
            this.model.on("change", this.modelChangeEvent_, this);
            this.selectedFrames_.on("reset add remove", this.resetSelectedFrames_, this);
            EditableFramesView.__super__.initialize.call(this, a)
        },
        remove: function() {
            this.cleanupDrag_();
            app.getSaveHandler().off("save", this.onSave_, this);
            this.model.off("change", this.modelChangeEvent_, this);
            this.selectedFrames_.off("reset add remove", this.resetSelectedFrames_, this);
            EditableFramesView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            this.cleanupDrag_();
            EditableFramesView.__super__.render.apply(this, arguments);
            this.frames_.forEach(function(a) {
                var b = this.model.get(a.dataset.cid);
                this.renderHandles_(a);
                this.setupDrag_(b, a);
                a.classList.add("editable")
            },
            this)
        },
        renderHandles_: function(a) {
            EditableFramesView.HANDLE_POSITION_CLASSES_.forEach(function(b) {
                a.appendChild(DOMUtils.createElement("div", {
                    className: b,
                    doc: this.doc_
                }))
            },
            this)
        },
        setupDrag_: function(a, b) {
            this.cleanupDrag_(a);
            var c = this.dragComplete_.bind(this, a, b);
            this.resizeHandlers_[a.cid] = b.querySelectorAll(".handle").map(function(a) {
                a.classList.contains("left") || a.classList.contains("right");
                a.classList.contains("top") || a.classList.contains("bottom");
                return new Resize({
                    element: b,
                    handle: a,
                    directions: {
                        x: a.classList.contains("left") || a.classList.contains("right"),
                        y: a.classList.contains("top") || a.classList.contains("bottom")
                    },
                    limits: {
                        x: 20,
                        y: 20
                    },
                    contentPane: this.parentPane_,
                    stopPropagation: !0,
                    preventDefault: !0,
                    onComplete: c
                })
            },
            this);
            this.dragHandlers_[a.cid] = b.makeResizable({
                modifiers: {
                    x: "left",
                    y: "top"
                },
                preventDefault: !0,
                stopPropagation: !0,
                onComplete: c
            })
        },
        cleanupDrag_: function(a) { (a ? [a.cid] : Object.keys(this.resizeHandlers_)).forEach(function(a) {
                this.resizeHandlers_[a] && (this.resizeHandlers_[a].forEach(function(a) {
                    a.remove()
                }), this.resizeHandlers_[a] = null)
            },
            this); (a ? [a.cid] : Object.keys(this.dragHandlers_)).forEach(function(a) {
                this.dragHandlers_[a] && (this.dragHandlers_[a].detach(), this.dragHandlers_[a].cancel(), this.dragHandlers_[a] = null)
            },
            this)
        },
        dragComplete_: function(a, b) {
            var c = DOMUtils.getComputedStyle(b),
            c = {
                frameY: parseInt(c.top, 10),
                frameX: parseInt(c.left, 10),
                frameWidth: parseInt(c.width, 10),
                frameHeight: parseInt(c.height, 10)
            };
            if (this.scaledImage_) {
                var d = this.scaledImage_.toRawCoordinates({
                    left: c.frameX,
                    top: c.frameY
                }),
                e = this.scaledImage_.toRawCoordinates({
                    left: c.frameX + c.frameWidth,
                    top: c.frameY + c.frameHeight
                });
                c.frameX = Math.round(d.left);
                c.frameY = Math.round(d.top);
                c.frameWidth = Math.round(e.left - d.left);
                c.frameHeight = Math.round(e.top - d.top)
            }
            a.set(c);
            b.setProperties({
                "data-raw-x": c.frameX,
                "data-raw-y": c.frameY
            })
        },
        onSave_: function() {
            this.model.getDocumentModel().updateFromXML()
        },
        modelChangeEvent_: function(a) {
            if (a.hasChanged("frameX") || a.hasChanged("frameY") || a.hasChanged("frameWidth") || a.hasChanged("frameHeight")) a = a.getDocumentModel(),
            a.set("dirtyContent", !0),
            app.getSaveHandler().add(a)
        },
        resetSelectedFrames_: function() {
            this.frames_.forEach(function(a) {
                a.classList.toggle("selected", !!this.selectedFrames_.get(a.dataset.cid))
            },
            this)
        },
        setHighlightedFrame: function(a) {
            this.frames_.forEach(function(b) {
                b.classList.toggle("highlight", b.dataset.cid === a)
            })
        },
        setTopLayerFrame: function(a) {
            this.frames_.forEach(function(b) {
                b.classList.toggle("front", b.dataset.cid === a)
            })
        },
        getSelectedFrames: function() {
            return this.selectedFrames_
        }
    });
    EditableFramesView.HANDLE_POSITION_CLASSES_ = "handle middle left,handle middle right,handle middle bottom,handle middle top,handle corner top left,handle corner top right,handle corner bottom left,handle corner bottom right".split(",");
    window.ImageFigureView = Backbone.View.extend({
        model: null,
        asset_: null,
        position_: null,
        hideCaption_: !1,
        labelFrames_: !1,
        scaledImage_: null,
        loaded_: !1,
        annotations_: null,
        enumeration_: null,
        revealSingleAnnotation_: !0,
        assetStatusChangeListener_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.position_ = a.position;
            this.hideCaption_ = a.hideCaption;
            this.labelFrames_ = !!a.labelFrames;
            this.revealSingleAnnotation_ = typeof a.revealSingleAnnotation === "undefined" ? !0 : !!a.revealSingleAnnotation;
            this.annotations_ = a.annotations || null;
            this.frames_ = a.frames || null;
            this.enumeration_ = a.enumeration || null;
            this.enumerationOverride_ = a.enumerationOverride
        },
        remove: function() {
            this.cleanup_();
            ImageFigureView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            this.cleanup_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/figure/imageFigure"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            var a = (this.asset_ = this.getModelAsset_()) && !this.asset_.isSaved();
            if (a) this.assetStatusChangeListener_ && this.asset_.off("change:status", this.assetStatusChangeListener_, this),
            this.assetStatusChangeListener_ = function(a, c) {
                c === AssetModel.STATUS.COMPLETED && this.render()
            },
            this.asset_.on("change:status", this.assetStatusChangeListener_, this),
            this.progressView_ = new AssetProgressView({
                parentPane: this.el.querySelector(".coordinate-box"),
                model: this.asset_
            }),
            this.progressView_.render();
            this.scaledImage_ && (this.scaledImage_.off("loaded", this.scaledImageLoaded_, this), this.scaledImage_.remove());
            this.scaledImage_ = new ScalableImage({
                el: this.el.querySelector(".scalable-box"),
                disableUserScaling: a
            });
            this.scaledImage_.on("loaded", this.scaledImageLoaded_, this);
            this.scaledImage_.render();
            if (a = this.frames_ || this.model.get("hotspots")) this.framesView_ = this.createFramesView_({
                model: a,
                parentPane: this.el.querySelector(".scalable-box"),
                scaledImage: this.scaledImage_,
                enumeration: this.enumeration_,
                showLabels: this.labelFrames_
            }),
            this.framesView_.render();
            if (a = this.annotations_ || this.model.get("annotations")) this.annotationsView_ && (this.annotationsView_.off("renderComplete", this.annotationsRenderComplete_, this), this.annotationsView_.remove()),
            this.annotationsView_ = this.createAnnotationsView_({
                collection: a,
                parent: this.el.querySelector(".scalable-box"),
                enumeration: this.enumeration_,
                scaledImage: this.scaledImage_,
                revealSingleAnnotation: this.revealSingleAnnotation_
            }),
            this.annotationsView_.render(),
            this.annotationsView_.on("renderComplete", this.annotationsRenderComplete_, this);
            this.scaledImage_.hideScalable();
            if (!this.hideCaption_) this.captionView_ = this.createFigureCaptionView_({
                model: this.model,
                parentPane: this.el.querySelector(".coordinate-box"),
                requiredAttrs: ["title", "caption"],
                enumerationOverride: this.enumerationOverride_
            }),
            this.captionView_.render()
        },
        isLoaded: function() {
            return this.loaded_
        },
        cleanup_: function() {
            if (this.annotationsView_) this.annotationsView_.off("renderComplete", this.annotationsRenderComplete_, this),
            this.annotationsView_.remove(),
            this.annotationsView_ = null;
            if (this.framesView_) this.framesView_.remove(),
            this.framesView_ = null;
            if (this.captionView_) this.captionView_.remove(),
            this.captionView_ = null;
            if (this.scaledImage_) this.scaledImage_.off("loaded", this.scaledImageLoaded_, this),
            this.scaledImage_.remove(),
            this.scaledImage_ = null;
            if (this.progressView_) {
                if (this.assetStatusChangeListener_) this.asset_.off("change:status", this.assetStatusChangeListener_, this),
                this.assetStatusChangeListener_ = null;
                this.progressView_.remove();
                this.progressView_ = null
            }
        },
        scaledImageLoaded_: function() {
            this.loaded_ = !0;
            this.trigger("loaded");
            this.position_ && (this.setScrollPosition_(this.position_), delete this.position_)
        },
        createAnnotationsView_: function(a) {
            return new AnnotationsView(a)
        },
        createFramesView_: function(a) {
            return new FramesView(a)
        },
        createFigureCaptionView_: function(a) {
            return new FigureCaptionView(a)
        },
        annotationsRenderComplete_: function(a) {
            this.scaledImage_.updateContents();
            this.trigger("annotationsUpdated", a)
        },
        getTemplateData_: function() {
            var a = this.model.toJSON(),
            b = this.getModelAsset_();
            if (!a.image || b && !b.isSaved()) a.image = ScalableImage.getPlaceholderImage();
            return a
        },
        setScrollPosition_: function(a) {
            this.parentPane_.scrollLeft = a.scrollLeft;
            this.parentPane_.scrollTop = a.scrollTop
        },
        getScaledImage: function() {
            return this.scaledImage_
        },
        focus: function() {
            this.annotationsView_ && this.annotationsView_.focus()
        },
        unfocus: function() {
            this.annotationsView_ && this.annotationsView_.unfocus()
        },
        getModelAsset_: function() {
            var a = this.model.getDocumentModel();
            if (!a) return null;
            a = a.get("filePath");
            if (!a) return null;
            a = URI(a).filename(this.model.get("image")).normalizePath().toString();
            return app.getAssetManager().getImageAsset(a)
        }
    });
    window.EditableImageFigureView = ImageFigureView.extend({
        disableAnnotationDelete_: !1,
        hideAddPoptipButton_: !1,
        events: _.extend({},
        ImageFigureView.prototype.events, {
            click: "clickEvent_"
        }),
        initialize: function(a) {
            this.disableAnnotationDelete_ = !!a.disableAnnotationDelete;
            this.hideAddPoptipButton_ = !!a.hideAddPoptipButton;
            this.model.on("change", this.modelDirtyEvent_, this);
            this.model.on("change:image", this.render, this);
            app.getSaveHandler().on("save", this.onSave_, this);
            EditableImageFigureView.__super__.initialize.call(this, a)
        },
        remove: function() {
            this.model.off("change", this.modelDirtyEvent_, this);
            this.model.off("change:image", this.render, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            EditableImageFigureView.__super__.remove.apply(this, arguments)
        },
        createAnnotationsView_: function(a) {
            a.disableDelete = this.disableAnnotationDelete_;
            a.documentModel = this.model.getDocumentModel();
            a.hideAddPoptipButton = this.hideAddPoptipButton_;
            return new EditableAnnotationsView(a)
        },
        createFigureCaptionView_: function(a) {
            a.contentPane = this.parentPane_;
            return new EditableFigureCaptionView(a)
        },
        onSave_: function() {
            this.model.getDocumentModel().updateFromXML()
        },
        modelDirtyEvent_: function() {
            var a = this.model.getDocumentModel();
            a.set("dirtyContent", !0);
            app.getSaveHandler().add(a)
        },
        getTemplateData_: function() {
            var a = EditableImageFigureView.__super__.getTemplateData_.apply(this, arguments);
            a.isEditable = !0;
            return a
        },
        createFramesView_: function(a) {
            return new EditableFramesView(a)
        },
        getSelectedAnnotations: function() {
            return ! this.annotationsView_ ? null: this.annotationsView_.getSelectedAnnotations()
        },
        getFramesView: function() {
            return this.framesView_
        },
        getSelectedFrames: function() {
            return this.framesView_ && this.framesView_.getSelectedFrames() || null
        },
        clickEvent_: function(a) { ! DOMUtils.isSecondaryClick(a) && this.annotationsView_ && this.annotationsView_.deselectAnnotations()
        }
    });
    window.EditableLayeredFigureView = Backbone.View.extend({
        model: null,
        position_: null,
        hideAddPoptipButton_: !1,
        activeImageAsset_: null,
        events: {
            click: "clickEvent_",
            "click .open-all-poptips": "openAllPoptipsEvent_",
            "click .close-all-poptips": "closeAllPoptipsEvent_",
            "click .scalable-box": "showOpenAllPoptipsEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.position_ = a.position;
            this.hideAddPoptipButton_ = !!a.hideAddPoptipButton;
            this.enumerationOverride_ = a.enumerationOverride;
            this.frames_ = a.frames || null;
            this.model.on("change", this.modelDirtyEvent_, this);
            this.model.on("change:unlabeledImage change:labeledImage", this.render, this);
            app.getSaveHandler().on("save", this.onSave_, this)
        },
        remove: function() {
            this.model.off("change", this.modelDirtyEvent_, this);
            this.model.off("change:unlabeledImage change:labeledImage", this.render, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            this.annotationsView_ && (this.annotationsView_.off("renderComplete", this.updateAnnotations_, this), this.annotationsView_.remove());
            if (this.framesView_) this.framesView_.remove(),
            this.framesView_ = null;
            if (this.captionView_) this.captionView_.remove(),
            this.captionView_ = null;
            if (this.progressView_) this.activeImageAsset_ && this.activeImageAsset_.off("change:status", this.assetStatusChangeListener_, this),
            this.progressView_.remove(),
            this.progressView_ = null;
            EditableLayeredFigureView.__super__.remove.apply(this)
        },
        render: function() {
            this.scaledImage_ && this.scaledImage_.remove();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/figure/layeredFigure"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.activeImageAsset_ && this.activeImageAsset_.off("change:status", this.assetStatusChangeListener_, this);
            var a = (this.activeImageAsset_ = this.getModelAsset_(EditableLayeredFigureView.UNLABELED_IMAGE_ATTR_)) && !this.activeImageAsset_.isSaved();
            this.scaledImage_ = new ScalableImage({
                el: this.el.querySelector(".scalable-box"),
                img: this.el.querySelector(".unlabeled-image"),
                disableUserScaling: a
            });
            this.scaledImage_.on("loaded",
            function() {
                this.trigger("loaded");
                this.setScrollPosition_()
            },
            this);
            this.scaledImage_.render();
            var b = this.frames_ || this.model.get("hotspots");
            if (b) this.framesView_ && this.framesView_.remove(),
            this.framesView_ = new EditableFramesView({
                model: b,
                parentPane: this.el.querySelector(".scalable-box"),
                scaledImage: this.scaledImage_
            }),
            this.framesView_.render();
            this.setupAnnotationsView_();
            this.captionView_ && this.captionView_.remove();
            this.captionView_ = new EditableFigureCaptionView({
                model: this.model,
                parentPane: this.el.querySelector(".coordinate-box"),
                contentPane: this.parentPane_,
                requiredAttrs: ["title", "caption"],
                enumerationOverride: this.enumerationOverride_
            });
            this.captionView_.render();
            if (a) this.activeImageAsset_.on("change:status", this.assetStatusChangeListener_, this),
            this.progressView_ = new AssetProgressView({
                parentPane: this.el.querySelector(".coordinate-box"),
                model: this.activeImageAsset_
            }),
            this.progressView_.render()
        },
        getScaledImage: function() {
            return this.scaledImage_
        },
        assetStatusChangeListener_: function(a, b) {
            b === AssetModel.STATUS.COMPLETED && this.render()
        },
        setupAnnotationsView_: function() {
            this.annotationsView_ && (this.annotationsView_.off("renderComplete", this.updateAnnotations_, this), this.annotationsView_.remove());
            this.annotationsView_ = new EditableAnnotationsView({
                collection: this.model.get("annotations"),
                parent: this.el.querySelector(".scalable-box"),
                scaledImage: this.scaledImage_,
                documentModel: this.model.getDocumentModel(),
                hideAddPoptipButton: this.hideAddPoptipButton_,
                revealSingleAnnotation: !1
            });
            this.annotationsView_.render();
            this.annotationsView_.on("renderComplete", this.updateAnnotations_, this)
        },
        getSelectedAnnotations: function() {
            return this.annotationsView_.getSelectedAnnotations()
        },
        onSave_: function() {
            this.model.getDocumentModel().updateFromXML()
        },
        modelDirtyEvent_: function() {
            var a = this.model.getDocumentModel();
            a.set("dirtyContent", !0);
            app.getSaveHandler().add(a)
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.isEditable = !0;
            var b = this.getModelAsset_(EditableLayeredFigureView.UNLABELED_IMAGE_ATTR_),
            c = this.getModelAsset_(EditableLayeredFigureView.LABELED_IMAGE_ATTR_);
            if (!a.unlabeledImage || b && !b.isSaved()) a.unlabeledImage = ScalableImage.getPlaceholderImage();
            if (!a.labeledImage || c && !c.isSaved()) a.labeledImage = ScalableImage.getPlaceholderImage();
            return a
        },
        clickEvent_: function() {
            this.annotationsView_.deselectAnnotations()
        },
        updateAnnotations_: function() {
            this.scaledImage_.updateContents()
        },
        setScrollPosition_: function() {
            if (this.position_) this.parentPane_.scrollLeft = this.position_.scrollLeft,
            this.parentPane_.scrollTop = this.position_.scrollTop,
            delete this.position_
        },
        getModelAsset_: function(a) {
            var b = this.model.getDocumentModel();
            if (!b) return null;
            b = b.get("filePath");
            if (!b) return null;
            a = URI(b).filename(this.model.get(a)).normalizePath().toString();
            return app.getAssetManager().getImageAsset(a)
        },
        openAllPoptipsEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.get("annotations").forEach(function(a) {
                a.set("isActive", !0)
            }), this.el.classList.remove("open-all-poptips-enable"))
        },
        closeAllPoptipsEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.get("annotations").forEach(function(a) {
                a.set("isActive", !1)
            }), this.el.classList.add("open-all-poptips-enable"))
        },
        showOpenAllPoptipsEvent_: function() {
            this.el.classList.add("open-all-poptips-enable")
        }
    });
    EditableLayeredFigureView.UNLABELED_IMAGE_ATTR_ = "unlabeledImage";
    EditableLayeredFigureView.LABELED_IMAGE_ATTR_ = "labeledImage";
    window.SnippetContentView = Backbone.View.extend({
        className: "snippet-content",
        model: null,
        parentPane_: null,
        hasAudio_: !1,
        hasImages_: !1,
        hasLinks_: !1,
        hasVideos_: !1,
        hasMath_: !1,
        xmlFragment_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.win_ = a.window || window;
            this.doc_ = a.doc || document
        },
        render: function() {
            this.hasMath_ = this.hasVideos_ = this.hasLinks_ = this.hasImages_ = this.hasAudio_ = !1;
            this.el.classList.remove("enhanced");
            this.el.innerHTML = "";
            this.xmlFragment_ = this.getXMLFragment_();
            this.parseElements_();
            this.isEnhanced() && this.el.classList.add("enhanced");
            this.parentPane_.appendChild(this.el);
            this.setupLoadListeners_()
        },
        setupLoadListeners_: function() {
            var a = this.el.querySelectorAll("img").filter(function(a) {
                return ! a.complete
            },
            this),
            b = a.length;
            a.forEach(function(a) {
                var d = function() {
                    a.removeEventListener("load", d);
                    this.trigger("partial-loaded");
                    b -= 1;
                    b === 0 && this.trigger("loaded")
                }.bind(this);
                a.addEventListener("load", d)
            },
            this);
            b || this.win_.setTimeout(this.trigger.bind(this, "loaded"), 1)
        },
        remove: function() {
            DOMUtils.detachElement(this.el)
        },
        isEnhanced: function() {
            return this.hasAudio_ || this.hasImages_ || this.hasLinks_ || this.hasVideos_ || this.hasMath_
        },
        hasAudio: function() {
            return this.hasAudio_
        },
        hasImages: function() {
            return this.hasImages_
        },
        hasLinks: function() {
            return this.hasLinks_
        },
        hasVideo: function() {
            return this.hasVideos_
        },
        hasMath: function() {
            return this.hasMath_
        },
        getXMLFragment_: function() {
            return XMLUtilities.parseFragment(this.model.get("xml"), XMLUtilities.DOCUMENT_TYPE.S9ML)
        },
        parseElements_: function() {
            this.xmlFragment_.childNodes.forEach(function(a, b) {
                if (! (a.nodeType === Node.TEXT_NODE || a.nodeType === Node.COMMENT_NODE)) switch (a.tagName) {
                case "title":
                    this.parseTitle_(a, b);
                    break;
                case "text":
                    this.parseText_(a, b);
                    break;
                case "audio":
                    this.hasAudio_ = !0;
                    break;
                case "img":
                    this.hasImages_ = !0;
                    this.parseImg_(a);
                    break;
                case "linkgroup":
                    this.hasLinks_ = !0;
                    this.parseLinkGroup_(a);
                    break;
                case "video":
                    this.hasVideos_ = !0;
                    break;
                case "math":
                    this.hasMath_ = !0;
                    this.parseMath_(a);
                    break;
                default:
                    console.error('Unsupported child type "<' + a.tagName + '>" in a Snippet.')
                }
            },
            this)
        },
        parseTitle_: function(a) {
            this.el.appendChild(DOMUtils.createElement("h1", {
                html: a.getHTML(),
                s9id: XMLUtilities.getS9ID(a),
                doc: this.doc_
            }))
        },
        parseText_: function(a) {
            var b = a.getHTML(),
            c = this.model.getDocumentModel().url({
                addFilename: !1
            }),
            b = b.replace(/src="\.\.\//gi, 'src="' + c + "../"),
            a = DOMUtils.createElement("p", {
                s9id: XMLUtilities.getS9ID(a),
                doc: this.doc_
            }),
            b = DOMUtils.createElement("span", {
                className: "text-content",
                html: b,
                doc: this.doc_
            });
            b.querySelectorAll("img").forEach(function(a) {
                if (a.getAttribute("height")) a.style.height = a.getAttribute("height");
                if (a.getAttribute("width")) a.style.width = a.getAttribute("width")
            },
            this);
            a.appendChild(b);
            this.el.appendChild(a);
            return a
        },
        parseLinkGroup_: function(a) {
            var b = a.getAttribute("title");
            b && this.el.appendChild(DOMUtils.createElement("h2", {
                html: b,
                doc: this.doc_
            }));
            var c = DOMUtils.createElement("div", {
                s9id: XMLUtilities.getS9ID(a),
                className: "link-group",
                doc: this.doc_
            });
            a.childNodes.forEach(function(a) {
                a.nodeType === Node.TEXT_NODE || a.nodeType === Node.COMMENT_NODE || c.appendChild(DOMUtils.createElement("a", {
                    html: a.getAttribute("title"),
                    attributes: {
                        href: a.getAttribute("href"),
                        target: "_blank"
                    },
                    doc: this.doc_
                }))
            },
            this);
            this.el.appendChild(c)
        },
        parseImg_: function(a) {
            var b = this.model.getDocumentModel(),
            c = b.get("project"),
            b = URLUtils.getImageURL(a.getAttribute("src"), c, {
                revision: b.get("revision") || null,
                exact: !0
            });
            this.el.appendChild(DOMUtils.createElement("img", {
                s9id: XMLUtilities.getS9ID(a),
                attributes: {
                    src: b,
                    alt: a.getAttribute("alt"),
                    width: a.getAttribute("width"),
                    height: a.getAttribute("height")
                },
                className: "snippet-image",
                doc: this.doc_
            }))
        },
        parseMath_: function(a) {
            a = a.cloneNode(!0);
            this.doc_.adoptNode(a);
            this.el.appendChild(a)
        }
    });
    window.EditableSnippetContentView = SnippetContentView.extend({
        events: _.extend({},
        SnippetContentView.prototype.events, {
            "dblclick [data-snippet-index]": "dblClickEvent_",
            click: "clickEvent_"
        }),
        contentPane_: null,
        popupAnchor_: null,
        editingNode_: null,
        form_: null,
        initialize: function(a) {
            EditableSnippetContentView.__super__.initialize.apply(this, arguments);
            a = a || {};
            this.contentPane_ = a.contentPane;
            this.popupAnchor_ = a.popupAnchor;
            app.getSaveHandler().on("save", this.onSave_, this);
            this.model.on("change:xml", this.xmlChangeEvent_, this);
            this.on("loaded", this.reposition, this);
            this.on("partial-load", this.reposition, this)
        },
        render: function() {
            EditableSnippetContentView.__super__.render.call(this);
            this.el.classList.add("editable");
            this.ensureEditPlaceholders_()
        },
        reposition: function() {
            this.richTextPopupView_ && this.richTextPopupView_.reposition()
        },
        startEditing: function(a, b) {
            var c = this.xmlFragment_.childNodes,
            d = c.filter(function(b) {
                return b.tagName.toLowerCase() === a
            },
            this)[b];
            this.startRichTextEditing_(this.el.querySelector('[data-snippet-index="' + c.indexOf(d) + '"] > .text-content'), d)
        },
        remove: function() {
            this.cleanup_();
            this.off("loaded", this.reposition, this);
            this.off("partial-load", this.reposition, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            this.model.off("change:xml", this.xmlChangeEvent_, this);
            EditableSnippetContentView.__super__.remove.call(this)
        },
        cleanup_: function() {
            if (this.richTextPopupView_) this.richTextPopupView_.off("close", this.editPopupCloseHandler_, this),
            this.richTextPopupView_.off("change", this.popupContentChangeEvent_, this),
            this.richTextPopupView_.remove(),
            this.richTextPopupView_ = null;
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null
        },
        ensureEditPlaceholders_: function() {
            this.el.querySelectorAll("[data-snippet-index]").forEach(function(a) {
                var b = this.xmlFragment_.childNodes[a.dataset.snippetIndex],
                a = a.querySelector(".snippet-placeholder");
                b.textContent ? a.hide() : a.style.display = "inline"
            },
            this)
        },
        parseText_: function(a, b) {
            var c = EditableSnippetContentView.__super__.parseText_.apply(this, arguments);
            c.dataset.snippetIndex = b;
            var d = DOMUtils.createElement("span", {
                className: "snippet-placeholder",
                text: "Double-click to edit",
                doc: this.doc_
            });
            d.hide();
            c.insertBefore(d, c.firstElementChild);
            c.querySelector(".text-content").classList.add("enable-focus-outline");
            d.classList.add("enable-focus-outline");
            return c
        },
        updateContent_: function() {
            this.model.set("xml", XMLUtilities.serializeFragment(this.xmlFragment_))
        },
        startRichTextEditing_: function(a, b) {
            this.editingNode_ = b;
            this.cleanup_();
            var c = new ExhibitHTMLEditingView({
                parentPane: this.contentPane_,
                anchor: this.popupAnchor_,
                targetEl: a
            });
            c.on("change", this.popupContentChangeEvent_, this);
            c.on("close", this.editPopupCloseHandler_, this);
            c.render();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.richTextPopupView_ = c
        },
        popupContentChangeEvent_: function(a) {
            this.setNodeContent_(this.editingNode_, a);
            this.updateContent_()
        },
        editPopupCloseHandler_: function() {
            this.editingNode_ = null;
            this.cleanup_();
            this.ensureEditPlaceholders_()
        },
        setNodeContent_: function(a, b) {
            try {
                for (var c = XMLUtilities.parseFragment(b, XMLUtilities.DOCUMENT_TYPE.S9ML); a.firstChild;) a.removeChild(a.firstChild);
                a.appendChild(this.xmlFragment_.ownerDocument.importNode(c, !0))
            } catch(d) {
                console.error("Invalid XML in SnippetContentView", d),
                this.trigger("invalid", d)
            }
        },
        xmlChangeEvent_: function() {
            var a = this.model.getDocumentModel();
            a.set("dirtyContent", !0);
            app.getSaveHandler().add(a);
            this.richTextPopupView_ || this.render()
        },
        onSave_: function() {
            this.model.getDocumentModel().updateFromXML()
        },
        formSubmitEvent_: function() {
            this.cleanup_()
        },
        clickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.richTextPopupView_ && this.richTextPopupView_.close()
        },
        dblClickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                a.stopPropagation();
                var c = this.xmlFragment_.childNodes[b.dataset.snippetIndex],
                d = b.querySelector(".text-content");
                d.getAttribute("contenteditable") || (b.querySelector(".snippet-placeholder").hide(), this.startRichTextEditing_(d, c))
            }
        }
    });
    window.VideoFigureView = Backbone.View.extend({
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.model.on("change:videoAsset", this.render, this)
        },
        remove: function() {
            this.cleanup_();
            DOMUtils.detachElement(this.el);
            this.model.off("change:videoAsset", this.render, this);
            VideoFigureView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            this.cleanup_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/figure/videoFigure"]());
            this.videoView_ = this.createVideoView_({
                model: this.model,
                parentPane: this.el.querySelector(".playable-video")
            });
            this.videoView_.render();
            this.videoView_.on("loaded",
            function() {
                this.trigger("loaded")
            },
            this);
            this.captionView_ = this.createFigureCaptionView_({
                model: this.model,
                parentPane: this.el,
                requiredAttrs: ["title", "caption"]
            });
            this.captionView_.render();
            this.parentPane_.appendChild(this.el)
        },
        cleanup_: function() {
            if (this.captionView_) this.captionView_.remove(),
            this.captionView_ = null;
            if (this.videoView_) this.videoView_.remove(),
            this.videoView_ = null
        },
        createVideoView_: function(a) {
            return new PlayableVideoView(a)
        },
        createFigureCaptionView_: function(a) {
            return new FigureCaptionView(a)
        }
    });
    window.EditableVideoFigureView = VideoFigureView.extend({
        model: null,
        initialize: function(a) {
            EditableVideoFigureView.__super__.initialize.call(this, a);
            this.model.on("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().on("save", this.onSave_, this);
            app.getSaveHandler().on("save_successful", this.updateRevision_, this)
        },
        remove: function() {
            this.model.off("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            app.getSaveHandler().off("save_successful", this.updateRevision_, this);
            EditableVideoFigureView.__super__.remove.apply(this, arguments)
        },
        createFigureCaptionView_: function(a) {
            return new EditableFigureCaptionView(a)
        },
        createVideoView_: function(a) {
            var b = this.model.get("videoAsset");
            return b && (b.get("status") === AssetModel.STATUS.UPLOADING || b.get("status") === AssetModel.STATUS.ENCODING) ? (a.model = b, new AssetProgressView(a)) : new PlayableVideoView(a)
        },
        updateRevision_: function(a) {
            a instanceof CopiedImageAssetModel && app.getProjectModel().setRevision(a.get("revision"))
        },
        onSave_: function(a) {
            this.model.isVideoUploading() ? (a.preventDefault(), app.getMessageView().error(EditableVideoFigureView.ERROR_MESSAGES_.PREVENT_SAVE, MessageView.DEFAULT_DISPLAY_TIME)) : this.model.getDocumentModel().updateFromXML()
        },
        modelDirtyEvent_: function(a) {
            a.changed && a.changed.videoAsset ? this.render() : (a = this.model.getDocumentModel(), a.set("dirtyContent", !0), app.getSaveHandler().add(a))
        }
    });
    EditableVideoFigureView.ERROR_MESSAGES_ = {
        PREVENT_SAVE: "Unable to save while uploads are in progress. Please wait."
    };
    window.EditableVideoSidebarView = Backbone.View.extend({
        model: null,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane
        },
        render: function() {
            this.cleanup_();
            this.setElement(Templates["project/document/exhibit/editing/editableVideoSidebar"]());
            this.exhibitFormEditor_ = new ExhibitFormEditorView({
                parentPane: this.el.querySelector(".primary-settings"),
                model: this.model.get("rootPiece")
            });
            this.exhibitFormEditor_.render();
            this.videoFormEditor_ = new VideoFormEditorView({
                parentPane: this.el.querySelector(".secondary-settings"),
                model: this.model.get("rootPiece")
            });
            this.videoFormEditor_.render();
            this.parentPane_.appendChild(this.el)
        },
        canChangeModes: function() {
            var a = !0;
            this.videoFormEditor_ && (a = a && this.videoFormEditor_.canChangeModes());
            this.exhibitFormEditor_ && (a = a && this.exhibitFormEditor_.canChangeModes());
            return a
        },
        remove: function() {
            this.cleanup_();
            EditableVideoSidebarView.__super__.remove.apply(this, arguments)
        },
        cleanup_: function() {
            if (this.exhibitFormEditor_) this.exhibitFormEditor_.remove(),
            this.exhibitFormEditor_ = null;
            if (this.videoFormEditor_) this.videoFormEditor_.remove(),
            this.videoFormEditor_ = null;
            this.el.innerHTML = ""
        }
    });
    window.ExhibitFormEditorView = ValidationFormEditorView.extend({
        events: _.extend({},
        ValidationFormEditorView.prototype.events, {
            "keyup input, textarea": "updateModelEvent_",
            "click input, textarea": "updateModelEvent_"
        }),
        parentPane_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.doc_ = a.doc || document;
            this.hideCiteField_ = !!a.hideCiteField;
            this.hideCaptionField_ = !!a.hideCaptionField;
            this.model.on("change:designation change:enumeration change:title change:caption change:cite", this.render, this);
            app.getSaveHandler().on("save", this.saveEvent_, this);
            this.validationErrors_ = []
        },
        remove: function() {
            this.autogrows_ && this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this);
            this.model.off("change:designation change:enumeration change:title change:caption change:cite", this.render, this);
            app.getSaveHandler().off("save", this.saveEvent_, this);
            ExhibitFormEditorView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            this.el.contains(this.doc_.activeElement) || (DOMUtils.detachElement(this.el), this.setElement(Templates["project/document/exhibit/editing/exhibitFormEditor"](this.getTemplateData_())), this.parentPane_.appendChild(this.el), this.addAutogrows_())
        },
        getTemplateData_: function() {
            var a = this.model.getDocumentModel().get("documentType"),
            b = this.model.toJSON();
            b.documentType = a;
            b.documentTypeName = ExhibitDocumentView.getTypeName(a);
            b.hideCiteField = this.hideCiteField_;
            b.hideCaptionField = this.hideCaptionField_;
            return b
        },
        addAutogrows_: function() {
            Array.isArray(this.autogrows_) && this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this);
            this.autogrows_ = this.el.querySelectorAll("textarea").map(function(a) {
                a = new Autogrow({
                    el: a,
                    maxHeight: 150
                });
                a.render();
                return a
            },
            this)
        },
        updateDocument: function(a) {
            var b = DOMUtils.getFormValues(this.el);
            Object.keys(b).forEach(function(a) {
                b[a] === "" && (b[a] = null)
            });
            var c = [];
            this.model.set(b, {
                error: function(a, b) {
                    c.push(b)
                }
            });
            this.setValidationErrors(c, a);
            return ! this.hasValidationErrors()
        },
        updateModelEvent_: function() {
            this.updateDocument(!0)
        }
    });
    window.ExhibitHTMLEditingView = AnchoredPopupView.extend({
        targetEl_: null,
        events: _.extend({},
        AnchoredPopupView.prototype.events, {
            "click button": "buttonClickEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.targetEl_ = a.targetEl;
            ExhibitHTMLEditingView.__super__.initialize.call(this, {
                window: a.window,
                document: a.document,
                parentPane: a.parentPane,
                anchor: a.anchor,
                className: "blueprint-rich-text-popup",
                createMask: !1,
                removeOnClose: !0,
                anchorAlignmentPoint: {
                    x: 0.5,
                    y: 0
                },
                popupAlignmentPoint: {
                    x: 0.5,
                    y: 1
                }
            });
            this.preventMouseEventBound_ = this.preventMouseEvent_.bind(this);
            this.originalValue_ = XMLUtilities.getInnerXHTML(this.targetEl_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/document/exhibit/editing/richTextPopup"](a));
            ExhibitHTMLEditingView.__super__.render.apply(this, arguments);
            this.open()
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            this.cleanup_();
            ExhibitHTMLEditingView.__super__.remove.apply(this, arguments)
        },
        open: function() {
            ExhibitHTMLEditingView.__super__.open.apply(this, arguments);
            this.targetEl_.setAttribute("contenteditable", "true");
            this.targetEl_.focus();
            this.addEventHandlers_()
        },
        close: function() {
            this.targetEl_.blur();
            this.cleanup_();
            ExhibitHTMLEditingView.__super__.close.apply(this, arguments)
        },
        getTemplateData_: function() {
            return {
                buttons: ExhibitHTMLEditingView.BUTTONS
            }
        },
        cleanup_: function() {
            this.removeClickHandlers_();
            this.targetEl_.removeAttribute("contenteditable")
        },
        addEventHandlers_: function() {
            this.removeClickHandlers_();
            this.doc_ === this.targetEl_.ownerDocument ? this.docClickHandler_ = this.createClickHandler_("aside.blueprint-rich-text-popup", '*[contenteditable="true"]') : (this.ownerDocClickHandler_ = this.createClickHandler_('*[contenteditable="true"]'), this.targetEl_.ownerDocument.addEventListener("click", this.ownerDocClickHandler_), this.docClickHandler_ = this.createClickHandler_("aside.blueprint-rich-text-popup"));
            this.doc_.addEventListener("click", this.docClickHandler_);
            this.keyupHandler_ = function() {
                this.save_()
            }.bind(this);
            this.targetEl_.addEventListener("keyup", this.keyupHandler_);
            this.pasteHandler_ = function(a) {
                a.preventDefault();
                app.getMessageView().show(ExhibitHTMLEditingView.PASTE_WARNING_MESSAGE_, 7E3)
            }.bind(this);
            this.targetEl_.addEventListener("paste", this.pasteHandler_);
            this.targetEl_.addEventListener("click", this.preventMouseEventBound_);
            this.targetEl_.addEventListener("mousemove", this.preventMouseEventBound_);
            this.targetEl_.addEventListener("mousedown", this.preventMouseEventBound_)
        },
        createClickHandler_: function(a, b) {
            return function(c) {
                if (!DOMUtils.isSecondaryClick(c) && !c.target.matchesSelector(a) && !DOMUtils.getParent(c.target, a) && (!b || !c.target.matchesSelector(b) && !DOMUtils.getParent(c.target, b))) c.preventDefault(),
                this.save_(),
                this.close()
            }.bind(this)
        },
        removeClickHandlers_: function() {
            if (this.docClickHandler_) this.doc_.removeEventListener("click", this.docClickHandler_),
            this.docClickHandler_ = void 0;
            if (this.ownerDocClickHandler_) this.targetEl_.ownerDocument.removeEventListener("click", this.ownerDocClickHandler_),
            this.ownerDocClickHandler_ = void 0;
            if (this.keyupHandler_) this.targetEl_.removeEventListener("keyup", this.keyupHandler_),
            this.keyupHandler_ = void 0;
            if (this.pasteHandler_) this.targetEl_.removeEventListener("paste", this.pasteHandler_),
            this.pasteHandler_ = void 0;
            this.targetEl_.removeEventListener("click", this.preventMouseEventBound_);
            this.targetEl_.removeEventListener("mousemove", this.preventMouseEventBound_);
            this.targetEl_.removeEventListener("mousedown", this.preventMouseEventBound_)
        },
        save_: function() {
            var a = XMLUtilities.getInnerXHTML(this.targetEl_),
            a = a.replace(/<br ?\/>$/, "");
            this.trigger("change", a)
        },
        cancel_: function() {
            this.targetEl_.innerHTML = this.originalValue_
        },
        escEvent_: function() {
            this.cancel_();
            ExhibitHTMLEditingView.__super__.escEvent_.apply(this, arguments)
        },
        buttonClickEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a.stopPropagation(), this.targetEl_.ownerDocument.execCommand(b.dataset.command), this.save_())
        },
        preventMouseEvent_: function(a) {
            a.stopPropagation()
        }
    });
    ExhibitHTMLEditingView.BUTTONS = [{
        command: "bold",
        displayHTML: "<b>B</b>"
    },
    {
        command: "italic",
        displayHTML: "<i>I</i>"
    },
    {
        command: "underline",
        displayHTML: "<u>U</u>"
    },
    {
        command: "subscript",
        displayHTML: "X<sub>2</sub>"
    },
    {
        command: "superscript",
        displayHTML: "X<sup>2</sup>"
    }];
    ExhibitHTMLEditingView.PASTE_WARNING_MESSAGE_ = "Pasting into content isn't currently allowed. Try pasting into the sidebar instead.";
    window.ImageFormEditorView = BaseImageFormEditorView.extend({
        selectorView_: null,
        render: function() {
            if (!this.el.contains(this.doc_.activeElement)) this.cleanup_(),
            DOMUtils.detachElement(this.el),
            this.setElement(Templates["project/document/exhibit/editing/imageFormEditorView"](this.getTemplateData_())),
            this.selectorView_ = new ImageSelectorView({
                parentPane: this.el.querySelector(".image-selector-wrapper"),
                model: this.model,
                showPreview: !0
            }),
            this.selectorView_.render(),
            this.parentPane_.appendChild(this.el),
            this.addAutogrows_()
        },
        cleanup_: function() {
            ImageFormEditorView.__super__.cleanup_.call(this);
            if (this.selectorView_) this.selectorView_.remove(),
            this.selectorView_ = null
        }
    });
    window.ImageSelectorView = Backbone.View.extend({
        events: {
            "click .edit-image": "selectImageEvent_"
        },
        model: null,
        attributeName_: null,
        showPreview_: !1,
        description_: null,
        subdescription_: null,
        directory_: null,
        asset_: null,
        progressView_: null,
        assetStatusChangeListener_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.attributeName_ = a.attributeName || "image";
            this.description_ = a.description || "Image";
            this.subdescription_ = a.subdescription || null;
            this.showPreview_ = !!a.showPreview;
            this.directory_ = a.directory || null;
            this.model.on("change:" + this.attributeName_, this.render, this)
        },
        render: function() {
            this.cleanup_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/editing/imageSelectorView"](this.getTemplateData_()));
            if ((this.asset_ = this.getImageAsset_()) && !this.asset_.isSaved()) this.el.classList.add("uploading"),
            this.showProgressView_(),
            this.assetStatusChangeListener_ = function(a, b) {
                b === AssetModel.STATUS.COMPLETED && this.render()
            },
            this.asset_.on("change:status", this.assetStatusChangeListener_, this);
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.model.off("change:" + this.attributeName_, this.render, this);
            this.cleanup_();
            ImageSelectorView.__super__.remove.call(this)
        },
        cleanup_: function() {
            if (this.asset_) {
                if (this.assetStatusChangeListener_) this.asset_.off("change:status", this.assetStatusChangeListener_, this),
                this.assetStatusChangeListener_ = null;
                this.asset_ = null
            }
            if (this.progressView_) this.progressView_.remove(),
            this.progressView_ = null
        },
        getTemplateData_: function() {
            var a = {
                path: this.model.get(this.attributeName_),
                description: this.description_,
                subdescription: this.subdescription_,
                showPreview: this.showPreview_
            };
            if (this.showPreview_) a.thumbnailPath = URLUtils.getImageURL(a.path, app.getProjectModel(), {
                width: URLUtils.IMAGE_SIZES.THUMBNAIL_LARGE
            });
            return a
        },
        getImageAsset_: function() {
            var a = this.model.getDocumentModel();
            if (!a) return null;
            a = a.get("filePath");
            if (!a) return null;
            a = URI(a).filename(this.model.get(this.attributeName_)).normalizePath().toString();
            return app.getAssetManager().getImageAsset(a)
        },
        showProgressView_: function() {
            this.progressView_ = new AssetProgressView({
                parentPane: this.el,
                model: this.asset_
            });
            this.progressView_.render()
        },
        selectImageEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getAssetManager().showAssetPicker({
                type: "image",
                directory: this.directory_ || this.model.getDocumentModel().getChapter(),
                onClose: function(a) {
                    a && this.setFromAsset_(a)
                }.bind(this)
            }))
        },
        setFromAsset_: function(a) {
            var b = this.model.getDocumentModel().get("filePath"),
            b = a.relativePath(b);
            if (a.isSaved()) this.model.set(this.attributeName_, b);
            else {
                var c = this.model,
                d = this.attributeName_,
                e = c.get(d),
                f,
                g = function(a, b) {
                    b === AssetModel.STATUS.COMPLETED ? f() : b === AssetModel.STATUS.FAILED && (f(), a.set(d, e))
                };
                f = function() {
                    c.off("change:" + d, f);
                    a.off("change:status", g)
                };
                c.set(d, b);
                c.on("change:" + d, f);
                a.on("change:status", g)
            }
        }
    });
    window.LayeredImageFormEditorView = BaseImageFormEditorView.extend({
        unlabeledSelectorView_: null,
        labeledSelectorView_: null,
        render: function() {
            this.cleanup_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/editing/layeredImageFormEditorView"](this.getTemplateData_()));
            this.unlabeledSelectorView_ = new ImageSelectorView({
                parentPane: this.el.querySelector(".unlabeled-image-editor"),
                model: this.model,
                attributeName: "unlabeledImage",
                description: LayeredImageFormEditorView.UNLABELED_IMAGE_TITLE_,
                subdescription: LayeredImageFormEditorView.UNLABELED_IMAGE_DESC_
            });
            this.unlabeledSelectorView_.render();
            this.labeledSelectorView_ = new ImageSelectorView({
                parentPane: this.el.querySelector(".labeled-image-editor"),
                model: this.model,
                attributeName: "labeledImage",
                description: LayeredImageFormEditorView.LABELED_IMAGE_TITLE_,
                subdescription: LayeredImageFormEditorView.LABELED_IMAGE_DESC_
            });
            this.labeledSelectorView_.render();
            this.parentPane_.appendChild(this.el);
            this.addAutogrows_()
        },
        cleanup_: function() {
            LayeredImageFormEditorView.__super__.cleanup_.call(this);
            if (this.unlabeledSelectorView_) this.unlabeledSelectorView_.remove(),
            this.unlabeledSelectorView_ = null;
            if (this.labeledSelectorView_) this.labeledSelectorView_.remove(),
            this.labeledSelectorView_ = null
        }
    });
    LayeredImageFormEditorView.UNLABELED_IMAGE_TITLE_ = "Base Image";
    LayeredImageFormEditorView.UNLABELED_IMAGE_DESC_ = "Artwork with leader lines, but no text labels";
    LayeredImageFormEditorView.LABELED_IMAGE_TITLE_ = "Labeled Image";
    LayeredImageFormEditorView.LABELED_IMAGE_DESC_ = "Complete, original artwork with labels and header lines";
    window.MultiImageFormEditorView = Backbone.View.extend({
        events: {
            "change .selected-image": "imageSelectedEvent_"
        },
        collection: null,
        selectedIndex_: null,
        parentPane_: null,
        hideCaptionSettings_: !1,
        initialize: function(a) {
            a = a || {};
            this.hideCaptionSettings_ = !!a.hideCaptionSettings;
            this.parentPane_ = a.parentPane;
            this.selectedIndex_ = a.selectedIndex || 0
        },
        render: function() {
            this.imageFormView_ && this.imageFormView_.remove();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/editing/multiImageFormEditorView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            if (this.collection.at(this.selectedIndex_) instanceof ImageFigureModel) this.imageFormView_ = new ImageFormEditorView({
                parentPane: this.el.querySelector(".image-editor-wrapper"),
                model: this.collection.at(this.selectedIndex_),
                hideCaptionSettings: this.hideCaptionSettings_
            }),
            this.imageFormView_.render()
        },
        canChangeModes: function() {
            var a = !0;
            this.imageFormView_ && (a = a && this.imageFormView_.canChangeModes());
            return a
        },
        remove: function() {
            this.imageFormView_ && this.imageFormView_.remove();
            MultiImageFormEditorView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            return {
                images: this.collection.map(function(a, b) {
                    var c = a.toJSON();
                    c.index = b + 1;
                    c.cid = a.cid;
                    c.selected = this.selectedIndex_ === b;
                    return c
                },
                this)
            }
        },
        imageSelectedEvent_: function(a, b) {
            var c = this.collection.get(b.selectedOptions[0].value);
            this.selectedIndex_ = this.collection.indexOf(c);
            this.render();
            this.trigger("imageSelected", c)
        }
    });
    window.PatternEditorView = Backbone.View.extend({
        model: null,
        collection_: null,
        aceView_: null,
        parentPane_: null,
        form_: null,
        events: {
            "input input.pattern-name": "labelUpdatedEvent_",
            "mousedown .unpin-editor-button": "formCancelEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.collection_ = a.collection;
            this.win_ = a.window || window
        },
        render: function() {
            this.form_ && (this.stopListening(this.form_), this.form_.remove());
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/editing/patternEditorView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.listenTo(this.form_, "cancel", this.formCancelEvent_);
            this.aceView_ && this.aceView_.remove();
            this.aceView_ = new AceView({
                value: this.model.get("html"),
                el: this.el.querySelector(".pattern-contents"),
                fontSize: "11px"
            });
            this.aceView_.resize()
        },
        remove: function() {
            this.aceView_ && this.aceView_.remove();
            this.fadeOutAnimation_ && this.fadeOutAnimation_.cancel();
            this.form_.remove();
            PatternEditorView.__super__.remove.call(this);
            this.parentPane_.classList.remove("animating");
            this.trigger("removed")
        },
        fadeOutAndRemove_: function() {
            this.fadeOutAnimation_ && this.fadeOutAnimation_.cancel();
            this.parentPane_.classList.add("animating");
            this.fadeOutAnimation_ = new Animation({
                duration: 150,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(a) {
                    this.el.style.opacity = 1 - a
                }.bind(this),
                onComplete: function() {
                    this.remove()
                }.bind(this)
            })
        },
        applyChanges_: function(a) {
            var b = this.el.querySelector("input.pattern-name");
            if (!this.model.id) a.id = this.generateUniqueId_(a.label);
            var c = this.collection_.where({
                label: a.label
            })[0];
            if (c && c !== this.model) this.showValidationError_(PatternSnippetModel.INPUT_ERRORS_.DUPLICATE_LABEL),
            b.focus();
            else if (this.model.set(a, {
                validate: !0
            })) this.collection_.contains(this.model) || this.collection_.add(this.model),
            this.saveChanges_();
            else switch (this.showValidationError_(this.model.validationError), this.model.validationError) {
            case PatternSnippetModel.VALIDATION_ERRORS.MISSING_LABEL:
            case PatternSnippetModel.VALIDATION_ERRORS.MISSING_ID:
                b.focus();
                break;
            case PatternSnippetModel.VALIDATION_ERRORS.MISSING_HTML:
                this.aceView_.focus();
                break;
            default:
                this.aceView_.focus()
            }
        },
        saveChanges_: function() {
            this.collection_.isDirty() ? (app.getMessageView().show(SaveHandler.SAVING_MESSAGE), this.collection_.save({},
            {
                success: function() {
                    app.getMessageView().show(SaveHandler.SAVE_SUCCESS, 2E3);
                    this.fadeOutAndRemove_()
                }.bind(this),
                error: function(a, b) {
                    console.error("Error saving:", b);
                    b && console.error("Error details: " + (new ServerError(b)).toString());
                    app.getMessageView().error(SaveHandler.ERROR_SAVING_MESSAGE)
                }.bind(this)
            })) : this.remove()
        },
        generateUniqueId_: function(a) {
            a = StringUtils.titleToId(a);
            if (!this.collection_.get(a)) return a;
            for (var b = 1; this.collection_.get(a + b);) b++;
            return a + b
        },
        showValidationError_: function(a) {
            this.win_.alert(a)
        },
        getTemplateData_: function() {
            return this.model.toJSON()
        },
        labelUpdatedEvent_: function(a, b) {
            if (this.model.get("isCustom")) {
                var c = b.value.trim();
                this.el.querySelector("#pattern-editor .pattern .icon").dataset.customInitials = c.substring(0, 2)
            }
        },
        formCancelEvent_: function() {
            this.fadeOutAndRemove_()
        },
        formSubmitEvent_: function() {
            this.applyChanges_({
                label: this.el.querySelector(".pattern-name").value.trim(),
                html: this.aceView_.getValue().trim()
            })
        }
    });
    PatternSnippetModel.INPUT_ERRORS_ = {
        DUPLICATE_LABEL: "There is already a block with that label."
    };
    window.PatternPickerView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        patternEditor_: null,
        waitFor_: null,
        pickerOpenTimer_: null,
        pickerCloseTimer_: null,
        coachMark_: null,
        events: {
            "mousedown .pattern .edit-button": "editPatternEvent_",
            "mousedown .create-pattern": "createPatternEvent_",
            "mousedown .unpin-button": "mousedownUnpinButtonEvent_",
            "mousedown .panel-icon": "mousedownPanelIconEvent_",
            "mouseover .hover-bar": "mouseOverHoverbarEvent_",
            "mouseout .hover-bar": "mouseOutHoverbarEvent_",
            mouseover: "mouseOverEvent_",
            mouseout: "mouseOutEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            this.badgeBeforeStartBound_ = this.badgeBeforeStart_.bind(this);
            this.badgeOnStartBound_ = this.badgeOnStart_.bind(this);
            this.badgeOnMoveBound_ = this.badgeOnMove_.bind(this);
            this.badgeOnDropBound_ = this.badgeOnDrop_.bind(this);
            this.model.on("add change:label change:isRecommended", this.renderPatterns_, this);
            this.listenTo(app.getCurrentUser().get("prefs"), "change:patternPickerPinned", this.pinnedStateUpdated_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/editing/patternPickerView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            app.trigger("contentPaneResized");
            this.model.isLoaded() ? this.renderPatterns_() : this.waitFor_ = new WaitFor({
                waitFor: this.model,
                showSpinnerOn: this.el.querySelector("#pattern-browser"),
                whenLoaded: this.renderPatterns_.bind(this)
            })
        },
        remove: function() {
            this.waitFor_ && this.waitFor_.remove();
            if (this.patternEditor_) this.patternEditor_.off("removed", this.patternEditorRemoved_, this),
            this.patternEditor_.remove(),
            this.patternEditor_ = null;
            if (this.badgeDraggables_) this.badgeDraggables_.forEach(function(a) {
                a.remove()
            },
            this),
            this.badgeDraggables_ = [];
            this.coachMark_ && this.coachMark_.remove();
            this.removeCloseTimer_();
            PatternPickerView.__super__.remove.call(this);
            app.trigger("contentPaneResized")
        },
        removeOpenTimer_: function() {
            if (this.pickerOpenTimer_) this.win_.clearTimeout(this.pickerOpenTimer_),
            this.pickerOpenTimer_ = null
        },
        removeCloseTimer_: function() {
            if (this.pickerCloseTimer_) this.win_.clearTimeout(this.pickerCloseTimer_),
            this.pickerCloseTimer_ = null
        },
        renderPatterns_: function() {
            this.el.querySelector("#pattern-browser").classList.remove("loading");
            if (this.model.length) {
                var a = this.el.querySelector(".pattern-catalog");
                a.innerHTML = "";
                var b = Templates["project/document/exhibit/editing/patternSnippetList"](this.getPatternTemplateData_());
                a.appendChild(b);
                this.bindDragDrop_();
                this.renderCoachMark_()
            }
        },
        renderCoachMark_: function() {
            this.coachMark_ && this.coachMark_.remove();
            if (this.el.classList.contains("pinned")) this.coachMark_ = new CoachMarkView({
                anchor: this.el.querySelector(".pattern-group"),
                config: CoachMarkView.CONFIGURATION.PATTERN_PICKER
            }),
            this.coachMark_.render()
        },
        editPattern_: function(a) {
            if (this.patternEditor_) this.patternEditor_.off("removed", this.patternEditorRemoved_, this),
            this.patternEditor_.remove(),
            this.patternEditor_ = null;
            var b = this.el.querySelector("#pattern-editor-wrapper");
            this.patternEditor_ = new PatternEditorView({
                parentPane: b,
                model: a,
                collection: this.model
            });
            this.patternEditor_.render();
            this.patternEditor_.on("removed", this.patternEditorRemoved_, this)
        },
        createPattern_: function() {
            if (this.patternEditor_) this.patternEditor_.off("removed", this.patternEditorRemoved_, this),
            this.patternEditor_.remove(),
            this.patternEditor_ = null;
            var a = new PatternSnippetModel({
                isCustom: !0
            }),
            b = this.el.querySelector("#pattern-editor-wrapper");
            this.patternEditor_ = new PatternEditorView({
                parentPane: b,
                model: a,
                collection: this.model
            });
            this.patternEditor_.render();
            this.patternEditor_.on("removed", this.patternEditorRemoved_, this)
        },
        patternEditorRemoved_: function() {
            this.patternEditor_ = null
        },
        getTemplateData_: function() {
            return {
                isPinned: !!app.getCurrentUser().get("prefs").get(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY)
            }
        },
        getPatternTemplateData_: function() {
            var a = [],
            b = [],
            c = [];
            this.model.toJSON().forEach(function(d) {
                d.validationError || (d.category ? a.push(d) : b.push(d), d.isRecommended && c.push(d))
            },
            this);
            var a = _.groupBy(a, "category"),
            a = Object.keys(a).map(function(b) {
                return {
                    category: b,
                    patterns: a[b]
                }
            },
            this),
            d = [];
            a.forEach(function(a) {
                a.patterns.length > 1 ? d.push(a) : b.push(a.patterns[0])
            },
            this);
            return {
                groups: d,
                recommended: c.length === 0 ? null: c,
                ungrouped: b.length === 0 ? null: b
            }
        },
        editPatternEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.editPattern_(this.model.get(DOMUtils.getParent(b, "[data-id]").dataset.id)))
        },
        createPatternEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.createPattern_())
        },
        bindDragDrop_: function() {
            this.badgeDraggables_ = this.el.querySelectorAll(".pattern-catalog .pattern").map(function(a) {
                return app.getDragManager().makeDraggable({
                    el: a,
                    beforeStart: this.badgeBeforeStartBound_,
                    onStart: this.badgeOnStartBound_,
                    onMove: this.badgeOnMoveBound_,
                    onDrop: this.badgeOnDropBound_
                },
                {
                    useNearestElement: !0
                })
            },
            this)
        },
        badgeBeforeStart_: function(a, b) {
            var c = b.cloneNode(!0);
            c.classList.add("mid-flight");
            DOMUtils.insertSibling(c, "after", b);
            return c
        },
        badgeOnStart_: function(a, b, c) {
            a = this.model.get(c.dataset.id);
            app.getDragManager().trigger("pattern:start", {
                pattern: a
            })
        },
        badgeOnMove_: function(a, b, c, d) {
            a = this.model.get(c.dataset.id);
            app.getDragManager().trigger("pattern:move", {
                pattern: a,
                target: b,
                elementOffset: d
            })
        },
        badgeOnDrop_: function(a, b, c, d) {
            DOMUtils.detachElement(c);
            a = this.model.get(c.dataset.id);
            app.getDragManager().trigger("pattern:drop", {
                pattern: a,
                target: b,
                elementOffset: d
            });
            this.coachMark_ && this.coachMark_.close()
        },
        mousedownUnpinButtonEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || app.getCurrentUser().get("prefs").set(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY, !1)
        },
        mousedownPanelIconEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (this.el.classList.remove("open"), a = app.getCurrentUser().get("prefs"), a.set(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY, !a.get(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY)))
        },
        pinnedStateUpdated_: function() {
            var a = !app.getCurrentUser().get("prefs").get(PatternPickerView.PINNED_OPEN_PREFERENCE_KEY);
            DOMUtils.onTransitionEnd(this.el,
            function() {
                app.trigger("contentPaneResized");
                this.renderCoachMark_()
            }.bind(this));
            a ? this.el.classList.remove("open", "pinned") : this.el.classList.add("pinned")
        },
        mouseOverHoverbarEvent_: function(a) {
            this.removeOpenTimer_();
            a.relatedTarget ? this.pickerOpenTimer_ = this.win_.setTimeout(function() {
                this.pickerOpenTimer_ = null;
                this.el.classList.add("open")
            }.bind(this), PatternPickerView.PICKER_OPEN_TIMEOUT_) : this.el.classList.add("open")
        },
        mouseOutHoverbarEvent_: function(a) {
            this.removeOpenTimer_();
            a.relatedTarget || this.el.classList.add("open")
        },
        mouseOverEvent_: function(a, b) {
            DOMUtils.isMouseEnterLeave(b, a) && this.removeCloseTimer_()
        },
        mouseOutEvent_: function(a, b) {
            if (DOMUtils.isMouseEnterLeave(b, a) && !this.patternEditor_) this.removeCloseTimer_(),
            a.relatedTarget ? this.el.classList.remove("open") : this.pickerCloseTimer_ = this.win_.setTimeout(function() {
                this.pickerCloseTimer_ = null;
                this.el.classList.remove("open")
            }.bind(this), PatternPickerView.PICKER_CLOSE_TIMEOUT_)
        }
    });
    PatternPickerView.PINNED_OPEN_PREFERENCE_KEY = "patternPickerPinned";
    PatternPickerView.PICKER_OPEN_TIMEOUT_ = 500;
    PatternPickerView.PICKER_CLOSE_TIMEOUT_ = 1500;
    window.SidebarFormView = Backbone.View.extend({
        model: null,
        events: {
            "keyup input, textarea": "updateModelEvent_",
            "change input, textarea": "updateModelEvent_"
        },
        autogrows_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.autogrows_ = []
        },
        render: function() {
            this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this);
            this.autogrows_ = [];
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateName_();
            this.setElement(Templates[a](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.win_.setTimeout(this.setupAutogrows_.bind(this), 1)
        },
        remove: function() {
            this.autogrows_.forEach(function(a) {
                a.remove()
            },
            this);
            this.autogrows_ = [];
            SidebarFormView.__super__.remove.call(this)
        },
        setupAutogrows_: function() {
            this.autogrows_ = this.el.querySelectorAll("textarea").map(function(a) {
                a = new Autogrow({
                    el: a,
                    maxHeight: 150,
                    document: this.doc_,
                    window: this.win_
                });
                a.render();
                return a
            },
            this)
        },
        getTemplateName_: function() {
            throw Error("Subclasses must override getTemplateName_.");
        },
        getTemplateData_: function() {
            return this.model.toJSON()
        },
        getFormData_: function() {
            var a = DOMUtils.getFormValues(this.el);
            Object.keys(a).forEach(function(b) {
                a[b] = a[b] || null
            });
            return a
        },
        updateModelEvent_: function() {
            this.model.set(this.getFormData_())
        }
    });
    window.SliderFigureFormEditorView = BaseImageFormEditorView.extend({
        initialize: function(a) {
            SliderFigureFormEditorView.__super__.initialize.call(this, a);
            this.model.on("change:label change:caption", this.render, this)
        },
        render: function() {
            this.cleanup_();
            DOMUtils.detachElement(this.el);
            var a = Templates["project/document/exhibit/editing/sliderFigureFormEditor"](this.getTemplateData_());
            this.selectorView_ = new ImageSelectorView({
                parentPane: a.querySelector(".image-selector-wrapper"),
                model: this.model
            });
            this.selectorView_.render();
            this.setElement(a);
            this.parentPane_.appendChild(this.el);
            this.addAutogrows_()
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            return {
                label: a.label,
                caption: a.caption
            }
        },
        updateModelEvent_: function() {
            this.model.set({
                label: this.el.querySelector('[name="label"]').value || null,
                caption: this.el.querySelector('[name="caption"]').value || null
            })
        },
        cleanup_: function() {
            if (this.selectorView_) this.selectorView_.remove(),
            this.selectorView_ = null;
            this.model.off("change:label change:caption", this.render, this);
            SliderFigureFormEditorView.__super__.cleanup_.call(this)
        }
    });
    window.TOCBookInfoSidebarView = SidebarFormView.extend({
        model: null,
        selectorView_: null,
        render: function() {
            this.selectorView_ && this.selectorView_.remove();
            TOCBookInfoSidebarView.__super__.render.call(this);
            this.selectorView_ = new ImageSelectorView({
                parentPane: this.el.querySelector(".image-selector-wrapper"),
                model: this.model,
                description: "Cover Image",
                attributeName: "thumbnailPath",
                showPreview: !0,
                directory: TOCDocumentModel.THUMBNAILS_FOLDER
            });
            this.selectorView_.render()
        },
        remove: function() {
            if (this.selectorView_) this.selectorView_.remove(),
            this.selectorView_ = null;
            TOCBookInfoSidebarView.__super__.remove.call(this)
        },
        getTemplateName_: function() {
            return "project/document/exhibit/editing/tocBookInfoSidebarView"
        },
        getTemplateData_: function() {
            var a = TOCBookInfoSidebarView.__super__.getTemplateData_.call(this);
            a.projectSettingsURL = URLRouter.getSettingsPath(app.getProjectModel().get("shortName"));
            return a
        },
        getFormData_: function() {
            var a = TOCBookInfoSidebarView.__super__.getFormData_.apply(this, arguments);
            if (a.includeGlossary) {
                var b = this.model.get("glossaryPath"),
                c = ExhibitDocumentModel.getSourceLocationFromPath(RepositoryLayout.GLOSSARY_PATH);
                a.glossaryPath = b || c
            } else a.glossaryPath = null;
            delete a.includeGlossary;
            return a
        }
    });
    window.TOCChapterSidebarView = SidebarFormView.extend({
        model: null,
        selectorView_: null,
        events: _.extend({},
        SidebarFormView.prototype.events, {
            "click .close-sidebar": "clickCloseSidebarEvent_"
        }),
        render: function() {
            this.selectorView_ && this.selectorView_.remove();
            TOCChapterSidebarView.__super__.render.call(this);
            this.selectorView_ = new ImageSelectorView({
                parentPane: this.el.querySelector(".image-selector-wrapper"),
                model: this.model,
                description: "Chapter Thumbnail",
                attributeName: "thumbnailPath",
                showPreview: !0,
                directory: TOCDocumentModel.THUMBNAILS_FOLDER
            });
            this.selectorView_.render()
        },
        remove: function() {
            if (this.selectorView_) this.selectorView_.remove(),
            this.selectorView_ = null;
            TOCChapterSidebarView.__super__.remove.call(this)
        },
        getTemplateName_: function() {
            return "project/document/exhibit/editing/tocChapterSidebarView"
        },
        getFormData_: function() {
            var a = TOCChapterSidebarView.__super__.getFormData_.call(this);
            a.sandbox = a.sandbox ? "true": "false";
            return a
        },
        clickCloseSidebarEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.set("isSelected", !1))
        }
    });
    window.TOCExhibitSidebarView = SidebarFormView.extend({
        model: null,
        events: _.extend({},
        SidebarFormView.prototype.events, {
            "click .close-sidebar": "clickCloseSidebarEvent_"
        }),
        getTemplateName_: function() {
            return "project/document/exhibit/editing/tocExhibitSidebarView"
        },
        getTemplateData_: function() {
            var a = TOCExhibitSidebarView.__super__.getTemplateData_.call(this);
            if (!a.isNew && a.path) {
                var b = app.getProjectModel().get("toc").getExhibitMetadata(a.path);
                b && ["designation", "enumeration", "type", "title"].forEach(function(c) {
                    a[c] = b[c]
                },
                this)
            }
            a.exhibitTypeName = ExhibitDocumentView.getTypeName(a.type) || "Unknown Exhibit";
            switch (a.type) {
            case "html":
            case "imagefigure":
            case "videofigure":
                a.designationPlaceholder = "e.g. Figure, Exhibit";
                a.enumerationPlaceholder = "e.g. 1a, 2.3";
                break;
            case "assessment":
                a.designationPlaceholder = "e.g. Quiz, Test",
                a.enumerationPlaceholder = "e.g. 1, A"
            }
            return a
        },
        clickCloseSidebarEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.set("isSelected", !1))
        }
    });
    window.TOCUnitSidebarView = SidebarFormView.extend({
        model: null,
        events: _.extend({},
        SidebarFormView.prototype.events, {
            "click .close-sidebar": "clickCloseSidebarEvent_"
        }),
        getTemplateName_: function() {
            return "project/document/exhibit/editing/tocUnitSidebarView"
        },
        getFormData_: function() {
            var a = TOCUnitSidebarView.__super__.getFormData_.call(this);
            a.isForcedVisible = !0;
            return a
        },
        clickCloseSidebarEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.set("isSelected", !1))
        }
    });
    window.VideoFormEditorView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        events: {
            "click .video-selector button": "editStreamEvent_",
            "click .frame-selector button": "selectFrameEvent_",
            "change input": "updateModelEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.doc || document;
            this.parentPane_ = a.parentPane;
            this.model.on("change:video change:videoHeight change:videoWidth change:image change:posterAsset change:videoAsset", this.render, this)
        },
        canChangeModes: function() {
            return this.model.get("posterAsset") ? (app.getMessageView().error(VideoFormEditorView.UNSAVED_FRAME_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME), !1) : !0
        },
        remove: function() {
            this.model.off("change:video change:videoHeight change:videoWidth change:image change:posterAsset change:videoAsset", this.render, this);
            VideoFormEditorView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            this.el.contains(this.doc_.activeElement) || (DOMUtils.detachElement(this.el), this.setElement(Templates["project/document/exhibit/editing/videoFormEditor"](this.getTemplateData_())), this.parentPane_.appendChild(this.el))
        },
        getTemplateData_: function() {
            var a = this.model.toJSON(),
            b = this.model.get("videoAsset");
            a.hasThumbnails = b && b.get("thumbnails") && b.get("thumbnails").length > 0;
            a.readOnlyVideoStream = b && (b.get("status") === AssetModel.STATUS.UPLOADING || b.get("status") === AssetModel.STATUS.ENCODING);
            a.docsUrl = URLUtils.expand("{+wwwHost}/read/habitat-user-guide/01ddf4398b604319bdaa180d40a459fc/83f26e7a19a344be956f4e93b68e925f");
            return a
        },
        updateModelEvent_: function(a) {
            this.model.set(a.target.name, parseInt(a.target.value, 10))
        },
        editStreamEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getMessageView().hide(), app.getAssetManager().showAssetPicker({
                type: "video",
                isFromBlueprint: !0,
                onClose: function(a) {
                    a && this.setVideoStream_(a)
                }.bind(this)
            }))
        },
        setVideoStream_: function(a) {
            var b, c;
            a.get("status") === AssetModel.STATUS.UPLOADING && (b = {
                videoHeight: this.model.get("videoHeight"),
                videoWidth: this.model.get("videoWidth")
            },
            c = this.model.get("videoAsset"));
            this.model.set({
                videoWidth: a.get("width") || null,
                videoHeight: a.get("height") || null
            },
            {
                silent: !0
            });
            this.model.setStream(a);
            if (a.get("status") === AssetModel.STATUS.UPLOADING) {
                var d = function(e, f) {
                    f === AssetModel.STATUS.COMPLETED && (this.model.set({
                        videoWidth: a.get("width"),
                        videoHeight: a.get("height")
                    }), this.updateFrame_(a), a.off("change:status", d, this));
                    f === AssetModel.STATUS.FAILED && (this.model.set(b), this.model.setStream(c), this.updateFrame_(c), a.off("change:status", d, this))
                };
                a.on("change:status", d, this)
            }
            this.updateFrame_(a)
        },
        updateFrame_: function(a) { (a = a.get("thumbnails")) && a.length > 0 ? this.model.copyNewFrame(a[0]) : this.model.copyNewFrame(VideoAssetModel.getDefaultPosterLocation())
        },
        selectFrameEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (new VideoFramePickerPopupView({
                model: this.model.get("videoAsset"),
                onClose: function(a) {
                    a && this.model.copyNewFrame(a)
                }.bind(this),
                initialImagePath: this.model.getImagePath()
            })).render())
        }
    });
    VideoFormEditorView.UNSAVED_FRAME_MESSAGE_ = "A new poster frame has not been saved; please save changes before continuing";
    window.VideoFramePickerPopupView = PopupView.extend({
        model: null,
        currentImagePath_: null,
        onClose_: null,
        events: _.extend({},
        PopupView.prototype.events, {
            "click .close": "cancelEvent_",
            "click .select": "submitEvent_",
            "click .poster-frame": "selectImageEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.currentImagePath_ = a.initialImagePath;
            this.onClose_ = a.onClose;
            a.removeOnClose = !0;
            a.className = "video-frame-picker";
            VideoFramePickerPopupView.__super__.initialize.call(this, a)
        },
        close: function(a) {
            VideoFramePickerPopupView.__super__.close.apply(this);
            this.onClose_(a || null)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/editing/videoFramePicker"](this.getTemplateData_()));
            VideoFramePickerPopupView.__super__.render.call(this);
            this.open()
        },
        getTemplateData_: function() {
            var a = this.currentImagePath_;
            return {
                thumbnails: this.model.get("thumbnails").map(function(b, c) {
                    return {
                        path: b,
                        isSelected: b === a,
                        index: c
                    }
                },
                this),
                currentImagePath: a
            }
        },
        selectImageEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = parseInt(b.dataset.index, 10);
                this.currentImagePath_ = this.model.get("thumbnails")[c];
                this.render()
            }
        },
        cancelEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.close())
        },
        submitEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.close(this.currentImagePath_))
        }
    });
    window.GlossaryDocumentView = ExhibitDocumentView.extend({
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            GlossaryDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Glossary"
        },
        getDocumentTitle: function() {
            return "Glossary"
        },
        getDefaultMode: function() {
            return DocumentView.MODES.PROOF
        },
        showValidationErrors: function(a) {
            this.setMode_(DocumentView.MODES.EDIT);
            this.codeView_.setValidationErrors(a)
        },
        proof_: function(a) {
            this.glossaryRemarksView_ = new GlossaryRemarksView({
                model: this.model,
                parentPane: this.getContentPane_(),
                scrollPosition: a
            });
            this.loadedListener_ = function() {
                this.trigger("loaded")
            };
            this.glossaryRemarksView_.on("loaded", this.loadedListener_, this);
            this.glossaryRemarksView_.render();
            this.getSidebarPane_().appendChild(Templates["project/document/proofing/noProofingSidebar"]())
        },
        proofRemove_: function() {
            this.glossaryRemarksView_ && (this.loadedListener_ && this.glossaryRemarksView_.off("loaded", this.loadedListener_, this), this.glossaryRemarksView_.remove())
        },
        edit_: function() {
            this.code_()
        },
        editRemove_: function() {
            this.codeRemove_()
        }
    });
    FileDocumentView.registerType_("glossary", GlossaryDocumentView);
    window.GuidedTourDocumentView = S9MLDocumentView.extend({
        enumeration_: null,
        selectedStep_: null,
        loaded_: !1,
        proofingView_: null,
        events: _.extend({},
        S9MLDocumentView.prototype.events, {
            "click .guidedtour-content": "deselectEvent_",
            "click .guidedtour-step.refresh": "refreshEvent_",
            "click .guidedtour-step[data-cid]": "selectStepEvent_",
            "click .add-step": "addStepEvent_",
            "click .frame-rectangle": "selectFrameEvent_",
            "mouseover .guidedtour-step[data-cid]": "mouseoverStepEvent_",
            "mouseout .guidedtour-step[data-cid]": "mouseoutStepEvent_",
            "click .delete-button": "deleteStepEvent_",
            "dragstart .guidedtour-step": "stepDragStartEvent_",
            "dragend .guidedtour-step": "stepDragEndEvent_",
            "dragleave .guidedtour-steps": "stepDragLeaveEvent_",
            "dragover .guidedtour-steps": "stepDragOverEvent_",
            "drop .guidedtour-steps": "stepDropEvent_"
        }),
        elemBeingDragged_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            GuidedTourDocumentView.__super__.initialize.call(this, a);
            this.setupKeyboard_()
        },
        getDocumentTypeName: function() {
            return "Guided Tour"
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return this.imageFigureView_ && this.imageFigureView_.getScaledImage()
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    right: this.nextStep.bind(this),
                    left: this.prevStep.bind(this)
                })
            })
        },
        createView_: function() {
            var a = this.model.get("rootPiece"),
            b = a.get("steps"),
            c = b.collectionAttributes;
            if (!this.isSlidedTour_()) {
                var d = c.get("enumerationType") || Enumeration.ENUM_TYPE.NUMBER,
                e = (c.get("enumerationStart") || 1) - 1;
                this.enumeration_ = new Enumeration(d, e)
            }
            this.guidedTourEl_ = Templates["project/document/exhibit/figure/guidedTourFigure"](this.getTemplateData_());
            d = new Backbone.Collection(b.map(function(a) {
                return a.get("annotation")
            },
            this));
            this.getContentPane_().appendChild(this.guidedTourEl_);
            e = {
                model: this.model.get("rootPiece"),
                parentPane: this.guidedTourEl_.querySelector(".guidedtour-content"),
                hideCaption: !0,
                annotations: d,
                enumeration: this.enumeration_
            };
            this.imageFigureView_ && (this.imageFigureView_.off("annotationsUpdated", this.annotationsUpdatedEvent_, this), this.imageFigureView_.off("loaded", this.imageFigureViewLoaded_, this), this.imageFigureView_.remove());
            this.currentMode_ === DocumentView.MODES.EDIT ? (e.disableAnnotationDelete = !0, e.frames = b, e.labelFrames = !0, e.hideAddPoptipButton = !0, this.imageFigureView_ = new EditableImageFigureView(e)) : this.imageFigureView_ = new ImageFigureView(e);
            this.imageFigureView_.on("annotationsUpdated", this.annotationsUpdatedEvent_, this);
            this.imageFigureView_.on("loaded", this.imageFigureViewLoaded_, this);
            this.imageFigureView_.render();
            if (this.isSlidedTour_()) b = b.map(function(a) {
                return {
                    value: a.get("number"),
                    label: a.get("annotation").get("label")
                }
            },
            this),
            this.sliderView_ && (this.sliderView_.off("change", this.sliderChangeEvent_, this), this.sliderView_.remove()),
            this.sliderView_ = new DiscreteSliderView({
                parentPane: this.guidedTourEl_.querySelector(".guidedtour-steps"),
                minValue: c.get("startStep"),
                maxValue: c.get("endStep"),
                startLabel: c.get("startContents"),
                endLabel: c.get("endContents"),
                legend: c.get("legend"),
                markers: b
            }),
            this.sliderView_.on("change", this.sliderChangeEvent_, this),
            this.sliderView_.render();
            this.captionView_ && this.captionView_.remove();
            c = {
                model: a,
                parentPane: this.guidedTourEl_
            };
            this.currentMode_ === DocumentView.MODES.EDIT ? (c.contentPane = this.getContentPane_(), this.captionView_ = new EditableFigureCaptionView(c)) : this.captionView_ = new FigureCaptionView(c);
            this.captionView_.render();
            if (this.currentMode_ === DocumentView.MODES.EDIT) this.sidebarView_ && this.sidebarView_.remove(),
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model,
                annotations: d,
                image: a,
                selectedAnnotations: this.imageFigureView_.getSelectedAnnotations()
            }),
            this.sidebarView_.render()
        },
        removeView_: function() {
            if (this.sliderView_) this.sliderView_.off("change", this.sliderChangeEvent_, this),
            this.sliderView_.remove(),
            this.sliderView_ = null;
            if (this.sidebarView_) this.sidebarView_.remove(),
            this.sidebarView_ = null;
            this.captionView_.remove();
            this.imageFigureView_.off("annotationsUpdated", this.annotationsUpdatedEvent_, this);
            this.imageFigureView_.off("loaded", this.imageFigureViewLoaded_, this);
            this.imageFigureView_.remove();
            this.getContentPane_().innerHTML = "";
            app.getKeyboardManager().remove(this.keyboard_)
        },
        proof_: function(a) {
            this.createView_(a);
            app.getKeyboardManager().activate(this.keyboard_);
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render()
        },
        proofRemove_: function() {
            this.removeView_();
            this.proofingView_.remove()
        },
        edit_: function() {
            this.createView_();
            this.model.get("rootPiece").on("change", this.modelDirtyEvent_, this);
            this.model.get("rootPiece").get("steps").on("add remove", this.modelDirtyEvent_, this);
            app.getSaveHandler().on("save", this.onSave_, this)
        },
        editRemove_: function() {
            this.removeView_();
            this.model.get("rootPiece").off("change", this.modelDirtyEvent_, this);
            this.model.get("rootPiece").get("steps").off("add remove", this.modelDirtyEvent_, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            this.model.ensureXMLSerialized()
        },
        imageFigureViewLoaded_: function() {
            this.loaded_ = !0;
            this.trigger("loaded")
        },
        isSlidedTour_: function() {
            return this.model.get("rootPiece").get("steps").collectionAttributes.get("stepsInterface") === "slider"
        },
        getTemplateData_: function() {
            var a = this.model.get("rootPiece").toJSON();
            a.steps.forEach(function(a, c) {
                a.label = this.enumeration_ && this.enumeration_.getEnumerationForIndex(c);
                a.index = c
            },
            this);
            a.isSlider = this.isSlidedTour_();
            a.isEditable = this.currentMode_ === DocumentView.MODES.EDIT;
            a.enableDelete = a.isEditable && a.steps.length > 1;
            return a
        },
        nextStep: function() {
            var a = null,
            b = this.model.get("rootPiece").get("steps");
            this.selectedStep_ === null ? a = 0 : (a = b.indexOf(this.selectedStep_) + 1, a === b.length && (a = null));
            this.selectStep(b.at(a))
        },
        prevStep: function() {
            var a = null,
            b = this.model.get("rootPiece").get("steps");
            this.selectedStep_ === null ? a = b.length - 1 : (a = b.indexOf(this.selectedStep_) - 1, a === -1 && (a = null));
            this.selectStep(b.at(a))
        },
        selectStep: function(a) {
            this.selectedStep_ = a;
            var b = this.model.get("rootPiece").get("steps");
            this.currentMode_ === DocumentView.MODES.PROOF ? (b.forEach(function(b) {
                b !== a && b.get("annotation").set("isActive", !1)
            }), a ? (a.get("annotation").set("isActive", !0), this.fitToStep_(a)) : this.imageFigureView_.getScaledImage().fitToContainer()) : (b = a ? a.cid: null, this.imageFigureView_.getFramesView().setTopLayerFrame(b), this.imageFigureView_.getSelectedFrames().reset(a));
            this.updateTourUI_(a)
        },
        updateTourUI_: function(a) {
            var b = this.model.get("rootPiece").get("steps");
            this.isSlidedTour_() ? a ? this.sliderView_.setValue(a.get("number"), !0) : this.sliderView_.setValue(null, !1) : b.forEach(function(b) {
                this.guidedTourEl_.querySelector('.guidedtour-step[data-cid="' + b.cid + '"]').classList.toggle("active", a === b)
            },
            this)
        },
        selectStepEvent_: function(a, b) {
            var c = this.el.querySelector(".delete-button");
            DOMUtils.isSecondaryClick(a) || c && c.contains(a.target) || (a.preventDefault(), c = b.dataset.cid || null, this.selectStep(this.model.get("rootPiece").get("steps").get(c)))
        },
        refreshEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.get("rootPiece").get("steps").forEach(function(a) {
                a.get("annotation").set("isActive", !1)
            }), this.imageFigureView_.getScaledImage().fitToContainer(), this.selectStep())
        },
        deselectEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.selectStep())
        },
        addStepEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var a = this.getValidCoordinates_(GuidedTourDocumentView.DEFAULT_COORDINATES_),
                b = this.imageFigureView_.getScaledImage();
                b && (a = this.getValidCoordinates_(b.getContainer()));
                b = this.model.get("rootPiece").get("steps");
                b.add(new StepModel({
                    frameWidth: GuidedTourDocumentView.FRAME_WIDTH_,
                    frameHeight: GuidedTourDocumentView.FRAME_HEIGHT_,
                    frameX: a.x,
                    frameY: a.y,
                    annotation: new AnnotationModel({
                        x: a.x + GuidedTourDocumentView.FRAME_WIDTH_ / 2,
                        y: a.y + GuidedTourDocumentView.FRAME_HEIGHT_ / 2,
                        orientation: AnnotationModel.TAIL_DOWN,
                        text: "New Step"
                    })
                }));
                this.render();
                b = this.model.get("rootPiece").get("steps");
                this.selectStep(b.at(b.length - 1))
            }
        },
        getValidCoordinates_: function(a) {
            var b = GuidedTourDocumentView.FRAME_BOUNDING_PERCENTAGE_.start,
            c = GuidedTourDocumentView.FRAME_BOUNDING_PERCENTAGE_.end,
            d = a.right - a.left,
            e = a.bottom - a.top,
            a = d * b;
            d *= c;
            b *= e;
            c *= e;
            a = Math.floor(Math.random() * (d - a) + a);
            c = Math.floor(Math.random() * (c - b) + b);
            return {
                x: a,
                y: c
            }
        },
        deleteStepEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var b = this.model.get("rootPiece").get("steps"),
                a = b.get(a.target.parentElement.dataset.cid);
                b.remove(a);
                this.render()
            }
        },
        selectFrameEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.selectStep(this.model.get("rootPiece").get("steps").get(b.dataset.cid)))
        },
        mouseoverStepEvent_: function(a, b) {
            this.currentMode_ === DocumentView.MODES.EDIT && !DOMUtils.isSecondaryClick(a) && (a.preventDefault(), this.imageFigureView_.getFramesView().setHighlightedFrame(b.dataset.cid))
        },
        mouseoutStepEvent_: function(a) {
            this.currentMode_ === DocumentView.MODES.EDIT && !DOMUtils.isSecondaryClick(a) && (a.preventDefault(), this.imageFigureView_.getFramesView().setHighlightedFrame())
        },
        stepDragStartEvent_: function(a, b) {
            a.dataTransfer.effectAllowed = "move";
            this.elemBeingDragged_ = b;
            b.classList.add("dragging");
            this.el.querySelector(".guidedtour-steps").classList.add("dragging")
        },
        stepDragEndEvent_: function(a, b) {
            this.elemBeingDragged_ = null;
            b.classList.remove("dragging");
            this.el.querySelector(".guidedtour-steps").classList.remove("dragging")
        },
        stepDropEvent_: function(a) {
            if (this.elemBeingDragged_) {
                var b = this.model.get("rootPiece").get("steps"),
                a = this.findClosestDropTarget_(a.pageX, a.pageY),
                c = parseInt(this.elemBeingDragged_.dataset.insertIndex, 10),
                a = a.dataset.insertIndex !== void 0 ? parseInt(a.dataset.insertIndex, 10) : b.length;
                c < a && (a -= 1);
                if (a !== c) {
                    c = b.at(c);
                    b.remove(c, {
                        silent: !0
                    });
                    var d = b.toArray().slice(a);
                    b.remove(d, {
                        silent: !0
                    });
                    b.add([c].concat(d));
                    this.render();
                    this.selectStep(this.model.get("rootPiece").get("steps").at(a))
                }
            }
        },
        stepDragOverEvent_: function(a) {
            if (this.elemBeingDragged_) a.preventDefault(),
            a.dataTransfer.dropEffect = "move",
            a = this.findClosestDropTarget_(a.pageX, a.pageY),
            this.el.querySelectorAll(".drop-target.selected").forEach(function(a) {
                a.classList.remove("selected")
            }),
            a.classList.add("selected")
        },
        stepDragLeaveEvent_: function(a) {
            this.elemBeingDragged_ && a.target.classList.contains("guidedtour-steps") && this.el.querySelectorAll(".drop-target.selected").forEach(function(a) {
                a.classList.remove("selected")
            })
        },
        findClosestDropTarget_: function(a, b) {
            var c = Infinity,
            d = null;
            this.el.querySelectorAll(".drop-target").forEach(function(e) {
                var f = e.getBoundingClientRect(),
                g = a - Math.floor((f.left + f.right) / 2),
                f = b - Math.floor((f.top + f.bottom) / 2),
                g = Math.sqrt(g * g + f * f);
                g < c && (c = g, d = e)
            },
            this);
            return d
        },
        sliderChangeEvent_: function(a) {
            this.selectStep(this.model.get("rootPiece").get("steps").find(function(b) {
                return b.get("number") === a
            },
            this))
        },
        annotationsUpdatedEvent_: function() {
            if (this.currentMode_ !== DocumentView.MODES.EDIT) {
                var a = null;
                this.model.get("rootPiece").get("steps").forEach(function(b) {
                    b.get("annotation").get("isActive") && (a = b)
                });
                a ? this.selectStep(a) : (this.selectedStep_ = null, this.updateTourUI_(null))
            }
        },
        fitToStep_: function(a) {
            var b = a.get("frameX"),
            c = a.get("frameY"),
            d = a.get("frameWidth"),
            e = a.get("frameHeight"),
            f = this.imageFigureView_.getScaledImage().getContainer(),
            f = Math.min(f.width / d, f.height / e),
            g = a.get("annotation"),
            h = this.imageFigureView_.annotationsView_.getAnnotationOffset(g),
            a = g.get("x") + h.marginLeft / f,
            g = g.get("y") + h.marginTop / f,
            i = h.offsetHeight / f,
            f = a + h.offsetWidth / f - (b + d);
            f > 0 && (b += f);
            f = g + i - (c + e);
            f > 0 && (c += f);
            a < b && (b = a);
            g < c && (c = g);
            this.imageFigureView_.getScaledImage().fitToFrame(b, c, d, e)
        },
        onSave_: function() {
            this.model.updateFromXML()
        },
        modelDirtyEvent_: function() {
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model)
        }
    });
    FileDocumentView.registerType_("guidedtour", GuidedTourDocumentView);
    GuidedTourDocumentView.FRAME_WIDTH_ = 120;
    GuidedTourDocumentView.FRAME_HEIGHT_ = 120;
    GuidedTourDocumentView.DEFAULT_COORDINATES_ = {
        width: 300,
        left: 100,
        bottom: 300
    };
    GuidedTourDocumentView.FRAME_BOUNDING_PERCENTAGE_ = {
        start: 0.2,
        end: 0.8
    };
    window.HTMLDocumentMetadataView = Backbone.View.extend({
        model: null,
        editingView_: null,
        parentElem_: null,
        isEditable_: !1,
        content_: null,
        events: {
            "focusin .card-title-input": "cardTitleInputFocusin_",
            "focusout .card-title-input": "cardTitleInputFocusout_",
            "click .delete-card": "deleteCardClick_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.editingView_ = a.editingView;
            this.parentElem_ = a.parentElem;
            this.isEditable_ = !!a.isEditable;
            this.setValue(this.model.get("content"))
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/htmlDocumentMetadata"](this.getTemplateData_()));
            this.parentElem_.appendChild(this.el);
            this.updateUI_()
        },
        focus: function(a) {
            this.isEditable_ && a && a.target === HTMLDocumentMetadataView.FOCUS_TARGET_.TITLE && (this.win_.focus(), (a = this.el.querySelector(".card-title-input")) && a.focus())
        },
        blur: function() {
            if (this.isEditable_) {
                var a = this.el.querySelector(".card-title-input");
                a && a.blur()
            }
        },
        setValue: function(a, b) {
            this.content_ = a;
            this.updateUI_();
            b || this.trigger("change")
        },
        getValue: function() {
            return this.titleHasChanged_() ? this.content_.replace(HTMLDocumentMetadataView.TITLE_TAG_REGEX_,
            function(a, b, c, d) {
                return (b || "<title>") + this.getCurrentTitleValue_() + (d || "</title>")
            }.bind(this)) : this.content_
        },
        flush: function() {
            if (this.titleHasChanged_()) this.content_ = this.getValue(),
            this.updateUI_(),
            this.trigger("change")
        },
        getDocumentMetadataValues: function() {
            var a = this.content_.match(HTMLDocumentMetadataView.TITLE_TAG_REGEX_);
            if (a) {
                var b = a[3] || "</title>";
                return {
                    title: (a[1] || "<title>") + this.getCurrentTitleValue_() + b
                }
            } else return {}
        },
        getTemplateData_: function() {
            return {
                isEditable: this.isEditable_
            }
        },
        getTitle_: function() {
            var a = this.content_.match(HTMLDocumentMetadataView.TITLE_TAG_REGEX_);
            return a && a[2] && a[2].trim() || ""
        },
        getTitleText_: function() {
            return StringUtils.stripTags(this.getTitle_())
        },
        updateUI_: function() {
            var a = this.el.querySelector(".card-title-input"),
            b = this.getTitleText_();
            if (a) a.value = b;
            a = this.getTitle_();
            b = this.getCurrentTitleValue_();
            this.el.classList.toggle("show-html-warning", a !== b)
        },
        titleHasChanged_: function() {
            var a = this.el.querySelector(".card-title-input");
            return !! a && a.value !== this.getTitleText_()
        },
        getCurrentTitleValue_: function() {
            var a = this.el.querySelector(".card-title-input");
            return a ? StringUtils.convertSpacesForHTML(StringUtils.escapeHTML(a.value.trim())) : null
        },
        cardTitleInputFocusin_: function() {
            this.isEditable_ && (this.el.classList.add("currently-editing"), this.trigger("focus", {
                target: HTMLDocumentMetadataView.FOCUS_TARGET_.TITLE
            }))
        },
        cardTitleInputFocusout_: function() {
            if (this.isEditable_ && (this.el.classList.remove("currently-editing"), this.titleHasChanged_())) this.content_ = this.getValue(),
            this.updateUI_(),
            this.trigger("change")
        },
        getSiblingCard_: function() {
            var a = app.getProjectModel().get("toc").get("xml"),
            b = ExhibitDocumentModel.getSourceLocationFromPath(this.model.get("filePath")),
            a = a.xpathAll('.//s9ml:exhibit[@type="html" and @path="' + b + '"]/../s9ml:exhibit[@type="html"]');
            if (a.length < 2) return null;
            for (var c = null,
            d = 0; d < a.length; d++) if (a[d].getAttribute("path") === b) {
                c = d + 1;
                break
            }
            return a[c] || a[c - 2]
        },
        getNestedCards_: function() {
            var a = app.getProjectModel().get("toc"),
            b = ExhibitDocumentModel.getSourceLocationFromPath(this.model.get("filePath"));
            return a.nestedExhibits(b)
        },
        deleteCurrentCard_: function(a) {
            var b = new TOCDocumentModel({
                project: app.getProjectModel()
            });
            b.on("loaded",
            function() {
                if (b.errorLoading()) app.getMessageView().error(HTMLDocumentMetadataView.DELETE_FAILED_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME);
                else {
                    var c = ExhibitDocumentModel.getSourceLocationFromPath(this.model.get("filePath"));
                    b.findExhibit(c).set("isDeleted", !0);
                    b.save(null, {
                        success: function() {
                            app.getMessageView().hide();
                            var b = ExhibitDocumentModel.getFilePathFromSourceLocation(a.getAttribute("path"));
                            app.getRouter().openFile(b)
                        }.bind(this),
                        error: function() {
                            app.getMessageView().error(HTMLDocumentMetadataView.DELETE_FAILED_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME);
                            this.editingView_ && this.editingView_.enable()
                        }.bind(this)
                    })
                }
            },
            this);
            b.fetch({
                error: function() {
                    app.getMessageView().error(HTMLDocumentMetadataView.DELETE_FAILED_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME)
                }
            });
            this.editingView_ && this.editingView_.disable("Removing current page...")
        },
        deleteCardClick_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) if (a = this.getSiblingCard_()) {
                var b = "",
                c = this.getNestedCards_();
                c.length && (b += "Warning!\nThe following nested content will also be deleted:\n", b += c.reduce(function(a, b) {
                    return a + TableOfContentsModel.getTitle(b) + "\n"
                },
                ""), b += "\n");
                b += "Are you sure you want to delete this page?\nAll unsaved changes will also be lost.";
                this.win_.confirm(b) && (app.getSaveHandler().clear(), this.deleteCurrentCard_(a))
            } else app.getMessageView().error("You cannot remove the only page in a chapter.", MessageView.DEFAULT_DISPLAY_TIME)
        }
    });
    HTMLDocumentMetadataView.TITLE_TAG_REGEX_ = /(?:(<title(?:\s[^>]*)?>)([\s\S]*)(<\/title\s*>))|(?:<title(?:\s[^>]*)?\/>)/i;
    HTMLDocumentMetadataView.FOCUS_TARGET_ = {
        TITLE: "title-input"
    };
    HTMLDocumentMetadataView.DELETE_FAILED_MESSAGE_ = "Unable to remove page.";
    window.HTMLDocumentView = ExhibitDocumentView.extend({
        contentView_: null,
        proofingView_: null,
        editView_: null,
        htmlNavigationView_: null,
        contentHeight_: null,
        navScrollOffsetForMode_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.navScrollOffsetForMode_ = {}; ! this.getMode() && app.getRouter().getLineNumber() && this.setMode_(DocumentView.MODES.EDIT, !0);
            HTMLDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Page"
        },
        showValidationErrors: function(a) {
            this.setMode_(DocumentView.MODES.EDIT);
            this.editView_.setValidationErrors(a)
        },
        clearValidationErrors: function() {
            this.editView_ && this.editView_.clearValidationErrors()
        },
        allowToggle_: function() {
            return this.currentMode_ === DocumentView.MODES.EDIT ? this.editView_.canChangeModes() : !0
        },
        saveHeight_: function() {
            var a = this.getContentPane_();
            if (a && this.contentView_ && this.contentView_.isLoaded()) this.contentHeight_ = a.clientHeight + "px"
        },
        restoreHeight_: function() {
            var a = this.getContentPane_();
            if (a && this.contentHeight_) a.style.height = this.contentHeight_
        },
        clearHeight_: function() {
            var a = this.getContentPane_();
            if (a) a.style.height = null
        },
        getOffsetFromNavUI_: function() {
            var a = this.getScrollableArea_();
            return DOMUtils.getOffset(a.querySelector(".coordinate-box"))
        },
        scrollToSavedPosition_: function(a) {
            var b = this.getOffsetDifference_(this.currentMode_);
            this.contentView_.setScrollPosition(a.scrollLeft + b.left, a.scrollTop + b.top)
        },
        getOffsetDifference_: function(a) {
            var b;
            if (a === DocumentView.MODES.PROOF) b = DocumentView.MODES.EDIT;
            else if (a === DocumentView.MODES.EDIT) b = DocumentView.MODES.PROOF;
            else throw Error("Programming Error: Only edit and proof modes use match scrolling.");
            b = this.navScrollOffsetForMode_[b] || {
                top: 0,
                left: 0
            };
            this.navScrollOffsetForMode_[a] = this.navScrollOffsetForMode_[a] || this.getOffsetFromNavUI_();
            return {
                top: this.navScrollOffsetForMode_[a].top - b.top,
                left: this.navScrollOffsetForMode_[a].left - b.left
            }
        },
        proof_: function() {
            var a = this.getContentPane_();
            this.contentView_ = new ReaderContentView({
                model: this.model,
                parentPane: a,
                contentToolbarView: this.getContentToolbarView_(),
                addCSS: ReaderContentView.getIframeCSS()
            });
            this.contentView_.render();
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: a,
                contentView: this.contentView_,
                sidebarPane: this.getSidebarPane_()
            });
            this.listenTo(this.proofingView_, "loaded", this.triggerLoaded_);
            this.proofingView_.render();
            if (!this.model.get("revision")) this.htmlNavigationView_ = new HTMLNavigationView({
                model: this.model,
                parentPane: a
            }),
            this.htmlNavigationView_.render();
            a = this.scrollPositionForMode_[DocumentView.MODES.EDIT];
            if (this.scrollPositionForMode_[DocumentView.MODES.PROOF] = a) this.restoreHeight_(),
            this.scrollToSavedPosition_(a),
            this.listenToOnce(this.proofingView_, "loaded", this.clearHeight_.bind(this)),
            this.listenToOnce(app, "contentPaneResized", this.scrollToSavedPosition_.bind(this, a))
        },
        proofRemove_: function() {
            this.navScrollOffsetForMode_[DocumentView.MODES.PROOF] = this.getOffsetFromNavUI_();
            this.saveHeight_();
            this.clearHeight_();
            this.stopListening(app, "contentPaneResized");
            this.stopListening(this.proofingView_);
            this.proofingView_.remove();
            this.contentView_.remove();
            if (this.htmlNavigationView_) this.htmlNavigationView_.remove(),
            this.htmlNavigationView_ = null
        },
        edit_: function() {
            var a = this.getContentPane_();
            this.enterSplitScreen_();
            this.contentView_ = new ReaderContentView({
                model: this.model,
                parentPane: a,
                contentToolbarView: this.getContentToolbarView_(),
                addCSS: ReaderContentView.getIframeCSS(),
                disableSelection: !0,
                disableLinks: !0,
                hidePageNumbers: !0,
                squelchKeyboardBehavior: !0
            });
            this.listenTo(this.contentView_, "loaded", this.triggerLoaded_);
            this.editView_ = new HTMLEditingView({
                model: this.model,
                contentView: this.contentView_,
                codePane: this.el.querySelector("#code-editor-pane"),
                scrollableArea: this.getScrollableArea_(),
                contentPane: a,
                contentToolbarView: this.getContentToolbarView_()
            });
            if (!this.model.get("revision")) this.htmlNavigationView_ = new HTMLNavigationView({
                model: this.model,
                parentPane: a,
                editingView: this.editView_
            }),
            this.htmlNavigationView_.render();
            this.contentView_.render();
            this.editView_.render();
            a = this.scrollPositionForMode_[DocumentView.MODES.PROOF];
            if (this.scrollPositionForMode_[DocumentView.MODES.EDIT] = a) this.restoreHeight_(),
            this.scrollToSavedPosition_(a);
            this.listenToOnce(this.contentView_, "loaded", this.editContentLoaded_.bind(this))
        },
        editRemove_: function() {
            this.navScrollOffsetForMode_[DocumentView.MODES.EDIT] = this.getOffsetFromNavUI_();
            this.saveHeight_();
            this.clearHeight_();
            this.leaveSplitScreen_();
            this.stopListening(this.contentView_, "loaded");
            this.editView_.remove();
            this.contentView_.remove();
            if (this.htmlNavigationView_) this.htmlNavigationView_.remove(),
            this.htmlNavigationView_ = null;
            this.editView_ = null
        },
        editContentLoaded_: function() {
            this.clearHeight_();
            var a = this.getScrollPosition_(),
            b = this.scrollPositionForMode_[DocumentView.MODES.PROOF],
            c = this.getOffsetDifference_(DocumentView.MODES.EDIT),
            d = a.scrollTop === 0 && a.scrollLeft === 0;
            if (b && b.scrollTop === 0 && b.scrollLeft === 0 && a.scrollTop <= c.top || d) a = this.contentView_.getIframe(),
            a.focus(),
            a.contentDocument.body.focus()
        },
        code_: function() {
            this.displayNotSupported_(DocumentView.MODES.CODE)
        },
        codeRemove_: function() {},
        triggerLoaded_: function() {
            this.trigger("loaded")
        },
        enterSplitScreen_: function() {
            this.el.classList.add("split-screen");
            app.trigger("contentPaneResized")
        },
        leaveSplitScreen_: function() {
            this.el.classList.remove("split-screen");
            app.trigger("contentPaneResized")
        }
    });
    FileDocumentView.registerType_("html", HTMLDocumentView);
    window.HTMLNavigationView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        hasPrevious_: !1,
        editingView_: null,
        events: {
            "click a": "navigationEvt_",
            "click .insert-card": "cardInsertionEvt_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.editingView_ = a.editingView
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.parentPane_.classList.remove("top-margin-buffer", "bottom-margin-buffer");
            var a = this.getTemplateData_();
            this.setElement(Templates["project/document/htmlNavigation"](a));
            this.parentPane_.appendChild(this.el);
            if (a.previousCard) this.parentPane_.classList.add("top-margin-buffer"),
            this.hasPrevious_ = !0;
            a.nextCard && this.parentPane_.classList.add("bottom-margin-buffer");
            a.showInsertButtons || this.parentPane_.classList.add("insert-buttons-removed")
        },
        remove: function() {
            this.hasPrevious_ = !1;
            this.parentPane_.classList.remove("top-margin-buffer", "bottom-margin-buffer", "insert-buttons-removed");
            HTMLNavigationView.__super__.remove.apply(this, arguments)
        },
        hasPreviousReaderCard: function() {
            return this.hasPrevious_
        },
        hasInsertButtons: function() {
            return ! this.parentPane_.classList.contains("insert-buttons-removed")
        },
        getCardData_: function(a, b) {
            if (b === null) return null;
            var c = ExhibitDocumentModel.getFilePathFromSourceLocation(a[b].getAttribute("path")),
            d = a[b].xpath("./s9ml:title");
            return {
                title: (d ? d.textContent: "") || HTMLNavigationView.DEFAULT_CARD_TITLE_,
                url: URLRouter.getFilePath(app.getProjectModel().get("shortName"), c),
                path: c
            }
        },
        getTemplateData_: function() {
            var a = app.getProjectModel().get("toc").get("xml").xpathAll('.//s9ml:chapter/s9ml:exhibit[@type="html"]'),
            b = null;
            a.some(function(a, c) {
                if (ExhibitDocumentModel.getFilePathFromSourceLocation(a.getAttribute("path")) === this.model.get("filePath")) return b = c,
                !0
            },
            this);
            var c = null,
            d = null;
            b !== null && (b > 0 && (c = b - 1), b < a.length - 1 && (d = b + 1));
            var e = b !== null && this.editingView_;
            return {
                previousCard: this.getCardData_(a, c),
                nextCard: this.getCardData_(a, d),
                showInsertButtons: e
            }
        },
        navigationEvt_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getRouter().openFile(b.dataset.path))
        },
        insertReaderCard_: function(a) {
            var b = new TOCDocumentModel({
                project: app.getProjectModel()
            });
            b.on("loaded",
            function() {
                if (b.errorLoading()) app.getMessageView().error(HTMLNavigationView.INSERT_FAILED_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME);
                else {
                    var c = ExhibitDocumentModel.getSourceLocationFromPath(this.model.get("filePath")),
                    c = b.findExhibit(c),
                    d = new TOCExhibitModel;
                    d.set({
                        type: "html",
                        isNew: !0
                    });
                    c.insertSiblingExhibit(d, a);
                    b.save(null, {
                        success: function() {
                            app.getMessageView().hide();
                            var a = ExhibitDocumentModel.getFilePathFromSourceLocation(d.get("path"));
                            app.getRouter().openFile(a)
                        }.bind(this),
                        error: function() {
                            app.getMessageView().error(HTMLNavigationView.INSERT_FAILED_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME);
                            this.editingView_ && this.editingView_.enable();
                            a ? this.el.querySelector('[data-where="before"]').classList.remove("loading") : this.el.querySelector('[data-where="after"]').classList.remove("loading")
                        }.bind(this)
                    })
                }
            },
            this);
            b.fetch({
                error: function() {
                    app.getMessageView().error(HTMLNavigationView.INSERT_FAILED_MESSAGE_, MessageView.DEFAULT_DISPLAY_TIME)
                }
            });
            app.getMessageView().show("Adding new page...");
            this.editingView_ && this.editingView_.disable()
        },
        cardInsertionEvt_: function(a, b) { ! DOMUtils.isSecondaryClick(a) && app.getSaveHandler().canNavigateAway() && !b.classList.contains("loading") && (this.insertReaderCard_(b.dataset.where === HTMLNavigationView.CARD_INSERTION_BEFORE_), b.classList.add("loading"))
        }
    });
    HTMLNavigationView.CARD_INSERTION_BEFORE_ = "before";
    HTMLNavigationView.INSERT_FAILED_MESSAGE_ = "Unable to insert page.";
    HTMLNavigationView.DEFAULT_CARD_TITLE_ = "Untitled Page";
    window.HotspotDocumentView = S9MLDocumentView.extend({
        model: null,
        loaded_: !1,
        proofingView_: null,
        treeView_: null,
        figure_: null,
        animation_: null,
        hotspotEl_: null,
        events: function() {
            return this.currentMode_ === DocumentView.MODES.EDIT ? _.extend({},
            S9MLDocumentView.prototype.events, {
                "click .hotspotfigure-breadcrumbs .tree": "showTreeViewEvent_",
                "click .hotspotfigure-breadcrumbs .crumb[data-cid]": "selectHotspotEvent_",
                "dblclick .hotspotfigure-content .frame-rectangle": "selectHotspotEvent_"
            }) : _.extend({},
            S9MLDocumentView.prototype.events, {
                "click .hotspotfigure-breadcrumbs .tree": "showTreeViewEvent_",
                "click .hotspotfigure-breadcrumbs .crumb[data-cid]": "selectHotspotEvent_",
                "click .hotspotfigure-content .frame-rectangle": "selectHotspotEvent_"
            })
        },
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            HotspotDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Hotspot"
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return this.figure_ && this.figure_.getScaledImage()
        },
        updateSubExhibitList_: function() {
            var a = this.model.get("rootPiece").getXMLNode().xpathAll("//s9ml:hotspot");
            a.unshift(this.model.get("rootPiece").getXMLNode());
            a = a.map(function(a, c) {
                return {
                    title: "Hotspot " + (c + 1),
                    id: XMLUtilities.getS9ID(a)
                }
            },
            this);
            this.model.set("subExhibits", a)
        },
        proof_: function() {
            this.selectHotspot_(this.readHotspotFromUrl_() || this.model.get("rootPiece"));
            this.updateSubExhibitList_();
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render()
        },
        proofRemove_: function() {
            this.proofingView_.remove();
            this.cleanup_()
        },
        edit_: function() {
            this.selectHotspot_(this.readHotspotFromUrl_() || this.model.get("rootPiece"));
            this.model.get("rootPiece").on("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().on("save", this.onSave_, this)
        },
        editRemove_: function() {
            this.cleanup_();
            this.model.get("rootPiece").off("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            this.model.ensureXMLSerialized()
        },
        getTemplateData_: function(a) {
            var b = this.model.get("rootPiece"),
            c = b.toJSON();
            c.hideBreadcrumbs = !a;
            a = a || b;
            b = this.findHotspotParents_(a);
            b.push(a);
            c.breadcrumbs = b.map(function(a) {
                return {
                    src: a.getFigure().toJSON().thumbnailPath,
                    cid: a.cid
                }
            });
            return c
        },
        findHotspotParents_: function(a, b) {
            var c = !1;
            b || (b = this.model.get("rootPiece"));
            if (a === b) return [];
            var d = b.getFigure().get("hotspots");
            d && d.forEach(function(b) { (b = this.findHotspotParents_(a, b)) && (c = b)
            },
            this);
            c && c.unshift(b);
            return c
        },
        fadeToHotspot_: function(a) {
            this.fadeContent_("out",
            function() {
                var b = function() {
                    this.off("loaded", b, this);
                    this.fadeContent_("in")
                };
                this.on("loaded", b, this);
                this.selectHotspot_(a)
            }.bind(this))
        },
        fadeContent_: function(a, b) {
            var c = this.hotspotEl_.querySelector(".hotspotfigure-content");
            c.style.opacity = a === "in" ? 0 : 1;
            this.animation_ && this.animation_.cancel();
            this.animation_ = new Animation({
                duration: 200,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(b) {
                    c.style.opacity = a === "in" ? b: 1 - b
                }.bind(this),
                onComplete: function() {
                    c.style.opacity = a === "in" ? 1 : 0;
                    this.animation_ = null;
                    b && b()
                }.bind(this)
            })
        },
        selectHotspot_: function(a) {
            app.getMessageView().show("Loading...");
            var b = this.model.get("rootPiece");
            this.cleanup_();
            this.hotspotEl_ = Templates["project/document/exhibit/figure/hotspotFigure"](this.getTemplateData_(a));
            this.getContentPane_().appendChild(this.hotspotEl_);
            var a = a || b,
            c = {
                model: a.getFigure(),
                parentPane: this.hotspotEl_.querySelector(".hotspotfigure-content")
            },
            d = this.currentMode_ === DocumentView.MODES.EDIT;
            if (a.get("imagefigure")) this.figure_ = d ? new EditableImageFigureView(c) : new ImageFigureView(c);
            else if (a.get("layeredfigure")) this.figure_ = d ? new EditableLayeredFigureView(c) : new LayeredFigureView(c);
            else {
                console.error("The hotspot does not have a figure to render.");
                return
            }
            this.model.set("subExhibitId", XMLUtilities.getS9ID(a.getXMLNode()));
            this.figure_.on("loaded", this.figureLoaded_, this);
            this.figure_.render();
            a !== b ? this.saveHotspotToUrl_(a) : this.saveHotspotToUrl_(null);
            if (this.currentMode_ === DocumentView.MODES.EDIT) this.sidebarView_ && this.sidebarView_.remove(),
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model,
                annotations: a.getFigure().get("annotations"),
                image: a.get("imagefigure"),
                selectedAnnotations: this.figure_.getSelectedAnnotations()
            }),
            this.sidebarView_.render();
            a = {
                model: b,
                parentPane: this.hotspotEl_
            };
            this.currentMode_ === DocumentView.MODES.EDIT ? (a.contentPane = this.getContentPane_(), this.captionView_ = new EditableFigureCaptionView(a)) : this.captionView_ = new FigureCaptionView(a);
            this.captionView_.render()
        },
        figureLoaded_: function() {
            this.loaded_ = !0;
            this.trigger("loaded")
        },
        cleanup_: function() {
            if (this.sidebarView_) this.sidebarView_.remove(),
            this.sidebarView_ = null;
            if (this.figure_) this.figure_.off("loaded", this.figureLoaded_, this),
            this.figure_.remove(),
            this.figure_ = null;
            if (this.treeView_) this.treeView_.off("thumbnailClicked", this.selectHotspotFromTree_),
            this.treeView_.remove(),
            this.treeView_ = null;
            if (this.hotspotEl_) DOMUtils.detachElement(this.hotspotEl_),
            this.hotspotEl_ = null;
            if (this.captionView_) this.captionView_.remove(),
            this.captionView_ = null
        },
        selectHotspotEvent_: function(a, b) {
            var c = b.dataset.cid;
            this.fadeToHotspot_(this.model.get("rootPiece").findHotspotByCid_(c))
        },
        showTreeViewEvent_: function() {
            this.cleanup_();
            this.hotspotEl_ = Templates["project/document/exhibit/figure/hotspotFigure"](this.getTemplateData_());
            this.getContentPane_().appendChild(this.hotspotEl_);
            this.treeView_ = new HotspotTreeView({
                model: this.model.get("rootPiece"),
                parentPane: this.hotspotEl_.querySelector(".hotspotfigure-content")
            });
            this.treeView_.on("thumbnailClicked", this.selectHotspotFromTree_, this);
            this.treeView_.render();
            this.saveHotspotToUrl_(null);
            if (this.currentMode_ === DocumentView.MODES.EDIT) this.sidebarView_ && this.sidebarView_.remove(),
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model
            }),
            this.sidebarView_.render();
            var a = {
                model: this.model.get("rootPiece"),
                parentPane: this.hotspotEl_
            };
            this.captionView_ = this.currentMode_ === DocumentView.MODES.EDIT ? new EditableFigureCaptionView(a) : new FigureCaptionView(a);
            this.captionView_.render()
        },
        selectHotspotFromTree_: function(a) {
            this.fadeToHotspot_(a)
        },
        saveHotspotToUrl_: function(a) {
            this.win_.location.hash = a ? "id-" + XMLUtilities.getS9ID(a.getFigure().getXMLNode()) : ""
        },
        readHotspotFromUrl_: function() {
            var a = app.getRouter().getS9ID();
            return a ? this.model.get("rootPiece").findHotspotByS9ID_(a) : null
        },
        onSave_: function() {
            this.model.updateFromXML()
        },
        modelDirtyEvent_: function() {
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model)
        }
    });
    FileDocumentView.registerType_("hotspotfigure", HotspotDocumentView);
    window.ImageFigureDocumentView = S9MLDocumentView.extend({
        model: null,
        loaded_: !1,
        proofingView_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            ImageFigureDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Image Figure"
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return this.view_ && this.view_.getScaledImage()
        },
        createView_: function(a, b) {
            this.view_ = new ImageFigureView({
                model: this.model.get("rootPiece"),
                parentPane: this.getContentPane_(),
                position: a,
                revealSingleAnnotation: b
            });
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.view_.render()
        },
        proof_: function(a) {
            this.setAllAnnotations_({
                isActive: !0
            });
            this.createView_(a, !1);
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render()
        },
        proofRemove_: function() {
            this.view_.remove();
            this.proofingView_.remove()
        },
        edit_: function(a) {
            this.view_ = new EditableImageFigureView({
                model: this.model.get("rootPiece"),
                parentPane: this.getContentPane_(),
                position: a
            });
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.view_.render();
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model,
                annotations: this.model.get("rootPiece").get("annotations"),
                image: this.model.get("rootPiece"),
                selectedAnnotations: this.view_.getSelectedAnnotations()
            });
            this.sidebarView_.render()
        },
        editRemove_: function() {
            this.sidebarView_.remove();
            this.sidebarView_ = null;
            this.view_.remove();
            this.model.ensureXMLSerialized()
        },
        setAllAnnotations_: function(a) {
            this.model.get("rootPiece").get("annotations").forEach(function(b) {
                b.set(a)
            },
            this)
        }
    });
    FileDocumentView.registerType_("imagefigure", ImageFigureDocumentView);
    window.LayeredFigureDocumentView = S9MLDocumentView.extend({
        model: null,
        loaded_: !1,
        proofingView_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            LayeredFigureDocumentView.__super__.initialize.call(this, a)
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return this.view_ && this.view_.getScaledImage()
        },
        getDocumentTypeName: function() {
            return "Test Yourself"
        },
        proof_: function(a) {
            this.createView_({
                position: a,
                revealSingleAnnotation: !1,
                expandAll: !0
            });
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render()
        },
        proofRemove_: function() {
            this.view_.remove();
            this.proofingView_.remove()
        },
        createView_: function(a) {
            a = a || {};
            this.view_ && this.view_.remove();
            this.view_ = new LayeredFigureView({
                model: this.model.get("rootPiece"),
                parentPane: this.getContentPane_(),
                position: a.position,
                revealSingleAnnotation: a.revealSingleAnnotation,
                expandAll: a.expandAll
            });
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.view_.render()
        },
        edit_: function(a) {
            this.model.get("rootPiece").get("annotations").forEach(function(a) {
                a.set("isActive", !1)
            });
            this.view_ && this.view_.remove();
            this.view_ = new EditableLayeredFigureView({
                model: this.model.get("rootPiece"),
                parentPane: this.getContentPane_(),
                position: a
            });
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.view_.render();
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model,
                annotations: this.model.get("rootPiece").get("annotations"),
                selectedAnnotations: this.view_.getSelectedAnnotations(),
                image: this.model.get("rootPiece")
            });
            this.sidebarView_.render()
        },
        editRemove_: function() {
            this.view_.remove();
            if (this.sidebarView_) this.sidebarView_.remove(),
            this.sidebarView_ = null;
            this.model.ensureXMLSerialized()
        }
    });
    FileDocumentView.registerType_("layeredfigure", LayeredFigureDocumentView);
    window.MultiFigureDocumentView = S9MLDocumentView.extend({
        model: null,
        events: _.extend({},
        S9MLDocumentView.prototype.events, {
            "click .multifigure-slide": "selectSlideEvent_",
            "click .multifigure-slide-add": "addSlideEvent_",
            "click .delete-button": "deleteSlideEvent_",
            "dragstart .multifigure-slide": "slideDragStartEvent_",
            "dragend .multifigure-slide": "slideDragEndEvent_",
            "dragleave .multifigure-slideshow": "slideDragLeaveEvent_",
            "dragover .multifigure-slideshow": "slideDragOverEvent_",
            "drop .multifigure-slideshow": "slideDropEvent_"
        }),
        elemBeingDragged_: null,
        enumeration_: null,
        loaded_: !1,
        proofingView_: null,
        initialize: function(a) {
            a = a || {};
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            a.isSubclass = !0;
            MultiFigureDocumentView.__super__.initialize.call(this, a);
            this.model.set("selectedSlide", 0);
            this.model.on("change:selectedSlide", this.renderSlide_, this);
            this.setupKeyboard_()
        },
        remove: function() {
            this.model.off("change:selectedSlide", this.renderSlide_, this);
            MultiFigureDocumentView.__super__.remove.call(this)
        },
        getDocumentTypeName: function() {
            return "Slideshow"
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return this.view_ && this.view_.getScaledImage()
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    right: this.incrementSlide.bind(this),
                    left: this.decrementSlide.bind(this)
                })
            })
        },
        selectSlideEvent_: function(a, b) { ! a.target.classList.contains("delete-button") && !DOMUtils.getParent(a.target, ".delete-button") && this.model.set("selectedSlide", parseInt(b.dataset.index, 10))
        },
        incrementSlide: function() {
            var a = this.model.get("selectedSlide") + 1,
            b = this.model.get("rootPiece").get("figures").length - 1;
            a <= b && this.model.set("selectedSlide", a)
        },
        decrementSlide: function() {
            var a = this.model.get("selectedSlide") - 1;
            a >= 0 && this.model.set("selectedSlide", a)
        },
        updateSubExhibitList_: function() {
            var a = this.model.get("rootPiece").get("figures"),
            a = a.map(function(a, c) {
                return {
                    title: "Image " + (c + 1),
                    id: XMLUtilities.getS9ID(a.getXMLNode())
                }
            },
            this);
            this.model.set("subExhibits", a)
        },
        updateSubExhibitId_: function() {
            var a = this.model.get("selectedSlide"),
            b = this.model.get("subExhibits");
            b && b.length && this.model.set("subExhibitId", b[a].id)
        },
        edit_: function() {
            this.createView_();
            this.model.get("rootPiece").on("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().on("save", this.onSave_, this);
            var a = this.model.get("rootPiece").get("figures");
            this.sidebarView_ = new EditableExhibitSidebarView({
                el: this.getSidebarPane_(),
                model: this.model,
                selectedAnnotations: this.view_.getSelectedAnnotations(),
                images: a,
                image: a.at(this.model.get("selectedSlide"))
            });
            this.sidebarView_.render();
            this.sidebarView_.on("imageSelected", this.sidebarImageSelected_, this);
            a.on("add remove reset", this.render, this);
            a.on("add remove reset", this.modelDirtyEvent_, this);
            a.on("change:image change:thumbnailPath", this.renderImageChange_, this)
        },
        editRemove_: function() {
            if (this.sidebarView_) this.sidebarView_.off("imageSelected", this.sidebarImageSelected_, this),
            this.sidebarView_.remove(),
            this.sidebarView_ = null;
            this.removeView_();
            var a = this.model.get("rootPiece").get("figures");
            a.off("add remove reset", this.render, this);
            a.off("add remove reset", this.modelDirtyEvent_, this);
            a.off("change:image change:thumbnailPath", this.renderImageChange_, this);
            this.model.get("rootPiece").off("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            this.model.ensureXMLSerialized()
        },
        sidebarImageSelected_: function(a) {
            this.model.set("selectedSlide", this.model.get("rootPiece").get("figures").indexOf(a))
        },
        updateSidebar_: function() {
            if (this.sidebarView_) {
                var a = this.model.get("rootPiece").get("figures"),
                b = a.at(this.model.get("selectedSlide"));
                this.sidebarView_.updateAnnotations(this.view_.getSelectedAnnotations());
                this.sidebarView_.updateImages(b, a);
                this.sidebarView_.render()
            }
        },
        renderImageChange_: function(a) { (a.hasChanged("thumbnailPath") || !a.get("thumbnailPath") && a.hasChanged("image")) && this.render()
        },
        addSlideEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getAssetManager().showAssetPicker({
                type: "image",
                directory: this.model.getChapter(),
                onClose: function(a) {
                    if (a) {
                        var a = new ImageFigureModel({
                            image: a.relativePath(this.model.get("filePath"))
                        },
                        {
                            documentModel: this.model
                        }),
                        c = this.model.get("rootPiece").get("figures");
                        c.add(a);
                        this.model.set("selectedSlide", c.length - 1)
                    }
                }.bind(this)
            }))
        },
        deleteSlideEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.stopPropagation();
                a.preventDefault();
                var c = parseInt(DOMUtils.getParent(b, ".multifigure-slide").dataset.index, 10),
                d = this.model.get("rootPiece").get("figures"),
                e = this.model.get("selectedSlide");
                c <= e && e > 0 && (e -= 1);
                this.model.set("selectedSlide", e);
                d.remove(d.at(c))
            }
        },
        createView_: function() {
            this.multifigureEl_ = Templates["project/document/exhibit/figure/multiFigure"](this.getTemplateData_());
            this.getContentPane_().appendChild(this.multifigureEl_);
            var a = this.multifigureEl_.querySelector(".multifigure-slideshow");
            Array.prototype.slice.call(a.childNodes).forEach(function(b) {
                b.nodeType === Node.TEXT_NODE && a.removeChild(b)
            },
            this);
            this.captionView_ && this.captionView_.remove();
            var b = {
                model: this.model.get("rootPiece"),
                parentPane: this.multifigureEl_
            };
            this.currentMode_ === DocumentView.MODES.EDIT ? (b.contentPane = this.getContentPane_(), this.captionView_ = new EditableFigureCaptionView(b)) : this.captionView_ = new FigureCaptionView(b);
            this.captionView_.render();
            b = this.model.get("rootPiece").get("enumerationType") || Enumeration.ENUM_TYPE.NUMBER;
            this.enumeration_ = new Enumeration(b);
            this.renderSlide_();
            app.getKeyboardManager().activate(this.keyboard_)
        },
        renderSlide_: function() {
            app.getMessageView().show("Loading...");
            this.view_ && this.view_.remove();
            var a = this.model.get("rootPiece").get("figures"),
            b = parseInt(this.model.get("selectedSlide"), 10),
            a = a.at(b);
            this.view_ = new(this.getViewForModel_(a))({
                model: a,
                parentPane: this.multifigureEl_.querySelector(".multifigure-content"),
                enumerationOverride: this.enumeration_.getEnumerationForIndex(b)
            });
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.view_.render();
            this.multifigureEl_.querySelector(".multifigure-slide.active").classList.remove("active");
            this.multifigureEl_.querySelector('.multifigure-slide[data-index="' + b + '"]').classList.add("active");
            this.updateSidebar_()
        },
        removeView_: function() {
            this.captionView_ && this.captionView_.remove();
            this.view_ && this.view_.remove();
            this.getContentPane_().innerHTML = "";
            app.getKeyboardManager().remove(this.keyboard_)
        },
        proof_: function(a) {
            this.createView_(a);
            this.updateSubExhibitList_();
            this.updateSubExhibitId_();
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render();
            this.model.on("change:selectedSlide", this.updateSubExhibitId_, this)
        },
        proofRemove_: function() {
            this.model.off("change:selectedSlide", this.updateSubExhibitId_, this);
            this.proofingView_.remove();
            this.removeView_()
        },
        getViewForModel_: function(a) {
            var b = this.currentMode_ === DocumentView.MODES.EDIT;
            if (a instanceof LayeredFigureModel) return b ? EditableLayeredFigureView: LayeredFigureView;
            else if (a instanceof ImageFigureModel) return b ? EditableImageFigureView: ImageFigureView
        },
        getTemplateData_: function() {
            var a = this.model.get("rootPiece"),
            b = a.get("figures"),
            a = a.toJSON();
            a.isEditable = this.currentMode_ === DocumentView.MODES.EDIT;
            a.enableDelete = a.isEditable && a.figures.length >= 2;
            var c = this.model.get("selectedSlide");
            a.figures.forEach(function(a, e) {
                var f = b.at(e);
                a.index = e;
                a.selected = e === c;
                var g = f.get("thumbnailPath") || f.get("image") || f.get("unlabeledImage"),
                f = this.getModelAsset_(f.get("image") || f.get("unlabeledImage"));
                a.thumbnailPath = !g || f && !f.isSaved() ? ScalableImage.getPlaceholderImage() : URLUtils.getImageURL(g, app.getProjectModel(), {
                    width: URLUtils.IMAGE_SIZES.THUMBNAIL_MEDIUM,
                    revision: this.model.get("revision")
                })
            },
            this);
            return a
        },
        getModelAsset_: function(a) {
            var b = this.model.get("filePath");
            if (!b) return null;
            a = URI(b).filename(a).normalizePath().toString();
            return app.getAssetManager().getImageAsset(a)
        },
        getScrollPosition_: function() {
            if (this.codeView_) return this.codeView_.getScrollPosition();
            else {
                this.getContentPane_();
                var a = this.multifigureEl_;
                return ! a ? null: {
                    scrollLeft: a.scrollLeft,
                    scrollTop: a.scrollTop
                }
            }
        },
        onSave_: function() {
            this.model.updateFromXML()
        },
        modelDirtyEvent_: function() {
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model)
        },
        slideDragStartEvent_: function(a, b) {
            a.dataTransfer.effectAllowed = "move";
            this.elemBeingDragged_ = b;
            b.classList.add("dragging");
            this.el.querySelector(".multifigure-slideshow").classList.add("dragging")
        },
        slideDragEndEvent_: function(a, b) {
            this.elemBeingDragged_ = null;
            b.classList.remove("dragging");
            this.el.querySelector(".multifigure-slideshow").classList.remove("dragging")
        },
        slideDropEvent_: function(a) {
            if (this.elemBeingDragged_) {
                var b = this.model.get("rootPiece").get("figures"),
                a = this.findClosestDropTarget_(a.pageX, a.pageY),
                c = parseInt(this.elemBeingDragged_.dataset.index, 10),
                d = a.dataset.insertIndex !== void 0 ? parseInt(a.dataset.insertIndex, 10) : b.length;
                c < d && (d -= 1);
                d !== c && (a = this.model.get("selectedSlide"), a === c ? a = d: a <= d && a > c ? a -= 1 : a >= d && a < c && (a += 1), c = b.at(c), b.remove(c, {
                    silent: !0
                }), d = b.toArray().slice(d), b.remove(d, {
                    silent: !0
                }), b.add([c].concat(d)), this.model.set("selectedSlide", a))
            }
        },
        slideDragOverEvent_: function(a) {
            if (this.elemBeingDragged_) a.preventDefault(),
            a.dataTransfer.dropEffect = "move",
            a = this.findClosestDropTarget_(a.pageX, a.pageY),
            this.el.querySelectorAll(".drop-target").forEach(function(a) {
                a.classList.remove("selected")
            },
            this),
            a.classList.add("selected")
        },
        slideDragLeaveEvent_: function(a) {
            this.elemBeingDragged_ && a.target.classList.contains("multifigure-slideshow") && this.el.querySelectorAll(".drop-target").forEach(function(a) {
                a.classList.remove("selected")
            },
            this)
        },
        findClosestDropTarget_: function(a, b) {
            var c = Infinity,
            d = null;
            this.el.querySelectorAll(".drop-target").forEach(function(e) {
                var f = e.getBoundingClientRect(),
                g = a - (f.left + f.right) / 2,
                f = b - (f.top + f.bottom) / 2,
                g = Math.sqrt(g * g + f * f);
                g < c && (c = g, d = e)
            },
            this);
            return d
        }
    });
    FileDocumentView.registerType_("multifigure", MultiFigureDocumentView);
    window.DefinitionSnippetContentView = SnippetContentView.extend({
        entryModel_: null,
        initialize: function(a) {
            this.entryModel_ = a.entryModel;
            DefinitionSnippetContentView.__super__.initialize.call(this, a)
        },
        getXMLFragment_: function() {
            var a = XMLUtilities.parseFragment(this.model.get("xml"), XMLUtilities.DOCUMENT_TYPE.S9ML);
            if (!a.childNodes.some(function(a) {
                return a.tagName === "text"
            })) {
                var b = XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.S9ML),
                c = b.createElement("text");
                c.appendChild(a);
                var d = b.createElement("title");
                d.appendChild(XMLUtilities.parseFragment(this.entryModel_.get("term"), XMLUtilities.DOCUMENT_TYPE.S9ML));
                a = b.createDocumentFragment();
                a.appendChild(d);
                a.appendChild(c)
            }
            return a
        }
    });
    window.GlossaryRemarksView = Backbone.View.extend({
        events: {
            "click [href]": "clickLinkEvent_"
        },
        model: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.model = a.model;
            this.parentPane_ = a.parentPane;
            this.scrollPosition_ = a.scrollPosition
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.snippetViews_ && this.snippetViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.setElement(Templates["project/document/exhibit/glossaryRemarks"](this.getTemplateData_()));
            var a = this.model.get("rootPiece");
            this.snippetViews_ = this.el.querySelectorAll(".glossary-remarks-entry-popup").map(function(b) {
                var c = a.get(b.dataset.cid);
                if (c instanceof GlossEntryModel) b = new DefinitionSnippetContentView({
                    model: c.get("definition"),
                    parentPane: b,
                    entryModel: c
                });
                else if (c instanceof RemarkModel) b = new SnippetContentView({
                    model: c,
                    parentPane: b
                });
                else {
                    console.error("Unknown entry model type:", c);
                    return
                }
                b.render();
                return b
            },
            this);
            this.parentPane_.appendChild(this.el);
            if (this.scrollPosition_) this.parentPane_.scrollTop = this.scrollPosition_.scrollTop,
            this.parentPane_.scrollLeft = this.scrollPosition_.scrollLeft,
            this.scrollPosition_ = null;
            this.trigger("loaded")
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            GlossaryRemarksView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            return {
                entryRows: this.splitEntriesIntoRows_(this.getEntryTemplates_())
            }
        },
        getEntryTemplates_: function() {
            var a = this.model.get("rootPiece");
            return ! a ? [] : a.map(function(a) {
                return {
                    cid: a.cid,
                    key: a.get("key"),
                    term: a.get("term"),
                    pronunciation: a.get("pronunciation")
                }
            },
            this).sort(function(a, c) {
                var d = a.key && a.key.toLowerCase(),
                e = c.key && c.key.toLowerCase();
                return d < e ? -1 : d > e ? 1 : 0
            })
        },
        splitEntriesIntoRows_: function(a) {
            parseInt(DOMUtils.getComputedStyle(this.parentPane_).width, 10);
            return a.reduce(function(a, c, d) {
                d = Math.floor(d / 2);
                a[d] || (a[d] = {
                    entries: []
                });
                a[d].entries.push(c);
                return a
            },
            [{
                entries: []
            }])
        },
        clickLinkEvent_: function(a, b) {
            a.preventDefault();
            var c = b.getAttribute("href");
            try {
                this.win_.open(this.model.getLinkResolver().resolve(c))
            } catch(d) {
                app.getMessageView().error(d, MessageView.DEFAULT_DISPLAY_TIME)
            }
        }
    });
    window.HotspotTreeView = Backbone.View.extend({
        events: {
            "click .thumbnail [data-cid]": "selectThumbnailEvent_"
        },
        levels_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.win_ = a.window || window;
            this.levels_ = this.buildLevels_();
            this.checkThumbnailsLoaded_ = this.checkThumbnailsLoaded_.bind(this);
            this.render = this.render.bind(this);
            this.win_.addEventListener("resize", this.render)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.cleanup_();
            this.setElement(Templates["project/document/exhibit/figure/hotspotTreeView"]({
                levels: this.levels_
            }));
            this.parentPane_.appendChild(this.el);
            this.el.hide();
            this.loadingThumbnails_ = this.el.querySelectorAll("img");
            this.loadingThumbnails_.forEach(function(a) {
                a.addEventListener("load", this.checkThumbnailsLoaded_)
            },
            this);
            this.checkThumbnailsLoaded_()
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            this.cleanup_();
            this.win_.removeEventListener("resize", this.render);
            HotspotTreeView.__super__.remove.apply(this, arguments)
        },
        checkThumbnailsLoaded_: function() {
            if (this.loadingThumbnails_.every(function(a) {
                return a.complete
            },
            this)) {
                this.el.show();
                var a = this.getThumbnailSize_();
                this.el.querySelectorAll(".level .thumbnail").forEach(function(b) {
                    DOMUtils.setStyles(b, {
                        width: a + "px",
                        height: a + "px"
                    })
                },
                this);
                this.cleanup_();
                this.renderCallouts_();
                this.trigger("loaded")
            }
        },
        cleanup_: function() {
            if (this.loadingThumbnails_) this.loadingThumbnails_.forEach(function(a) {
                a.removeEventListener("load", this.checkThumbnailsLoaded_)
            },
            this),
            this.loadingThumbnails_ = null
        },
        renderCallouts_: function() {
            var a = this.el.querySelector("canvas");
            a.height = this.el.clientHeight;
            a.width = this.el.clientWidth;
            var b = a.getContext("2d");
            b.fillStyle = HotspotTreeView.CALLOUT_FILL_STYLE_;
            this.levels_.forEach(function(a) {
                a.forEach(function(a) {
                    this.renderCallout_(a, b)
                },
                this)
            },
            this)
        },
        renderCallout_: function(a, b) {
            var c = this.el.getBoundingClientRect(),
            d = a.parent;
            if (d) {
                var e = this.el.querySelector('[data-cid="' + a.cid + '"]').getBoundingClientRect(),
                f = e.left - c.left,
                g = e.top - c.top,
                e = f + e.width,
                h = this.el.querySelector('[data-cid="' + d.cid + '"]').getBoundingClientRect(),
                d = h.left - c.left + h.width / 2,
                c = h.top - c.top + h.height / 2;
                b.beginPath();
                b.moveTo(f, g);
                b.lineTo(e, g);
                b.lineTo(d, c);
                b.closePath();
                b.fill()
            }
        },
        getTreeSize_: function() {
            var a = this.levels_.length,
            b = this.levels_.reduce(function(a, b) {
                return Math.max(a, b.length)
            },
            0);
            return {
                depth: a,
                width: b
            }
        },
        getThumbnailSize_: function() {
            var a = this.el.getBoundingClientRect(),
            b = this.getTreeSize_(),
            a = Math.min((a.width - HotspotTreeView.IMAGE_PADDING_HORIZONTAL_) / b.width, (a.height - HotspotTreeView.IMAGE_PADDING_VERTICAL_) / b.depth);
            return Math.round(a)
        },
        buildLevels_: function(a, b, c, d) {
            if (!a) a = this.model;
            c || (c = []);
            d || (d = 0);
            c[d] || (c[d] = []);
            var e = a.getFigure(),
            f = e.toJSON();
            c[d].push({
                cid: a.cid,
                parent: b,
                thumbnailPath: f.previewImg || f.thumbnailPath
            });
            b = (b = e.get("hotspots")) ? b.toArray() : [];
            b.sort(function(a, b) {
                return a.get("frameX") - b.get("frameX")
            });
            b.forEach(function(b) {
                this.buildLevels_(b, a, c, d + 1)
            },
            this);
            return c
        },
        selectThumbnailEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.trigger("thumbnailClicked", this.model.findHotspotByCid_(b.dataset.cid), b))
        }
    });
    HotspotTreeView.CALLOUT_FILL_STYLE_ = "rgba(0, 125, 199, .1)";
    HotspotTreeView.IMAGE_PADDING_VERTICAL_ = 30;
    HotspotTreeView.IMAGE_PADDING_HORIZONTAL_ = 30;
    window.LayeredFigureView = Backbone.View.extend({
        model: null,
        position_: null,
        events: {
            "click .toggle-labels": "toggleLabelsEvent_"
        },
        scaledImage_: null,
        showLabeledImage_: !1,
        revealSingleAnnotation_: !1,
        expandAll_: !1,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.position_ = a.position;
            this.enumerationOverride_ = a.enumerationOverride;
            this.expandAll_ = !!a.expandAll;
            this.revealSingleAnnotation_ = typeof a.revealSingleAnnotation === "undefined" ? !0 : !!a.revealSingleAnnotation
        },
        remove: function() {
            this.activeAnnotation_ && this.activeAnnotation_.set("isActive", !1, {
                silent: !0
            });
            this.scaledImage_ && this.annotationsView_.off("renderComplete", this.scaledImage_.updateContents, this.scaledImage_);
            if (this.hotspotFramesView_) this.hotspotFramesView_.remove(),
            this.hotspotFramesView_ = null;
            this.annotationsView_ && this.annotationsView_.remove();
            if (this.captionView_) this.captionView_.remove(),
            this.captionView_ = null;
            LayeredFigureView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/figure/layeredFigure"](this.getTemplateData_()));
            var a = this.showLabeledImage_ ? ".labeled-image": ".unlabeled-image";
            this.parentPane_.appendChild(this.el);
            var b;
            this.scaledImage_ && (this.scaledImage_.remove(), b = this.scaledImage_.getPosition());
            this.scaledImage_ = new ScalableImage({
                el: this.el.querySelector(".scalable-box"),
                img: this.el.querySelector(a)
            });
            b && this.scaledImage_.setPosition(b);
            this.scaledImage_.on("loaded",
            function() {
                this.trigger("loaded");
                this.position_ && (this.setScrollPosition_(this.position_), delete this.position_)
            },
            this);
            this.scaledImage_.render();
            if (this.model.get("hotspots")) this.hotspotFramesView_ && this.hotspotFramesView_.remove(),
            this.hotspotFramesView_ = new FramesView({
                model: this.model.get("hotspots"),
                parentPane: this.el.querySelector(".scalable-box"),
                scaledImage: this.scaledImage_
            }),
            this.hotspotFramesView_.render();
            a = this.model.get("annotations");
            if (!this.showLabeledImage_ && a) this.annotationsView_ && this.annotationsView_.remove(),
            this.annotationsView_ = new AnnotationsView({
                collection: a,
                parent: this.el.querySelector(".scalable-box"),
                scaledImage: this.scaledImage_,
                revealSingleAnnotation: this.revealSingleAnnotation_
            }),
            this.expandAll_ && a.forEach(function(a) {
                a.set("isActive", !0, {
                    silent: !0
                })
            }),
            this.annotationsView_.render(),
            this.annotationsView_.on("renderComplete", this.scaledImage_.updateContents, this.scaledImage_);
            this.scaledImage_.hideScalable();
            this.captionView_ = new FigureCaptionView({
                model: this.model,
                parentPane: this.el.querySelector(".coordinate-box"),
                requiredAttrs: ["title", "caption"],
                enumerationOverride: this.enumerationOverride_
            });
            this.captionView_.render()
        },
        getScaledImage: function() {
            return this.scaledImage_
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.showLabeledImage = this.showLabeledImage_;
            var b = this.getModelAsset_("unlabeledImage"),
            c = this.getModelAsset_("labeledImage");
            if (!a.unlabeledImage || b && !b.isSaved()) a.unlabeledImage = ScalableImage.getPlaceholderImage();
            if (!a.labeledImage || c && !c.isSaved()) a.labeledImage = ScalableImage.getPlaceholderImage();
            return a
        },
        toggleLabelsEvent_: function() {
            this.showLabeledImage_ = !this.showLabeledImage_;
            this.render()
        },
        setScrollPosition_: function(a) {
            this.parentPane_.scrollLeft = a.scrollLeft;
            this.parentPane_.scrollTop = a.scrollTop
        },
        getModelAsset_: function(a) {
            var b = this.model.getDocumentModel();
            if (!b) return null;
            b = b.get("filePath");
            if (!b) return null;
            a = URI(b).filename(this.model.get(a)).normalizePath().toString();
            return app.getAssetManager().getImageAsset(a)
        }
    });
    window.PlayableVideoView = Backbone.View.extend({
        model: null,
        initialize: function(a) {
            a = a || {};
            this.model.on("change:posterAsset", this.updatePoster_, this);
            this.parentPane_ = a.parentPane
        },
        remove: function() {
            this.model.off("change:posterAsset", this.updatePoster_, this);
            PlayableVideoView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/figure/playableVideoFigure"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            var a = this.el.querySelector("video"),
            b = function() {
                this.trigger("loaded");
                a.classList.remove("hidden");
                a.removeEventListener("loadeddata", b)
            }.bind(this);
            a.addEventListener("loadeddata", b)
        },
        updatePoster_: function() {
            this.el.querySelector("video").poster = this.model.getImagePath()
        },
        getTemplateData_: function() {
            var a = this.model.toJSON(),
            b = this.model.get("videoAsset");
            if (b && b.get("status") === AssetModel.STATUS.COMPLETED) a.src = b.get("encodings")[PlayableVideoView.VIDEO_FORMAT_];
            this.model.get("video") === VideoFigureModel.DEFAULT_SOURCE ? app.getMessageView().hide() : !b && app.getAssetManager().isLoaded("video") && app.getMessageView().error(PlayableVideoView.UNKNOWN_STREAM_MESSAGE);
            return a
        }
    });
    PlayableVideoView.VIDEO_FORMAT_ = "webm_high";
    PlayableVideoView.UNKNOWN_STREAM_MESSAGE = "No video stream available";
    window.QuestionFigureView = Backbone.View.extend({
        model: null,
        position_: null,
        scaledImage_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.position_ = a.position;
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.templateName_ = this.getTemplateName_();
            this.renderName_ = this.getRenderName_()
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement((0, Templates[this.templateName_])(this.getTemplateData_()));
            this.bindLoaded_();
            this.parentPane_.appendChild(this.el);
            this.position_ && (this.setScrollPosition_(this.position_), delete this.position_);
            this.renderCustomFigure_()
        },
        remove: function() {
            this.scaledImage_ && this.scaledImage_.remove();
            QuestionFigureView.__super__.remove.apply(this)
        },
        getScaledImage: function() {
            return this.scaledImage_
        },
        renderCustomFigure_: function() {
            var a = this[this.getRenderName_()];
            typeof a == "function" && a.call(this)
        },
        renderImageFillInFigure_: function() {
            this.scaledImage_ = new ScalableImage({
                el: this.el.querySelector(".scalable-box")
            });
            this.scaledImage_.render()
        },
        renderImageRegionFigure_: function() {},
        bindLoaded_: function() {
            var a = this.el.querySelectorAll("img"),
            b = a.length;
            b === 0 ? this.win_.setTimeout(function() {
                this.trigger("loaded")
            }.bind(this), 1) : a.forEach(function(a, d) {
                var e = function() {
                    d === b - 1 && this.trigger("loaded");
                    a.removeEventListener(e)
                }.bind(this);
                a.addEventListener("load", e)
            },
            this)
        },
        getTemplateData_: function() {
            return this.model.toJSON()
        },
        getTemplateName_: function() {
            var a = this.sliceClassName_();
            return "project/document/exhibit/assessment/" + a
        },
        getRenderName_: function() {
            var a = this.sliceClassName_();
            return a = "render" + StringUtils.capitalize(a) + "_"
        },
        sliceClassName_: function() {
            var a = this.model.className,
            a = a.substring(0, a.indexOf("Model"));
            return a = a.charAt(0).toLowerCase() + a.slice(1)
        },
        setScrollPosition_: function(a) {
            this.parentPane_.scrollLeft = a.scrollLeft;
            this.parentPane_.scrollTop = a.scrollTop
        }
    });
    window.TOCComponentView = Backbone.View.extend({
        events: {
            "click .delete-button": "clickDeleteButtonEvent_",
            "click .restore-button": "clickRestoreButtonEvent_"
        },
        model: null,
        drag_: null,
        draggable_: null,
        cloneView_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            if (this.model) this.model.on("change:isDeleted", this.deletedChangeEvent_, this)
        },
        remove: function() {
            this.model && this.model.off("change:isDeleted", this.deletedChangeEvent_, this);
            this.drag_ && (this.drag_.detach(), this.drag_.cancel());
            TOCComponentView.__super__.remove.call(this)
        },
        deletedChangeEvent_: function(a, b) {
            b ? this.el.classList.add("marked-deleted") : this.el.classList.remove("marked-deleted")
        },
        clickDeleteButtonEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a.stopPropagation(), this.model.set("isDeleted", !0))
        },
        clickRestoreButtonEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a.stopPropagation(), this.model.set("isDeleted", !1))
        },
        getDroppables_: function() {
            return this.doc_.querySelectorAll(TOCComponentView.DROP_SELECTORS_.join(","))
        },
        getCloneView_: function() {
            throw "TOCComponentView.getCloneView_() is an abstract method";
        },
        bindDrag_: function(a) {
            this.drag_ && (this.drag_.detach(), this.drag_.cancel());
            this.draggable_ = a;
            this.drag_ = new Drag.Move(a, {
                snap: TOCComponentView.SNAP_THRESHOLD,
                onEnter: this.onEnter_.bind(this),
                onLeave: this.onLeave_.bind(this),
                onSnap: this.onSnap_.bind(this),
                onDrop: this.onDrop_.bind(this)
            })
        },
        onEnter_: function(a, b) {
            app.trigger("tocEditing:enter", {
                model: this.model,
                target: b
            })
        },
        onLeave_: function(a, b) {
            app.trigger("tocEditing:leave", {
                model: this.model,
                target: b
            })
        },
        onSnap_: function(a) {
            this.cloneView_ = this.getCloneView_();
            this.cloneView_.render();
            this.el.classList.add("mid-flight");
            DOMUtils.insertSibling(this.cloneView_.el, "after", this.el);
            this.cloneView_.el.classList.add("draggable-replacement");
            app.trigger("tocEditing:snap", {
                model: this.model,
                target: a
            });
            this.drag_.droppables = this.getDroppables_()
        },
        onDrop_: function(a, b) {
            app.trigger("tocEditing:drop", {
                model: this.model,
                target: b,
                onSuccess: this.dropSuccess_.bind(this),
                onFailure: this.dropFailure_.bind(this)
            })
        },
        dropSuccess_: function() {
            this.el.classList.remove("mid-flight");
            DOMUtils.setStyles(this.draggable_, {
                top: "auto",
                left: "auto"
            });
            this.cloneView_.remove()
        },
        dropFailure_: function() {
            this.el.classList.remove("mid-flight");
            DOMUtils.setStyles(this.draggable_, {
                top: "auto",
                left: "auto"
            });
            this.cloneView_.remove()
        }
    });
    TOCComponentView.SNAP_THRESHOLD = 10;
    TOCComponentView.DROP_SELECTORS_ = [".drop-target.nest", ".drop-target.insert"];
    window.TOCChapterView = TOCComponentView.extend({
        model: null,
        events: _.extend({},
        TOCComponentView.prototype.events, {
            "click .ui-toggle-triangle": "clickChapterToggleEvent_",
            "click .chapter-info": "clickHeaderEvent_"
        }),
        parentPane_: null,
        exhibitViews_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.exhibitViews_ = [];
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model.on("change:isSelected", this.selectionChangedEvent_, this);
            this.model.on("change:isOpen", this.openChangedEvent_, this);
            this.model.on("change:designation change:enumeration change:title change:sandbox change:thumbnailPath", this.metadataChangeEvent_, this);
            this.model.on("change:exhibits", this.changeExhibitsEvent_, this);
            this.model.get("exhibits").on("add remove reset", this.childrenChangeEvent_, this);
            this.model.get("exhibits").on("add", this.childrenAddEvent_, this);
            TOCChapterView.__super__.initialize.call(this, a)
        },
        render: function() {
            this.removeChildren_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/toc/chapter"](this.getTemplateData_()));
            this.model.get("isOpen") && this.renderChildren_();
            this.bindDrag_(this.el.querySelector(".spine-label"));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.removeChildren_();
            this.model.off("change:isSelected", this.selectionChangedEvent_, this);
            this.model.off("change:designation change:enumeration change:title change:sandbox change:thumbnailPath", this.metadataChangeEvent_, this);
            this.model.off("change:isOpen", this.openChangedEvent_, this);
            this.model.off("change:exhibits", this.changeExhibitsEvent_, this);
            this.model.get("exhibits").off("add remove reset", this.childrenChangeEvent_, this);
            this.model.get("exhibits").off("add", this.childrenAddEvent_, this);
            TOCChapterView.__super__.remove.call(this)
        },
        renderChildren_: function() {
            this.removeChildren_();
            var a = this.el.querySelector(".exhibits");
            this.exhibitViews_ = this.model.get("exhibits").map(function(b) {
                b = new TOCExhibitView({
                    parentPane: a,
                    model: b,
                    window: this.win_,
                    document: this.doc_
                });
                b.render();
                return b
            },
            this)
        },
        removeChildren_: function() {
            this.exhibitViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.exhibitViews_ = []
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.cid = this.model.cid;
            if (!a.designation && !a.enumeration && !a.title) a.title = "Untitled Chapter";
            var b = this.model.get("thumbnailPath");
            if (b) {
                var c = this.getModelAsset_(b);
                c && !c.isSaved() ? a.showThumbnailSpinner = !0 : a.thumbnailPath = URLUtils.getImageURL(b, app.getProjectModel(), {
                    width: URLUtils.IMAGE_SIZES.THUMBNAIL_SMALL
                })
            }
            return a
        },
        dropSuccess_: function() {
            this.remove();
            this.cloneView_.remove()
        },
        getCloneView_: function() {
            return new TOCChapterView({
                parentPane: this.parentPane_,
                model: this.model,
                window: this.win_,
                document: this.doc_
            })
        },
        getModelAsset_: function(a) {
            var b = this.model.getDocumentModel();
            if (!b) return null;
            b = b.get("filePath");
            if (!b) return null;
            a = URI(b).filename(a).normalizePath().toString();
            return app.getAssetManager().getImageAsset(a)
        },
        renderNewMetadata_: function(a) {
            var a = a ? ".chapter-metadata": ".chapter-info",
            b = Templates["project/document/exhibit/toc/chapter"](this.getTemplateData_()),
            c = this.el.querySelector(a);
            DOMUtils.replaceNode(c, b.querySelector(a))
        },
        metadataChangeEvent_: function() {
            var a = !0;
            if (this.model.hasChanged("thumbnailPath")) {
                var a = !1,
                b = this.getModelAsset_(this.model.get("thumbnailPath"));
                if (b && !b.isSaved()) {
                    var c = function(a, e) {
                        e === AssetModel.STATUS.COMPLETED && (b.off("change:status", c, this), this.renderNewMetadata_())
                    };
                    b.on("change:status", c, this)
                }
            }
            this.renderNewMetadata_(a)
        },
        childrenChangeEvent_: function() {
            this.renderChildren_()
        },
        childrenAddEvent_: function() {
            this.ensureOpen_()
        },
        changeExhibitsEvent_: function(a, b) {
            var c = this.model.previous("exhibits");
            c && (c.off("add remove reset", this.childrenChangeEvent_, this), c.off("add", this.childrenAddEvent_, this));
            b && (b.on("add remove reset", this.childrenChangeEvent_, this), b.on("add", this.childrenAddEvent_, this))
        },
        clickChapterToggleEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.set("isOpen", !this.model.get("isOpen")))
        },
        selectionChangedEvent_: function(a, b) {
            this.el.querySelector(".chapter-header").classList.toggle("selected", b)
        },
        openChangedEvent_: function(a, b) {
            b ? this.renderChildren_() : this.removeChildren_();
            b ? this.el.classList.remove("ui-toggle-closed") : this.el.classList.add("ui-toggle-closed")
        },
        ensureOpen_: function() {
            this.model.get("isOpen") || this.model.set("isOpen", !0)
        },
        clickHeaderEvent_: function(a) { ! DOMUtils.isSecondaryClick(a) && a.target.tagName.toLowerCase() !== "a" && (a.stopPropagation(), a.preventDefault(), this.model.set("isSelected", !this.model.get("isSelected")))
        }
    });
    window.TOCExhibitView = TOCComponentView.extend({
        model: null,
        events: _.extend({},
        TOCComponentView.prototype.events, {
            "click .exhibit-header": "clickHeaderEvent_"
        }),
        parentPane_: null,
        exhibitViews_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.exhibitViews_ = [];
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model.on("change:isSelected", this.selectionChangedEvent_, this);
            this.model.on("change:designation change:enumeration change:title", this.metadataChangeEvent_, this);
            this.model.get("exhibits").on("add remove reset", this.childrenChangeEvent_, this);
            TOCExhibitView.__super__.initialize.call(this, a)
        },
        render: function() {
            this.removeChildren_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/toc/exhibit"](this.getTemplateData_()));
            this.renderChildren_();
            this.bindDrag_(this.el.querySelector(".spine-label"));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.removeChildren_();
            this.model.off("change:isSelected", this.selectionChangedEvent_, this);
            this.model.off("change:designation change:enumeration change:title", this.metadataChangeEvent_, this);
            this.model.get("exhibits").off("add remove reset", this.childrenChangeEvent_, this);
            TOCExhibitView.__super__.remove.call(this)
        },
        renderChildren_: function() {
            this.removeChildren_();
            var a = this.el.querySelector(".exhibits");
            this.exhibitViews_ = this.model.get("exhibits").map(function(b) {
                b = new TOCExhibitView({
                    parentPane: a,
                    model: b,
                    window: this.win_,
                    document: this.doc_
                });
                b.render();
                return b
            },
            this)
        },
        removeChildren_: function() {
            this.exhibitViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.exhibitViews_ = []
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.cid = this.model.cid;
            if (!a.isNew && a.path) {
                var b = app.getProjectModel().get("toc").getExhibitMetadata(a.path);
                b && ["designation", "enumeration", "type", "title"].forEach(function(c) {
                    a[c] = b[c]
                },
                this)
            }
            if (!a.designation && !a.enumeration && !a.title) {
                var c = ExhibitDocumentView.getTypeName(this.model.get("type"));
                a.title = "Untitled " + (c || "Exhibit")
            }
            return a
        },
        dropSuccess_: function() {
            this.remove();
            this.cloneView_.remove()
        },
        getCloneView_: function() {
            return new TOCExhibitView({
                parentPane: this.parentPane_,
                model: this.model,
                window: this.win_,
                document: this.doc_
            })
        },
        metadataChangeEvent_: function() {
            var a = Templates["project/document/exhibit/toc/exhibit"](this.getTemplateData_()),
            b = this.el.querySelector(".exhibit-header");
            DOMUtils.replaceNode(b, a.querySelector(".exhibit-header"))
        },
        childrenChangeEvent_: function() {
            this.renderChildren_()
        },
        selectionChangedEvent_: function(a, b) {
            var c = this.el.querySelector(".exhibit-header").classList;
            b ? c.add("selected") : c.remove("selected")
        },
        clickHeaderEvent_: function(a) { ! DOMUtils.isSecondaryClick(a) && a.target.tagName.toLowerCase() !== "a" && (a.stopPropagation(), a.preventDefault(), this.model.set("isSelected", !this.model.get("isSelected")))
        }
    });
    window.TOCTreeView = Backbone.View.extend({
        model: null,
        events: {
            "click .display-option": "clickDisplayOptionEvent_",
            click: "clickEvent_"
        },
        parentPane_: null,
        unitViews_: null,
        dropTargets_: null,
        selection_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.unitViews_ = [];
            this.dropTargets_ = [];
            this.selection_ = this.findInitialSelection_();
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model.on("change", this.modelChangeEvent_, this);
            this.model.get("units").on("add remove reset", this.childrenChangeEvent_, this);
            this.model.on("change:viewMode", this.viewModeChangeEvent_, this);
            app.on("tocEditing:enter", this.onDraggableEnter_, this);
            app.on("tocEditing:leave", this.onDraggableLeave_, this);
            app.on("tocEditing:snap", this.onDraggableSnap_, this);
            app.on("tocEditing:drop", this.onDraggableDrop_, this)
        },
        render: function() {
            this.removeChildren_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/toc/treeView"](this.getTemplateData_()));
            this.renderChildren_();
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.removeChildren_();
            this.model.off("change", this.modelChangeEvent_, this);
            this.model.get("units").off("add remove reset", this.childrenChangeEvent_, this);
            this.model.off("change:viewMode", this.viewModeChangeEvent_, this);
            app.off("tocEditing:enter", this.onDraggableEnter_, this);
            app.off("tocEditing:leave", this.onDraggableLeave_, this);
            app.off("tocEditing:snap", this.onDraggableSnap_, this);
            app.off("tocEditing:drop", this.onDraggableDrop_, this);
            TOCTreeView.__super__.remove.call(this)
        },
        allowNesting: function(a, b) {
            if (!b) return ! 1;
            var c = b.getXMLNode({
                raw: !0
            }).tagName;
            return DOMUtils.getParent(a, ".mid-flight") ? !1 : DOMUtils.getParent(a, ".draggable-replacement") ? !1 : c === "exhibit" && DOMUtils.getParent(a, ".chapter-header") ? !0 : c === "exhibit" && DOMUtils.getParent(a, ".exhibit-header") ? !0 : !1
        },
        allowInsertion: function(a, b) {
            if (!b) return ! 1;
            this.model.get("units");
            var c = b.getXMLNode({
                raw: !0
            }).tagName;
            return DOMUtils.getParent(a, ".mid-flight") ? !1 : DOMUtils.getParent(a, ".draggable-replacement") && c !== "unit" ? !1 : DOMUtils.getParent(a, ".draggable-replacement") && DOMUtils.getParent(a, ".unit-header") ? !1 : DOMUtils.getParent(a, ".exhibit-header") && c === "chapter" ? !1 : DOMUtils.getParent(a, ".ui-toggle-closed .chapter-header") && c === "exhibit" ? !1 : DOMUtils.getParent(a, ".unit-header") && c === "exhibit" ? !1 : DOMUtils.getParent(a, ".exhibit-header") && c === "unit" ? !1 : a.classList.contains("first-unit") && c === "exhibit" ? !1 : !0
        },
        renderChildren_: function() {
            this.removeChildren_();
            var a = this.el.querySelector(".units");
            this.unitViews_ = this.model.get("units").map(function(b) {
                b = new TOCUnitView({
                    parentPane: a,
                    model: b,
                    window: this.win_,
                    document: this.doc_
                });
                b.render();
                return b
            },
            this)
        },
        removeChildren_: function() {
            this.unitViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.unitViews_ = []
        },
        getSelection: function() {
            return {
                model: this.selection_.model,
                type: this.selection_.type
            }
        },
        findInitialSelection_: function() {
            var a = this.model.flattenTypes(),
            b = function(a) {
                return a.get("isSelected")
            },
            c = a.units.find(b),
            d = a.chapters.find(b),
            a = a.exhibits.find(b),
            b = null;
            if (c) b = TOCTreeView.SELECTION.UNIT;
            else if (d) b = TOCTreeView.SELECTION.CHAPTER;
            else if (a) b = TOCTreeView.SELECTION.EXHIBIT;
            return {
                model: c || d || a || null,
                type: b
            }
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.exhibitCount = this.model.flattenTypes().exhibits.length;
            a.showFilenames = a.viewMode === "file";
            return a
        },
        modelDirty_: function() {
            var a = this.model.getDocumentModel();
            a.set("dirtyContent", !0);
            app.getSaveHandler().add(a)
        },
        clickDisplayOptionEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.set("viewMode", b.dataset.option))
        },
        viewModeChangeEvent_: function(a, b) {
            b === "file" ? this.el.classList.add("show-filenames") : this.el.classList.remove("show-filenames")
        },
        clickEvent_: function(a) { ! DOMUtils.isSecondaryClick(a) && !a.target.matchesSelector(".display-info .display-option, a") && (a.preventDefault(), this.selection_.model && this.selection_.model.set("isSelected", !1))
        },
        modelChangeEvent_: function(a) {
            var b = a.changedAttributes() || {};
            if ("isSelected" in b) {
                var c = a.get("isSelected"),
                d = this.selection_.model;
                if (a === d && !c || a !== d && c) {
                    a = c ? a: null;
                    d && d.set("isSelected", !1);
                    d = null;
                    if (a) if (a instanceof TOCExhibitModel) d = TOCTreeView.SELECTION.EXHIBIT;
                    else if (a instanceof TOCChapterModel) d = TOCTreeView.SELECTION.CHAPTER;
                    else if (a instanceof TOCUnitModel) d = TOCTreeView.SELECTION.UNIT;
                    this.selection_.model = a;
                    this.selection_.type = d;
                    this.trigger("selectionChanged", a, d)
                }
            }
            Object.keys(b).filter(function(a) {
                return ["isSelected", "isOpen", "viewMode"].indexOf(a) === -1
            },
            this).length !== 0 && (b = this.model.getDocumentModel(), app.getSaveHandler().add(b), b.set("dirtyContent", !0))
        },
        childrenChangeEvent_: function() {
            this.renderChildren_()
        },
        onDraggableEnter_: function(a) {
            a = a || {};
            this.addHoverClasses_(a.target, a.model)
        },
        onDraggableLeave_: function(a) {
            a = a || {};
            this.removeHoverClasses_(a.target)
        },
        onDraggableSnap_: function(a) {
            a = a || {};
            this.el.dataset.dragging = a.model.getXMLNode({
                raw: !0
            }).tagName
        },
        onDraggableDrop_: function(a) {
            var a = a || {},
            b = a.target,
            c = a.model,
            d = a.onSuccess,
            a = a.onFailure;
            delete this.el.dataset.dragging;
            if (b && b.matchesSelector(".drop-target.insert.first-unit")) {
                if (this.allowInsertion(b, c) && (this.removeHoverClasses_(b), c = this.insertFirstUnit_(c))) {
                    this.modelDirty_();
                    d && d();
                    return
                }
            } else if (b && b.matchesSelector(".drop-target.insert")) {
                if (this.allowInsertion(b, c) && (this.removeHoverClasses_(b), b = this.getModelFromTarget_(b))) if (c = b.insertModel(c)) {
                    this.modelDirty_();
                    d && d();
                    return
                }
            } else if (b && b.matchesSelector(".drop-target.nest") && this.allowNesting(b, c) && (this.removeHoverClasses_(b), b = this.getModelFromTarget_(b))) if (c = b.nestModel(c)) {
                this.modelDirty_();
                d && d();
                return
            }
            a && a()
        },
        getModelFromTarget_: function(a) {
            var b = [];
            for (a.classList.contains("toc-element") || (a = DOMUtils.getParent(a, ".toc-element")); a;) b.unshift(a.dataset.cid),
            a = DOMUtils.getParent(a, ".toc-element");
            for (var a = b.shift(), c = this.model.get("units").get(a); b.length > 0;) a = b.shift(),
            c = (c.get("chapters") || c.get("exhibits")).get(a);
            return c
        },
        addHoverClasses_: function(a, b) {
            var c = DOMUtils.getParent(a, ".spine-common");
            a.matchesSelector(".drop-target.insert") ? this.allowInsertion(a, b) && c.classList.add("insertion-highlight-after") : a.matchesSelector(".drop-target.nest") && this.allowNesting(a, b) && c.classList.add("nesting-highlight")
        },
        removeHoverClasses_: function(a) {
            DOMUtils.getParent(a, ".spine-common").classList.remove("insertion-highlight-before", "insertion-highlight-after", "nesting-highlight")
        },
        insertFirstUnit_: function(a) {
            var b = this.model.get("units"),
            c = b.at(0);
            if (a !== c) {
                if (a.getXMLNode({
                    raw: !0
                }).tagName === "chapter") {
                    if (!c || !c.isBlank()) c = new TOCUnitModel,
                    b.reset([c].concat(b.toArray()));
                    return c.insertModel(a)
                }
                a.removeFromCollection();
                a.set("isForcedVisible", !0);
                if (c && c.isBlank()) {
                    b.remove(c);
                    var d = c.get("chapters").toArray();
                    c.get("chapters").reset();
                    a.get("chapters").add(d)
                }
                b.reset([a].concat(b.toArray()));
                return b
            }
        }
    });
    TOCTreeView.SELECTION = {
        EXHIBIT: "exhibit",
        CHAPTER: "chapter",
        UNIT: "unit"
    };
    window.TOCUnitView = TOCComponentView.extend({
        model: null,
        events: _.extend({},
        TOCComponentView.prototype.events, {
            "click .unit-header": "clickHeaderEvent_"
        }),
        parentPane_: null,
        chapterViews_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.chapterViews_ = [];
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model.on("change:isSelected", this.selectionChangedEvent_, this);
            this.model.on("change:designation change:enumeration change:title", this.metadataChangeEvent_, this);
            this.model.get("chapters").on("add remove reset", this.childrenChangeEvent_, this);
            TOCUnitView.__super__.initialize.call(this, a)
        },
        render: function() {
            this.removeChildren_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/exhibit/toc/unit"](this.getTemplateData_()));
            this.renderChildren_();
            this.bindDrag_(this.el.querySelector(".spine-label"));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.removeChildren_();
            this.model.off("change:isSelected", this.selectionChangedEvent_, this);
            this.model.off("change:designation change:enumeration change:title", this.metadataChangeEvent_, this);
            this.model.get("chapters").off("add remove reset", this.childrenChangeEvent_, this);
            TOCUnitView.__super__.remove.call(this)
        },
        renderChildren_: function() {
            this.removeChildren_();
            var a = this.el.querySelector(".chapters");
            this.chapterViews_ = this.model.get("chapters").map(function(b) {
                b = new TOCChapterView({
                    parentPane: a,
                    model: b,
                    window: this.win_,
                    document: this.doc_
                });
                b.render();
                return b
            },
            this)
        },
        removeChildren_: function() {
            this.chapterViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.chapterViews_ = []
        },
        getCloneView_: function() {
            return new TOCUnitView({
                parentPane: this.parentPane_,
                model: this.model,
                window: this.win_,
                document: this.doc_
            })
        },
        dropSuccess_: function() {
            this.remove();
            this.cloneView_.remove()
        },
        getTemplateData_: function() {
            var a = this.model.toJSON();
            a.cid = this.model.cid;
            if (!a.designation && !a.enumeration && !a.title) a.title = "Untitled Unit";
            return a
        },
        metadataChangeEvent_: function() {
            var a = this.getTemplateData_(),
            b = Templates["project/document/exhibit/toc/unit"](a);
            a.isBlank ? this.el.classList.add("blank") : this.el.classList.remove("blank");
            this.bindDrag_(b.querySelector(".spine-label"));
            a = this.el.querySelector(".unit-header");
            DOMUtils.replaceNode(a, b.querySelector(".unit-header"))
        },
        childrenChangeEvent_: function() {
            this.renderChildren_()
        },
        selectionChangedEvent_: function(a, b) {
            var c = this.el.querySelector(".unit-header");
            c && (b ? c.classList.add("selected") : c.classList.remove("selected"))
        },
        clickHeaderEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.stopPropagation(), a.preventDefault(), this.model.set("isSelected", !this.model.get("isSelected")))
        }
    });
    window.RemarksDocumentView = ExhibitDocumentView.extend({
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            RemarksDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Remarks"
        },
        getDocumentTitle: function() {
            return "Remarks"
        },
        getDefaultMode: function() {
            return DocumentView.MODES.PROOF
        },
        showValidationErrors: function(a) {
            this.setMode_(DocumentView.MODES.EDIT);
            this.codeView_.setValidationErrors(a)
        },
        proof_: function(a) {
            this.glossaryRemarksView_ = new GlossaryRemarksView({
                model: this.model,
                parentPane: this.getContentPane_(),
                scrollPosition: a
            });
            this.loadedListener_ = function() {
                this.trigger("loaded")
            };
            this.glossaryRemarksView_.on("loaded", this.loadedListener_, this);
            this.glossaryRemarksView_.render();
            this.getSidebarPane_().appendChild(Templates["project/document/proofing/noProofingSidebar"]())
        },
        proofRemove_: function() {
            this.glossaryRemarksView_ && (this.loadedListener_ && this.glossaryRemarksView_.off("loaded", this.loadedListener_, this), this.glossaryRemarksView_.remove())
        },
        edit_: function() {
            this.code_()
        },
        editRemove_: function() {
            this.codeRemove_()
        }
    });
    FileDocumentView.registerType_("remarks", RemarksDocumentView);
    window.SliderFigureDocumentView = S9MLDocumentView.extend({
        model: null,
        loaded_: !1,
        proofingView_: null,
        selectedSlideIndex_: null,
        markers_: null,
        sliderView_: null,
        imagePosition_: null,
        keyboard_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.win_ = a.window || window;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            SliderFigureDocumentView.__super__.initialize.call(this, a);
            this.setupKeyboard_()
        },
        getDocumentTypeName: function() {
            return "Slideline"
        },
        getSelection: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            var a = this.markers_[this.selectedSlideIndex_].view;
            return a && a.getScaledImage()
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    right: this.stepRight_.bind(this),
                    left: this.stepLeft_.bind(this)
                })
            })
        },
        createView_: function() {
            this.figureEl_ = Templates["project/document/exhibit/figure/sliderFigure"](this.getTemplateData_());
            this.getContentPane_().appendChild(this.figureEl_);
            var a = this.model.get("rootPiece").get("steps");
            this.markers_ = a.map(function(a, b) {
                return {
                    value: a.get("number"),
                    label: a.get("label"),
                    position: b,
                    view: null,
                    element: null
                }
            });
            var b = this.model.get("rootPiece");
            this.sliderView_ = this.currentMode_ === DocumentView.MODES.EDIT ? new EditableDiscreteSliderView({
                model: this.model.get("rootPiece"),
                parentPane: this.figureEl_.querySelector(".slider-container"),
                markers: this.markers_
            }) : new DiscreteSliderView({
                parentPane: this.figureEl_.querySelector(".slider-container"),
                minValue: b.get("startStep"),
                maxValue: b.get("endStep"),
                startLabel: b.get("startContents"),
                endLabel: b.get("endContents"),
                legend: b.get("legend"),
                markers: this.markers_
            });
            this.sliderView_.on("fractionalChange", this.changeSlider_, this);
            this.sliderView_.on("slideChange", this.slideChangeEvent_, this);
            this.sliderView_.render();
            app.getKeyboardManager().activate(this.keyboard_);
            a = a.at(this.selectedSlideIndex_ === null ? 0 : this.selectedSlideIndex_);
            this.sliderView_.setValue(a.get("number"));
            this.changeSlider_(a.get("number"));
            this.captionView_ && this.captionView_.remove();
            b = {
                model: b,
                parentPane: this.figureEl_
            };
            this.currentMode_ === DocumentView.MODES.EDIT ? (b.contentPane = this.getContentPane_(), this.captionView_ = new EditableFigureCaptionView(b)) : this.captionView_ = new FigureCaptionView(b);
            this.captionView_.render()
        },
        slideChangeEvent_: function(a) {
            if (a || a === 0) this.selectedSlideIndex_ = a,
            this.updateSubExhibitId_();
            this.render()
        },
        removeView_: function() {
            if (this.sidebarView_) this.sidebarView_.remove(),
            this.sidebarView_ = null;
            this.captionView_.remove();
            this.markers_.forEach(function(a) {
                a.view && a.view.remove();
                a.view = null;
                a.element = null
            });
            this.markers_ = [];
            DOMUtils.detachElement(this.figureEl_);
            this.sliderView_.remove();
            this.sliderView_.off("fractionalChange", this.changeSlider_, this);
            this.sliderView_.off("slideChange", this.slideChangeEvent_, this);
            app.getKeyboardManager().remove(this.keyboard_)
        },
        updateSubExhibitList_: function() {
            var a = this.model.get("rootPiece").get("steps"),
            a = a.map(function(a, c) {
                return {
                    title: "Step " + (c + 1),
                    id: XMLUtilities.getS9ID(a.getXMLNode())
                }
            },
            this);
            this.model.set("subExhibits", a)
        },
        updateSubExhibitId_: function() {
            var a = this.selectedSlideIndex_,
            b = this.model.get("subExhibits");
            b && b.length && this.model.set("subExhibitId", b[a].id)
        },
        proof_: function() {
            this.createView_();
            this.updateSubExhibitList_();
            this.updateSubExhibitId_();
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render()
        },
        proofRemove_: function() {
            this.proofingView_.remove();
            this.removeView_()
        },
        edit_: function() {
            this.createView_();
            this.model.get("rootPiece").on("change", this.modelDirtyEvent_, this);
            this.model.get("rootPiece").get("steps").on("add remove", this.modelDirtyEvent_, this);
            app.getSaveHandler().on("save", this.onSave_, this)
        },
        editRemove_: function() {
            this.removeView_();
            this.model.get("rootPiece").off("change", this.modelDirtyEvent_, this);
            this.model.get("rootPiece").get("steps").off("change", this.modelDirtyEvent_, this);
            app.getSaveHandler().off("save", this.onSave_, this);
            this.model.ensureXMLSerialized()
        },
        getTemplateData_: function() {
            return this.model.toJSON()
        },
        changeSlider_: function(a, b, c) {
            b === null ? this.handleSelected_(c) : c === null ? this.handleSelected_(b) : b === c ? this.handleSelected_(a) : this.handleFading_(a, b, c)
        },
        getSlideIdxForValue_: function(a) {
            for (var b = this.model.get("rootPiece").get("steps"), c = 0; c < b.length; c++) if (b.at(c).get("number") === a) return c;
            return null
        },
        handleFading_: function(a, b, c) {
            var d = this.getSlideIdxForValue_(b),
            e = this.markers_[d],
            d = this.loadSlide_(d),
            f = this.getSlideIdxForValue_(c),
            g = this.markers_[f],
            f = this.loadSlide_(f),
            h = c - b,
            b = (a - b) / h,
            a = MathUtils.round((c - a) / h, 3),
            b = MathUtils.round(b, 3);
            e.element.style.opacity = a;
            g.element.style.opacity = b;
            g.view.getScaledImage().setPosition(this.imagePosition_);
            e.view.getScaledImage().setPosition(this.imagePosition_);
            this.setSlidesVisible_([d, f])
        },
        handleSelected_: function(a) {
            var b = this.getSlideIdxForValue_(a),
            a = this.markers_[b],
            c = this.loadSlide_(b);
            this.selectedSlideIndex_ !== null && b != this.selectedSlideIndex_ && a.view.getScaledImage().setPosition(this.imagePosition_);
            this.selectedSlideIndex_ = b;
            this.updateSubExhibitId_();
            a.element.style.opacity = 1;
            this.setSlidesVisible_([c]);
            this.markers_.forEach(function(a) {
                a.view && a.view.unfocus()
            });
            a.view.focus();
            if (this.currentMode_ === DocumentView.MODES.EDIT) {
                this.sidebarView_ && this.sidebarView_.remove();
                b = a.view.getSelectedAnnotations();
                b.reset();
                var d = this.selectedSlideIndex_ || 0,
                d = this.model.get("rootPiece").get("steps").at(d);
                this.sidebarView_ = new EditableExhibitSidebarView({
                    el: this.getSidebarPane_(),
                    model: this.model,
                    annotations: c.get("annotations"),
                    image: c,
                    selectedAnnotations: b,
                    currentSlide: d
                });
                this.sidebarView_.render()
            }
            a.view.isLoaded() && this.trigger("loaded")
        },
        setSlidesVisible_: function(a) {
            for (var b = this.model.get("rootPiece").get("steps"), c, d, e = 0; e < b.length; e++) c = b.at(e),
            d = this.markers_[e],
            a.indexOf(c) >= 0 || d.element && d.element.classList.remove("visible");
            for (e = 0; e < a.length; e++) if (c = a[e], d = this.markers_[this.getSlideIdxForValue_(c.get("number"))], d.element) d.element.classList.add("visible"),
            d.element.style.outline = "1px solid transparent"
        },
        loadSlide_: function(a) {
            app.getMessageView().show("Loading...");
            var b = this.model.get("rootPiece").get("steps"),
            c = b.at(a),
            d = this.markers_[a];
            b.at(this.selectedSlideIndex_);
            if (d.view) return c;
            var a = this.el.querySelector(".slides > div:nth-child(" + (a + 1) + ")"),
            e,
            b = {
                model: c,
                parentPane: a
            };
            e = this.currentMode_ === DocumentView.MODES.EDIT ? new EditableImageFigureView(b) : new ImageFigureView(b);
            e.on("loaded",
            function() {
                this.imagePosition_ = e.getScaledImage().getPosition();
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            e.render();
            e.getScaledImage().on("scale",
            function() {
                this.imagePosition_ = e.getScaledImage().getPosition()
            },
            this);
            d.view = e;
            d.element = a;
            return c
        },
        throttle_: function() {
            this.throttleTimer_ = this.win_.setTimeout(function() {
                this.throttleTimer_ = null
            }.bind(this), SliderFigureDocumentView.THROTTLE_)
        },
        stepLeft_: function(a) {
            a.preventDefault();
            this.throttleTimer_ || (a = this.getSlideIdxForValue_(this.sliderView_.getValue()), this.sliderView_.setValue(this.markers_[a === 0 ? this.markers_.length - 1 : a - 1].value, !0), this.throttle_())
        },
        stepRight_: function(a) {
            a.preventDefault();
            this.throttleTimer_ || (a = this.getSlideIdxForValue_(this.sliderView_.getValue()), this.sliderView_.setValue(this.markers_[a === this.markers_.length - 1 ? 0 : a + 1].value, !0), this.throttle_())
        },
        onSave_: function() {
            this.model.updateFromXML()
        },
        modelDirtyEvent_: function() {
            this.model.set("dirtyContent", !0);
            app.getSaveHandler().add(this.model)
        }
    });
    SliderFigureDocumentView.THROTTLE_ = 250;
    FileDocumentView.registerType_("sliderfigure", SliderFigureDocumentView);
    window.TOCContentDrawerView = Backbone.View.extend({
        collection: null,
        contentTypeViews_: null,
        events: {
            "click .add-files": "addFilesEvent_",
            "click .continue-mapping": "continueMappingEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.contentTypeViews_ = [];
            this.win_ = a.window || window;
            this.doc_ = a.document || document
        },
        render: function() {
            this.setElement(Templates["project/document/exhibit/toc/contentDrawer"]());
            if (this.collection.isLoaded()) this.renderLoaded_();
            else {
                var a = this.el.querySelector(".spinner");
                new WaitFor({
                    waitFor: this.collection,
                    showSpinnerOn: a,
                    whenLoaded: this.renderLoaded_.bind(this)
                })
            }
            this.updateImportOptions_();
            return this.el
        },
        renderLoaded_: function() {
            this.collection.length ? (this.el.classList.add("templates-available"), this.renderStructuralTypes_(), this.renderExhibitTypes_()) : this.el.classList.add("empty-templates")
        },
        renderStructuralTypes_: function() {
            var a = this.el.querySelector("#available-structures"),
            b = new TOCContentTypeView({
                type: "chapter",
                title: "Chapter",
                parentPane: a
            });
            b.render();
            this.contentTypeViews_.push(b);
            a = new TOCContentTypeView({
                type: "unit",
                title: "Unit",
                parentPane: a
            });
            a.render();
            this.contentTypeViews_.push(a)
        },
        renderExhibitTypes_: function() {
            var a = this.el.querySelector("#available-cards");
            this.contentTypeViews_ = this.contentTypeViews_.concat(this.collection.getOrderedLabels().map(function(b) {
                b = new TOCContentTypeView({
                    type: b.type,
                    title: b.title,
                    parentPane: a
                });
                b.render();
                return b
            },
            this))
        },
        remove: function() {
            this.contentTypeViews_.forEach(function(a) {
                a.remove()
            },
            this);
            this.contentTypeViews_ = [];
            TOCContentDrawerView.__super__.remove.call(this)
        },
        addFilesEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getSaveHandler().canNavigateAway() && (a = new ImportFilesPopupView({
                model: app.getProjectModel()
            }), a.render(), a.on("close",
            function() {
                this.updateImportOptions_()
            },
            this)))
        },
        continueMappingEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a) && (a.preventDefault(), app.getSaveHandler().canNavigateAway())) this.win_.location.href = URLRouter.getMapperPath(app.getProjectModel().get("shortName"))
        },
        updateImportOptions_: function() {
            app.getLocalFileStorage().getFileSystem() && (new ImportedPageLoader).hasPages(function(a) {
                this.el.querySelector(".add-files").classList.toggle("hidden", a);
                this.el.querySelector(".continue-mapping").classList.toggle("hidden", !a)
            }.bind(this))
        }
    });
    window.TOCContentTypeView = TOCComponentView.extend({
        model: null,
        title_: null,
        type_: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.type_ = a.type;
            this.title_ = a.title || this.type_;
            this.parentPane_ = a.parentPane;
            TOCContentTypeView.__super__.initialize.call(this, a)
        },
        render: function() {
            this.setElement(Templates["project/document/exhibit/toc/contentType"](this.getTemplateData_()));
            this.bindDrag_(this.el);
            this.parentPane_.appendChild(this.el)
        },
        getTemplateData_: function() {
            return {
                type: this.type_,
                title: this.title_
            }
        },
        onSnap_: function(a) {
            if (this.type_ === "chapter") {
                if (this.model = new TOCChapterModel, this.model.set({
                    thumbnailPath: TOCChapterModel.DEFAULT_THUMBNAIL_PATH,
                    isNew: !0
                }), app.getProjectModel().get("exhibitTemplates").hasTemplate("html")) {
                    var b = new TOCExhibitModel;
                    b.set({
                        type: "html",
                        isNew: !0
                    });
                    this.model.insertModel(b)
                }
            } else this.type_ === "unit" ? (this.model = new TOCUnitModel, this.model.set({
                isNew: !0
            })) : (this.model = new TOCExhibitModel, this.model.set({
                type: this.type_,
                isNew: !0
            }));
            TOCContentTypeView.__super__.onSnap_.call(this, a)
        },
        getCloneView_: function() {
            return new TOCContentTypeView({
                parentPane: this.parentPane_,
                type: this.type_,
                title: this.title_,
                window: this.win_,
                document: this.doc_
            })
        }
    });
    window.TOCDocumentView = S9MLDocumentView.extend({
        contentDrawer_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            TOCDocumentView.__super__.initialize.call(this, a)
        },
        edit_: function() {
            this.contentDrawer_ = new TOCContentDrawerView({
                collection: app.getProjectModel().get("exhibitTemplates")
            });
            var a = this.contentDrawer_.render(),
            b = this.el.querySelector("#content");
            this.el.insertBefore(a, b);
            app.getSaveHandler().on("save", this.onSave_, this);
            this.view_ = new TOCTreeView({
                parentPane: this.getContentPane_(),
                model: this.model.get("rootPiece"),
                window: this.win_,
                document: this.doc_
            });
            this.view_.render();
            this.view_.on("selectionChanged", this.treeModelSelected_, this);
            a = this.view_.getSelection();
            this.renderSidebar_(a.model, a.type);
            this.win_.setTimeout(function() {
                this.trigger("loaded")
            }.bind(this), 1)
        },
        editRemove_: function() {
            this.view_ && (this.view_.off("selectionChanged", this.treeModelSelected_, this), this.view_.remove());
            this.sidebarView_ && this.sidebarView_.remove();
            app.getSaveHandler().off("save", this.onSave_, this);
            this.contentDrawer_.remove();
            this.model.ensureXMLSerialized()
        },
        drawRevisionToggle_: function() {},
        supportsContentToolbar_: function() {
            return ! 1
        },
        addCodeButton_: function() {},
        treeModelSelected_: function(a, b) {
            this.renderSidebar_(a, b)
        },
        renderSidebar_: function(a, b) {
            var c = null;
            switch (b) {
            case TOCTreeView.SELECTION.UNIT:
                c = TOCUnitSidebarView;
                break;
            case TOCTreeView.SELECTION.CHAPTER:
                c = TOCChapterSidebarView;
                break;
            case TOCTreeView.SELECTION.EXHIBIT:
                c = TOCExhibitSidebarView;
                break;
            default:
                c = TOCBookInfoSidebarView,
                a = this.model.get("rootPiece")
            }
            this.sidebarView_ && this.sidebarView_.remove();
            this.sidebarView_ = new c({
                parentPane: this.getSidebarPane_(),
                model: a,
                window: this.win_,
                document: this.doc_
            });
            this.sidebarView_.render()
        },
        onSave_: function(a) {
            var b = this.model.get("project").get("exhibitTemplates");
            if (b.isLoaded()) {
                var c = this.model.get("rootPiece").clone();
                c.applyTransientMetadata(this.model.get("rootPiece").getTransientMetadata());
                c.removeDeletedItems();
                var c = c.flattenTypes(),
                d = c.units;
                d.length === 0 && (a.preventDefault(), app.getMessageView().error("Failed to save because you do not have any chapters", MessageView.DEFAULT_DISPLAY_TIME));
                d.some(function(a) {
                    return a.get("chapters").length === 0
                }) && (a.preventDefault(), app.getMessageView().error("Failed to save because you have an empty unit", MessageView.DEFAULT_DISPLAY_TIME));
                c.chapters.some(function(a) {
                    return a.get("exhibits").length === 0
                }) && (a.preventDefault(), app.getMessageView().error("Failed to save because you have an empty chapter", MessageView.DEFAULT_DISPLAY_TIME));
                c.exhibits.find(function(a) {
                    return a.get("isNew") && !b.hasTemplate(a.get("type"))
                }) && (a.preventDefault(), app.getMessageView().error("Failed to save because you have added an exhibit that has no template", MessageView.DEFAULT_DISPLAY_TIME))
            } else a.preventDefault(),
            app.getMessageView().error("Page templates still loading, please attempt to save again in a minute", MessageView.DEFAULT_DISPLAY_TIME)
        }
    });
    window.VideoFigureDocumentView = S9MLDocumentView.extend({
        model: null,
        loaded_: !1,
        proofingView_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                edit: !0
            });
            VideoFigureDocumentView.__super__.initialize.call(this, a)
        },
        getDocumentTypeName: function() {
            return "Video"
        },
        getSelection: function() {
            return null
        },
        getScalableImage: function() {
            return null
        },
        isLoaded: function() {
            return this.loaded_
        },
        proof_: function() {
            this.showLoading_();
            this.view_ = new VideoFigureView({
                parentPane: this.getContentPane_(),
                model: this.model.get("rootPiece")
            });
            this.view_.render();
            this.view_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.proofingView_ = new ProofingView({
                model: this.model,
                el: this.getContentPane_(),
                contentView: this,
                sidebarPane: this.getSidebarPane_()
            });
            this.proofingView_.render()
        },
        proofRemove_: function() {
            this.view_.remove();
            this.proofingView_.remove()
        },
        edit_: function() {
            this.showLoading_();
            this.editView_ = new EditableVideoFigureView({
                parentPane: this.getContentPane_(),
                model: this.model.get("rootPiece")
            });
            this.editView_.render();
            this.editView_.on("loaded",
            function() {
                this.loaded_ = !0;
                this.trigger("loaded")
            },
            this);
            this.sidebarView_ = new EditableVideoSidebarView({
                parentPane: this.getSidebarPane_(),
                model: this.model
            });
            this.sidebarView_.render()
        },
        editRemove_: function() {
            this.editView_.remove();
            this.sidebarView_.remove();
            this.model.ensureXMLSerialized()
        },
        showLoading_: function() {
            this.loaded_ = !1;
            app.getMessageView().show("Loading...")
        }
    });
    FileDocumentView.registerType_("videofigure", VideoFigureDocumentView);
    window.FetchDocumentView = DocumentView.extend({
        model: null,
        fetchResultsView_: null,
        initialize: function(a) {
            a = a || {};
            a.isSubclass = !0;
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.sidebarForMode_ = _.extend({},
            this.sidebarForMode_, {
                proof: !1
            });
            FetchDocumentView.__super__.initialize.call(this, a)
        },
        getDefaultMode: function() {
            return DocumentView.MODES.PROOF
        },
        proof_: function() {
            var a = this.getContentPane_(),
            b = this.getContentToolbarView_();
            this.fetchResultsView_ = new FetchResultsView({
                model: this.model,
                parentPane: a,
                contentToolbarView: b
            });
            this.fetchResultsView_.on("loaded", this.proxyLoaded_, this);
            this.fetchResultsView_.render()
        },
        proofRemove_: function() {
            this.fetchResultsView_ && (this.fetchResultsView_.off("loaded", this.proxyLoaded_, this), this.fetchResultsView_.remove())
        },
        proxyLoaded_: function() {
            this.trigger("loaded")
        }
    });
    window.FetchResultsView = Backbone.View.extend({
        model: null,
        resultsIframeView_: null,
        contentToolbarView_: null,
        renderedCount_: 0,
        loadMoreEl_: null,
        events: {
            "click .fetch-load-more": "loadMoreLinkClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.model = a.model;
            this.setElement(a.parentPane);
            this.contentToolbarView_ = a.contentToolbarView
        },
        render: function() {
            this.resultsIframeView_ = new ReaderContentView({
                addCSS: this.getProjectCSSFiles_(),
                model: this.model,
                parentPane: this.el,
                contentToolbarView: this.contentToolbarView_,
                disableSelection: !0,
                disableMathPreviews: !0
            });
            this.resultsIframeView_.on("loaded", this.resultViewLoaded_, this);
            this.model.on("change:loaded", this.searchCompletedEvent_, this);
            this.model.on("change:results", this.updateResults_, this);
            this.resultsIframeView_.render();
            DOMUtils.detachElement(this.loadMoreEl_);
            this.loadMoreEl_ = Templates["project/fetch/fetchLoadMore"]();
            this.el.appendChild(this.loadMoreEl_);
            this.setElement(this.el)
        },
        remove: function() {
            this.model.off("change:results", this.updateResults_, this);
            this.model.off("change:loaded", this.searchCompletedEvent_, this);
            this.resultsIframeView_ && (this.resultsIframeView_.off("loaded", this.resultViewLoaded_, this), this.resultsIframeView_.remove());
            DOMUtils.detachElement(this.loadMoreEl_);
            this.undelegateEvents()
        },
        resetRenderedCount_: function() {
            this.renderedCount_ = 0
        },
        resultViewLoaded_: function() {
            this.resetRenderedCount_();
            this.model.search();
            this.resultsIframeView_.setBodyStyle("margin-left", FetchResultsView.FETCH_MARGIN_)
        },
        searchCompletedEvent_: function() {
            if (this.model.get("loaded")) {
                this.model.get("moreResults") ? this.loadMoreEl_.classList.add("more-results") : this.loadMoreEl_.classList.remove("more-results");
                if (this.model.get("results").length === 0) {
                    var a = this.model.get("error");
                    a ? app.getMessageView().error(a) : app.getMessageView().show("No Results Found")
                }
                this.trigger("loaded")
            }
        },
        updateResults_: function() {
            var a = this.model.get("results");
            Array.isArray(a) && (a = a.slice(this.renderedCount_), a.forEach(function(a) {
                this.handleResult_(a)
            },
            this), this.renderedCount_ += a.length)
        },
        handleResult_: function(a) {
            var b = this.model.get("queryType"),
            c = a.content;
            this.resultsIframeView_.adopt(this.createSeparator_(a.path, a.id));
            b === "regex" ? (a = document.createElement("div"), a.innerText = c) : (a = (this.resultsIframeView_.getIframeDocument() || this.doc_).createElement("div"), a.innerHTML = URLUtils.rewriteImageTags(this.model.get("projectModel"), c), a = a.children[0], a = this.escapeInvisibles_(a));
            this.resultsIframeView_.adopt(a)
        },
        escapeInvisibles_: function(a) { ["title", "head", "meta"].some(function(b) {
                return a.tagName.toLowerCase() === b ? !0 : (b = a.getElementsByTagName(b)) && b.length > 0
            }) && (a = DOMUtils.createElement("div", {
                text: a.outerHTML,
                doc: this.doc_
            }));
            return a
        },
        createSeparator_: function(a, b) {
            var c = this.model.get("projectModel").get("shortName"),
            c = URLRouter.getFilePath(c, a, void 0, {
                s9id: b
            });
            return Templates["project/fetch/fetchSeparator"]({
                path: ExhibitDocumentModel.getSourceLocationFromPath(a),
                url: c
            })
        },
        getProjectCSSFiles_: function() {
            var a = this.model.get("projectModel");
            if (!a) return null;
            var a = a.get("shortName"),
            b = ReaderContentView.getIframeCSS();
            return [FileDocumentModel.url(a, RepositoryLayout.CSS_MAIN_PATH)].concat(b)
        },
        loadMoreLinkClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.model.get("moreResults") && this.model.search())
        }
    });
    FetchResultsView.FETCH_MARGIN_ = "20px";
    window.FileListView = Backbone.View.extend({
        model: null,
        directoryListing_: null,
        events: {
            "click [data-path]": "selectFileEvent_",
            "click .file-list-directory > .ui-entry-item": "toggleDirectoryEvent_",
            "click .upload-icon": "uploadFileEvent_",
            "change .file-input": "filesSelectedEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.directoryListing_ = a.directoryListing;
            this.listenTo(this.directoryListing_, "loaded", this.render)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/fileList"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el)
        },
        getEmptyMessage: function() {
            return ""
        },
        getFileURL_: function(a) {
            return URLRouter.getThemePath(this.model.get("shortName"), a)
        },
        getDirectoryPath_: function() {
            console.error("Programming Error: You should extend FileListView and implement getDirectoryPath_.")
        },
        getTemplateData_: function() {
            return {
                entries: this.getFileTree_(),
                emptyMessage: this.getEmptyMessage()
            }
        },
        getFileTree_: function() {
            return this.generateTree_(this.directoryListing_.map(function(a) {
                return {
                    filePath: a.get("filePath"),
                    relativePath: a.get("relativePath"),
                    url: this.getFileURL_(a.get("filePath")),
                    fileName: a.get("relativePath")
                }
            },
            this))
        },
        trimLeaves_: function(a, b, c) {
            var d = {};
            b.forEach(function(b) {
                var f = FileListView.LEADING_DIR_RE_.exec(b.fileName);
                f ? (f = f[1], d[f] || (d[f] = []), d[f].push(b), b.fileName = b.fileName.replace(FileListView.LEADING_DIR_RE_, "")) : (a.push(b), b.indentation = c * FileListView.INDENTATION)
            });
            return d
        },
        sortDirectory_: function(a) {
            return a.sort(function(a, c) {
                return ! a.isDirectory && !c.isDirectory ? a.fileName < c.fileName ? -1 : 1 : a.isDirectory && c.isDirectory ? a.dirName < c.dirName ? -1 : 1 : a.isDirectory ? -1 : 1
            })
        },
        generateTree_: function(a, b, c) {
            var d = [],
            b = b || 0,
            c = c || "",
            e = this.trimLeaves_(d, a, b);
            Object.keys(e).forEach(function(a) {
                var g = c + "/" + a,
                h = this.generateTree_(e[a], b + 1, g),
                a = {
                    dirName: a,
                    dirPath: g,
                    isDirectory: !0,
                    canUpload: /^(?:assets|images?|img|ui)$/.test(a),
                    entries: h,
                    indentation: b * FileListView.INDENTATION
                };
                d.push(a)
            },
            this);
            return this.sortDirectory_(d)
        },
        selectFileEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.trigger("fileSelect", b.dataset.path))
        },
        toggleDirectoryEvent_: function(a, b) {
            a.target.matchesSelector(".upload-icon, .file-input") || DOMUtils.getParent(a.target, ".upload-icon") || b.parentElement.classList.toggle("directory-collapsed")
        },
        uploadFileEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || DOMUtils.getSibling(b, ".file-input").click()
        },
        filesSelectedEvent_: function(a, b) {
            app.getMessageView().show("Uploading files...");
            var c = this.getDirectoryPath_(DOMUtils.getParent(b, ".file-list-directory").dataset.dirPath);
            FileUploader.uploadFiles(b.files, c).then(function() {
                app.getMessageView().show("Files uploaded successfully", FileListView.SUCCESS_DURATION_);
                this.directoryListing_.fetch()
            }.bind(this)).fail(function(a) {
                app.getMessageView().error(a, FileListView.ERROR_DURATION_)
            })
        }
    });
    FileListView.INDENTATION = 1;
    FileListView.ERROR_DURATION_ = 1E4;
    FileListView.SUCCESS_DURATION_ = 5E3;
    FileListView.LEADING_DIR_RE_ = /^([^\/]+)\//;
    window.FocusModeControlView = Backbone.View.extend({
        shortName_: null,
        parentPane_: null,
        currentState_: null,
        selector_: null,
        events: {
            "click #focus-button": "clickButtonEvent_",
            "click #focus-selector": "clickSelectorEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.shortName_ = a.shortName;
            this.reset(!0)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/focusModeControl"](this.getTemplate_()));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            FocusModeControlView.__super__.remove.apply(this, arguments)
        },
        getCurrentState: function() {
            return this.currentState_
        },
        getCurrentSelector: function() {
            return this.selector_
        },
        reset: function(a) {
            this.currentState_ = FocusModeControlView.STATES.START;
            this.selector_ = null;
            a || (this.render(), this.trigger("stateChange", this.currentState_))
        },
        updateSelector: function(a) {
            if (! (this.currentState_ !== FocusModeControlView.STATES.IN_FOCUS_MODE && this.currentState_ !== FocusModeControlView.STATES.HAVE_SELECTOR) && this.selector_ !== a) {
                var b = this.currentState_;
                this.currentState_ = FocusModeControlView.STATES.HAVE_SELECTOR;
                this.selector_ = a;
                this.render();
                this.currentState_ !== b && this.trigger("stateChange", this.currentState_)
            }
        },
        setSelectorClickable: function() {
            if (this.currentState_ === FocusModeControlView.STATES.HAVE_SELECTOR) this.currentState_ = FocusModeControlView.STATES.SELECTOR_ENABLED,
            this.render(),
            this.trigger("stateChange", this.currentState_)
        },
        getTemplate_: function() {
            return {
                inFocusMode: this.currentState_ !== FocusModeControlView.STATES.START,
                selectorClickable: this.currentState_ === FocusModeControlView.STATES.SELECTOR_ENABLED,
                selector: this.selector_
            }
        },
        clickButtonEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            this.currentState_ === FocusModeControlView.STATES.START ? (this.currentState_ = FocusModeControlView.STATES.IN_FOCUS_MODE, this.render(), this.trigger("stateChange", this.currentState_)) : this.reset()
        },
        clickSelectorEvent_: function(a) {
            if (this.currentState_ === FocusModeControlView.STATES.SELECTOR_ENABLED && !DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            a = this.selector_,
            this.reset(),
            this.win_.open(URLRouter.getFetchPath(this.shortName_, {
                queryType: FetchDocumentModel.QUERY_TYPES.SELECTOR,
                query: a || ""
            }), "_blank")
        }
    });
    FocusModeControlView.STATES = {
        START: "START",
        IN_FOCUS_MODE: "IN_FOCUS_MODE",
        HAVE_SELECTOR: "HAVE_SELECTOR",
        SELECTOR_ENABLED: "SELECTOR_ENABLED"
    };
    window.ForbiddenView = Backbone.View.extend({
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.doc_ = a.document || document
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["landing/forbidden"]());
            this.parentPane_.appendChild(this.el);
            app.getMessageView().hide();
            this.doc_.body.classList.add("forbidden")
        },
        remove: function() {
            this.doc_.body.classList.remove("forbidden");
            ForbiddenView.__super__.remove.apply(this, arguments)
        }
    });
    window.FormView = Backbone.View.extend({
        keyboard_: null,
        events: {
            "click input, button": "clickEvent_",
            submit: "submitEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                el: this.el,
                bindings: app.getKeyboardResolver().resolve({
                    done: this.doneEvent_.bind(this),
                    enter: this.doneEvent_.bind(this)
                })
            });
            app.getKeyboardManager().activate(this.keyboard_)
        },
        remove: function() {
            app.getKeyboardManager().remove(this.keyboard_)
        },
        clickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                var c = b.tagName.toLowerCase(),
                d = b.getAttribute("type");
                if (c !== "input" || _.contains(["button", "submit"], d)) a.preventDefault(),
                d === "submit" ? this.trigger("submit") : this.trigger("cancel")
            }
        },
        submitEvent_: function(a) {
            a.preventDefault()
        },
        doneEvent_: function(a) {
            var b = a.target.tagName.toLowerCase(),
            c = a.target.getAttribute("type"),
            d = a.target.getAttribute("contentEditable") === "true";
            if (_.contains(["input", "button", "textarea", "select"], b) || d) if (! ((b === "textarea" || d) && a.shortcut === "enter") && c !== "file") a.preventDefault(),
            b === "button" && c !== "submit" || b === "input" && c === "button" ? this.trigger("cancel") : this.trigger("submit")
        }
    });
    window.HTMLBlockDragView = DragView.extend({
        initialize: function(a) { (a.onEnter || a.onLeave) && console.warn("Programming warning: onEnter and onLeave events are in beta and may not work expectedly with our nearest-neighbor algorithm.");
            HTMLBlockDragView.__super__.initialize.call(this, a)
        },
        rewriteTargetData_: function(a, b, c) {
            var d = this.getNearestElement_(a.target, b, c),
            b = this.getElementCoordinates_(d, b, c);
            return _.extend({},
            a, b, {
                target: d
            })
        },
        getNearestElement_: function(a, b, c) {
            return a.tagName.toLowerCase() === "html" && (a = a.querySelector("body"), !a) ? null: this.isContainer_(a) ? this.findNearestChildOf_(a, b, c) : a
        },
        isContainer_: function(a) {
            return Array.prototype.slice.call(a.children).some(function(a) {
                return this.isValidTarget_(a)
            },
            this)
        },
        isValidTarget_: function(a) {
            if (HTMLContent.isCategory(HTMLContent.CATEGORY.PHRASING, a)) return ! 1;
            a = a.getBoundingClientRect();
            return ! a.width || !a.height ? !1 : !0
        },
        findNearestChildOf_: function(a, b, c) {
            var a = Array.prototype.slice.call(a.children),
            a = a.filter(function(a) {
                return this.isValidTarget_(a)
            },
            this),
            d = null,
            e = null;
            a.forEach(function(a) {
                var g = this.shortestDistanceToElement_(a, b, c);
                if (e === null || g < e) e = g,
                d = a
            },
            this);
            return d
        },
        shortestDistanceToElement_: function(a, b, c) {
            a = this.getPointsForMeasuringDistances_(a).map(function(a) {
                return this.computeDistance_(b, c, a[0], a[1])
            },
            this);
            return Math.min.apply(Math, a)
        },
        getPointsForMeasuringDistances_: function(a) {
            var b = a.getBoundingClientRect(),
            c = [[b.left, b.top], [b.right, b.top], [b.right, b.bottom], [b.left, b.bottom]];
            this.getInnerIntervalsFromRange_(b.left, b.right, HTMLBlockDragView.DISTANCE_BETWEEN_EDGE_POINTS_).forEach(function(a) {
                c.push([a, b.top], [a, b.bottom])
            });
            this.getInnerIntervalsFromRange_(b.top, b.bottom, HTMLBlockDragView.DISTANCE_BETWEEN_EDGE_POINTS_).forEach(function(a) {
                c.push([b.left, a], [b.right, a])
            });
            return c
        },
        getInnerIntervalsFromRange_: function(a, b, c) {
            var d = a < b ? 1 : -1,
            e = Math.abs(b - a),
            b = e / c;
            e % c !== 0 && (b = Math.floor(b) + 1, c = e / b);
            for (var e = [], f = 1; f < b; f++) e.push(a + d * f * c);
            return e
        },
        computeDistance_: function(a, b, c, d) {
            return Math.sqrt(Math.pow(c - a, 2) + Math.pow(d - b, 2))
        }
    });
    HTMLBlockDragView.DISTANCE_BETWEEN_EDGE_POINTS_ = 50;
    window.ImportFilesPopupView = PopupView.extend({
        events: {
            "click .popup-close-button": "closePopupEvent_",
            "drop .drop-zone": "uploaderDropEvent_",
            "dragover .drop-zone": "uploaderDragEvent_",
            "dragleave .drop-zone": "uploaderDragLeaveEvent_",
            "dragover *": "generalDragEvent_",
            "drop *": "generalDropEvent_",
            "click .choose-files": "chooseFilesEvent_",
            "click .choose-directory": "chooseDirectoryEvent_",
            "change .file-input": "filesSelectedEvent_",
            "change .directory-input": "filesSelectedEvent_",
            "click .open-mapper": "openMapperEvent_",
            "click .upload-files": "uploadFilesEvent_",
            "click .start-over": "startOverEvent_",
            "click a.learn-mapper": "clickLearnMapperEvent_"
        },
        model: null,
        pages_: null,
        fileErrors_: null,
        progressModel_: null,
        progressView_: null,
        poptipView_: null,
        useMapper_: !1,
        initialize: function(a) {
            a = a || {};
            a.className = "import-add-files-popup";
            a.removeOnClose = !0;
            a.maskVisible = !0;
            a.setHeight = !0;
            ImportFilesPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/importFilesPopup"](a));
            if (this.progressView_) this.progressView_.remove(),
            this.progressView_ = null;
            if (this.poptipView_) this.poptipView_.remove(),
            this.poptipView_ = null;
            if (a.hasProgress) this.progressView_ = new ProgressBarView({
                model: this.progressModel_,
                parentPane: this.el.querySelector(".progress")
            }),
            this.progressView_.render();
            ImportFilesPopupView.__super__.render.call(this);
            this.open();
            var b = this.el.querySelector(".xhtml-def"),
            c = this.el.querySelector(".mapper-def");
            if (b) this.poptipView_ = new InlinePoptipView({
                anchor: b,
                parentPane: this.el,
                el: Templates["project/poptips/xhtml"]({
                    xhtmlURL: a.xhtmlReferenceURL
                })
            }),
            this.poptipView_.render();
            else if (c) this.poptipView_ = new InlinePoptipView({
                anchor: c,
                parentPane: this.el,
                el: Templates["project/poptips/mapper"]({
                    learnMoreURL: a.learnMoreMapperURL
                })
            }),
            this.poptipView_.render()
        },
        remove: function() {
            this.progressView_ && this.progressView_.remove();
            this.poptipView_ && this.poptipView_.remove();
            ImportFilesPopupView.__super__.remove.call(this)
        },
        close: function() {
            if (!this.pages_) return ImportFilesPopupView.__super__.close.call(this);
            this.win_.confirm("Are you sure you want to skip the import process?") && (app.getMessageView().show("Removing imported files"), (new PageImporter).deleteExistingFiles(function() {
                app.getMessageView().hide();
                ImportFilesPopupView.__super__.close.call(this)
            }.bind(this)))
        },
        getTemplateData_: function() {
            var a = this.fileErrors_ || [];
            return {
                hasPages: !!this.pages_,
                hasProgress: !!this.progressModel_,
                useMapper: this.useMapper_,
                fileErrors: a,
                fileErrorCount: a.length,
                fileErrorPlural: a.length > 1,
                inputDirectoryAttribute: BrowserFeatures.getFileInputDirectoryAttribute(),
                standardsURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/3ea7a2f5269840818a52b73f28b22ce2/b465c5730559455c94da9d84f9b238a8"),
                learnMoreMapperURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/f0bd03ad84d84e6792dd19290fc6209a/a61b00b4e00847d8bc6e61fe54b32343"),
                xhtmlReferenceURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/3ea7a2f5269840818a52b73f28b22ce2/737729b3826a4ab8bc39f799086efe35")
            }
        },
        setHasProgress_: function(a) {
            this.progressModel_ = a ? new ProgressBarModel: null;
            this.popupClosable_ = !a
        },
        closePopupEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.close())
        },
        uploaderDropEvent_: function(a, b) {
            if (!_.contains(a.dataTransfer.types, "Files")) return ! 1;
            b.classList.remove("drag-over");
            this.importFilesFromDrop_(a.dataTransfer)
        },
        uploaderDragEvent_: function(a, b) {
            _.contains(a.dataTransfer.types, "Files") && b.classList.add("drag-over")
        },
        uploaderDragLeaveEvent_: function(a, b) { (!b.contains(a.toElement) || a.toElement === b) && b.classList.remove("drag-over")
        },
        generalDropEvent_: function(a) {
            a.preventDefault()
        },
        generalDragEvent_: function(a) {
            a.preventDefault()
        },
        chooseFilesEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), b.disabled || this.el.querySelector(".file-input").click())
        },
        chooseDirectoryEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), b.disabled || this.el.querySelector(".directory-input").click())
        },
        filesSelectedEvent_: function(a, b) {
            this.useMapper_ = !0;
            this.importFiles_(b.files)
        },
        importFilesFromDrop_: function(a) {
            app.getLocalFileStorage().readAllFilesFromDataTransfer(a).then(function(a) {
                return app.getLocalFileStorage().convertFileEntries(a)
            }).then(function(a) {
                this.importFiles_(a)
            }.bind(this)).done()
        },
        importFiles_: function(a) {
            app.getLocalFileStorage().setup({
                success: function() {
                    this.setHasProgress_(!0);
                    this.render();
                    var b = Date.now(); (new PageImporter).importFiles(a, this.filesImported_.bind(this, b),
                    function(a) {
                        this.progressModel_.set("progress", a)
                    }.bind(this))
                }.bind(this),
                noPermission: function() {
                    this.win_.alert("Importing files requires permanent storage in order to work correctly. Try again and provide Habitat with permission.");
                    this.render()
                }.bind(this),
                incognitoMode: function() {
                    this.win_.alert("It looks like you are in Chrome's Incognito Mode, which is not supported when importing. Please open a normal browser window.");
                    this.close()
                }.bind(this)
            })
        },
        filesImported_: function(a, b, c, d, e) {
            this.setHasProgress_(!1);
            if (b) {
                this.pages_ = b;
                this.fileErrors_ = c;
                b = d.map(function(a) {
                    return a.filePath
                },
                this);
                d = c.map(function(a) {
                    return a.filePath
                },
                this);
                ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.IMPORT_FILES_SELECTED,
                    eventInfo: {
                        shortName: this.model.get("shortName"),
                        useMapper: this.useMapper_,
                        wasEpub: !!e,
                        filesAccepted: b,
                        filesRejected: d,
                        acceptedFileCount: b.length,
                        rejectedFileCount: d.length,
                        elapsedTime: Date.now() - a
                    }
                });
                if (e) this.useMapper_ = !1;
                c.length || this.useMapper_ ? this.render() : this.uploadFiles_()
            } else(new PageImporter).deleteExistingFiles(function() {
                this.win_.alert("You must select at least one valid XHTML file to import");
                this.render()
            }.bind(this))
        },
        openMapperEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) a.preventDefault(),
            this.win_.location.href = URLRouter.getMapperPath(this.model.get("shortName"))
        },
        uploadFilesEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.uploadFiles_())
        },
        uploadFiles_: function() {
            this.setHasProgress_(!0);
            this.render();
            app.getMessageView().hide();
            var a = app.getProjectModel(); (new ImportedPageUploader).save(this.pages_, a,
            function(b) {
                if (b === ImportedPageUploader.STATUS.SUCCESS) app.getMessageView().show("Upload successful", MessageView.DEFAULT_DISPLAY_TIME),
                this.pages_ = null,
                (new PageImporter).deleteExistingFiles(function() {
                    a.fetchLatestRevision();
                    this.close();
                    this.win_.location.reload()
                }.bind(this)),
                ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.IMPORT_FILES_UPLOADED,
                    eventInfo: {
                        shortName: this.model.get("shortName"),
                        viaMapper: !1
                    }
                });
                else {
                    var c = "Upload failed, please try again";
                    b === ImportedPageUploader.STATUS.TOC_FAILURE && (c = "Upload failed because another user updated the table of contents during upload, please try again");
                    app.getMessageView().show(c);
                    this.setHasProgress_(!1);
                    this.render()
                }
            }.bind(this),
            function(a) {
                this.progressModel_.set("progress", a.progress)
            }.bind(this))
        },
        startOverEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a) && (a.preventDefault(), !b.disabled)) this.fileErrors_ = this.pages_ = null,
            this.useMapper_ = !1,
            this.render(),
            app.getMessageView().show("Removing previous import"),
            (new PageImporter).deleteExistingFiles(function() {
                app.getMessageView().hide()
            }.bind(this))
        },
        clickLearnMapperEvent_: function() {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.MAPPER_INTRO_ACTION,
                eventInfo: {
                    shortName: this.model.get("shortName"),
                    action: ImportFilesPopupView.ANALYTICS_ACTIONS_.LINK_CLICKED,
                    link: ImportFilesPopupView.ANALYTICS_LINKS_.INFO
                }
            })
        }
    });
    ImportFilesPopupView.CONVERTER_PLUGIN_PATH_ = "/converter/indesign.mxp";
    ImportFilesPopupView.ANALYTICS_ACTIONS_ = {
        DOWNLOAD: "download",
        LINK_CLICKED: "infoLinkClicked"
    };
    ImportFilesPopupView.ANALYTICS_LINKS_ = {
        INTRO: "intro",
        INFO: "info",
        PLUGIN_TIPS: "pluginTips"
    };
    window.InAppLoginPopupView = PopupView.extend({
        initialize: function(a) {
            a = _.extend({
                closable: !1,
                maskVisible: !0,
                removeOnClose: !0,
                className: "inapp-login-popup"
            },
            a);
            InAppLoginPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            var a = app.getSaveHandler().isSaveRequired();
            this.setElement(Templates["common/inAppLoginPopup"]({
                unsavedChanges: a
            }));
            InAppLoginPopupView.__super__.render.call(this);
            this.open();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.submitEvent_);
            this.focus()
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            InAppLoginPopupView.__super__.remove.apply(this, arguments)
        },
        submitEvent_: function() {
            var a = this.el.querySelector("#username").value,
            b = this.el.querySelector("#password").value;
            app.getMessageView().show("Signing in...");
            app.getAuthenticator().signIn(a, b, this.signinSuccess_.bind(this), this.signinFailure_.bind(this))
        },
        signinSuccess_: function() {
            app.getMessageView().show("Signed in");
            this.close()
        },
        signinFailure_: function() {
            var a = this.el.querySelector("#username");
            a.value === "" ? a.focus() : this.el.querySelector("#password").focus()
        }
    });
    window.InlinePoptipView = AnchoredPopupView.extend({
        initialize: function(a) {
            a = a || {};
            a = _.extend({
                createMask: !1,
                className: "",
                anchorAlignmentPoint: {
                    x: 0.5,
                    y: 1
                },
                popupAlignmentPoint: {
                    x: 0.5,
                    y: 0
                }
            },
            a);
            a.className = "inline-poptip-view " + a.className;
            InlinePoptipView.__super__.initialize.call(this, a);
            this.anchorClickEventBound_ = this.anchorClickEvent_.bind(this);
            this.parentClickEventBound_ = this.parentClickEvent_.bind(this);
            this.popupAnchorEl_.addEventListener("click", this.anchorClickEventBound_, !1);
            this.parentPane_.addEventListener("click", this.parentClickEventBound_, !1)
        },
        remove: function() {
            this.popupAnchorEl_.removeEventListener("click", this.anchorClickEventBound_, !1);
            this.parentPane_.removeEventListener("click", this.parentClickEventBound_, !1);
            InlinePoptipView.__super__.remove.call(this)
        },
        anchorClickEvent_: function(a) {
            a.preventDefault();
            this.toggle()
        },
        parentClickEvent_: function(a) { ! this.el.contains(a.target) && !this.popupAnchorEl_.contains(a.target) && this.close()
        }
    });
    window.LoginView = Backbone.View.extend({
        parentPane_: null,
        events: {
            "click .forgot-password a": "forgotPasswordClickEvent_",
            "click .signup a": "signupClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.auth_ = a.auth;
            this.parentPane_ = a.parentPane;
            app.getMessageView().title("Login - Inkling Habitat");
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["landing/login"]());
            var a = this.getSavedUsername_();
            if (a) this.el.querySelector("#username").value = a;
            this.parentPane_.appendChild(this.el);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.submitForm_);
            /^\/resetpassword\/?/.test(this.win_.location.pathname) ? this.openResetPasswordPopup_() : this.el.querySelector("#username").focus()
        },
        remove: function() {
            this.form_ && this.form_.remove();
            this.detachMessageView_();
            LoginView.__super__.remove.apply(this, arguments)
        },
        openResetPasswordPopup_: function() {
            app.getRouter().navigate("resetpassword");
            this.detachMessageView_();
            var a = new ResetPasswordPopupView({
                username: this.el.querySelector("#username").value
            });
            a.render();
            var b = function() {
                app.getRouter().navigate("login");
                a.off("close", b, this)
            };
            a.on("close", b, this)
        },
        forgotPasswordClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.openResetPasswordPopup_())
        },
        signupClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getRouter().navigate("signup", {
                trigger: !0
            }))
        },
        submitForm_: function() {
            var a = this.el.querySelector("#username").value,
            b = this.el.querySelector("#password").value;
            CookieUtils.write("username", a, {
                path: "/",
                duration: 7
            });
            this.el.querySelector('[type="submit"]').value = "Signing In...";
            this.auth_.signIn(a, b, this.signinSuccess_.bind(this), this.signinFailure_.bind(this));
            this.attachMessageView_()
        },
        signinSuccess_: function(a) {
            this.win_.location.href = a.get("habitatUser") ? this.getRedirectURL_() || "/dashboard": "/register"
        },
        signinFailure_: function(a, b) {
            this.el.querySelector('[type="submit"]').value = "Sign In";
            var c = this.el.querySelector("#password");
            c.value = "";
            var d = this.el.querySelector("#username");
            d.value.trim() === "" ? d.focus() : c.focus();
            c = this.el.querySelector(".error-message");
            b === "InvalidCredentials" || b === "InvalidEmailAddress" || b === "PasswordNotSet" ? c.classList.add("floating") : c.classList.remove("floating")
        },
        getRedirectURL_: function() {
            if (!/redirect=/.test(this.win_.location.search)) return null;
            var a = this.win_.location.search.match(/redirect=([^\&]+)/);
            if (!a || a.length < 2) return null;
            a = decodeURIComponent(a[1]) + this.win_.location.hash;
            return /^https?:\/\/(?:habitat|docs|developer|svn|atc)(?:-[a-z]+)?\.inkling\.com(?:\/.*)?$/.test(a) ? a: (console.error("Not redirecting to unknown URL:", a), null)
        },
        getSavedUsername_: function() {
            return CookieUtils.read("username")
        },
        attachMessageView_: function() {
            var a = app.getMessageView();
            a.hide();
            a.preventClickHides();
            a.setElement(this.el.querySelector(".error-message"))
        },
        detachMessageView_: function() {
            var a = app.getMessageView();
            a.hide();
            a.allowClickHides();
            a.setDefaultElement()
        }
    });
    window.GroupView = Backbone.View.extend({
        initialize: function(a) {
            a = a || {};
            this.document_ = a.document || document;
            this.window_ = a.window || window;
            var a = app.getMapperView().getPageView().getDOMDocument(),
            b = a.querySelector("#groupButton");
            b && b.addEventListener("mousedown", this.groupButtonPressed_.bind(this)); (b = a.querySelector(".group-button-handle")) && b.addEventListener("mousedown", this.groupButtonPressed_.bind(this)); (a = a.querySelector("#mergeButton")) && a.addEventListener("mousedown", this.mergeButtonPressed_.bind(this))
        },
        groupIntoNewParent: function(a, b, c, d, e) {
            b = typeof b !== "undefined" ? b: !1;
            d = typeof d !== "undefined" ? d: !0; (typeof a !== "undefined" ? a: 1) && app.getMapperView().getUndoView().addUndo("undo new parent", "undo_new_parent");
            var f = [],
            a = app.getBookModel();
            a.get("search").get("results").getEnabled().forEach(function(a) {
                if (!this.alreadyGrouped_(a.get("chunk"))) {
                    var c = a.get("page").get("xml").createElementNS(XHTML_NS, GroupView.DEFAULT_PARENT_TAG_);
                    c.setAttribute("s9id", e || UUID());
                    c.setAttribute("x-grouped", !0);
                    c.setAttribute("class", GroupView.DEFAULT_PARENT_CSS_CLASS_);
                    b && c.setAttribute("x-temporary", !0);
                    f.push(c);
                    a.get("chunk")[0].parentNode.insertBefore(c, a.get("chunk")[0]);
                    a.get("chunk").forEach(function(a) {
                        a.parentNode.removeChild(a);
                        c.appendChild(a)
                    })
                }
            }.bind(this));
            var g = a.get("selection"),
            h = a.get("currentPage").get("xml"),
            g = g.get("singleElem") || g.get("multiple")[0],
            i = h.querySelector('[s9id="' + g + '"]').parentNode.getAttribute("s9id");
            f.forEach(function(a) {
                a.removeAttribute("x-grouped")
            });
            a.get("pages").updateFromXML();
            a.get("search").clear();
            if (d) {
                var l = app.getMapperView().getPageView();
                l.redrawPage(null, i,
                function() {
                    var a = l.getDOMDocument(),
                    b = a.querySelector('[s9id="' + i + '"]').dataset.tagRef,
                    a = a.querySelector('[data-elem-ref="' + b + '"]');
                    l.getSelectionView().selectTag(a);
                    c && c()
                })
            } else c && c()
        },
        groupButtonPressed_: function(a) {
            var b = app.getMapperView().getPageView(),
            c = b.getSelectionView();
            c.showSelectionButtons();
            var a = DOMUtils.getParent(a.target, "#selectionButtons").dataset.selectionButtonsElemS9id,
            b = b.getDOMDocument(),
            a = b.querySelector('[s9id="' + a + '"]'),
            d = Templates.groupToolbarTemplate(),
            e = a.getBoundingClientRect(),
            f = this.document_.querySelector("#currentDocument").contentWindow,
            g = b.querySelector("body"),
            h = f.getComputedStyle(g),
            i = parseInt(h.marginLeft, 10),
            h = parseInt(h.marginTop, 10);
            d.style.left = e.left + f.pageXOffset - i + "px";
            d.style.top = e.top + f.pageYOffset - h + "px";
            d.style.width = e.width + "px";
            a !== g ? a.parentNode.insertBefore(d, a) : a.insertBefore(d, g.firstChild);
            b.querySelector("#groupCancelButton").addEventListener("mousedown", c.showSelectionButtons.bind(c));
            b.querySelector("#groupIntoNewParentButton").addEventListener("mousedown",
            function() {
                this.groupIntoNewParent(!0)
            }.bind(this));
            b.querySelector("#groupIntoNewCardButton").addEventListener("mousedown", this.groupIntoNewCard_.bind(this));
            b.querySelector("#groupBySplittingButton").addEventListener("mousedown", this.groupBySplitting_.bind(this))
        },
        groupIntoNewCard_: function() {
            var a = app.getBookModel().get("search").get("results").getEnabled();
            if (a.length) {
                var b = app.getMapperView().getUndoView();
                a.length === 1 ? b.addUndo("undo group into single new page", "undo_group_into_single_new_card") : b.addUndo("undo group into multiple new pages", "undo_group_into_multiple_new_cards");
                a.forEach(function(a) {
                    var b = a.get("page").get("filePath");
                    this.groupIntoSingleCard_(this.generateFilePath_(b, "new_card"), a.get("chunk"), b)
                },
                this);
                a = app.getMapperView().getPageView();
                a.redrawPage();
                a.computeQuality()
            }
        },
        groupIntoSingleCard_: function(a, b, c) {
            var d = app.getBookModel(),
            c = d.get("pages").get(c),
            e = c.get("xml"),
            f = "";
            e.querySelectorAll('link[rel~="stylesheet"]').forEach(function(a) {
                f += a.outerHTML + "\n"
            });
            var g = '<?xml version="1.0" encoding="utf-8"?>\n<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n<head>' + f + "</head>\n",
            h;
            typeof b === "string" ? (b.indexOf("<body") === -1 && (g += "<body>\n"), g += b, g.indexOf("</html>") === -1 && (g += "</html>"), h = XMLUtilities.serializeDocument(e), h = h.replace(b, "")) : (b.forEach(function(a) {
                g.indexOf("<body") === -1 && (g += "<body>\n");
                g += a.outerHTML;
                a = a.getAttribute("s9id");
                a = e.querySelector('[s9id="' + a + '"]');
                a.parentNode.removeChild(a)
            }), h = XMLUtilities.serializeDocument(e));
            h.indexOf("</body>") === -1 && (h += "</body></html>");
            h = (new HTMLSanitizer).importHTML(h, {
                whitelist: !1
            });
            c.set("content", h);
            c.updateFromContent();
            g = g.replace(/selectedElem/g, "");
            g.indexOf("</body>") === -1 && (g += "</body>\n</html>");
            g = (new HTMLSanitizer).importHTML(g, {
                whitelist: !1
            });
            a = new ImportedPageModel({
                filePath: a,
                content: g
            });
            a.addTracking();
            d.get("pages").add(a)
        },
        groupBySplitting_: function() {
            app.getMapperView().getUndoView().addUndo("undo group by splitting", "undo_group_by_splitting");
            for (var a = app.getBookModel(), b = a.get("search").get("results").getEnabled(), c = 0; c < b.length; c++) {
                for (var d = b[c], e = d.get("page"), f = this.generateFilePath_(e.get("filePath"), "split"), g = d.get("chunk")[0], h = null, i = b[c + 1]; i && g.contains(i.get("chunk")[0]);) b.splice(c + 1, 1),
                i = b[c + 1];
                var l = i ? i.get("page").get("filePath") : null,
                d = d.get("page").get("filePath");
                i && l === d && (h = i.get("chunk")[0]);
                e = e.get("content");
                i = this.findCut_(e, g.getAttribute("s9id"));
                h = h ? this.findCut_(e, h.getAttribute("s9id")) : e.length;
                if (i === null) console.warn(d + ": Unable to find start cut for splitting for: ", g);
                else if (h = e.substring(i, h), h !== "") e = e.replace(h, ""),
                g = this.balanceContent_(g.parentNode, e, h),
                e = g.pageStr,
                h = g.newPageStr,
                e = (new HTMLSanitizer).importHTML(e, {
                    whitelist: !1
                }),
                g = a.get("pages").get(d),
                g.set("content", e),
                g.updateFromContent(),
                g.addTracking(),
                this.groupIntoSingleCard_(f, h, d)
            }
            a.get("search").clear();
            app.getMapperView().getPageView().redrawPage()
        },
        generateFilePath_: function(a, b) {
            for (var c = app.getBookModel().get("pages"), d = 0;; d++) {
                var e = FileUtils.generateNewFilePath(a, b, d);
                if (!c.get(e)) return e
            }
        },
        mergeButtonPressed_: function() {
            app.getMapperView().getUndoView().addUndo("undo merge", "undo_merge");
            var a = [],
            b = app.getBookModel();
            b.get("search").get("results").getEnabled().forEach(function(b) {
                if (!this.alreadyGrouped_(b.get("chunk"))) {
                    var d = b.get("page").get("xml"),
                    e = d.createElementNS(XHTML_NS, "p");
                    e.setAttribute("s9id", UUID());
                    e.setAttribute("x-finished", !0);
                    e.setAttribute("x-grouped", !0);
                    a.push(e);
                    b.get("chunk")[0].parentNode.insertBefore(e, b.get("chunk")[0]);
                    b.get("chunk").forEach(function(a) {
                        a.parentNode.removeChild(a);
                        var b = d.createElementNS(XHTML_NS, "span");
                        b.setAttribute("s9id", a.getAttribute("s9id"));
                        b.setAttribute("x-finished", !0);
                        a.hasAttribute("class") && b.setAttribute("class", a.getAttribute("class"));
                        b.innerHTML = a.innerHTML;
                        e.appendChild(b)
                    })
                }
            }.bind(this));
            a.forEach(function(a) {
                a.removeAttribute("x-grouped")
            });
            b.get("pages").updateFromXML();
            b.get("search").clear();
            app.getMapperView().getPageView().redrawPage()
        },
        findCut_: function(a, b) {
            var c = a.indexOf('s9id="' + b + '"');
            if (c === -1) return null;
            for (; c >= 0 && a.charAt(c) !== "<";) c--;
            return c
        },
        alreadyGrouped_: function(a) {
            var b = !1;
            a.forEach(function(a) {
                if (!b) for (a = a.parentNode; a && a.nodeType === Node.ELEMENT_NODE;) {
                    if (a.getAttribute("x-grouped")) {
                        b = !0;
                        break
                    }
                    a = a.parentNode
                }
            });
            return b
        },
        balanceContent_: function(a, b, c) {
            for (var d = [], e = []; a && a.nodeType === Node.ELEMENT_NODE && a.tagName.toLowerCase() !== "html";) {
                var f = a.cloneNode(!1);
                f.setAttribute("s9id", UUID());
                d.push(f.outerHTML.replace(/\s*<\/[^>]+>\s*/, ""));
                e.push(f.outerHTML.replace(/\s*<[a-z][^>]+>\s*/i, ""));
                a = a.parentNode
            }
            d = d.reverse().join("\n");
            e = e.join("\n");
            c = (d + c).replace(/.*?(<body)/, "$1");
            c = c.replace(/\s*<\/html>/, "");
            this.isUnbalanced_(c) && (c += e);
            this.isUnbalanced_(b) && (b += e + "\n</html>");
            return {
                pageStr: b,
                newPageStr: c
            }
        },
        isUnbalanced_: function(a) {
            var b = (a.match(/<[^?!>\/][^>]*?\/>/g) || []).length,
            b = (a.match(/<[^?!>\/][^>]*?>/g) || []).length - b,
            a = (a.match(/<\/[^>]+?>/g) || []).length;
            return b - a !== 0
        }
    });
    GroupView.DEFAULT_PARENT_TAG_ = "div";
    GroupView.DEFAULT_PARENT_CSS_CLASS_ = "container";
    window.MapperView = Backbone.View.extend({
        searchResultsView_: null,
        pageSelectorView_: null,
        toolbarView_: null,
        pageView_: null,
        initialize: function(a) {
            a = a || {};
            this.window_ = a.window || window;
            this.document_ = a.document || document
        },
        render: function() {
            this.toolbarView_ = new ToolbarView({
                parentEl: this.document_.querySelector(".top-bar-container")
            });
            this.toolbarView_.render();
            this.pageView_ = new PageView
        },
        getPageView: function() {
            return this.pageView_
        },
        getUndoView: function() {
            return this.toolbarView_.getUndoView()
        },
        onBookLoaded: function() {
            if (!this.searchResultsView_) this.searchResultsView_ = new SearchResultsView({
                container: this.document_.querySelector("#searchResultsContainer")
            });
            if (!this.pageSelectorView_) this.pageSelectorView_ = new PageSelectorView,
            this.pageSelectorView_.render()
        },
        getSearchResultsView: function() {
            return this.searchResultsView_
        },
        getPageSelectorView: function() {
            return this.pageSelectorView_
        }
    });
    window.PageSelectorView = Backbone.View.extend({
        currentPage_: null,
        events: {
            change: "onFileChangeEvt_"
        },
        initialize: function(a) {
            a = a || {};
            this.document_ = a.document || document;
            this.debouncedRender_ = _.debounce(this.render, PageSelectorView.RENDER_WAIT_DURATION_);
            this.setElement(this.document_.querySelector("#pageSelector"));
            this.listenToBook_();
            app.getMapperModel().on("change:book", this.onBookChanged_, this)
        },
        render: function() {
            this.el.innerHTML = "";
            var a = app.getBookModel();
            if (a) {
                var b = a.get("currentPage");
                a.get("pages").getGroupings().forEach(function(a) {
                    var d = this.document_.createElement("optgroup");
                    d.setAttribute("label", a.title);
                    a.pages.forEach(function(a) {
                        var c = "";
                        b && b.get("filePath") === a.get("filePath") && (c = "selected");
                        a = a.get("filePath");
                        d.insertAdjacentHTML("beforeend", "<option " + c + ">" + a + "</option>")
                    });
                    this.el.appendChild(d)
                },
                this)
            }
        },
        onFileChangeEvt_: function(a) {
            a = a.target.value.trim();
            a = app.getBookModel().get("pages").get(a);
            app.getMapperView().getPageView().changePage(a)
        },
        onBookChanged_: function() {
            var a = app.getMapperModel().previous("book");
            a && a.off("change:currentPage", this.render, this);
            app.getBookModel() && this.listenToBook_();
            this.render()
        },
        onPagesChanged_: function() {
            var a = app.getBookModel().previous("pages");
            a && a.off("add remove", this.debouncedRender_, this);
            app.getBookModel().get("pages").on("add remove", this.debouncedRender_, this)
        },
        listenToBook_: function() {
            var a = app.getBookModel();
            a.on("change:currentPage", this.render, this);
            a.on("change:pages", this.onPagesChanged_, this);
            this.onPagesChanged_()
        }
    });
    PageSelectorView.RENDER_WAIT_DURATION_ = 100;
    window.PageView = Backbone.View.extend({
        tagLayoutView_: null,
        tagDraggingView_: null,
        domDocument_: null,
        qualityView_: null,
        onIframeLoaded_: null,
        selectionView_: null,
        pageNumberViews_: null,
        initialize: function(a) {
            a = a || {};
            this.document_ = a.document || document;
            this.windowLocation_ = a.windowLocation || window.location;
            this.pageNumberViews_ = [];
            this.ignoreLinkClicks_ = this.ignoreLinkClicks_.bind(this);
            this.tagLayoutView_ = new TagLayoutView({
                mapperModel: app.getMapperModel()
            });
            this.tagDraggingView_ = new TagDraggingView({
                book: app.getBookModel(),
                mapperModel: app.getMapperModel()
            });
            this.qualityView_ = new QualityView({
                container: this.document_.querySelector(".progress-wrapper")
            })
        },
        getDOMDocument: function() {
            return this.domDocument_
        },
        setDOMDocument: function(a) {
            this.domDocument_ = a
        },
        getSelectionView: function() {
            return this.selectionView_
        },
        getTagLayoutView: function() {
            return this.tagLayoutView_
        },
        computeQuality: function() {
            this.qualityView_.render()
        },
        changePage: function(a, b) {
            var c = app.getBookModel();
            c.get("currentPage") !== a && c.set("currentPage", a);
            c.set("currentPattern", null);
            c.get("selection").clear();
            c.get("search").clear();
            this.cleanupPageNumbers_(); (c = this.getDOMDocument()) && c.defaultView.removeEventListener("click", this.ignoreLinkClicks_, !0);
            this.onIframeLoaded_ = function() {
                this.prepareFileIframe_();
                b && b()
            }.bind(this);
            this.document_.querySelector("#currentDocument").addEventListener("load", this.onIframeLoaded_);
            this.writeIntoIFrame_(a)
        },
        redrawPage: function(a, b, c) {
            var d = isNaN(a) || a === null ? this.domDocument_.body.scrollTop: a;
            this.changePage(app.getBookModel().get("currentPage"),
            function() {
                this.domDocument_.body.scrollTop = b ? this.domDocument_.querySelector('[data-elem-s9id="' + b + '"]').offsetTop - 10 : d;
                c && c()
            }.bind(this))
        },
        updateShadowTags: function() {
            var a = this.getDOMDocument().querySelectorAll(".shadowTag");
            a.forEach(function(a) {
                a.classList.remove("shadowTag")
            });
            for (var a = app.getBookModel(), b = a.get("currentPage"), a = a.get("search").get("results").getByPage(b), b = 0; b < a.length; b++) {
                var c = a[b];
                if (!c.get("enabled")) break;
                for (var c = c.get("chunk"), d = 0; d < c.length; d++) this.tagLayoutView_.getTagWithS9ID(c[d].getAttribute("s9id")).classList.add("shadowTag")
            }
        },
        updateShadowTag: function(a, b) {
            var c = this.tagLayoutView_.getTagWithS9ID(a);
            b ? c.classList.add("shadowTag") : c.classList.remove("shadowTag")
        },
        relayout: function() {
            this.pageNumberViews_.forEach(function(a) {
                a.reposition()
            })
        },
        writeIntoIFrame_: function(a) {
            var a = a.clone(),
            b = a.get("xml"),
            c = b.getElementsByTagNameNS(XHTML_NS, "head")[0],
            a = a.get("localFileURL").replace(/[^\/]*$/, ""),
            d = b.createElementNS(XHTML_NS, "base");
            d.setAttribute("href", a);
            c.childNodes.length ? c.insertBefore(d, c.childNodes[0]) : c.appendChild(d);
            a = b.createElementNS(XHTML_NS, "link");
            a.setAttribute("rel", "stylesheet");
            a.setAttribute("type", "text/css");
            a.setAttribute("href", URLUtils.expand("{+staticHost}/css/mapper_iframe.css"));
            c.appendChild(a);
            b = XMLUtilities.serializeDocument(b);
            c = this.document_.querySelector("#currentDocument").contentDocument;
            c.open();
            c.write(b);
            c.close()
        },
        prepareFileIframe_: function() {
            var a = this.document_.querySelector("#currentDocument");
            a.removeEventListener("load", this.onIframeLoaded_);
            Hacks.forceCorrectIframeScrollbars(a);
            this.selectionView_ && this.selectionView_.remove();
            Patches.patchDOM(a.contentWindow);
            a = a.contentDocument;
            this.setDOMDocument(a);
            this.tagLayoutView_.render();
            this.tagDraggingView_.render();
            a.defaultView.addEventListener("click", this.ignoreLinkClicks_, !0);
            this.selectionView_ = new SelectionView;
            this.computeQuality();
            this.drawPageNumbers_()
        },
        ignoreLinkClicks_: function(a) {
            var b = a.target; (b.matchesSelector("a:not(.s9-habitat-mapper-ui)") || DOMUtils.getParent(b, "a:not(.s9-habitat-mapper-ui)")) && a.preventDefault()
        },
        drawPageNumbers_: function() {
            var a = this.getDOMDocument(),
            b = {},
            c = null,
            d = a.querySelectorAll("*[sourcepage]:not(.s9-habitat-mapper-ui)").map(function(a) {
                if (HTMLContent.hasPageNumber(a)) {
                    var d = a.getAttribute("sourcepage"),
                    e = c !== null && c !== d;
                    if (!b[d] || e) return b[d] = !0,
                    c = d,
                    {
                        pageNumber: d,
                        element: a
                    }
                }
            },
            this),
            e = a.querySelector("body");
            d.forEach(function(a) {
                a && (a = new PageNumberView({
                    parentPane: e,
                    number: a.pageNumber,
                    block: a.element,
                    type: PageNumberView.TYPE_FIRST
                }), a.render(), this.pageNumberViews_.push(a))
            },
            this)
        },
        cleanupPageNumbers_: function() {
            this.pageNumberViews_.forEach(function(a) {
                a.remove()
            });
            this.pageNumberViews_ = []
        }
    });
    window.QualityView = Backbone.View.extend({
        container_: null,
        percentage_: 0,
        initialize: function(a) {
            a = a || {};
            this.document_ = a.document || document;
            this.container_ = a.container
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = {
                total: 0,
                finished: 0
            };
            app.getBookModel().get("pages").forEach(function(b) {
                b = b.get("xml");
                a.total += b.querySelectorAll("body *").length;
                a.finished += b.querySelectorAll("body *[x-finished=true]").length
            });
            a.percentage = Math.round(a.finished / a.total * 100);
            if (isNaN(a.percentage)) a.percentage = 100;
            this.percentage_ = a.percentage;
            this.setElement(Templates["mapper/qualityView"](a));
            this.container_.appendChild(this.el)
        },
        getPercentage: function() {
            return this.percentage_
        }
    });
    window.RemoveView = Backbone.View.extend({
        initialize: function(a) {
            a = a || {};
            this.document_ = a.document || document;
            app.getMapperView().getPageView().getDOMDocument().querySelector("#removeButton").addEventListener("mousedown", this.removeButtonPressed_.bind(this))
        },
        removeButtonPressed_: function(a) {
            var b = app.getMapperView().getPageView(),
            c = b.getSelectionView();
            c.showSelectionButtons();
            var a = DOMUtils.getParent(a.target, "#selectionButtons").dataset.selectionButtonsElemS9id,
            b = b.getDOMDocument(),
            a = b.querySelector('[s9id="' + a + '"]'),
            d = Templates["mapper/removeToolbarTemplate"](),
            e = a.getBoundingClientRect(),
            f = this.document_.querySelector("#currentDocument").contentWindow,
            g = b.querySelector("body"),
            h = f.getComputedStyle(g),
            i = parseInt(h.marginLeft, 10),
            h = parseInt(h.marginTop, 10);
            d.style.left = e.left + f.pageXOffset - i + "px";
            d.style.top = e.top + f.pageYOffset - h + "px";
            d.style.width = e.width + "px";
            a !== g ? a.parentNode.insertBefore(d, a) : a.insertBefore(d, g.firstChild);
            b.querySelector("#removeCancelButton").addEventListener("mousedown", c.showSelectionButtons.bind(c));
            b.querySelector("#removeEverythingButton").addEventListener("mousedown", this.removeEverything_.bind(this));
            b.querySelector("#removeJustParentButton").addEventListener("mousedown", this.removeJustParent_.bind(this))
        },
        removeEverything_: function() {
            app.getMapperView().getUndoView().addUndo("undo remove everything", "undo_remove_everything");
            var a = app.getBookModel();
            a.get("search").get("results").getEnabled().forEach(function(a) {
                a.get("chunk").forEach(function(a) {
                    a.parentNode.removeChild(a)
                })
            });
            a.get("pages").updateFromXML();
            a.get("search").clear();
            app.getMapperView().getPageView().redrawPage()
        },
        removeJustParent_: function() {
            app.getMapperView().getUndoView().addUndo("undo remove just parent", "undo_remove_just_parent");
            var a = app.getBookModel();
            a.get("search").get("results").getEnabled().forEach(function(a) {
                var c = a.get("page").get("xml"),
                d = c.createElementNS(XHTML_NS, "div");
                a.get("chunk")[0].parentNode.insertBefore(d, a.get("chunk")[0]);
                var e = c.createDocumentFragment();
                a.get("chunk").forEach(function(a) {
                    if (a.parentNode) {
                        for (; a.firstChild;) {
                            var b = a.firstChild;
                            a.removeChild(b);
                            e.appendChild(b)
                        }
                        a.parentNode.removeChild(a)
                    }
                });
                DOMUtils.replaceNode(d, e)
            });
            a.get("pages").updateFromXML();
            a.get("search").clear();
            app.getMapperView().getPageView().redrawPage()
        }
    });
    window.SearchResultsView = Backbone.View.extend({
        container_: null,
        expanded_: null,
        selectNone_: null,
        shorten_: null,
        book_: null,
        enabled_: null,
        currentSearchPage_: 0,
        renderedResults_: null,
        events: {
            "click .searchResult:not(.newResult)": "toggleSearchResultCheckboxEvt_",
            "click .newResult": "selectByFileEvt_",
            "click .selectAll": "selectAllEvt_",
            "click .selectNone": "selectNoneEvt_",
            "click .shorten": "shortenEvt_",
            "click .searchResult .filename": "gotoFileEvt_",
            "click .nextResults": "nextSearchPageEvt_",
            "click .prevResults": "prevSearchPageEvt_"
        },
        initialize: function(a) {
            this.container_ = a.container;
            this.document_ = a.document || document;
            this.enabled_ = this.expanded_ = !0;
            this.shorten_ = this.selectNone_ = !1;
            a = app.getBookModel();
            a.get("search").on("change:results", this.render, this);
            this.book_ = a;
            app.getMapperModel().on("change:book", this.onBookChanged_, this)
        },
        clear: function() {
            DOMUtils.detachElement(this.el);
            this.enabled_ = !0;
            this.currentSearchPage_ = 0
        },
        render: function() {
            this.enabled_ = !0;
            DOMUtils.detachElement(this.el);
            var a = this.reorderResults_(),
            a = this.sliceSearchResults_(a),
            b = this.book_.get("search").get("results"),
            c = b.length > SearchResultsView.SEARCH_WINDOW_SIZE_,
            d = Math.ceil(b.length / SearchResultsView.SEARCH_WINDOW_SIZE_),
            a = {
                expanded: this.expanded_,
                numResults: b.length,
                results: a,
                shorten: this.shorten_,
                hasSearchPages: c,
                currentSearchPage: this.currentSearchPage_ + 1,
                totalSearchPages: d,
                hasPrevSearchPage: this.currentSearchPage_ > 0,
                hasNextSearchPage: this.currentSearchPage_ !== d - 1
            },
            a = this.rewriteImagePaths_(a),
            a = Templates["mapper/search/searchResultsTemplate"](a);
            this.container_.appendChild(a);
            this.setElement(a);
            a = app.getMapperView().getPageView();
            a.getDOMDocument() && a.updateShadowTags();
            d = d > 1; ! d && this.selectNone_ ? this.selectNoneEvt_() : d && this.selectNone_ && !this.renderedResults_ && this.selectNoneEvt_();
            this.renderedResults_ = !0
        },
        isExpanded: function() {
            return this.expanded_
        },
        expand: function() {
            this.expanded_ = !0;
            this.render()
        },
        collapse: function() {
            this.expanded_ = !1;
            this.render()
        },
        disable: function() {
            this.el.querySelectorAll('.selectSearchResult input[type="checkbox"]').forEach(function(a) {
                a.setAttribute("disabled", !0)
            });
            this.enabled_ = !1
        },
        reorderResults_: function() {
            var a = this.book_.get("selection"),
            b = this.book_.get("search").get("results"),
            c = [],
            d = [],
            e = [],
            f;
            b.forEach(function(b) {
                var b = b.toJSON(),
                h = b.chunk[0].getAttribute("s9id");
                b.page === f ? b.childResult = !0 : b.newResult = !0;
                a.isSelected(h) ? (b.actualResult = !0, c.push(b)) : b.page === this.book_.get("currentPage") ? (b.shadowResult = !0, b.childResult = !0, d.push(b)) : e.push(b);
                f = b.page;
                b.fileName = b.page.getFileName();
                b.filePath = b.page.get("filePath");
                b.fileClass = b.fileName.split(".")[0]
            },
            this);
            return b = c.concat(d).concat(e)
        },
        sliceSearchResults_: function(a) {
            var b = this.currentSearchPage_ * SearchResultsView.SEARCH_WINDOW_SIZE_;
            return a = a.slice(b, b + SearchResultsView.SEARCH_WINDOW_SIZE_)
        },
        toggleSearchResultCheckboxEvt_: function(a) {
            if (this.enabled_) {
                a = a.target;
                a.classList.contains("searchResult") || (a = DOMUtils.getParent(a, ".searchResult"));
                var b = a.querySelector('.selectSearchResult input[type="checkbox"]');
                if (b) b.checked = !b.checked,
                this.searchResultClicked_(a)
            }
        },
        selectByFileEvt_: function(a) {
            if (this.enabled_) a = a.target,
            a = a.classList.contains("searchResult") ? a: DOMUtils.getParent(a, ".searchResult"),
            this.el.querySelectorAll(".searchResult.file_" + a.dataset.searchFilenameSet).forEach(function(a) {
                var c = a.querySelector('.selectSearchResult input[type="checkbox"]');
                c.checked = !c.checked;
                this.searchResultClicked_(a)
            }.bind(this))
        },
        selectAllEvt_: function() {
            if (this.enabled_) this.selectNone_ = !1,
            this.book_.get("search").get("results").forEach(function(a) {
                this.updateSearchEntry_(a, !0)
            },
            this),
            this.document_.querySelectorAll('#searchResultsList input[type="checkbox"]').forEach(function(a) {
                a.checked = !0;
                this.searchResultClicked_(DOMUtils.getParent(a, ".searchResult"), !1)
            }.bind(this))
        },
        selectNoneEvt_: function() {
            if (this.enabled_) {
                this.selectNone_ = !0;
                var a = this.book_.get("selection");
                this.book_.get("search").get("results").forEach(function(b) {
                    var c = b.get("chunk")[0].getAttribute("s9id");
                    a.isSelected(c) || this.updateSearchEntry_(b, !1)
                },
                this);
                this.document_.querySelectorAll('#searchResultsList input[type="checkbox"]').forEach(function(a) {
                    a.checked = !1;
                    this.searchResultClicked_(DOMUtils.getParent(a, ".searchResult"), !1)
                }.bind(this))
            }
        },
        shortenEvt_: function(a) {
            if (this.enabled_) this.shorten_ = !this.shorten_,
            a.target.classList.toggle("active"),
            this.el.querySelectorAll(".searchResult").forEach(function(a) {
                a.classList.toggle("short")
            })
        },
        gotoFileEvt_: function(a) {
            this.enabled_ && (a = a.target.getAttribute("title"), a = app.getBookModel().get("pages").get(a), app.getMapperView().getPageView().changePage(a))
        },
        searchResultClicked_: function(a, b) {
            if (this.enabled_) {
                var b = typeof b !== "undefined" ? b: !0,
                c = a.dataset.searchEntryId,
                c = this.book_.get("search").get("results").get(c),
                d = a.querySelector('.selectSearchResult input[type="checkbox"]').checked,
                e = a.classList.contains("searchResult") ? a: DOMUtils.getParent(a, ".searchResult");
                d === !1 ? e.classList.add("unselected") : e.classList.remove("unselected");
                b && this.updateSearchEntry_(c, d)
            }
        },
        updateSearchEntry_: function(a, b) {
            a.set("enabled", b);
            var c = this.book_.get("currentPage"),
            d = app.getMapperView().getPageView();
            if (a.get("page") === c) for (var c = a.get("chunk"), e = 0; e < c.length; e++) {
                var f = c[e].getAttribute("s9id");
                d.updateShadowTag(f, a.get("enabled"))
            }
        },
        onBookChanged_: function() {
            this.book_ && this.book_.get("search").off("change:results", this.render, this);
            var a = app.getBookModel();
            if (a) a.get("search").on("change:results", this.render, this);
            this.book_ = a;
            this.clear()
        },
        rewriteImagePaths_: function(a) {
            a.results.forEach(function(a) {
                var c = a.page,
                d = a.content,
                e;
                for (RegExp.lastIndex = 0; (e = /src="(?!.*?:)([^"]*)"/g.exec(d)) !== null;) var f = c.getRelativeTo(e[1]),
                g = d.substring(0, e.index + 5),
                d = d.substring(e.index + e[0].length - 1),
                d = g + f + d;
                a.content = d
            });
            return a
        },
        nextSearchPageEvt_: function() {
            this.currentSearchPage_++;
            this.render()
        },
        prevSearchPageEvt_: function() {
            this.currentSearchPage_--;
            this.render()
        }
    });
    SearchResultsView.SEARCH_WINDOW_SIZE_ = 5E3;
    window.SelectionView = Backbone.View.extend({
        tagClicks_: null,
        groupView_: null,
        removeView_: null,
        initialize: function(a) {
            a = a || {};
            this.window_ = a.window || window;
            this.document_ = a.document || document;
            this.tagClicks_ = 0;
            this.handleTagSelection_ = this.handleTagSelection_.bind(this);
            app.getMapperView().getPageView().getDOMDocument().documentElement.addEventListener("click", this.handleTagSelection_, !0)
        },
        remove: function() {
            app.getMapperView().getPageView().getDOMDocument().documentElement.removeEventListener("click", this.handleTagSelection_, !0);
            SelectionView.__super__.remove.call(this)
        },
        selectTag: function(a) {
            app.getMapperView().getPageView().getTagLayoutView().scrollToTag(a);
            this.handleTagClick_(a);
            this.showSelectionButtons()
        },
        showSelectionButtons: function() {
            this.hideSelectionButtons();
            var a = app.getBookModel().get("selection"),
            b = a.get("singleElem"); ! a.get("singleElem") && a.get("parent") ? b = a.get("parent") : a.get("singleElem") || (b = a.get("multiple")[0]);
            var c = app.getMapperView().getPageView().getTagLayoutView().getTagWithS9ID(b),
            a = {
                multipleSelected: !!a.get("multiple").length,
                elemS9ID: b,
                staticAssetURL: app.getConfig().get("staticAssetURL")
            },
            a = Templates["mapper/selectionButtonsTemplate"](a);
            this.document_.querySelector("#currentDocument");
            a.style.left = c.dataset.cachedLeft - 42 + "px";
            a.style.top = c.dataset.cachedTop - 24 + "px";
            app.getMapperView().getPageView().getDOMDocument().querySelector("#tagContainer").appendChild(a);
            this.groupView_ = new GroupView;
            this.removeView_ = new RemoveView
        },
        hideSelectionButtons: function() {
            var a = app.getMapperView().getPageView().getDOMDocument(),
            b = a.querySelector("#selectionButtons");
            b && b.parentNode.removeChild(b); (a = a.querySelector(".floating-toolbar")) && a.parentNode.removeChild(a)
        },
        selectNextUnmapped: function() {
            var a = app.getBookModel().getNextUnmapped();
            if (a) {
                var b = app.getMapperView().getPageView(),
                c = function() {
                    this.selectTag(b.getTagLayoutView().getTagWithS9ID(a.s9id))
                }.bind(this);
                a.currentPage ? (this.deselectEverything_(), c()) : b.changePage(a.page, c)
            } else this.window_.alert("There are no unmapped tags to select")
        },
        handleTagSelection_: function(a) {
            this.tagClicks_++;
            this.tagClicks_ === 1 && this.window_.setTimeout(function() {
                this.tagClicks_ === 1 ? this.handleTagSingleClick_(a) : this.handleTagDoubleClick_(a);
                this.tagClicks_ = 0
            }.bind(this), 300)
        },
        handleTagSingleClick_: function(a) {
            var b = a.target,
            c = app.getBookModel();
            if (!DOMUtils.getParent(b, "ul.dropdown")) if (a.preventDefault(), a.cancelBubble = !0, a = DOMUtils.getParent(b, ".tag"), b.classList.contains("dropdown-target") && a && a.classList.contains("selectedTag")) this.togglePatternDropdown_(b);
            else if (b.classList.contains("dropdown-target") && a && a.classList.contains("multiMapSelected")) this.togglePatternDropdown_(b);
            else if (!b.classList.contains("floating-toolbar") && !DOMUtils.getParent(b, ".floating-toolbar")) {
                if (b.classList.contains("left-end") || b.classList.contains("right-end")) b = DOMUtils.getParent(b, ".tag");
                b.classList.contains("tag") ? this.handleTagClick_(b) : (c.get("currentPattern") instanceof MultiMapPatternModel && this.cancelMultiMappedPattern_(), this.deselectEverything_());
                this.closePatternDropdown_();
                c.get("currentPattern") instanceof MultiMapPatternModel === !1 && (b = c.get("selection"), b.get("singleElem") || b.get("multiple").length ? this.showSelectionButtons() : this.hideSelectionButtons())
            }
        },
        handleTagDoubleClick_: function(a) {
            var b = a.target,
            a = app.getBookModel(),
            c = app.getMapperView().getPageView(),
            d = c.getDOMDocument();
            if (b.classList.contains("left-end") || b.classList.contains("right-end")) b = DOMUtils.getParent(b, ".tag");
            var e = a.get("selection");
            if (e.get("singleElem") && !d.querySelector(".inline-toolbar") && b.classList.contains("tag") && e.get("singleElem") === b.dataset.elemS9id) if ((b = this.window_.prompt("Enter new tag and class name of selection, such as div.foo.bar:")) && /^[a-z_\-0-9]+\.?[a-z_\-0-9\.]*$/i.test(b) === !1 || /\.\./.test(b)) this.window_.alert("Invalid tag and class name");
            else if (b) {
                app.getMapperView().getUndoView().addUndo("undo rename", "undo_rename");
                var f = b.replace(/\..*$/g, "").toLowerCase(),
                g = b.replace(/^[^\.]+\.?/, "").replace(/\./g, " ");
                a.get("search").get("results").getEnabled().forEach(function(a) {
                    for (var b = a.get("page").get("xml").createElementNS(XHTML_NS, f), c = a.get("chunk")[0].attributes, d = 0; d < c.length; d++) c[d].nodeName !== "class" && b.setAttribute(c[d].nodeName, c[d].nodeValue);
                    b.setAttribute("x-finished", !0);
                    g && b.setAttribute("class", g);
                    a = a.get("chunk");
                    b.innerHTML = a[0].innerHTML;
                    DOMUtils.replaceNode(a[0], b)
                });
                a.get("pages").updateFromXML();
                a.get("search").clear();
                c.redrawPage()
            }
        },
        handleTagClick_: function(a) {
            var b = a.dataset.elemRef,
            c = app.getMapperView().getPageView().getDOMDocument(),
            b = c.querySelector('[data-tag-ref="' + b + '"]'),
            d = b.getAttribute("s9id"),
            e = app.getBookModel(),
            f = e.get("currentPattern");
            if (! (f instanceof MultiMapPatternModel && d === f.get("container"))) if (f instanceof MultiMapPatternModel) a.classList.contains("multiMapSelected") ? (a.classList.remove("multiMapSelected"), b.classList.remove("multiMapSelected"), this.setMappableOption_(null, d)) : this.isValidMultiMapSelection_(b) && (a.classList.add("multiMapSelected"), b.classList.add("multiMapSelected"));
            else if (e = e.get("selection"), a.classList.contains("selectedTag") && !e.inMiddle(d)) a.classList.remove("selectedTag"),
            b.classList.remove("selectedElem"),
            e.remove(d),
            app.getBookModel().get("search").search();
            else if (e.isSelectionAllowed(d)) {
                var a = e.addSelection(d),
                g = app.getMapperView().getPageView().getTagLayoutView();
                a.forEach(function(a) {
                    var b = g.getTagWithS9ID(a),
                    a = c.querySelector('[s9id="' + a + '"]');
                    b.classList.add("selectedTag");
                    a.classList.add("selectedElem")
                });
                app.getBookModel().get("search").search()
            }
        },
        deselectEverything_: function() {
            var a = app.getMapperView().getPageView().getDOMDocument();
            a.querySelectorAll(".selectedTag").forEach(function(a) {
                a.classList.remove("selectedTag")
            });
            a.querySelectorAll(".selectedElem").forEach(function(a) {
                a.classList.remove("selectedElem")
            });
            var b = a.querySelector(".floating-toolbar");
            b && b.parentNode.removeChild(b); (a = a.querySelector(".inline-toolbar")) && a.parentNode.removeChild(a);
            a = app.getBookModel();
            a.get("selection").clear();
            a.set("currentPattern", null);
            a.get("search").search()
        },
        isValidMultiMapSelection_: function(a) {
            var b = app.getBookModel().get("currentPattern").get("container");
            return DOMUtils.getParent(a, '[s9id="' + b + '"]') ? !0 : !1
        },
        togglePatternDropdown_: function(a) {
            var a = DOMUtils.getParent(a, ".tag"),
            b = app.getMapperView().getPageView().getDOMDocument(),
            c = b.querySelector('[s9id="' + a.dataset.elemS9id + '"]'),
            d = b.querySelector("ul.dropdown");
            if (d) if (b.querySelector('[s9id="' + d.dataset.elemS9id + '"]') === c) {
                this.closePatternDropdown_();
                return
            } else this.closePatternDropdown_();
            var c = this.getPatternDropdownJSON_(a),
            c = Templates["mapper/patternDropdownTemplate"](c),
            d = a.getBoundingClientRect(),
            e = this.document_.querySelector("#currentDocument").contentWindow;
            c.style.left = d.left + e.pageXOffset - 40 + "px";
            c.style.top = d.top + e.pageYOffset + 21 + "px";
            c.style.width = d.width + "px";
            a.classList.add("open");
            b.querySelector("#tagContainer").appendChild(c);
            c.querySelectorAll(".pattern").forEach(function(a) {
                a.addEventListener("mousedown", this.handlePatternDropdownClick_.bind(this))
            }.bind(this));
            c.querySelectorAll(".pattern .option-entry").forEach(function(a) {
                a.addEventListener("mousedown", this.handleDropdownOptionClick_.bind(this))
            }.bind(this));
            c.querySelectorAll(".multiMapMode > .entry").forEach(function(a) {
                a.addEventListener("mousedown", this.handleMultiMapOptionClick_.bind(this))
            }.bind(this))
        },
        handlePatternDropdownClick_: function(a) {
            var a = a.target,
            a = a.classList.contains("entry") ? a: DOMUtils.getParent(a, ".entry"),
            b = a.id,
            c = app.getBookModel(),
            b = c.get("patterns").get(b).clone();
            c.get("selection");
            b instanceof MultiMapPatternModel === !1 && !b.get("options").length ? (app.getMapperView().getUndoView().addUndo("undo " + b.get("name") + " mapping", "undo_mapping"), c.set("currentPattern", b), this.mapPatternAcrossSelection_(b)) : b instanceof MultiMapPatternModel === !1 && b.get("options").length ? a.classList.toggle("open") : b instanceof MultiMapPatternModel && this.enterMultiMapMode_(b)
        },
        enterMultiMapMode_: function(a) {
            this.closePatternDropdown_();
            this.hideSelectionButtons();
            app.getMapperView().getUndoView().addUndo("undo " + a.get("name") + " mapping", "undo_mapping");
            app.getMapperView().getSearchResultsView().disable();
            var b = app.getBookModel();
            a instanceof ListPatternModel ? a.selectListItems(b) : this.removeDisabledResults_();
            var c = b.get("selection"); (new GroupView).groupIntoNewParent(!1, !0,
            function() {
                b.set("currentPattern", a);
                var d = app.getMapperView().getPageView().getDOMDocument(),
                e = d.querySelector('[s9id="' + c.get("singleElem") + '"]');
                d.querySelector('[data-elem-ref="' + e.dataset.tagRef + '"]').classList.add("multiMapContainer");
                e.classList.add("multiMapContainer");
                var f = e.getAttribute("s9id");
                b.get("currentPage").get("xml").querySelector('[s9id="' + f + '"]');
                a.set("container", f);
                a.get("options").applyDefaults();
                f = Templates["mapper/multiMapToolbarTemplate"](a.toJSON());
                e.appendChild(f);
                d.querySelectorAll("#multiMapToolbar .multiMapOption select").forEach(function(a) {
                    a.addEventListener("change", this.handleNonMappingOption_.bind(this))
                },
                this);
                d.querySelector("#patternApplyButton").addEventListener("click", this.applyMultiMappedPattern_.bind(this));
                d.querySelector("#patternCancelButton").addEventListener("click", this.cancelMultiMappedPattern_.bind(this))
            }.bind(this))
        },
        getPatternDropdownJSON_: function(a) {
            var b = app.getMapperView().getPageView().getDOMDocument().querySelector('*[s9id="' + a.dataset.elemS9id + '"]'),
            c = app.getBookModel(),
            d = c.get("currentPage"),
            e = c.get("currentPattern"),
            f = {};
            f.elemS9ID = a.dataset.elemS9id;
            f.multiMapMode = e instanceof MultiMapPatternModel;
            if (e && f.multiMapMode) f.hasContainerPattern = !0,
            f.patternName = e.get("name"),
            f.entries = this.filterContextSpecificOptions_(b, e);
            else {
                var a = c.get("patterns"),
                g = c.get("selection"),
                h = b.tagName.toLowerCase();
                f.isBody = h === "body";
                f.entries = a.toJSON();
                f.entries.forEach(function(a) {
                    a.isPattern = !0;
                    if (g.get("parent") === b.getAttribute("s9id")) a.isDisabled = !0;
                    h === "body" ? (a.isVisible = a.id === "cardTypePattern", a.id === "cardTypePattern" && a.options[0].values.forEach(function(a) {
                        a.isSelected = a.value === d.get("type")
                    })) : a.isVisible = a.id !== "cardTypePattern";
                    if (!a.multiMapPattern && g.get("multiple").length > 1) a.isDisabled = !0
                })
            }
            return f
        },
        filterContextSpecificOptions_: function(a, b) {
            var c = b.getMappableOptions().toJSON();
            c.forEach(function(b) {
                if (b.isImage && a.tagName.toLowerCase() !== "img") b.isDisabled = !0
            });
            for (var d = [], e = 0; e < c.length; e++) {
                var f = c[e];
                if (f.allowedOn.field) {
                    var g = f.allowedOn.field,
                    h = b.get("options").get(g);
                    if (!h) {
                        console.warn("Programing error: no linked field found: " + g);
                        return
                    }
                    f.allowedOn.values.some(function(a) {
                        return h.get("value") === a
                    }) && d.push(f)
                } else d.push(f)
            }
            c = d;
            c.forEach(function(c) {
                var d = b.get("options").get(c.id);
                if (d && d.get("value") === a.getAttribute("s9id")) c.isSelected = !0
            });
            c.forEach(function(c) {
                var d = b.get("options").get(c.id);
                if (! (d && d.get("value") === a.getAttribute("s9id")) && d && d.get("value")) c.isDisabled = !0
            });
            c.forEach(function(a) {
                a.isVisible = !0
            });
            return c
        },
        handleDropdownOptionClick_: function(a) {
            var b = DOMUtils.getParent(a.target, ".option"),
            c = DOMUtils.getParent(a.target, ".option-entry"),
            b = b.dataset.optionId,
            c = c.dataset.value,
            a = DOMUtils.getParent(a.target, ".pattern").id,
            a = app.getBookModel().get("patterns").get(a).clone();
            app.getMapperView().getUndoView().addUndo("undo " + a.get("name") + " mapping", "undo_mapping");
            this.mapPatternAcrossSelection_(a, b, c)
        },
        handleMultiMapOptionClick_: function(a) {
            if (!a.target.classList.contains("container-name")) {
                var b = DOMUtils.getParent(a.target, "ul.dropdown").dataset.elemS9id;
                this.setMappableOption_(a.target.parentNode.dataset.optionId, b);
                this.closePatternDropdown_()
            }
        },
        handleNonMappingOption_: function(a) {
            var b = a.target.value,
            a = a.target.dataset.optionId;
            app.getBookModel().get("currentPattern").get("options").get(a).set("value", b)
        },
        applyMultiMappedPattern_: function() {
            var a = app.getBookModel().get("currentPattern");
            a.failsValidation() ? this.window_.alert(a.failsValidation()) : this.mapPatternAcrossSelection_(a)
        },
        cancelMultiMappedPattern_: function() {
            app.getBookModel().set("currentPattern", null);
            this.exitMultiMapMode_(!1);
            app.getMapperView().getUndoView().removeUndo(!0)
        },
        exitMultiMapMode_: function(a) {
            var a = typeof a === "undefined" ? !0 : !1,
            b = app.getBookModel();
            b.set("currentPattern", null);
            this.closePatternDropdown_();
            var c = app.getMapperView().getPageView().getDOMDocument();
            c.querySelectorAll(".multiMapContainer").forEach(function(a) {
                a.classList.remove("multiMapContainer")
            });
            c.querySelectorAll(".multiMapSelected").forEach(function(a) {
                a.classList.remove("multiMapSelected")
            });
            c.querySelectorAll(".shadowTag").forEach(function(a) {
                a.classList.remove("shadowTag")
            });
            c.querySelectorAll(".selectedTag").forEach(function(a) {
                a.classList.remove("selectedTag")
            });
            c.querySelectorAll(".selectedElem").forEach(function(a) {
                a.classList.remove("selectedElem")
            }); (c = c.querySelector("#multiMapToolbar")) && c.parentNode.removeChild(c);
            b.get("search").clear();
            b.get("selection").clear();
            a && (a = app.getMapperView().getPageView(), a.redrawPage(), a.computeQuality())
        },
        closePatternDropdown_: function() {
            var a = app.getMapperView().getPageView().getDOMDocument(),
            b = a.querySelector("ul.dropdown");
            return b ? (b.parentNode.removeChild(b), a.querySelectorAll(".tag.open").forEach(function(a) {
                a.classList.remove("open")
            }), !0) : !1
        },
        mapPatternAcrossSelection_: function(a, b, c) {
            var d = app.getBookModel();
            b && a.get("options").get(b).set("value", c);
            a.failsValidation() ? this.window_.alert(a.failsValidation()) : (a.map(d, d.get("search").get("results"), b, c), d.get("currentPattern") instanceof MultiMapPatternModel ? this.exitMultiMapMode_() : (d.get("search").clear(), a = app.getMapperView(), b = a.getPageView(), b.redrawPage(), b.computeQuality(), a.getPageSelectorView().render()))
        },
        removeDisabledResults_: function() {
            var a = app.getBookModel().get("search"),
            b = a.get("results"),
            c = new SearchResultCollection;
            b.getEnabled().forEach(function(a) {
                c.add(a)
            });
            a.set("results", c)
        },
        setMappableOption_: function(a, b) {
            if (! (a === null && b === null)) {
                var c = app.getBookModel(),
                d = c.get("currentPage").get("xml").querySelector('[s9id="' + b + '"]'),
                e = c.get("currentPattern");
                e.getMappableOptions().forEach(function(c) {
                    c.get("value") === b && c.id !== a && c.set({
                        value: null,
                        selector: null
                    })
                });
                if (a) {
                    var e = e.get("options").get(a),
                    f = b,
                    c = c.get("selection").getSelectorFor(d);
                    e.get("value") === b && (c = f = null, this.disableDOMTagAndElem_(b));
                    e.set({
                        value: f,
                        selector: c
                    })
                }
            }
        },
        disableDOMTagAndElem_: function(a) {
            var b = app.getMapperView().getPageView(),
            a = b.getTagLayoutView().getTagWithS9ID(a);
            a.classList.remove("multiMapSelected");
            a = a.dataset.elemRef;
            b.getDOMDocument().querySelector('[data-tag-ref="' + a + '"]').classList.remove("multiMapSelected")
        }
    });
    window.TagDraggingView = Backbone.View.extend({
        dropInfo_: null,
        mapperModel_: null,
        book_: null,
        selectedNodes_: null,
        dragEnterBody_: null,
        initialize: function(a) {
            a = a || {};
            this.book_ = a.book;
            this.mapperModel_ = a.mapperModel;
            this.selectedNodes_ = [];
            this.document_ = a.document || document;
            this.window_ = a.window || window;
            this.onTagDragStart_ = this.onTagDragStart_.bind(this);
            this.onTagDragEnd_ = this.onTagDragEnd_.bind(this);
            this.scrollForDragging_ = this.scrollForDragging_.bind(this);
            this.dragEnterHandler_ = this.dragEnterHandler_.bind(this);
            this.mapperModel_.on("change:book", this.onBookChanged_, this)
        },
        render: function() {
            this.cleanup();
            this.allowTagDragging_()
        },
        cleanup: function() {
            this.selectedNodes_ = [];
            if (this.dragEnterBody_) this.dragEnterBody_.removeEventListener("dragenter", this.dragEnterHandler_),
            this.dragEnterBody_ = null
        },
        allowTagDragging_: function() {
            this.allowTagScrolling_();
            this.dragEnterBody_ = app.getMapperView().getPageView().getDOMDocument().body;
            this.dragEnterBody_.addEventListener("dragenter", this.dragEnterHandler_)
        },
        dragEnterHandler_: function(a) {
            a.dataTransfer.dropEffect = "move";
            var b = app.getMapperView().getPageView().getDOMDocument();
            b.querySelectorAll(".dropOnTarget").forEach(function(a) {
                a.classList.remove("dropOnTarget")
            });
            b.querySelectorAll(".dropAbove").forEach(function(a) {
                a.classList.remove("dropAbove")
            });
            b.querySelectorAll(".dropBelow").forEach(function(a) {
                a.classList.remove("dropBelow")
            });
            this.dropInfo_ = this.getDropTargetInfo_(a);
            if (this.dropInfo_.onTarget || this.dropInfo_.above || this.dropInfo_.below) this.dropInfo_.onTarget ? this.dropInfo_.overTag.classList.add("dropOnTarget") : this.dropInfo_.above ? this.dropInfo_.overTag.classList.add("dropAbove") : this.dropInfo_.below && this.dropInfo_.overTag.classList.add("dropBelow")
        },
        allowTagScrolling_: function() {
            var a = app.getMapperView().getPageView().getDOMDocument().body;
            a.insertAdjacentHTML("beforeend", '<div id="dragScrollTop" class="scroll-hit-target s9-habitat-mapper-ui">&nbsp;</div>');
            a.insertAdjacentHTML("beforeend", '<div id="dragScrollBottom" class="scroll-hit-target s9-habitat-mapper-ui">&nbsp;</div>')
        },
        getDropTargetInfo_: function(a) {
            var b = a.target.ownerDocument,
            c = b.elementFromPoint(a.clientX, a.clientY),
            d = !1,
            e = !1,
            f = !1; (c = c ? DOMUtils.getParent(c, ".tag") : null) ? d = !0 : (c = (c = b.elementFromPoint(a.clientX, a.clientY + 20)) ? DOMUtils.getParent(c, ".tag") : null) ? e = !0 : (c = (c = b.elementFromPoint(a.clientX, a.clientY - 20)) ? DOMUtils.getParent(c, ".tag") : null) && (f = !0);
            var g;
            if (c) g = c.dataset.elemS9id;
            return {
                overTag: c,
                overTagS9ID: g,
                onTarget: d,
                below: f,
                above: e
            }
        },
        clear_: function() {
            this.selectedNodes_.forEach(function(a) {
                a.removeAttribute("draggable");
                a.removeEventListener("dragstart", this.onTagDragStart_);
                a.removeEventListener("dragend", this.onTagDragEnd_)
            }.bind(this));
            this.selectedNodes_ = []
        },
        selectionChanged_: function() {
            this.clear_();
            var a = this.book_.get("selection").getSelectedS9IDs(),
            b = app.getMapperView().getPageView().getDOMDocument();
            a.forEach(function(a) {
                a = b.querySelector('[data-elem-s9id="' + a + '"]');
                a.setAttribute("draggable", !0);
                a.addEventListener("dragstart", this.onTagDragStart_);
                a.addEventListener("dragend", this.onTagDragEnd_);
                this.selectedNodes_.push(a)
            }.bind(this))
        },
        onTagDragStart_: function(a) {
            a.dataTransfer.effectAllowed = "move";
            var b = app.getMapperView().getPageView().getDOMDocument();
            b.querySelectorAll(".dragging").forEach(function(a) {
                a.classList.remove("dragging")
            });
            a.target.classList.add("dragging");
            b.querySelectorAll(".scroll-hit-target").forEach(function(a) {
                a.classList.add("activated");
                a.addEventListener("dragover", this.scrollForDragging_)
            }.bind(this))
        },
        onTagDragEnd_: function() {
            var a = app.getMapperView().getPageView().getDOMDocument();
            a.querySelectorAll(".dropOnTarget").forEach(function(a) {
                a.classList.remove("dropOnTarget")
            });
            a.querySelectorAll(".dropAbove").forEach(function(a) {
                a.classList.remove("dropAbove")
            });
            a.querySelectorAll(".dropBelow").forEach(function(a) {
                a.classList.remove("dropBelow")
            });
            a.querySelectorAll(".dragging").forEach(function(a) {
                a.classList.remove("dragging")
            });
            a.querySelectorAll(".scroll-hit-target").forEach(function(a) {
                a.classList.remove("activated");
                a.removeEventListener("dragover", this.scrollForDragging_)
            },
            this);
            if (this.dropInfo_ && (this.dropInfo_.onTarget || this.dropInfo_.above || this.dropInfo_.below)) this.dropInfo_.onTarget ? this.moveSelectionTo_(this.dropInfo_.overTagS9ID, "asChild") : this.dropInfo_.above ? this.moveSelectionTo_(this.dropInfo_.overTagS9ID, "siblingAbove") : this.dropInfo_.below && this.moveSelectionTo_(this.dropInfo_.overTagS9ID, "siblingBelow")
        },
        scrollForDragging_: function(a) {
            var b = a.target.id === "dragScrollTop",
            a = a.target.id === "dragScrollBottom",
            c = app.getMapperView().getPageView().getDOMDocument().body,
            d = this.document_.querySelector("#currentDocument"),
            e = d.offsetHeight,
            f = c.scrollTop;
            b && f === 0 || a && e + f >= c.offsetHeight || d.contentWindow.scrollBy(0, b ? -50 : 50)
        },
        moveSelectionTo_: function(a, b) {
            var c = this.book_.get("currentPage").get("xml"),
            d = c.xpath('//*[@s9id="' + a + '"]'),
            e = this.book_.get("selection");
            if (e.get("singleElem") === a) this.window_.alert("You can not move an element onto itself");
            else if (HTMLContent.isCategory(HTMLContent.CATEGORY.VOID, d)) this.window_.alert("The destination can not have child elements");
            else {
                var f = b === "asChild" ? d: d.parentNode;
                if (f.tagName.toLowerCase() === "p") {
                    var g = [];
                    e.get("singleElem") ? g.push(e.getSingleElemNode()) : e.get("multiple").length && (g = e.getMultipleNodes());
                    for (var h = 0; h < g.length; h++) if (!HTMLContent.canNest(g[h], f)) {
                        this.window_.alert("The destination paragraph can not contain the block-level elements you are dragging in");
                        return
                    }
                }
                app.getMapperView().getUndoView().addUndo("undo move", "undo_move");
                var i = c.createDocumentFragment();
                e.get("singleElem") ? (e = e.getSingleElemNode(), e.parentNode.removeChild(e), i.appendChild(e)) : e.get("multiple").length && e.get("multiple").forEach(function(a) {
                    a = c.xpath('//*[@s9id="' + a + '"]');
                    a.parentNode.removeChild(a);
                    i.appendChild(a)
                });
                this.getListDestination_(d, b) && (i = this.handleMovingToList_(d, b, i));
                b === "asChild" ? this.getListDestination_(d, b) ? d.appendChild(i) : d.childNodes.length ? d.insertBefore(i, d.childNodes[0]) : d.appendChild(i) : b === "siblingAbove" ? d.parentNode.insertBefore(i, d) : b === "siblingBelow" && (d.parentNode.lastChild === d ? d.parentNode.appendChild(i) : d.parentNode.insertBefore(i, d.nextSibling));
                this.book_.get("currentPage").set("xml", c);
                this.book_.get("currentPage").updateFromXML();
                d = app.getMapperView().getPageView();
                e = d.getDOMDocument();
                e.querySelectorAll(".shadowTag").forEach(function(a) {
                    a.classList.remove("shadowTag")
                });
                e.querySelectorAll(".selectedTag").forEach(function(a) {
                    a.classList.remove("selectedTag")
                });
                this.book_.get("search").clear();
                d.redrawPage()
            }
        },
        getListDestination_: function(a, b) {
            var c;
            if (b === "asChild") c = a;
            else if (b === "siblingAbove" || b === "siblingBelow") c = a.parentNode;
            var d = c.tagName.toLowerCase();
            return d === "ol" || d === "ul" || d === "li" ? c: null
        },
        handleMovingToList_: function(a, b, c) {
            a = this.getListDestination_(a, b);
            if (a.tagName.toLowerCase() === "li") return c;
            var b = a.classList.contains("list-step"),
            d = a.classList.contains("list-bold");
            return c = ListUtilities.toListItems(c, a, b, !1, d)
        },
        onBookChanged_: function() {
            this.book_ && this.book_.get("selection").off("selectionChanged", this.selectionChanged_, this);
            this.dropInfo_ = null;
            this.clear_();
            if (this.book_ = app.getBookModel()) this.book_.get("selection").on("selectionChanged", this.selectionChanged_, this)
        }
    });
    window.TagLayoutView = Backbone.View.extend({
        mapperModel_: null,
        allTags_: null,
        scrollingWindow_: null,
        initialize: function(a) {
            a = a || {};
            this.window_ = a.window || window;
            this.mapperModel_ = a.mapperModel;
            this.handleResizes_();
            this.handleTagVisibility_ = this.handleTagVisibility_.bind(this);
            this.allTags_ = [];
            this.mapperModel_.on("change:book", this.onBookChanged_, this)
        },
        render: function() {
            this.cleanup();
            this.drawTags_();
            this.handleScrolling_()
        },
        cleanup: function() {
            this.allTags_ = [];
            if (this.scrollingWindow_) this.scrollingWindow_.removeEventListener("scroll", this.handleTagVisibility_),
            this.scrollingWindow_ = null
        },
        relayout: function() {
            var a = app.getMapperView().getPageView(),
            b = a.getDOMDocument();
            if (b) {
                var c = b.getElementById("tagContainer");
                c.parentNode.removeChild(c);
                c.querySelectorAll(".tag").forEach(function(a) {
                    var c = b.querySelector('[data-tag-ref="' + a.dataset.elemRef + '"]'),
                    c = DOMUtils.getOffset(c);
                    a.style.top = c.top + "px";
                    a.style.left = c.left + "px"
                });
                b.body.insertBefore(c, b.body.firstChild);
                this.handleTagVisibility_();
                a.relayout()
            }
        },
        getTagWithS9ID: function(a) {
            return this.allTags_["_" + a] || null
        },
        scrollToTag: function(a) {
            app.getMapperView().getPageView().getDOMDocument().defaultView.scrollTo(0, a.dataset.cachedTop)
        },
        drawTags_: function() {
            var a = Templates["mapper/tagEntryTemplate"],
            b = app.getMapperView().getPageView().getDOMDocument(),
            c = b.createElement("div");
            c.setAttribute("id", "tagContainer");
            c.classList.add("s9-habitat-mapper-ui");
            var d = this.allTags_;
            b.querySelectorAll("body, body *:not(#tagContainer)").forEach(function(b) {
                var f = b.tagName.toLowerCase();
                if (! (f === "thead" || f === "tbody" || f === "tfoot")) {
                    var g = b.classList.length > 0 ? "." + b.classList.toString().replace(" ", ".") : "";
                    f += g;
                    g = b.hasAttribute("x-finished");
                    f = a({
                        label: f,
                        mapped: g
                    });
                    g = DOMUtils.getOffset(b);
                    f.style.top = g.top + "px";
                    f.style.left = g.left + "px";
                    f.dataset.cachedTop = g.top;
                    f.dataset.cachedLeft = g.left;
                    f.style.visibility = "hidden";
                    d.push(f);
                    c.appendChild(f);
                    g = UUID();
                    b.dataset.tagRef = g;
                    f.dataset.elemRef = g;
                    b = b.getAttribute("s9id");
                    f.dataset.elemS9id = b;
                    d["_" + b] = f
                }
            });
            b.body.insertBefore(c, b.body.firstChild)
        },
        onBookChanged_: function() {
            var a = app.getMapperView().getPageView().getDOMDocument();
            a && ((a = a.querySelector("#tagContainer")) && a.parentNode.removeChild(a), this.cleanup())
        },
        handleResizes_: function() {
            var a;
            this.window_.addEventListener("resize",
            function() {
                a && this.window_.clearTimeout(a);
                a = this.window_.setTimeout(this.relayout.bind(this), 100)
            }.bind(this))
        },
        handleScrolling_: function() {
            this.scrollingWindow_ = app.getMapperView().getPageView().getDOMDocument().defaultView;
            this.scrollingWindow_.addEventListener("scroll", this.handleTagVisibility_);
            this.handleTagVisibility_()
        },
        handleTagVisibility_: function() {
            for (var a = app.getMapperView().getPageView().getDOMDocument().defaultView, b = 0; b < this.allTags_.length; b++) {
                var c = this.allTags_[b],
                d = c.offsetTop > a.pageYOffset + a.innerHeight;
                if (c.offsetTop + c.offsetHeight < a.pageYOffset || d) {
                    if (c.style.visibility !== "hidden") c.style.visibility = "hidden"
                } else c.style.visibility = "visible"
            }
        }
    });
    window.ToolbarView = Backbone.View.extend({
        undoSplitButton_: null,
        alertView_: null,
        undoView_: null,
        parentEl_: null,
        events: {
            "click #close": "closeEvt_",
            "click #revert": "revertEvt_",
            "click #nextUnmapped": "nextUnmappedEvt_",
            "click #undo": "undoEvt_",
            "click #save": "saveEvt_",
            "click #done": "doneEvt_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.parentEl_ = a.parentEl
        },
        render: function() {
            this.setElement(Templates["mapper/toolbarView"](this.getTemplateData_()));
            var a = this.parentEl_.querySelector("#status-message-wrapper");
            DOMUtils.insertSibling(a, "after", this.el.querySelector(".progress-wrapper"));
            this.undoSplitButton_ = new SplitButtonView({
                parentEl: this.el.querySelector("#undo-wrapper"),
                buttonText: "Undo",
                buttonID: "undo",
                actions: {
                    redo: "Redo",
                    revert: "Revert to Saved",
                    del: "Delete files and Start Over"
                }
            });
            this.undoSplitButton_.render();
            this.undoSplitButton_.on("action:redo", this.redoEvt_, this);
            this.undoSplitButton_.on("action:revert", this.revertEvt_, this);
            this.undoSplitButton_.on("action:del", this.deleteEvt_, this);
            this.undoSplitButton_.disableButton();
            this.undoSplitButton_.disableAction("redo");
            this.alertView_ = new ProjectAlertView({
                attachAfter: this.parentEl_,
                alertText: ToolbarView.ALERT_TEXT_,
                linkText: ToolbarView.LINK_TEXT_,
                showLink: app.userHasPermission(PermissionsModel.PERMISSIONS.INTERNAL_USER),
                onClick: this.exportFiles_
            });
            this.alertView_.render();
            this.undoView_ = new UndoView({
                undoSplitButton: this.undoSplitButton_
            });
            this.parentEl_.appendChild(this.el)
        },
        remove: function() {
            DOMUtils.replaceNode(this.el, this.el.querySelector("#status-message-wrapper"));
            this.undoSplitButton_.remove();
            this.undoSplitButton_.off("action:redo", this.redoEvt_, this);
            this.undoSplitButton_.off("action:revert", this.revertEvt_, this);
            this.undoSplitButton_.off("action:del", this.deleteEvt_, this);
            this.undoView_.remove();
            this.alertView_.remove();
            ToolbarView.__super__.remove.call(this)
        },
        getUndoView: function() {
            return this.undoView_
        },
        getTemplateData_: function() {
            return {
                mapperIntroURL: URLUtils.expand("{+wwwHost}/read/habitat-user-guide/f0bd03ad84d84e6792dd19290fc6209a/a61b00b4e00847d8bc6e61fe54b32343")
            }
        },
        exportFiles_: function() {
            app.getMessageView().show("Exporting...");
            var a = app.getBookModel().get("pages"); (new ZipDownloadHelper).save(a,
            function() {
                app.getMessageView().show("Exported to zip", 2E3)
            },
            function(a) {
                app.getMessageView().show(a)
            })
        },
        closeEvt_: function() {
            if (this.win_.confirm("Are you sure you want to exit? Any unsaved changes will be lost.")) {
                var a = app.getProjectModel();
                this.win_.location.assign(MapperRouter.getStructurePath(a.get("shortName")))
            }
        },
        nextUnmappedEvt_: function() {
            app.getBookModel().get("pages").length && app.getMapperView().getPageView().getSelectionView().selectNextUnmapped()
        },
        undoEvt_: function() {
            app.getBookModel().get("currentPattern") instanceof MultiMapPatternModel || app.getMapperView().getUndoView().removeUndo()
        },
        saveEvt_: function() {
            this.save_()
        },
        save_: function(a) {
            app.getMessageView().show("Saving..."); (new ImportedPageSaverLocal).save({
                pages: app.getBookModel().get("pages"),
                callback: function() {
                    app.getMessageView().show("Saved", 2E3);
                    a && a()
                }
            });
            var b = app.getProjectModel();
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.SAVE_MAPPER,
                eventInfo: {
                    shortName: b ? b.get("shortName") : null
                }
            })
        },
        revertEvt_: function() {
            this.win_.location.reload()
        },
        redoEvt_: function() {
            app.getBookModel().get("currentPattern") instanceof MultiMapPatternModel || app.getMapperView().getUndoView().redoUndo()
        },
        deleteEvt_: function() { (new PageImporter).deleteExistingFiles(function() {
                var a = app.getProjectModel();
                this.win_.location.assign(MapperRouter.getStructurePath(a.get("shortName")))
            }.bind(this))
        },
        doneEvt_: function() {
            this.save_(function() {
                var a = new UploadFilesPopupView;
                a.render();
                a.uploadFiles()
            })
        }
    });
    ToolbarView.ALERT_TEXT_ = "The files you're mapping are on your computer, in your browser's cache. Files are not added to Habitat until you click <b>Finish</b>.";
    ToolbarView.LINK_TEXT_ = "Export Files.";
    window.UndoView = Backbone.View.extend({
        undoStack_: null,
        redoStack_: null,
        undoSplitButton_: null,
        initialize: function(a) {
            a = a || {};
            this.document_ = a.document || document;
            this.undoSplitButton_ = a.undoSplitButton;
            this.undoStack_ = [];
            this.redoStack_ = []
        },
        addUndo: function(a, b) {
            var c = this.getState_();
            c.title = a;
            c.operationName = b;
            this.pushUndo_(c);
            this.redoStack_ = [];
            this.updateButtonState_()
        },
        removeUndo: function(a) {
            var b = this.undoStack_.pop();
            a || this.pushRedo_(b);
            this.applyState_(b);
            this.updateButtonState_()
        },
        redoUndo: function() {
            var a = this.redoStack_.pop();
            this.applyState_(a);
            this.pushUndo_(a.undoEntry);
            this.updateButtonState_()
        },
        pushUndo_: function(a) {
            this.undoStack_.push(a);
            this.undoStack_.length > 3 && this.undoStack_.shift()
        },
        pushRedo_: function(a) {
            var b = this.getState_();
            b.undoEntry = a;
            this.redoStack_.push(b)
        },
        getState_: function() {
            var a = app.getBookModel(),
            b = a.get("pages").clone(); (a = a.get("currentPage")) && (a = b.get(a.id));
            var c = app.getMapperView().getPageView().getDOMDocument();
            return {
                currentPage: a,
                scrollTop: c.body.scrollTop,
                pages: b
            }
        },
        applyState_: function(a) {
            app.getBookModel().set({
                currentPage: a.currentPage,
                pages: a.pages
            });
            var b = app.getMapperView().getPageView();
            b.redrawPage(a.scrollTop);
            b.computeQuality()
        },
        updateButtonState_: function() {
            this.redoStack_.length === 0 ? this.undoSplitButton_.disableAction("redo") : this.undoSplitButton_.enableAction("redo");
            this.undoStack_.length ? (this.undoSplitButton_.enableButton(), this.undoSplitButton_.setTitle(this.undoStack_[this.undoStack_.length - 1].title)) : (this.undoSplitButton_.disableButton(), this.undoSplitButton_.setTitle(""))
        }
    });
    window.UnsavedChangesPopupView = PopupView.extend({
        events: _.extend({},
        PopupView.prototype.events, {
            "click .cancel-button": "cancelButtonClickEvent_",
            "click .project-button": "projectButtonClickEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            a.className = "unsaved-changes-popup";
            a.removeOnClose = !0;
            a.maskVisible = !0;
            UnsavedChangesPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["mapper/unsavedChangesPopup"](this.getTemplateData_()));
            UnsavedChangesPopupView.__super__.render.call(this);
            this.open()
        },
        getTemplateData_: function() {
            return {
                staticAssetURL: app.getConfig().get("staticAssetURL")
            }
        },
        cancelButtonClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.close())
        },
        projectButtonClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a = app.getProjectModel(), this.win_.location.assign(MapperRouter.getProjectPath(a.get("shortName"))))
        }
    });
    window.UploadFilesPopupView = PopupView.extend({
        progressModel_: null,
        progressView_: null,
        initialize: function(a) {
            a = a || {};
            a.className = "upload-files-popup";
            a.closable = !1;
            a.maskVisible = !0;
            a.removeOnClose = !0;
            this.progressModel_ = new ProgressBarModel;
            UploadFilesPopupView.__super__.initialize.call(this, a)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["mapper/uploadFilesPopup"]());
            this.progressView_ = new ProgressBarView({
                model: this.progressModel_,
                parentPane: this.el.querySelector(".progress")
            });
            this.progressView_.render();
            UploadFilesPopupView.__super__.render.call(this);
            this.open()
        },
        remove: function() {
            this.progressView_ && this.progressView_.remove();
            UploadFilesPopupView.__super__.remove.call(this)
        },
        uploadFiles: function() {
            app.getMessageView().hide();
            var a = app.getProjectModel();
            a.fetch({
                success: function() {
                    var b = new ImportedPageUploader,
                    c = app.getBookModel().get("pages");
                    b.save(c, a,
                    function(b) {
                        if (b === ImportedPageUploader.STATUS.SUCCESS) {
                            var c = function() {
                                this.win_.location.assign("/project/" + a.get("shortName"))
                            }.bind(this); (new PageImporter).deleteExistingFiles(function() {
                                this.progressModel_.set("progress", 100);
                                ia("inkling", "sendEvent", {
                                    eventType: Analytics.EVENTS.IMPORT_FILES_UPLOADED,
                                    eventInfo: {
                                        shortName: a.get("shortName"),
                                        viaMapper: !0
                                    },
                                    async: !1
                                });
                                c()
                            }.bind(this))
                        } else {
                            var f = "Upload failed, please try again";
                            b === ImportedPageUploader.STATUS.TOC_FAILURE && (f = "Upload failed because another user updated the table of contents during upload, please try again");
                            this.win_.alert(f);
                            this.close()
                        }
                    }.bind(this),
                    function(a) {
                        this.progressModel_.set("progress", a.progress)
                    }.bind(this))
                }.bind(this),
                error: function() {
                    app.getMessageView().error("Failed to fetch project upload information");
                    this.close()
                }.bind(this)
            })
        }
    });
    window.MessageView = Backbone.View.extend({
        messageClasses_: ["info", "error"],
        events: {
            click: "clickEventHandler_"
        },
        mostRecentTimeout_: null,
        titleEl_: null,
        clickHandler_: null,
        preventClickHide_: !1,
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            this.setDefaultElement();
            this.titleEl_ = this.doc_.querySelector("title")
        },
        remove: function() {
            this.undelegateEvents()
        },
        setDefaultElement: function() {
            this.setElement(this.doc_.querySelector("#status-message"))
        },
        show: function(a, b, c, d) {
            this.mostRecentTimeout_ && this.win_.clearTimeout(this.mostRecentTimeout_);
            d = d || "info";
            this.clickHandler_ = c;
            this.el.textContent = a;
            this.messageClasses_.forEach(function(a) {
                this.el.classList.remove(a)
            },
            this);
            this.el.style.display = "block";
            this.el.classList.add(d, "shown");
            if (b) this.mostRecentTimeout_ = this.win_.setTimeout(function() {
                this.hide();
                this.mostRecentTimeout_ = null
            }.bind(this), b)
        },
        error: function(a, b, c) {
            this.show(a, b, c, "error")
        },
        title: function(a) {
            a = a || MessageView.DEFAULT_PAGE_TITLE;
            a = a.replace(/<\/?[^\>]*>/g, "");
            this.titleEl_.innerHTML = a
        },
        displayingError: function() {
            return this.el.classList.contains("error") && this.el.classList.contains("shown")
        },
        hide: function(a) {
            if (! (a && a !== this.el.textContent)) this.mostRecentTimeout_ && this.win_.clearTimeout(this.mostRecentTimeout_),
            this.el.classList.remove("shown"),
            this.clickHandler_ = this.el.style.display = null
        },
        preventClickHides: function() {
            this.preventClickHide_ = !0
        },
        allowClickHides: function() {
            this.preventClickHide_ = !1
        },
        clickEventHandler_: function() {
            if (!this.preventClickHide_) {
                var a = this.clickHandler_;
                this.hide();
                a && a()
            }
        }
    });
    MessageView.DEFAULT_DISPLAY_TIME = 4E3;
    MessageView.DEFAULT_PAGE_TITLE = "Untitled";
    window.MyAccountPopupView = PopupView.extend({
        model: null,
        forcePasswordChange_: !1,
        req_: null,
        strengthChecker_: null,
        form_: null,
        events: _.extend({},
        PopupView.prototype.events, {
            "input #newPasswordInput": "checkPasswordEvent_",
            "click .forgot-password-link": "forgotPasswordClickEvent_"
        }),
        initialize: function(a) {
            var a = a || {},
            b = !!a.forcePasswordChange;
            delete a.forcePasswordChange;
            a.className = "my-account-popup support-dialog";
            a.maskVisible = !0;
            a.removeOnClose = !0;
            a.closable = !b;
            MyAccountPopupView.__super__.initialize.call(this, a);
            this.forcePasswordChange_ = b
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.strengthChecker_ && this.strengthChecker_.remove();
            this.setElement(Templates["common/myAccountPopup"](this.getTemplateData_()));
            this.strengthChecker_ = new PasswordStrengthCheckerView({
                parent: this.el.querySelector("#passwordCheckerContainer")
            });
            MyAccountPopupView.__super__.render.call(this);
            this.open();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.listenTo(this.form_, "cancel", this.formCancelEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            this.strengthChecker_ && this.strengthChecker_.remove();
            MyAccountPopupView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            var a = app.getCurrentUser();
            return {
                forcePasswordChange: this.forcePasswordChange_,
                emailAddress: a.get("uid"),
                firstName: a.get("firstName"),
                lastName: a.get("lastName")
            }
        },
        forgotPasswordClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (new ResetPasswordPopupView({
                username: app.getCurrentUser().get("uid")
            })).render(), this.close())
        },
        formCancelEvent_: function() {
            this.close()
        },
        formSubmitEvent_: function() {
            if (!this.el.querySelector(".update-button").disabled) {
                this.clearErrorClasses_();
                this.strengthChecker_.remove();
                var a, b, c;
                if (!this.forcePasswordChange_) a = this.el.querySelector("#emailAddressInput").value,
                b = this.el.querySelector("#firstNameInput").value,
                c = this.el.querySelector("#lastNameInput").value;
                var d = this.el.querySelector("#currentPasswordInput").value,
                e = this.el.querySelector("#newPasswordInput").value,
                f = this.el.querySelector("#newPasswordInput2").value;
                this.validateInputs_(a, b, c, d, e, f) && this.saveToServer_(a, b, c, d, e)
            }
        },
        validateInputs_: function(a, b, c, d, e, f) {
            var g = this.forcePasswordChange_ || d || e || f;
            if (!this.forcePasswordChange_ && !a) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.EMAIL_ADDRESS),
            this.el.querySelector("#emailAddressInput").focus(),
            !1;
            else if (!this.forcePasswordChange_ && !b) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.FIRST_NAME),
            this.el.querySelector("#firstNameInput").focus(),
            !1;
            else if (!this.forcePasswordChange_ && !c) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.LAST_NAME),
            this.el.querySelector("#lastNameInput").focus(),
            !1;
            else if (g && !d) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.CURRENT_PASSWORD),
            !1;
            else if (g && !e) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.NEW_PASSWORD_1, "new-password-1", "You must enter a new password"),
            !1;
            else if (g && !f) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.NEW_PASSWORD_2, "new-password-2", "You must re-enter the new password"),
            !1;
            else if (g && d === e) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.NEW_PASSWORD_1, "new-password-1", "The new password must be different from the current one"),
            !1;
            else if (g && e !== f) return this.handleError_(MyAccountPopupView.ERROR_CLASSES_.NEW_PASSWORD_2, "new-password-2", "The new passwords must match"),
            !1;
            return ! 0
        },
        clearErrorClasses_: function() {
            Object.keys(MyAccountPopupView.ERROR_CLASSES_).forEach(function(a) {
                this.el.classList.remove(MyAccountPopupView.ERROR_CLASSES_[a])
            },
            this)
        },
        clearPasswordFields_: function() {
            this.el.querySelector("#currentPasswordInput").value = "";
            this.el.querySelector("#newPasswordInput").value = "";
            this.el.querySelector("#newPasswordInput2").value = ""
        },
        handleError_: function(a, b, c, d) {
            d = typeof d !== "undefined" ? d: !0;
            this.el.classList.add(a);
            if (b && c) this.el.querySelector(".input-container." + b + " .error-message").innerText = c;
            d && (this.clearPasswordFields_(), this.el.querySelector("#currentPasswordInput").focus())
        },
        saveToServer_: function(a, b, c, d, e) {
            this.setButtonsEnabled_(!1);
            var f = {
                email: a,
                firstName: b,
                lastName: c,
                oldPassword: d,
                newPassword: e
            };
            Object.keys(f).forEach(function(a) {
                f[a] === void 0 && delete f[a]
            });
            var g = app.getCurrentUser(),
            h = (d || e) && a === g.get("uid") && b === g.get("firstName") && c === g.get("lastName");
            g.save(f, {
                saveAttrs: ["password", "oldHashedPassword", "email", "firstName", "lastName"],
                success: function() {
                    var a = h ? "Password changed": "Update successful";
                    app.getMessageView().show(a, MessageView.DEFAULT_DISPLAY_TIME);
                    this.close();
                    this.setButtonsEnabled_(!0);
                    this.clearPasswordFields_()
                }.bind(this),
                error: function() {
                    console.error("Updating user account failed.");
                    app.getMessageView().error("Update failed", MessageView.DEFAULT_DISPLAY_TIME);
                    this.setButtonsEnabled_(!0);
                    this.clearPasswordFields_()
                }.bind(this)
            })
        },
        setButtonsEnabled_: function(a) {
            var b = this.el.querySelector(".cancel-button");
            a ? (this.el.querySelector(".update-button").classList.remove("disabled"), b && b.classList.remove("disabled")) : (this.el.querySelector(".update-button").classList.add("disabled"), b && b.classList.add("disabled"))
        },
        checkPasswordEvent_: function() {
            var a = this.el.querySelector("#newPasswordInput").value,
            b = this.el.querySelector(".update-button");
            a === "" ? (this.clearErrorClasses_(), this.el.classList.add("no-password"), b.removeAttribute("disabled"), b.removeAttribute("title")) : (this.el.classList.remove("no-password"), this.strengthChecker_.update(a), this.strengthChecker_.strongEnough() ? (this.clearErrorClasses_(), b.removeAttribute("disabled"), b.removeAttribute("title"), this.strengthChecker_.removeTitle()) : (this.handleError_(MyAccountPopupView.ERROR_CLASSES_.NEW_PASSWORD_1, "new-password-1", "A strong password is required", !1), b.setAttribute("disabled", "disabled"), b.setAttribute("title", PasswordStrengthCheckerView.WEAK_PASSWORD_MESSAGE), this.strengthChecker_.setTitle(PasswordStrengthCheckerView.WEAK_PASSWORD_MESSAGE)))
        }
    });
    MyAccountPopupView.ERROR_CLASSES_ = {
        EMAIL_ADDRESS: "email-address-invalid",
        FIRST_NAME: "first-name-invalid",
        LAST_NAME: "last-name-invalid",
        CURRENT_PASSWORD: "current-password-invalid",
        NEW_PASSWORD_1: "new-password-1-invalid",
        NEW_PASSWORD_2: "new-password-2-invalid"
    };
    window.FetchView = Backbone.View.extend({
        parentPane_: null,
        projectModel_: null,
        fetchDocumentModel_: null,
        currentQueryType_: null,
        chapters_: [],
        mutingKeyboard_: null,
        form_: null,
        events: {
            "change #queryType": "changeQueryTypeEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.projectModel_ = a.projectModel;
            this.fetchDocumentModel_ = a.fetchDocumentModel;
            this.parentPane_ = a.parentPane;
            this.chapters_ = []
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/fetchView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            var a = app.getKeyboardManager();
            this.mutingKeyboard_ = app.getKeyboardManager().createKeyboard({
                stopPropagation: !0,
                el: this.el,
                bindings: app.getKeyboardResolver().resolve({
                    save: function(a) {
                        a.stopPropagation = !1
                    }
                })
            });
            a.activate(this.mutingKeyboard_);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_)
        },
        remove: function() {
            this.form_ && this.form_.remove();
            DOMUtils.detachElement(this.el);
            this.mutingKeyboard_ && app.getKeyboardManager().remove(this.mutingKeyboard_);
            FetchView.__super__.remove.apply(this, arguments)
        },
        focus: function() {
            this.el.querySelector("input[type=text]").focus()
        },
        blur: function() {
            var a = this.el.querySelector(":focus");
            a && a.blur()
        },
        getTemplateData_: function() {
            var a, b, c, d;
            this.fetchDocumentModel_ && (a = this.fetchDocumentModel_.get("query"), b = this.fetchDocumentModel_.get("queryType"), c = this.fetchDocumentModel_.get("filter"), d = this.fetchDocumentModel_.get("fileType"));
            b = this.currentQueryType_ || b || "";
            c = c || "";
            d = d || "";
            return {
                query: a || "",
                placeholder: this.getPlaceholder_(b),
                filters: this.getFilters_(c),
                fileTypes: this.getFileTypes_(d),
                queryTypes: this.getQueryTypes_(b)
            }
        },
        getFilters_: function(a) {
            var a = a || "",
            b = [];
            b.push({
                displayPath: "All Chapters",
                path: "all",
                selected: a === "all"
            });
            var c = this.projectModel_.get("toc");
            if (!c) return b;
            c = c.get("xml");
            if (!c) return b;
            c.documentElement.querySelectorAll("chapter").forEach(function(c) {
                if ((c = c.xpathAll(".//s9ml:exhibit")) && c.length !== 0) c = c[0].getAttribute("path"),
                c = c.split("/")[0],
                b.push({
                    displayPath: c,
                    path: c,
                    selected: c === a
                })
            },
            this);
            return b
        },
        getPlaceholder_: function(a) {
            var b = {
                regex: "RegEx Search",
                selector: "CSS Selector Search",
                text: "Text Search"
            };
            return b[a] || b.text
        },
        getQueryTypes_: function(a) {
            var b = [{
                displayName: "Text Search",
                name: FetchDocumentModel.QUERY_TYPES.TEXT
            },
            {
                displayName: "CSS Selector",
                name: FetchDocumentModel.QUERY_TYPES.SELECTOR
            },
            {
                displayName: "RegEx",
                name: FetchDocumentModel.QUERY_TYPES.REGEX
            }];
            return b = b.map(function(b) {
                if (b.name === a) b.selected = !0;
                return b
            },
            this)
        },
        getFileTypes_: function(a) {
            var b = [{
                displayName: "All Files",
                name: FetchDocumentModel.FILE_TYPES.ALL
            },
            {
                displayName: "HTML",
                name: FetchDocumentModel.FILE_TYPES.HTML
            },
            {
                displayName: "S9ML",
                name: FetchDocumentModel.FILE_TYPES.S9ML
            }];
            return b = b.map(function(b) {
                if (b.name === a) b.selected = !0;
                return b
            },
            this)
        },
        changeQueryTypeEvent_: function(a, b) {
            this.currentQueryType_ = b.value;
            this.render()
        },
        formSubmitEvent_: function() {
            var a = this.el.querySelector("#queryType").value,
            b = this.el.querySelector('input[type="text"]'),
            c = "";
            if (b) c = b.value;
            var d = this.el.querySelector("#filter"),
            b = "";
            if (d) b = d.value;
            b === "all" && (b = "");
            var d = this.el.querySelector("#fileType"),
            e = "";
            if (d) e = d.value;
            e === "all" && (e = "");
            app.getRouter().openFetchQuery(c, a, b, e)
        }
    });
    window.NavigatorView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        rendered_: !1,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            app.getRouter().on("navigate", this.updateSelection_, this)
        },
        render: function() {
            throw Error("Programming error: NavigatorView's render should be overridden");
        },
        remove: function() {
            app.getRouter().off("navigate", this.updateSelection_, this);
            NavigatorView.__super__.remove.apply(this, arguments)
        },
        isOpen: function() {
            return ! this.el.classList.contains("collapsed")
        },
        saveScrollOffsets_: function() {
            if (this.el) return this.el.querySelectorAll(".ui-entry-list-scroll").map(function(a) {
                return a.scrollTop
            },
            this);
            else this.scrollOffsets_ = null
        },
        restoreScrollOffsets_: function(a) {
            a && this.el.querySelectorAll(".ui-entry-list-scroll").forEach(function(b, c) {
                if (a[c]) b.scrollTop = a[c]
            },
            this)
        },
        openToCurrentDocument_: function(a) {
            var a = a || {},
            b = this.el.querySelector(".selected"),
            c = this.findSelected_();
            if (b !== c || a.force) b && b.classList.remove("selected"),
            c && (c.classList.add("selected"), this.openToDocumentEntry_(c))
        },
        openToDocumentEntry_: function(a) {
            var b = DOMUtils.getParent(a, "nav");
            b.querySelectorAll(".ui-panel").length > 0 && (b.querySelectorAll(".ui-panel-open").forEach(function(a) {
                a.classList.remove("ui-panel-open")
            }), DOMUtils.getParent(a, ".ui-panel").classList.add("ui-panel-open")); (b = DOMUtils.getParent(a, ".ui-toggle-closed")) && b.classList.remove("ui-toggle-closed"); (a = a.querySelector(".title")) && DOMUtils.verticalScrollTo(DOMUtils.getParent(a, ".ui-entry-list-scroll"), a)
        },
        findSelected_: function() {
            var a = this.el.querySelector('[href="' + this.win_.location.pathname + '"]');
            return a && DOMUtils.getParent(a, ".ui-entry-item") || null
        },
        updateSelection_: function() {
            this.rendered_ && this.openToCurrentDocument_()
        }
    });
    window.NavigatorFilesView = NavigatorView.extend({
        model: null,
        selectedDocument_: null,
        tocViewMode_: null,
        fetchView_: null,
        openChapters_: null,
        navCloseTimer_: null,
        panelAnimation_: null,
        entryAnimation_: null,
        events: _.extend({},
        NavigatorView.prototype.events, {
            "click .document": "selectDocumentEvent_",
            "click .ui-toggle-header .toggle-wrapper": "toggleEntryEvent_",
            "click .ui-toggle-header .title": "clickEntryHeader_",
            "click .ui-panel h3": "togglePanelEvent_",
            "click .view-by-path": "viewPathEvent_",
            "click .view-by-title": "viewTitleEvent_",
            "mousedown .unpin-button": "mousedownUnpinButtonEvent_",
            "mousedown .panel-icon": "mousedownPanelIconEvent_",
            "mouseover .hover-bar": "mouseoverHoverbarEvent_",
            mouseover: "mouseoverEvent_",
            mouseout: "mouseoutEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.openChapters_ = {};
            var b = app.getCurrentUser().get("prefs");
            this.tocViewMode_ = b.get("tocView") || NavigatorFilesView.TOC_VIEW_MODE_.TITLE;
            NavigatorFilesView.__super__.initialize.call(this, a);
            this.listenTo(this.model.get("issueCounts"), "change", this.render);
            this.listenTo(this.model.get("toc"), "loaded", this.render);
            this.listenTo(b, "change:tocNavPinned", this.pinnedStateUpdated_);
            this.listenTo(this.model.get("styleDirectoryListing"), "loaded", this.render);
            this.listenTo(this.model.get("widgetDirectoryListing"), "loaded", this.render)
        },
        render: function() {
            var a = this.saveScrollOffsets_(),
            b = this.openPanel_(),
            c = this.el.classList.contains("open"),
            d = app.getCurrentUser().get("prefs").get(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY);
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/navigatorFilesView"](this.getTemplateData_()));
            this.el.classList.toggle("open", c);
            this.el.classList.toggle("pinned", d);
            this.setupFetchView_();
            this.parentPane_.appendChild(this.el);
            this.rendered_ = !0;
            this.restoreOpenPanel_(b);
            this.restoreScrollOffsets_(a);
            this.openCorrectPanel_()
        },
        remove: function() {
            this.fetchView_ && this.fetchView_.remove(); ["panelAnimation_", "entryAnimation_"].forEach(function(a) {
                this[a] && (this[a].cancel(), this[a] = null)
            },
            this);
            this.removeCloseTimer_();
            DOMUtils.detachElement(this.el);
            NavigatorFilesView.__super__.remove.apply(this, arguments)
        },
        setSelectedDocument: function(a) {
            this.selectedDocument_ = a;
            this.openToCurrentDocument_();
            this.setupFetchView_()
        },
        openPanel: function(a, b) {
            var c = this.el.querySelector(".ui-panel." + a);
            c && this.togglePanel_(c, b)
        },
        removeCloseTimer_: function() {
            if (this.navCloseTimer_) this.win_.clearTimeout(this.navCloseTimer_),
            this.navCloseTimer_ = null
        },
        viewPathEvent_: function(a) {
            a.preventDefault();
            this.setTocViewMode_(NavigatorFilesView.TOC_VIEW_MODE_.FILENAME)
        },
        viewTitleEvent_: function(a) {
            a.preventDefault();
            this.setTocViewMode_(NavigatorFilesView.TOC_VIEW_MODE_.TITLE)
        },
        setTocViewMode_: function(a) {
            app.getCurrentUser().get("prefs").set("tocView", a);
            var b = this.el.querySelector(".toc");
            b.classList.remove(this.tocViewMode_);
            b.classList.add(a);
            this.tocViewMode_ = a
        },
        setupFetchView_: function() {
            this.fetchView_ && this.fetchView_.remove();
            var a = this.selectedDocument_;
            this.fetchView_ = new FetchView({
                projectModel: this.model,
                fetchDocumentModel: a instanceof FetchDocumentModel ? a: null,
                parentPane: this.el.querySelector(".fetch.ui-panel")
            });
            this.fetchView_.render()
        },
        getTemplateData_: function() {
            try {
                var a = this.getChapters_(),
                b = this.formatChaptersForDisplay_(a),
                c = this.getIssueCountsFromChapters_(a),
                d = IssueCountsModel.formatCountsForDisplay(c);
                return {
                    chapters: b,
                    tocViewMode: this.tocViewMode_,
                    otherDocuments: this.getOtherDocuments_(),
                    issueCounts: d
                }
            } catch(e) {
                return console.error("Error parsing project: ", e),
                app.getMessageView().error("Error parsing project"),
                {}
            }
        },
        getChapters_: function() {
            return this.model.get("toc").get("xml").xpathAll("//s9ml:chapter").map(function(a) {
                var b = this.getDocuments_(a),
                c = XMLUtilities.getS9ID(a);
                return {
                    chapterID: c,
                    chapterTitle: TableOfContentsModel.getTitle(a),
                    documents: b,
                    issueCounts: this.getIssueCountsFromDocuments_(b),
                    toggledOpen: this.isToggledOpen_(c)
                }
            },
            this)
        },
        getChapterPath_: function(a) {
            if (a.length !== 0) return ExhibitDocumentModel.getPathParts(a[0].path).chapter
        },
        getDocuments_: function(a) {
            return a.xpathAll(".//s9ml:exhibit").map(function(a) {
                var c = this.model.get("shortName"),
                d = ExhibitDocumentModel.getFilePathFromSourceLocation(a.getAttribute("path")),
                c = URLRouter.getFilePath(c, d),
                e = a.parentNode.tagName.toLowerCase() === "exhibit";
                return {
                    documentTitle: TableOfContentsModel.getTitle(a),
                    type: a.getAttribute("type"),
                    path: d,
                    isChild: e,
                    filePath: TableOfContentsModel.getFilePath(a),
                    url: c,
                    issueCounts: this.getIssueCounts_(d)
                }
            },
            this)
        },
        formatDocumentsForDisplay_: function(a) {
            return a.map(function(a) {
                a.issueCounts = IssueCountsModel.formatCountsForDisplay(a.issueCounts);
                return a
            },
            this)
        },
        formatChaptersForDisplay_: function(a) {
            return a.map(function(a) {
                a.issueCounts = IssueCountsModel.formatCountsForDisplay(a.issueCounts);
                a.documents = this.formatDocumentsForDisplay_(a.documents);
                a.url = URLRouter.getChapterPath(this.model.get("shortName"), a.chapterID);
                return a
            },
            this)
        },
        getIssueCounts_: function(a) {
            var b;
            b = this.model.get("issueCounts");
            a ? (a = ExhibitDocumentModel.getPathParts(a), b = b.getCountsFor(a.chapter, a.filename)) : b = b.get("totals");
            return this.convertIssueCountsToArray_(b)
        },
        convertIssueCountsToArray_: function(a) {
            return [{
                type: IssueModel.Status.OPEN,
                label: IssueModel.getDisplayStatus(IssueModel.Status.OPEN),
                me: a && a.me.open || 0,
                total: a && a.totals.open || 0
            },
            {
                type: IssueModel.Status.FIXED,
                label: IssueModel.getDisplayStatus(IssueModel.Status.FIXED),
                me: a && a.me.fixed || 0,
                total: a && a.totals.fixed || 0
            },
            {
                type: IssueModel.Status.PUNT,
                label: IssueModel.getDisplayStatus(IssueModel.Status.PUNT),
                me: a && a.me.punt || 0,
                total: a && a.totals.punt || 0
            },
            {
                type: IssueModel.Status.STET,
                label: IssueModel.getDisplayStatus(IssueModel.Status.STET),
                me: a && a.me.stet || 0,
                total: a && a.totals.stet || 0
            }].map(function(a) {
                return _.extend(a, {
                    meDisplayType: a.me === 1 ? "Comment": "Comments",
                    totalDisplayType: a.total === 1 ? "Comment": "Comments"
                })
            })
        },
        getIssueCountsFromDocuments_: function(a) {
            if (!Array.isArray(a)) return [];
            var b = {
                me: {},
                totals: {}
            };
            a.forEach(function(a) {
                a.issueCounts.forEach(function(a) {
                    var c = a.type,
                    f = b.me[c],
                    g = b.totals[c];
                    b.me[c] = f ? f + a.me: a.me;
                    b.totals[c] = g ? g + a.total: a.total
                },
                this)
            },
            this);
            return this.convertIssueCountsToArray_(b)
        },
        getIssueCountsFromChapters_: function(a) {
            if (!Array.isArray(a)) return [];
            var b = {
                me: {},
                totals: {}
            };
            a.forEach(function(a) {
                a.issueCounts.forEach(function(a) {
                    var c = a.type,
                    f = b.me[c],
                    g = b.totals[c];
                    b.me[c] = f ? f + a.me: a.me;
                    b.totals[c] = g ? g + a.total: a.total
                },
                this)
            },
            this);
            return this.convertIssueCountsToArray_(b)
        },
        getOtherDocuments_: function() {
            var a = [],
            b,
            c = this.model.get("toc"),
            d = this.model.get("shortName"),
            e = c.get("glossaryPath");
            e && (b = ExhibitDocumentModel.getFilePathFromSourceLocation(e), a.push({
                type: "glossary",
                documentTitle: "Glossary",
                isChild: !1,
                path: b,
                filePath: e,
                url: URLRouter.getFilePath(d, b)
            }));
            if (e = c.get("remarksPath")) b = ExhibitDocumentModel.getFilePathFromSourceLocation(e),
            a.push({
                type: "remarks",
                documentTitle: "Remarks",
                isChild: !1,
                path: b,
                filePath: e,
                url: URLRouter.getFilePath(d, b)
            });
            if (c = c.get("configPath")) b = ExhibitDocumentModel.getFilePathFromSourceLocation(c),
            a.push({
                type: "config",
                documentTitle: "Config",
                isChild: !1,
                path: b,
                filePath: c,
                url: URLRouter.getFilePath(d, b)
            });
            return a
        },
        toggleEntryEvent_: function(a, b) {
            a.preventDefault();
            this.toggleEntryContent_(DOMUtils.getParent(b, "li"))
        },
        clickEntryHeader_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = DOMUtils.getParent(b, "li"),
                d = c.dataset.chapterId;
                d && c.querySelector(".ui-toggle-header").classList.contains("chapter") ? (app.getRouter().openChapter(d), c.classList.contains("ui-toggle-closed") && this.toggleEntryContent_(c)) : this.toggleEntryContent_(c)
            }
        },
        toggleEntryContent_: function(a) {
            var b = a.classList.contains("ui-toggle-closed"),
            c = a.querySelector(".ui-toggle-content"),
            d = a.dataset.chapterId;
            b ? this.openChapters_["_" + d] = !0 : delete this.openChapters_["_" + d];
            if (!this.entryAnimation_) {
                var d = Hacks.getHiddenSize(c).height,
                e = Math.min(this.doc_.html.clientHeight, d);
                if (b) c.style.height = 0,
                a.classList.remove("ui-toggle-closed");
                this.entryAnimation_ = new Animation({
                    easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                    duration: NavigatorFilesView.ANIMATION_DURATION_,
                    tick: function(a) {
                        b || (a = 1 - a);
                        c.style.height = e * a + "px"
                    },
                    onComplete: function() {
                        this.entryAnimation_ = null;
                        c.style.height = "";
                        b || a.classList.add("ui-toggle-closed")
                    }.bind(this)
                })
            }
        },
        findSelected_: function() {
            var a = this.selectedDocument_;
            return ! a ? null: this.el.querySelector(a instanceof ChapterDocumentModel ? '[data-chapter-id="' + a.get("chapterS9ID") + '"] .chapter': a instanceof FetchDocumentModel ? "#fetch": '.ui-entry-item.document[data-path="' + a.get("filePath") + '"]')
        },
        selectDocumentEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = b.dataset.path;
                app.getRouter().openFile(c)
            }
        },
        isToggledOpen_: function(a) {
            return this.openChapters_["_" + a]
        },
        openPanel_: function() {
            var a = this.el.querySelector(".ui-panel-open");
            return a && a.classList.contains("fetch") ? "fetch": "toc"
        },
        restoreOpenPanel_: function(a) {
            this.el.querySelector(".ui-panel." + (a || "toc")).classList.add("ui-panel-open")
        },
        openCorrectPanel_: function() {
            var a = app.getRouter().getPanelName();
            a ? this.openPanel(a, !0) : this.openToCurrentDocument_()
        },
        togglePanel_: function(a, b) {
            var c = this.el.querySelector(".ui-panel-open");
            if (!b) {
                var d = parseInt(this.win_.getComputedStyle(c).height, 10);
                c.style.height = d + "px";
                var e = d - NavigatorFilesView.UI_PANEL_COLLAPSED_HEIGHT_;
                this.panelAnimation_ && this.panelAnimation_.cancel();
                this.panelAnimation_ = new Animation({
                    easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                    duration: NavigatorFilesView.ANIMATION_DURATION_,
                    tick: function(a) {
                        c.style.height = d - e * a + "px"
                    },
                    onComplete: function() {
                        this.panelAnimation_ = null;
                        c.style.height = ""
                    }.bind(this)
                })
            }
            c.classList.remove("ui-panel-open");
            a.classList.add("ui-panel-open")
        },
        togglePanelEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a) && (a.preventDefault(), !this.el.querySelector(".unpin-button").contains(a.target))) {
                var c = DOMUtils.getParent(b, ".ui-panel");
                this.togglePanel_(c);
                c.classList.contains("fetch") && (this.fetchView_.focus(), ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.FETCH_PANEL_OPEN,
                    eventInfo: {
                        shortName: this.model.get("shortName")
                    }
                }))
            }
        },
        mousedownUnpinButtonEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || app.getCurrentUser().get("prefs").set(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY, !1)
        },
        mousedownPanelIconEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (this.el.classList.remove("open"), a = app.getCurrentUser().get("prefs"), a.set(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY, !a.get(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY)))
        },
        pinnedStateUpdated_: function() {
            var a = !app.getCurrentUser().get("prefs").get(NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY);
            DOMUtils.onTransitionEnd(this.el,
            function() {
                app.trigger("contentPaneResized")
            }.bind(this));
            a ? (this.el.classList.remove("open", "pinned"), this.openPanel_() === "fetch" && this.fetchView_.blur()) : (this.el.classList.add("pinned"), this.openPanel_() === "fetch" && this.fetchView_.focus())
        },
        mouseoverHoverbarEvent_: function(a) {
            a.target.classList.contains("hover-bar-deadzone") || (this.el.classList.add("open"), this.openPanel_() === "fetch" && this.fetchView_.focus())
        },
        mouseoverEvent_: function(a, b) {
            DOMUtils.isMouseEnterLeave(b, a) && this.removeCloseTimer_()
        },
        mouseoutEvent_: function(a, b) {
            if (DOMUtils.isMouseEnterLeave(b, a)) this.removeCloseTimer_(),
            a.relatedTarget ? (this.el.classList.remove("open"), this.el.classList.contains("pinned") || this.fetchView_.blur()) : this.navCloseTimer_ = this.win_.setTimeout(function() {
                this.navCloseTimer_ = null;
                this.el.classList.remove("open");
                this.el.classList.contains("pinned") || this.fetchView_.blur()
            }.bind(this), NavigatorFilesView.LEAVE_WINDOW_CLOSE_TIMEOUT_)
        }
    });
    NavigatorFilesView.PINNED_OPEN_PREFERENCE_KEY = "tocNavPinned";
    NavigatorFilesView.ANIMATION_DURATION_ = 200;
    NavigatorFilesView.LEAVE_WINDOW_CLOSE_TIMEOUT_ = 700;
    NavigatorFilesView.NAV_WIDTH_ = 250;
    NavigatorFilesView.UI_PANEL_COLLAPSED_HEIGHT_ = 40;
    NavigatorFilesView.TOC_VIEW_MODE_ = {
        TITLE: "title-view",
        FILENAME: "path-view"
    };
    window.NavigatorReportsView = NavigatorView.extend({
        model: null,
        events: _.extend({},
        NavigatorView.prototype.events, {
            "click .unit-proof-item": "selectUnitProofEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            NavigatorReportsView.__super__.initialize.call(this, a);
            this.listenTo(this.model.get("unitProofs"), "change", this.render);
            this.listenTo(this.model, "change:unitProofCounts", this.render)
        },
        render: function() {
            var a = this.getTemplateData_(),
            b = this.model.get("unitProofs"),
            c = this.saveScrollOffsets_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/navigatorReportsView"](a));
            this.parentPane_.appendChild(this.el);
            this.rendered_ = !0;
            this.restoreScrollOffsets_(c);
            this.openToCurrentDocument_();
            a.noUnitProofs ? b.startPolling() : b.stopPolling()
        },
        remove: function() {
            this.model.get("unitProofs").stopPolling();
            NavigatorReportsView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            var a = this.model.get("unitProofs"),
            b = a.get("totals"),
            a = !a.get("unitProofs") || Object.keys(a.get("unitProofs")).length === 0;
            return {
                warningCount: b ? b.warnings: 0,
                errorCount: b ? b.errors: 0,
                unitProofCategories: a ? null: this.getUnitProofCategoriesTemplate_(),
                noUnitProofs: a,
                overviewURL: URLRouter.getReportsPath(this.model.get("shortName"))
            }
        },
        getUnitProofCategoriesTemplate_: function() {
            var a = this.model.get("unitProofs"),
            b = a.get("unitProofs"),
            c = this.model.get("shortName");
            if (b) {
                var d = Object.keys(b).reduce(function(d, e) {
                    var f = b[e],
                    l = {
                        type: e,
                        title: f.title || "",
                        errorCount: f.errors || 0,
                        warningCount: f.warnings || 0,
                        clear: !(f.errors > 0 || f.warnings > 0) && !f.exception,
                        exception: f.exception,
                        url: URLRouter.getReportsPath(c, a.get("buildNumber"), e)
                    };
                    d.hasOwnProperty(f.category) ? d[f.category].push(l) : d[f.category] = [l];
                    return d
                },
                {}),
                e = [];
                d.hasOwnProperty("validation") && (e.push(this.getCategoryTemplate_(d.validation, "validation")), delete d.validation);
                d.hasOwnProperty("content") && (e.push(this.getCategoryTemplate_(d.content, "content")), delete d.content);
                for (var f in d) d.hasOwnProperty(f) && e.push(this.getCategoryTemplate_(d[f], f));
                return e
            }
        },
        sortProofItems_: function(a, b) {
            var c = b.errorCount - a.errorCount;
            if (c !== 0) return c;
            c = b.warningCount - a.warningCount;
            return c !== 0 ? c: a.title.localeCompare(b.title)
        },
        getCategoryTemplate_: function(a, b) {
            return {
                unitProofItems: a.sort(this.sortProofItems_),
                title: NavigatorReportsView.CATEGORY_TITLES_[b]
            }
        },
        selectUnitProofEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = b.dataset.type;
                app.getRouter().openUnitProof(c, this.model.get("unitProofs").get("buildNumber"));
                c && ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.OPEN_REPORT_NAVIGATION,
                    eventInfo: {
                        shortName: this.model.get("shortName"),
                        reportName: c
                    }
                })
            }
        }
    });
    NavigatorReportsView.CATEGORY_TITLES_ = {
        validation: "Validation and Structure",
        content: "Issues in Content"
    };
    window.NavigatorThemeView = NavigatorView.extend({
        model: null,
        styleDirectoryListing_: null,
        widgetDirectoryListing_: null,
        selectedDocument_: null,
        styleListView_: null,
        widgetListView_: null,
        events: _.extend({},
        NavigatorView.prototype.events, {
            "click .navigator-tab": "selectTabEvent_",
            "click .upload-widget-button": "widgetUploadEvent_",
            "change .directory-input": "directorySelectedEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.styleDirectoryListing_ = a.styleDirectoryListing;
            this.widgetDirectoryListing_ = a.widgetDirectoryListing;
            NavigatorThemeView.__super__.initialize.call(this, a);
            this.listenTo(this.styleDirectoryListing_, "loaded", this.directoryListingLoaded_);
            this.listenTo(this.widgetDirectoryListing_, "loaded", this.directoryListingLoaded_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/navigator/navigatorThemeView"](this.getTemplateData_()));
            this.styleListView_ = new StyleListView({
                model: this.model,
                directoryListing: this.styleDirectoryListing_,
                parentPane: this.el.querySelector(".navigator-tab-contents[data-theme-type=" + NavigatorThemeView.THEME_TYPES.STYLES + "]")
            });
            this.listenTo(this.styleListView_, "fileSelect", this.selectFileEvent_);
            this.styleListView_.render();
            this.widgetListView_ = new WidgetListView({
                model: this.model,
                directoryListing: this.widgetDirectoryListing_,
                parentPane: this.el.querySelector(".navigator-tab-contents[data-theme-type=" + NavigatorThemeView.THEME_TYPES.WIDGETS + "]")
            });
            this.listenTo(this.widgetListView_, "fileSelect", this.selectFileEvent_);
            this.widgetListView_.render();
            this.parentPane_.appendChild(this.el);
            this.rendered_ = !0;
            this.openToCurrentDocument_()
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            this.styleListView_ && this.styleListView_.remove();
            this.widgetListView_ && this.widgetListView_.remove();
            NavigatorThemeView.__super__.remove.apply(this, arguments)
        },
        setSelectedDocument: function(a) {
            this.selectedDocument_ = a;
            this.openToCurrentDocument_()
        },
        getTemplateData_: function() {
            return {
                themeTypes: Object.keys(NavigatorThemeView.THEME_TYPES).map(function(a, b) {
                    return {
                        name: NavigatorThemeView.THEME_TYPES[a],
                        margin: -b * NavigatorThemeView.NAV_WIDTH_ + "px"
                    }
                },
                this),
                inputDirectoryAttribute: BrowserFeatures.getFileInputDirectoryAttribute()
            }
        },
        findSelected_: function() {
            var a = this.selectedDocument_;
            return ! a ? null: this.el.querySelector('.ui-entry-item[data-path="' + a.get("filePath") + '"]')
        },
        openToDocumentEntry_: function(a) {
            if (!this.el.querySelector(".navigator-carousel").contains(a)) return console.error("A documentEntry was provided that is not an ancestor of the navigator carousel");
            this.el.querySelectorAll(".navigator-tab-contents").some(function(b) {
                if (b.contains(a)) return this.setSelectedType_(b.dataset.themeType),
                !0
            },
            this);
            for (var b = this.el.querySelector(".navigator-carousel"), c = a.parentElement; c !== b;) c.classList.remove("directory-collapsed"),
            c = c.parentElement;
            DOMUtils.verticalScrollTo(b, a)
        },
        setSelectedType_: function(a) {
            var b = this.el.querySelector(".tab-selected");
            b && b.classList.remove("tab-selected");
            b = this.el.querySelector('.navigator-tab[data-theme-type="' + a + '"]');
            b.classList.add("tab-selected");
            this.el.querySelector(".navigator-tab-contents-wrapper").style.marginLeft = b.dataset.contentMargin;
            b = this.el.querySelector(".widget-upload");
            a === NavigatorThemeView.THEME_TYPES.WIDGETS ? b.classList.remove("widget-upload-hidden") : b.classList.add("widget-upload-hidden")
        },
        directoryListingLoaded_: function() {
            this.render();
            this.trigger("loaded")
        },
        selectFileEvent_: function(a) {
            app.getRouter().openTheme(a)
        },
        selectTabEvent_: function(a, b) {
            b.classList.contains("tab-selected") || this.setSelectedType_(b.dataset.themeType)
        },
        widgetUploadEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.el.querySelector(".directory-input").click()
        },
        directorySelectedEvent_: function(a, b) {
            app.getMessageView().show("Uploading widget...");
            FileUploader.uploadFiles(b.files, RepositoryLayout.WIDGETS_DIRECTORY).then(function() {
                app.getMessageView().show("Widget uploaded successfully", NavigatorThemeView.SUCCESS_DURATION_);
                this.widgetDirectoryListing_.fetch()
            }.bind(this)).fail(function(a) {
                app.getMessageView().error(a, NavigatorThemeView.ERROR_DURATION_)
            })
        }
    });
    NavigatorThemeView.THEME_TYPES = {
        STYLES: "Styles",
        WIDGETS: "Widgets"
    };
    NavigatorThemeView.NAV_WIDTH_ = 250;
    NavigatorThemeView.ERROR_DURATION_ = 1E4;
    NavigatorThemeView.SUCCESS_DURATION_ = 5E3;
    window.PageNumberView = Backbone.View.extend({
        initialize: function(a) {
            a = a || {};
            this.number = a.number;
            this.parentPane = a.parentPane;
            this.type = a.type;
            this.url_ = a.url;
            for (a = a.block;
            /section/i.test(a.nodeName);) a = a.firstElementChild || a.nextElementSibling;
            this.block_ = a
        },
        render: function() {
            this.setElement(Templates["common/pageNumber"](this.getTemplateData_()));
            this.parentPane.appendChild(this.el)
        },
        hide: function() {
            this.el.style.display = "none"
        },
        show: function() {
            this.el.style.display = "block"
        },
        reposition: function() {
            this.el.style.top = this.getTop_()
        },
        getTop_: function() {
            return DOMUtils.getOffset(this.block_).top + "px"
        },
        getTemplateData_: function() {
            return {
                top: this.getTop_(),
                number: this.number,
                type: this.type,
                url: this.url_,
                isFirst: this.type === PageNumberView.TYPE_FIRST,
                isManual: this.type === PageNumberView.TYPE_MANUAL
            }
        }
    });
    PageNumberView.TYPE_MANUAL = "manual";
    PageNumberView.TYPE_FIRST = "first";
    window.PasswordStrengthCheckerView = Backbone.View.extend({
        parent_: null,
        password_: null,
        initialize: function(a) {
            this.parent_ = a.parent
        },
        strongEnough: function() {
            var a = (new PasswordStrengthChecker).compute(this.password_);
            return a === PasswordStrengthChecker.STRENGTH.STRONG || a === PasswordStrengthChecker.STRENGTH.VERY_STRONG
        },
        update: function(a) {
            this.password_ = a;
            this.render()
        },
        setTitle: function(a) {
            this.el.setAttribute("title", a)
        },
        removeTitle: function() {
            this.el.removeAttribute("title")
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/passwordChecker"](this.getTemplateData_()));
            this.parent_.appendChild(this.el)
        },
        getTemplateData_: function() {
            return {
                strength: "password-" + (new PasswordStrengthChecker).compute(this.password_)
            }
        }
    });
    PasswordStrengthCheckerView.WEAK_PASSWORD_MESSAGE = "New password must have a combination of upper and lower case letters, numbers, special characters like ! or #, and be five or more characters long";
    window.ProgressBarView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model.on("change:progress change:description", this.render, this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/progressBarView"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.model.off("change:progress change:description", this.render, this);
            ProgressBarView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            return {
                description: StringUtils.capitalize(this.model.get("description")),
                progress: this.model.get("progress"),
                progressText: Math.floor(this.model.get("progress")) + "%"
            }
        }
    });
    window.ProjectAlertView = Backbone.View.extend({
        model: null,
        events: {
            "click a": "clickAnchorTagEvent_"
        },
        attachAfter_: null,
        alertText_: null,
        linkText_: null,
        onClick_: null,
        showLink_: null,
        initialize: function(a) {
            a = a || {};
            this.attachAfter_ = a.attachAfter;
            this.alertText_ = a.alertText || ProjectAlertView.ALERT_TEXT_;
            this.linkText_ = a.linkText || ProjectAlertView.LINK_TEXT_;
            this.showLink_ = a.showLink === void 0 ? !0 : !!a.showLink;
            this.onClick_ = a.onClick || this.openProjectSettings_
        },
        render: function() {
            this.setElement(Templates["project/projectAlert"](this.getTemplateData_()));
            DOMUtils.insertSibling(this.el, "after", this.attachAfter_)
        },
        hide: function() {
            this.el.classList.add("hidden")
        },
        show: function() {
            this.el.classList.remove("hidden")
        },
        getTemplateData_: function() {
            return {
                alertText: this.alertText_,
                linkText: this.linkText_,
                showLink: this.showLink_
            }
        },
        clickAnchorTagEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.onClick_())
        },
        openProjectSettings_: function() {
            app.getRouter().openSettings(SettingsMainView.PAGES.PROJECT_INFO)
        }
    });
    ProjectAlertView.ALERT_TEXT_ = "This project has been removed from all dashboards. Your team members may not see your changes.";
    ProjectAlertView.LINK_TEXT_ = "Add Project to Dashboards";
    window.ProjectControlsView = Backbone.View.extend({
        model: null,
        events: {
            "click #account-button": "accountEvent_",
            "click #save-button": "saveClickEvent_"
        },
        parentPane_: null,
        keyboard_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    save: this.saveKeyboardEvent_.bind(this)
                })
            });
            this.model.get("toc").on("change:thumbnailPath", this.render, this);
            this.model.on("change:name change:authors", this.render, this);
            app.getBuildsManager().on("build:started", this.buildStarted_, this);
            app.getBuildsManager().on("build:progress", this.buildProgressed_, this);
            app.getBuildsManager().on("build:finished", this.buildFinished_, this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/projectControls"](this.model.getOverviewData()));
            this.navView_ && this.navView_.remove();
            this.navView_ = new ProjectNavView({
                model: this.model,
                parentPane: this.el.querySelector("#project-navigation")
            });
            this.navView_.render();
            this.parentPane_.appendChild(this.el);
            var a = app.getBuildsManager();
            a.isBuilding() && (this.buildStarted_(), this.buildProgressed_(a.getBuildProgress()));
            app.getKeyboardManager().activate(this.keyboard_)
        },
        remove: function() {
            this.navView_ && this.navView_.remove();
            app.getKeyboardManager().remove(this.keyboard_);
            this.model.get("toc").off("change:thumbnailPath", this.render, this);
            this.model.off("change:name change:authors", this.render, this);
            app.getBuildsManager().off("build:started", this.buildStarted_, this);
            app.getBuildsManager().off("build:progress", this.buildProgressed_, this);
            app.getBuildsManager().off("build:finished", this.buildFinished_, this);
            ProjectControlsView.__super__.remove.apply(this, arguments)
        },
        accountEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), (new AccountMenuView({
                projectModel: this.model,
                anchor: b
            })).render())
        },
        buildStarted_: function() {
            this.el.classList.add("building")
        },
        buildProgressed_: function(a) {
            a = Math.floor(a / 10) * 10;
            a < 10 && (a = 10);
            a > 90 && (a = 90);
            this.el.querySelector(".ui-build-spinner").dataset.buildProgress = a
        },
        buildFinished_: function() {
            this.el.classList.remove("building");
            delete this.el.querySelector(".ui-build-spinner").dataset.buildProgress
        },
        saveKeyboardEvent_: function(a) {
            a.preventDefault();
            app.getSaveHandler().save()
        },
        saveClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getSaveHandler().save())
        }
    });
    window.ProjectNavView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        events: {
            "click li a[href]": "navigateEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.win_ = a.window || window;
            app.getRouter().on("navigate", this.render, this);
            this.model.on("change:unitProofCounts", this.render, this);
            this.model.get("issueCounts").on("change", this.render, this)
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            app.getRouter().off("navigate", this.render, this);
            this.model.off("change:unitProofCounts", this.render, this);
            this.model.get("issueCounts").off("change", this.render, this);
            ProjectNavView.__super__.remove.apply(this, arguments)
        },
        render: function() {
            BrowserFeatures.getEventName("transitionend");
            var a = new ImageNodeSaver(this.el, {
                uniquenessProp: "src"
            });
            DOMUtils.detachElement(this.el);
            var b = Templates["project/projectNav"](this.getTemplateData_());
            a.replaceImageNodes(b);
            this.setElement(b);
            this.parentPane_.appendChild(this.el)
        },
        getTemplateData_: function() {
            var a = app.getRouter(),
            b = this.model.get("shortName"),
            c = {
                projectPath: URLRouter.getProjectPath(b),
                structurePath: URLRouter.getStructurePath(b),
                themePath: URLRouter.getThemePath(b),
                reportsPath: URLRouter.getReportsPath(b),
                collaboratorsPath: URLRouter.getCollaboratorsPath(b),
                buildsPath: URLRouter.getBuildsPath(b),
                settingsPath: URLRouter.getSettingsPath(b)
            },
            b = Object.keys(c).reduce(function(b, e) {
                var f = c[e],
                g = a.getPageType(f);
                a.isPageTypePermitted(g) && (b[e] = f);
                return b
            },
            {}),
            b = _.extend(this.model.getOverviewData(), b, {
                issueCounts: this.getIssueCounts_()
            }),
            b = _.extend(b, this.model.get("unitProofCounts"));
            b[app.getRouter().getPageType() + "Selected"] = !0;
            b.structureSelected = this.win_.location.pathname === b.structurePath;
            b.editProofSelected = b.contentSelected && !b.structureSelected;
            return b
        },
        getIssueCounts_: function() {
            var a = this.model.get("issueCounts").get("totals") || {
                totals: {},
                me: {}
            },
            b = []; [IssueModel.Status.OPEN, IssueModel.Status.FIXED, IssueModel.Status.PUNT, IssueModel.Status.STET].forEach(function(c) {
                a.totals[c] && b.push({
                    total: a.totals[c],
                    totalDisplayType: a.totals[c] === 1 ? "Comment": "Comments",
                    type: c,
                    label: StringUtils.capitalize(c),
                    meValue: a.me[c] || 0,
                    meDisplayType: a.me[c] === 1 ? "Comment": "Comments",
                    meString: a.me[c] ? "" + a.me[c] : "-"
                })
            });
            return b
        },
        navigateEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = b.pathname,
                d = URLRouter.getProjectPath(this.model.get("shortName")),
                e = URLRouter.getStructurePath(this.model.get("shortName"));
                if (app.getRouter().getPageType() === URLRouter.PAGE_TYPE.CONTENTS && this.win_.location.pathname !== e) {
                    if (c === d) return;
                    this.previousContentFragment_ = this.win_.location.pathname
                } else if (c === d && this.previousContentFragment_) c = this.previousContentFragment_,
                this.previousContentFragment_ = null;
                if (app.getSaveHandler().canNavigateAway()) b.pathname === "/dashboard" ? this.win_.location.href = b.pathname: app.getRouter().navigate(c, {
                    trigger: !0
                })
            }
        }
    });
    window.ProjectView = Backbone.View.extend({
        model: null,
        projectControlsView_: null,
        projectAlertView_: null,
        mainView_: null,
        initialize: function(a) {
            this.model = a.model;
            this.doc_ = a.document || window.document;
            this.location_ = a.location || window.location;
            this.model.on("change:isArchived", this.toggleProjectAlertView_, this)
        },
        openPage: function(a, b) {
            switch (a) {
            case ProjectView.PAGES.FILES:
                return this.openFile_(b.filePath, b.revision, {
                    issue: b.issue,
                    line: b.line,
                    s9id: b.s9id
                });
            case ProjectView.PAGES.CHAPTERS:
                return this.openChapter_(b.s9id);
            case ProjectView.PAGES.THEME:
                return this.openTheme_(b.filePath, b.revision, {
                    line: b.line
                });
            case ProjectView.PAGES.FETCH:
                return this.openFetchQuery_(b.query, b.queryType, b.filter, b.fileType);
            case ProjectView.PAGES.STRUCTURE:
                return this.openStructure_();
            case ProjectView.PAGES.REPORTS:
                return this.openUnitProof_(b.type, b.build);
            case ProjectView.PAGES.SETTINGS:
                return this.openSettings_(b.page);
            case ProjectView.PAGES.COLLABORATORS:
                return this.openCollaborators_();
            case ProjectView.PAGES.BUILDS:
                return this.openBuilds_();
            case ProjectView.PAGES.DEFAULT:
                return this.openDefault_()
            }
        },
        openFile_: function(a, b, c) {
            c = c || {};
            this.openMainView_(ContentMainView, {
                type: ContentMainView.TYPES.FILE,
                filePath: a,
                revision: b,
                issueID: c.issue || null,
                lineNumber: c.line || null,
                selectedS9ID: c.s9id || null
            })
        },
        openTheme_: function(a, b, c) {
            c = c || {};
            this.openMainView_(ThemeMainView, {
                filePath: a,
                revision: b,
                lineNumber: c.line || null
            })
        },
        openChapter_: function(a) {
            this.openMainView_(ContentMainView, {
                type: ContentMainView.TYPES.CHAPTER,
                s9id: a
            })
        },
        openStructure_: function() {
            this.openMainView_(StructureMainView)
        },
        openUnitProof_: function(a, b) {
            this.openMainView_(ReportsMainView, {
                type: a || null,
                build: b || (a ? this.model.get("unitProofs").get("buildNumber") : null)
            })
        },
        openFetchQuery_: function(a, b, c, d) {
            this.openMainView_(ContentMainView, {
                type: ContentMainView.TYPES.FETCH,
                query: a,
                queryType: b,
                filter: c,
                fileType: d
            })
        },
        openSettings_: function(a) {
            this.openMainView_(SettingsMainView, {
                page: a || SettingsMainView.PAGES.PROJECT_INFO
            })
        },
        openCollaborators_: function() {
            this.openMainView_(CollaboratorsMainView)
        },
        openBuilds_: function() {
            this.openMainView_(BuildsMainView)
        },
        openDefault_: function() {
            this.openMainView_(ContentMainView, {
                type: ContentMainView.TYPES.DEFAULT
            })
        },
        openMainView_: function(a, b) {
            if (this.mainView_ && !(this.mainView_ instanceof a)) this.mainView_.remove(),
            this.mainView_ = null;
            this.mainView_ ? b && this.mainView_.getUIModel().set(b) : (app.getMessageView().title(ProjectView.DEFAULT_PAGE_TITLE), this.mainView_ = new a({
                uiModelAttrs: b,
                parentPane: this.el,
                model: this.model
            }), this.mainView_.render())
        },
        render: function() {
            this.setElement(this.doc_.querySelector("#project-view"));
            this.projectControlsView_ = new ProjectControlsView({
                model: this.model,
                parentPane: this.doc_.querySelector("#project-controls")
            });
            this.projectControlsView_.render();
            this.serviceMessageBarView_ = new ServiceMessageBarView({
                collection: app.getServiceMessages(),
                parentPane: this.doc_.querySelector("#service-message-bar")
            });
            this.serviceMessageBarView_.render();
            this.browserZoomPopup_ && this.browserZoomPopup_.remove();
            this.browserZoomPopup_ = new BrowserZoomPopupView;
            this.browserZoomPopup_.render();
            app.getCurrentUser().isPasswordChangeRequired() && (new MyAccountPopupView({
                forcePasswordChange: !0
            })).render();
            this.toggleProjectAlertView_()
        },
        remove: function() {
            if (this.mainView_) this.mainView_.remove(),
            this.mainView_ = null;
            if (this.projectControlsView_) this.projectControlsView_.remove(),
            this.projectControlsView_ = null;
            if (this.serviceMessageBarView_) this.serviceMessageBarView_.remove(),
            this.serviceMessageBarView_ = null;
            if (this.browserZoomPopup_) this.browserZoomPopup_.remove(),
            this.browserZoomPopup_ = null;
            if (this.projectAlertView_) this.projectAlertView_.remove(),
            this.projectAlertView_ = null;
            this.model.off("change:isArchived", this.toggleProjectAlertView_, this);
            this.undelegateEvents()
        },
        toggleProjectAlertView_: function() {
            if (this.model.get("isArchived")) this.projectAlertView_ = new ProjectAlertView({
                model: this.model,
                attachAfter: this.doc_.querySelector("#project-controls")
            }),
            this.projectAlertView_.render();
            else if (this.projectAlertView_) this.projectAlertView_.remove(),
            this.projectAlertView_ = null
        }
    });
    ProjectView.PAGES = {
        FILES: "files",
        THEME: "theme",
        CHAPTERS: "chapters",
        FETCH: "fetch",
        STRUCTURE: "structure",
        REPORTS: "reports",
        SETTINGS: "settings",
        COLLABORATORS: "collaborators",
        BUILDS: "builds",
        DEFAULT: "default"
    };
    ProjectView.DEFAULT_PAGE_TITLE = "Inkling Habitat";
    window.IndicatorView = Backbone.View.extend({
        model: null,
        scalableImage_: null,
        initialize: function(a) {
            this.issueView_ = a.issueView;
            this.contentView_ = a.contentView;
            this.proofingView_ = a.proofingView;
            this.scalableImage_ = a.scalableImage;
            this.model.on("change:indicatorX change:indicatorY", this.reposition, this);
            this.model.on("change:status", this.statusChange_, this)
        },
        render: function() {
            if (this.contentView_.isLoaded()) {
                this.contentView_.off("loaded", this.render, this);
                var a = this.el.classList.contains("s9-habitat-indicator-parent");
                if (this.model.getIssueType() == IssueModel.Type.FREEFLOATING && a) DOMUtils.detachElement(this.el);
                else if (a) return;
                this.setElement(Templates["common/issue/indicator"](this.getTemplateData_()));
                this.getBlock_().addEventListener("click", this.toggleMaximizeEvent_.bind(this));
                this.reposition()
            } else this.contentView_.on("loaded", this.render, this)
        },
        fadeIn: function() {
            var a = this.getBlock_();
            a.classList.remove("s9-habitat-animate-indicator");
            _.delay(function() {
                a.classList.add("s9-habitat-animate-indicator")
            },
            300)
        },
        show: function() {
            this.el.show()
        },
        hide: function() {
            this.el.hide()
        },
        reposition: function() {
            switch (this.model.getIssueType()) {
            case IssueModel.Type.FREEFLOATING:
                this.positionFreefloating_();
                break;
            case IssueModel.Type.ON_ELEMENT:
                this.positionOnElement_();
                break;
            case IssueModel.Type.ON_HIGHLIGHT:
                this.positionHighlight_()
            }
        },
        getIndicatorPos: function() {
            var a, b;
            a = this.model.getIssueType() === IssueModel.Type.FREEFLOATING;
            b = this.model.get("recovery"); ! a && !b ? (a = this.getBlock_(), this.contentView_.getContentDocument(), b = DOMUtils.getOffset(a), a = Math.round(b.left), b = Math.round(b.top)) : this.scalableImage_ ? (b = DOMUtils.getComputedStyle(this.el), a = parseInt(b.left, 10), b = parseInt(b.top, 10)) : (a = this.model.get("indicatorX"), b = this.model.get("indicatorY"));
            return {
                x: a,
                y: b
            }
        },
        remove: function() {
            this.model.off("change:indicatorX change:indicatorY", this.render, this);
            this.model.off("change:status", this.statusChange_, this);
            this.contentView_ && this.contentView_.off("loaded", this.render, this);
            if (this.el.querySelectorAll(".s9-habitat-indicator").length > 1) {
                var a = this.el.querySelector('[data-issue-cid="' + this.model.cid + '"]');
                DOMUtils.detachElement(a)
            } else DOMUtils.detachElement(this.el);
            this.model.getIssueType() === IssueModel.Type.ON_HIGHLIGHT && this.highlighter.removeHighlight(this.model.cid)
        },
        statusChange_: function() {
            this.el.querySelector(".s9-habitat-indicator").className = "s9-habitat-indicator s9-habitat-" + this.model.get("status")
        },
        getBlock_: function() {
            return this.el.querySelector('[data-issue-cid="' + this.model.cid + '"]')
        },
        getTemplateData_: function() {
            return {
                id: this.model.id,
                hasId: this.model.id !== null,
                cid: this.model.cid,
                status: this.model.get("status")
            }
        },
        positionFreefloating_: function() {
            this.el.classList.add("s9-habitat-indicator-freefloating");
            this.scalableImage_ ? this.scalableImage_.adopt(this.el, {
                left: this.model.get("indicatorX"),
                top: this.model.get("indicatorY")
            }) : (DOMUtils.setStyles(this.el, {
                left: this.model.get("indicatorX") + "px",
                top: this.model.get("indicatorY") + "px"
            }), this.proofingView_.el.appendChild(this.el))
        },
        positionOnElement_: function() {
            var a = this.contentView_.getContentDocument(),
            b = this.model.get("s9id"); (a = XMLUtilities.getNodeByS9ID(a, b)) ? (this.model.set("recovery", !1), b = this.consolidateIndicators_(a, "start"), b.outerHTML !== "<div></div>" && (this.setElement(b), a.insertBefore(this.el, a.firstElementChild))) : (this.model.set("recovery", !0), this.positionFreefloating_())
        },
        positionHighlight_: function() {
            var a = this.contentView_.getContentDocument();
            this.highlighter = new Highlighter(a);
            this.highlighter.highlight(this.model);
            var a = this.highlighter.getLastHighlightedElement(this.model.cid),
            b = this.highlighter.getHighlightedText(this.model.cid),
            b = TextSelectionModel.cleanText(b),
            b = b != this.model.get("highlight").get("text"); ! a || b ? (this.model.set("recovery", !0), this.positionFreefloating_()) : (this.model.set("recovery", !1), b = this.consolidateIndicators_(a, "end"), b.outerHTML !== "<div></div>" && (this.setElement(b), a.appendChild(this.el)))
        },
        consolidateIndicators_: function(a, b) {
            var c = b === "start" ? a.firstElementChild: a.lastElementChild,
            c = c && c.classList.contains("s9-habitat-indicator-parent") ? c: null;
            if (!c) return this.el;
            var d = c.querySelector(".s9-habitat-indicator-wrapper");
            d.classList.add("s9-habitat-indicator-multiple");
            var e = this.el.querySelector(".s9-habitat-indicator");
            d.appendChild(e);
            return c
        },
        toggleMaximizeEvent_: function() {
            this.issueView_.toggleMinimizedMaximized()
        }
    });
    window.IssueViewDragMixin = {
        setupResize_: function() {
            var a = this.doc_.querySelector("#content iframe");
            this.el.makeResizable({
                handle: this.el.querySelector(".resize-handle"),
                modifiers: {
                    x: "width",
                    y: !1
                },
                limit: {
                    x: [164, 400]
                },
                onStart: function() {
                    if (a) a.style.pointerEvents = "none";
                    this.persistActiveValues_()
                }.bind(this),
                onComplete: function() {
                    this.model.set({
                        userWidth: this.el.offsetWidth
                    });
                    if (a) a.style.pointerEvents = "auto"
                }.bind(this)
            })
        },
        setupDrag_: function() {
            if (this.model.getIssueType() == IssueModel.Type.FREEFLOATING) {
                var a = this.doc_.querySelector("#content iframe");
                this.drag_ = new Drag(this.el, {
                    handle: this.el.querySelector("header"),
                    preventDefault: !0,
                    stopPropagation: !0,
                    onStart: function() {
                        this.drag_.isDragging = !0;
                        this.persistActiveValues_();
                        if (a) a.style.pointerEvents = "none"
                    }.bind(this),
                    onDrag: function() {
                        var a = DOMUtils.getParent(this.el, ".coordinate-box"),
                        a = DOMUtils.getOffset(this.el, a);
                        this.scalableImage_ ? this.setIssuePosition_(this.scalableImage_.toRawCoordinates(a)) : this.setIssuePosition_({
                            left: Math.max(Math.round(a.left), IssueView.OFFSET_LEFT_),
                            top: Math.max(Math.round(a.top), IssueView.OFFSET_TOP_)
                        })
                    }.bind(this),
                    onComplete: function() {
                        this.drag_.isDragging = !1;
                        if (a) a.style.pointerEvents = "auto";
                        this.scrollIntoView_()
                    }.bind(this)
                })
            }
        }
    };
    window.IssueViewSelectorMixin = {
        setupSelectors_: function() {
            this.model.collection.on("change:assignee", this.updateAssigneeSelector_, this)
        },
        removeSelectors_: function() {
            this.model.collection.off("change:assignee", this.updateAssigneeSelector_, this)
        },
        updateAssigneeSelector_: function() {
            this.assigneeSelector && this.assigneeSelector.model.set(this.getAssigneeData_())
        },
        renderSelectors_: function() {
            this.renderSetsSelector_();
            var a = this.el.querySelector("footer .assignee");
            this.assigneeSelector ? (this.updateAssigneeSelector_(), this.assigneeSelector.setParentPane(a)) : this.assigneeSelector = SelectorView.createSelector({
                modelOptions: this.getAssigneeData_(),
                changeCallback: this.selectorChanged_.bind(this, "assignee"),
                selectorFormatter: this.format_.assignee,
                parentPane: a
            });
            a = this.el.querySelector("footer .status");
            this.statusSelector ? this.statusSelector.setParentPane(a) : this.statusSelector = SelectorView.createSelector({
                modelOptions: this.getStatusData_(),
                changeCallback: this.selectorChanged_.bind(this, "status"),
                selectorFormatter: this.format_.status,
                parentPane: a
            })
        },
        selectorChanged_: function(a, b) {
            var c = b.get("selectedValue");
            if (this.model.get(a) !== c) {
                c === "" && (c = null);
                var d = {};
                d[a] = c;
                if (a === "status") c = this.model.getAssigneeForStatus(c),
                d.assignee = c;
                this.persistActiveValues_();
                this.model.set(d)
            }
        },
        getStatusData_: function() {
            return {
                values: Object.keys(IssueModel.Status).map(function(a) {
                    return IssueModel.Status[a]
                }),
                selectedValue: this.model.get("status")
            }
        },
        getAssigneeData_: function() {
            var a = [],
            b = this.getUniqueAssignees_(),
            c = app.getUsers().getRegisteredUserIDs();
            this.model.getOriginalAttributes().assignee || (c = [null].concat(c));
            b.length > 0 ? (a.push([IssueViewSelectorMixin.RECENT, b]), a.push([IssueViewSelectorMixin.EVERYONE, c])) : a = c;
            return {
                values: a,
                selectedValue: this.model.get("assignee")
            }
        },
        getUniqueAssignees_: function() {
            var a = this.proofingView_.getRevision(),
            b = [];
            this.model.collection.forEach(function(c) {
                a && c.get("revision") > a || (c = c.get("assignee")) && b.indexOf(c) === -1 && b.push(c)
            });
            return b
        },
        renderSetsSelector_: function() {
            var a = this.el.querySelector(".add-set");
            if (a) this.setsSelector_ ? this.setsSelector_.setParentPane(a) : (this.setsSelector_ = SelectorView.createSelector({
                modelOptions: {
                    values: this.getSetValues_(),
                    selectedValue: ""
                },
                parentPane: a,
                selectorFormatter: this.setSelectorFormatter_.bind(this),
                changeCallback: this.setsSelectorChanged_.bind(this)
            }), this.model.get("sets").on("all", this.setsModelChanged_, this))
        },
        setsModelChanged_: function() {
            this.setsSelector_.model.set({
                values: this.getSetValues_()
            })
        },
        getSetValues_: function() {
            var a = [],
            b = this.model.get("sets"),
            c = app.getProjectModel().get("issueSets");
            a.push("");
            c.length > 0 && (c.forEach(function(c) {
                var c = c.get("id"),
                e = b.get(c) ? !0 : !1;
                a.push({
                    value: c,
                    disabled: e
                })
            },
            this), a.push({
                value: "-----------------",
                disabled: !0
            }));
            a.push(IssueViewSelectorMixin.SELECTOR_SETS_CREATE);
            return a
        },
        setSelectorFormatter_: function(a, b) {
            if (a === IssueViewSelectorMixin.SELECTOR_SETS_CREATE) return "Create New Set...";
            var c = app.getProjectModel().get("issueSets").getDisplayName(a);
            return c ? b + ". " + c: a
        },
        setsSelectorChanged_: function(a) {
            if (a = a.get("selectedValue")) if (this.setsSelector_.model.set({
                selectedValue: ""
            },
            {
                silent: !0
            }), this.persistActiveValues_(), a === IssueViewSelectorMixin.SELECTOR_SETS_CREATE) this.setsSelectorChangedOpenRedmine_(),
            this.setsSelector_.render();
            else {
                var b = this.model.get("sets");
                if (b.get(a)) this.setsSelector_.render();
                else if (a = app.getProjectModel().get("issueSets").get(a), b.add(a.clone()), this.model.isNew() && this.model.get("isEditing")) {
                    b = "";
                    b += "[s] " + a.get("subject");
                    var a = this.el.querySelector(".main textarea"),
                    c = a.value;
                    a.value = c ? c + "\n" + b: b
                }
            }
        },
        setsSelectorChangedOpenRedmine_: function() {
            this.win_.open(URLUtils.expand("{+redmineHost}/projects/{shortName}/issues/new?tracker_id=4", {
                shortName: app.getProjectModel().get("shortName")
            }), "redmine")
        },
        removeSetEvent_: function(a, b) {
            var c = b.parentElement.dataset.id,
            d = this.model.get("sets"),
            c = d.get(c);
            this.persistActiveValues_();
            d.remove(c)
        }
    };
    IssueViewSelectorMixin.EVERYONE = "Everyone";
    IssueViewSelectorMixin.RECENT = "Recent";
    IssueViewSelectorMixin.SELECTOR_SETS_CREATE = "_new_";
    window.IssueView = Backbone.View.extend({
        model: null,
        editingComment_: null,
        hasPendingComment_: !1,
        doAnimation_: !1,
        proofingView_: null,
        contentView_: null,
        scalableImage_: null,
        form_: null,
        events: {
            mouseover: "handleMouseEvent_",
            mouseout: "handleMouseEvent_",
            click: "handleClickEvent_",
            "click .minimize": "minimizeEvent_",
            "dblclick .main": "editMain_",
            "dblclick .comment": "editComment_",
            "click .add-comment": "addCommentEvent_",
            "click .delete": "deleteIssueEvent_",
            "click .set .remove": "removeSetEvent_",
            'click a[rel="revision"]': "selectRevisionEvent_",
            'click a[rel="width"]': "selectWidthEvent_",
            'click a[rel="fontSize"]': "selectFontSizeEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.contentView_ = a.contentView;
            this.proofingView_ = a.proofingView;
            this.scalableImage_ = a.scalableImage;
            this.indicatorView_ = new IndicatorView({
                model: this.model,
                issueView: this,
                contentView: this.contentView_,
                proofingView: this.proofingView_,
                scalableImage: this.scalableImage_
            });
            this.model.on("comments:all sets:all", this.rerunRender_, this);
            this.model.on("change", this.modelChangeEvent_, this);
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.users_ = app.getUsers();
            this.format_ = {
                assignee: this.createAssigneeFormatter_(),
                priority: IssueModel.getDisplayPriority,
                status: IssueModel.getDisplayStatus
            };
            this.setupSelectors_();
            this.setupKeyboard_();
            this.model.get("isNew") && this.model.get("indicatorY") === null && this.model.get("indicatorX") === null && this.setIndicatorPosition_(this.getNewIndicatorPosition_());
            this.editingComment_ = this.model.get("comments").find(function(a) {
                return a.get("isEditing")
            }) || null
        },
        render: function(a) {
            if (this.contentView_.isLoaded()) {
                app.getKeyboardManager().remove(this.keyboard_);
                DOMUtils.detachElement(this.el);
                this.model.get("isNew") && this.model.set({
                    isEditing: !0
                },
                {
                    silent: !0
                });
                this.setElement(Templates["common/issue/issueView"](this.getTemplateData_()));
                this.removeForm_();
                if (this.model.get("isEditing") || this.editingComment_ && this.editingComment_.get("isEditing")) app.getKeyboardManager().activate(this.keyboard_),
                this.setupForm_();
                this.indicatorView_.render();
                this.renderSelectors_();
                this.handleEditingComment_();
                this.reposition();
                this.setupMinimizedMaximized_();
                a || this.completeRender(); (a = this.el.querySelector("[data-focus]")) && a.focus()
            } else this.contentView_.on("loaded", this.rerunRender_, this)
        },
        completeRender: function() {
            this.scalableImage_ ? (this.scalableImage_.el.appendChild(this.el), this.scalableImage_.on("scale", this.reposition, this)) : this.parentPane_.appendChild(this.el);
            this.setupDrag_();
            this.setupResize_();
            this.handleStacking_();
            this.model.get("isNew") && this.scrollIntoView_();
            this.isEditing_() && this.addAutogrow_()
        },
        remove: function() {
            this.removeSelectors_();
            this.indicatorView_ && this.indicatorView_.remove();
            this.autogrow_ && this.autogrow_.remove();
            this.model.off("comments:all sets:all", this.rerunRender_, this);
            this.model.off("change", this.modelChangeEvent_, this);
            this.contentView_ && this.contentView_.off("loaded", this.rerunRender_, this);
            this.scalableImage_ && this.scalableImage_.off("scale", this.reposition, this);
            this.removeForm_();
            app.getKeyboardManager().remove(this.keyboard_);
            IssueView.__super__.remove.apply(this)
        },
        toggleMinimizedMaximized: function() {
            this.model.get("minimized") ? this.maximize() : (this.model.set("isNew", !1), this.minimize())
        },
        minimize: function() {
            this.doAnimation_ = !0;
            this.model.set("minimized", !0)
        },
        maximize: function(a) {
            a && (new Fx.Scroll(this.parentPane_.parentElement)).toElement(this.el, "y");
            this.doAnimation_ = !0;
            this.model.set("minimized", !1)
        },
        reposition: function() {
            DOMUtils.setStyles(this.el, this.getIssuePosition_())
        },
        rerunRender_: function() {
            this.render()
        },
        addAutogrow_: function() {
            this.autogrow_ && this.autogrow_.remove();
            var a = this.el.querySelector(".issue-content .editing textarea");
            this.autogrow_ = new Autogrow({
                el: a
            });
            this.autogrow_.render()
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                stopPropagation: !0,
                bindings: app.getKeyboardResolver().resolve({
                    cancel: this.cancelEditingKeyEvent_.bind(this)
                })
            })
        },
        createAssigneeFormatter_: function() {
            return function(a) {
                if (IssueView.DISPLAY_NAME_HASH_[a]) return IssueView.DISPLAY_NAME_HASH_[a];
                var b = this.users_.getDisplayName(a) || IssueView.UNASSIGNED_NOTE;
                return IssueView.DISPLAY_NAME_HASH_[a] = b
            }.bind(this)
        },
        setupForm_: function() {
            this.form_ = new FormView({
                el: this.el
            });
            this.model.get("isEditing") ? (this.listenTo(this.form_, "submit", this.doneEditingMain_), this.listenTo(this.form_, "cancel", this.cancelEditingMain_)) : (this.listenTo(this.form_, "submit", this.doneEditingComment_), this.listenTo(this.form_, "cancel", this.cancelEditingComment_))
        },
        removeForm_: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null
        },
        setupMinimizedMaximized_: function() {
            var a = this.model.get("minimized");
            DOMUtils.setStyles(this.el, {
                opacity: a ? 0 : 1,
                visibility: a ? "hidden": "visible"
            })
        },
        handleEditingComment_: function() {
            this.editingComment_ && this.editingComment_.get("isEditing") && this.el.querySelector('[data-comment-cid="' + this.editingComment_.cid + '"]').classList.add("editing")
        },
        setIndicatorPosition_: function(a, b) {
            this.model.set({
                indicatorX: a.left,
                indicatorY: a.top
            },
            b)
        },
        setIssuePosition_: function(a, b) {
            if (this.scalableImage_) this.el.dataset.rawX = a.left,
            this.el.dataset.rawY = a.top;
            var c = IssueView.OFFSET_LEFT_,
            d = IssueView.OFFSET_TOP_;
            if (this.scalableImage_) {
                var e = this.scalableImage_.getPosition().zoom;
                c /= e;
                d /= e
            }
            this.setIndicatorPosition_({
                left: a.left - c,
                top: a.top - d
            },
            b)
        },
        getIndicatorPosition_: function() {
            var a = this.indicatorView_.getIndicatorPos();
            return {
                left: a.x,
                top: a.y
            }
        },
        getIssuePosition_: function() {
            var a = this.getIndicatorPosition_();
            return {
                left: a.left + IssueView.OFFSET_LEFT_ + "px",
                top: a.top + IssueView.OFFSET_TOP_ + "px"
            }
        },
        getNewIndicatorPosition_: function() {
            var a = IssueView.ISSUE_POPUP_DEFAULT_WIDTH_;
            if (this.scalableImage_) return this.scalableImage_.getRawMidpoint();
            else {
                var b = this.parentPane_,
                c = b.parentElement,
                a = c.offsetWidth / 2 - a / 2,
                d = c.offsetHeight / 2 - 100,
                b = b.getBoundingClientRect(),
                c = c.getBoundingClientRect();
                return {
                    left: a - (b.left - c.left),
                    top: d - (b.top - c.top)
                }
            }
        },
        getTemplateData_: function() {
            var a = this.model.toJSON(!0),
            a = this.getTemplateEditingInfo_(a),
            a = this.getTemplateClasses_(a, a.isEditing);
            a.isSaved = this.model.id !== void 0 && this.model.id !== null;
            if (!a.userWidth) a.userWidth = IssueView.ISSUE_POPUP_DEFAULT_WIDTH_;
            a = this.getTemplateComments_(a);
            a.author = this.format_.assignee(a.author);
            a.assignee = this.format_.assignee(a.assignee);
            var b = this.model.get("clientSideComment");
            a.disableAddComment = a.isEditing || this.model.isNew() || b && b.get("notes");
            a = this.getRevisionInfo_(a, a.isSaved);
            a = this.editWidthAndFontInfo_(a);
            app.userHasPermission(PermissionsModel.PERMISSIONS.INTERNAL_USER) ? (a.showRedpub = !0, a = this.getSets_(a)) : a.sets = [];
            return a
        },
        getTemplateEditingInfo_: function(a) {
            a.isEditingMain = !1;
            a.isEditingComment = !1;
            if (this.model.get("isEditing")) a.isEditingMain = !0;
            else if (this.editingComment_ && this.editingComment_.get("isEditing")) a.isEditingComment = !0;
            a.isEditing = a.isEditingMain || a.isEditingComment;
            return a
        },
        getTemplateClasses_: function(a, b) {
            var c = [];
            c.push(this.model.getIssueType() + "-issue-type");
            this.model.get("recovery") && c.push("issue-recovery");
            this.model.get("isNew") && c.push("issue-new");
            this.model.get("assignee") == app.getCurrentUser().get("uid") && c.push("assigned-to-me");
            b && c.push("editing");
            a.asideClasses = c.join(" ");
            return a
        },
        getTemplateComments_: function(a) {
            a.cid = this.model.cid;
            a.comments.forEach(function(a, c) {
                a.commentCid = this.model.get("comments").at(c).cid;
                var d = []; ["status", "priority", "assignee"].forEach(function(c) {
                    var f = "comment" + StringUtils.capitalize(c) + "Change",
                    g = a[f].to,
                    f = a[f].from;
                    g !== void 0 && d.push({
                        property: StringUtils.capitalize(c),
                        oldValue: this.format_[c](f),
                        newValue: this.format_[c](g)
                    })
                },
                this);
                a.changes = d;
                a.commentAuthor = this.format_.assignee(a.commentAuthor)
            },
            this);
            return a
        },
        getRevisionInfo_: function(a, b) {
            if (b) a.issueTrackingURL = this.model.url({
                issueTrackingURL: !0
            });
            return a
        },
        editWidthAndFontInfo_: function(a) {
            var b = this.model.get("width");
            a.width = b !== this.contentView_.getWidth() ? WidthControlView.WIDTHS[b] : void 0;
            b = this.model.get("fontSize");
            a.fontSize = b !== this.contentView_.getFontSize() ? WidthControlView.FONT_SIZES[b] : void 0;
            return a
        },
        getSets_: function(a) {
            var b = this.model.get("sets");
            a.sets = b.map(function(a) {
                return {
                    id: a.get("id"),
                    subject: a.get("subject"),
                    url: a.getRedmineUrl()
                }
            });
            return a
        },
        scrollIntoView_: function() {
            var a = this.parentPane_.parentElement,
            b = a.scrollTop,
            c = a.scrollLeft,
            d = a.scrollTop + a.clientHeight,
            e = a.scrollLeft + a.clientWidth,
            f = DOMUtils.getOffset(this.el, this.parentPane_),
            g = f.top,
            h = f.left,
            i = f.top + this.el.offsetHeight,
            f = f.left + this.el.offsetWidth;
            g < b && (a.scrollTop -= b - g);
            h < c && (a.scrollLeft -= c - h);
            i > d && (a.scrollTop += i - d);
            f > e && (a.scrollLeft += f - e)
        },
        handleClickEvent_: function(a) {
            a.stopPropagation();
            this.handleStacking_(a)
        },
        handleMouseEvent_: function(a) { (!a || DOMUtils.isMouseEnterLeave(this.el, a)) && this.handleStacking_(a)
        },
        handleStacking_: function(a) {
            var b = 1;
            if (!this.drag_ || !this.drag_.isDragging) a && a.type == "click" ? b = 132 : this.el.classList.contains("editing") ? b = 131 : a && a.type == "mouseover" && (b = 130),
            this.el.style.zIndex = b
        },
        minimizeEvent_: function(a) {
            this.toggleMinimizedMaximized();
            a.preventDefault()
        },
        editMain_: function(a) {
            a.preventDefault();
            this.isEditing_() || this.model.set({
                isEditing: !0
            })
        },
        doneEditingMain_: function() {
            this.model.set({
                isNew: !1,
                isEditing: !1,
                description: this.el.querySelector(".main textarea").value
            })
        },
        cancelEditingMain_: function() {
            this.model.get("isNew") ? this.deleteIssue_() : this.model.set("isEditing", !1)
        },
        isEditing_: function() {
            return this.model.get("isEditing") ? !0 : this.editingComment_ && this.editingComment_.get("isEditing") ? !0 : !1
        },
        editComment_: function(a, b) {
            a.preventDefault();
            if (!this.isEditing_()) {
                var c = b.dataset.commentCid;
                this.editingComment_ = this.model.get("comments").get(c);
                this.editingComment_.set({
                    isEditing: !0
                })
            }
        },
        doneEditingComment_: function() {
            var a = this.el.querySelector(".comment.editing textarea").value;
            this.editingComment_ == this.model.get("clientSideComment") && this.model.set("notes", a);
            this.hasPendingComment_ = !1;
            this.editingComment_.set({
                isEditing: !1,
                notes: a
            })
        },
        cancelEditingComment_: function() {
            this.hasPendingComment_ ? this.cancelPendingComment_() : this.editingComment_.get("isEditing") && this.editingComment_.set({
                isEditing: !1
            })
        },
        cancelPendingComment_: function() {
            var a = this.model.get("clientSideComment");
            a.set("notes", null);
            this.editingComment_ = null;
            this.hasPendingComment_ = !1; ["status", "priority", "assignee"].every(function(b) {
                return ! a.get(b + "Change").to
            }) ? (this.model.get("comments").remove(a, {
                silent: !0
            }), this.model.set("clientSideComment", null)) : this.render()
        },
        persistActiveValues_: function() {
            this.model.get("isEditing") ? this.model.set({
                description: this.el.querySelector(".main > textarea").value
            },
            {
                silent: !0
            }) : this.editingComment_ && this.editingComment_.get("isEditing") && this.editingComment_.set({
                notes: this.el.querySelector(".comment.editing > textarea").value
            },
            {
                silent: !0
            })
        },
        addCommentEvent_: function() {
            this.editingComment_ = this.model.addComment();
            this.hasPendingComment_ = !0;
            this.render()
        },
        cancelEditingKeyEvent_: function(a) {
            a.preventDefault();
            this.model.get("isEditing") ? this.cancelEditingMain_() : this.editingComment_ && this.cancelEditingComment_()
        },
        deleteIssueEvent_: function() {
            this.win_.confirm("Are you sure you want to delete this note?") && this.deleteIssue_()
        },
        deleteIssue_: function() {
            var a = this.contentView_.getSelection(),
            b = a.getCurrentSelection();
            this.remove();
            this.model.collection.remove(this.model);
            app.getSaveHandler().remove(this.model);
            a.restoreSelection(b)
        },
        selectRevisionEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var a = this.proofingView_.getDocumentModel().get("filePath"),
                b = this.model.get("revision"),
                c = this.model.get("id") || void 0;
                app.getRouter().openFile(a, b, {
                    issue: c
                })
            }
        },
        selectWidthEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.contentView_.setWidth(this.model.get("width")))
        },
        selectFontSizeEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.contentView_.setFontSize(this.model.get("fontSize")))
        },
        modelChangeEvent_: function() {
            var a = !1,
            b = this.model.changedAttributes();
            if (b && Object.keys(b).length > 0) {
                if ("comments" in b) this.editingComment_ = this.model.get("comments").find(function(a) {
                    return a.get("isEditing")
                }) || null;
                a = Object.keys(b).every(function(a) {
                    return ["indicatorX", "indicatorY"].indexOf(a) !== -1
                },
                this)
            }
            a || this.render()
        }
    });
    _.extend(IssueView.prototype, IssueViewDragMixin);
    _.extend(IssueView.prototype, IssueViewSelectorMixin);
    IssueView.ISSUE_POPUP_DEFAULT_WIDTH_ = 270;
    IssueView.AFTER_ANIMATION_DELAY = 300;
    IssueView.DISPLAY_NAME_HASH_ = {};
    IssueView.OFFSET_TOP_ = 20;
    IssueView.OFFSET_LEFT_ = 0;
    IssueView.UNASSIGNED_NOTE = "Unassigned";
    window.ProofingSidebarView = Backbone.View.extend({
        model: null,
        proofingView_: null,
        contentView_: null,
        events: {
            "mousedown .add-note": "addIssueMousedownEvent_",
            "mousedown .toggle-issues": "toggleIssuesEvent_",
            "mousedown .issue-summary li": "toggleVisibilityEvent_",
            "mousedown .edit-summary li": "jumpToIssueEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.setElement(a.parentPane);
            this.proofingView_ = a.proofingView;
            this.contentView_ = a.contentView;
            this.model.get("issuesCollection").on("change:status change:description change:notes change:minimized change:assignee change:indicatorY add remove", this.render, this);
            this.proofingView_.on("loaded", this.proofingViewLoaded_, this)
        },
        addIssue: function() {
            if (app.getProjectModel().get("issueSets").isRedpubAvailable()) {
                var a = app.getProjectModel(),
                b = app.getCurrentUser(),
                c = a ? a.get("shortName") : null,
                d = this.model.getChapter(),
                e = this.model.getFilename(),
                b = b.get("uid"),
                f = a.get("revision"),
                g = this.model.get("subExhibitId"),
                a = new IssueModel,
                c = {
                    project: c,
                    chapter: d,
                    filename: e,
                    author: b,
                    revision: f,
                    subExhibitId: g,
                    width: this.contentView_.getWidth(),
                    fontSize: this.contentView_.getFontSize(),
                    creationTime: (new Date).getTime(),
                    isEditing: !0,
                    assignee: a.getAssigneeForStatus(a.get("status"))
                };
                a.set(c);
                this.model.get("issuesCollection").add(a)
            } else console.error("Cannot create a new issue; RedPub is not yet created")
        },
        render: function() {
            this.cleanUpUI_();
            this.sidebar_ = Templates["project/document/proofing/proofingSidebar"](this.getTemplateData_());
            this.el.appendChild(this.sidebar_);
            app.getProjectModel().get("issueSets").isRedpubAvailable() && this.renderSummaries_();
            this.setElement(this.el)
        },
        remove: function() {
            this.model.get("issuesCollection").off("change:status change:description change:notes change:minimized change:assignee change:indicatorY add remove", this.render, this);
            this.proofingView_.off("loaded", this.proofingViewLoaded_, this);
            this.cleanUpUI_();
            this.undelegateEvents()
        },
        cleanUpUI_: function() {
            DOMUtils.detachElement(this.sidebar_)
        },
        getTemplateData_: function() {
            var a = app.getProjectModel(),
            b = this.model.isOnHead(),
            c = this.getIssuesJSON_(),
            d = a.get("issueSets").isRedpubAvailable(),
            e = this.model.get("issuesCollection"),
            f = e.every(function(a) {
                return a.get("minimized")
            }),
            a = {
                onHead: b,
                redmineURL: a.url({
                    target: "redmine"
                }),
                isRedpubAvailable: d,
                allMinimized: f,
                isLoaded: this.contentView_.isLoaded(),
                issuesExist: e.length > 0
            };
            this.appendIssuesJSON_(c, a);
            return a
        },
        appendIssuesJSON_: function(a, b) {
            var c = this.model.get("subExhibits");
            if (c) {
                var d = [];
                c.forEach(function(b) {
                    var c = a.filter(function(a) {
                        return a.subExhibitId === b.id
                    },
                    this);
                    c.length && (this.sortIssues_(c), d.push({
                        title: b.title,
                        id: b.id,
                        issues: c
                    }))
                },
                this);
                b.subExhibits = d
            } else this.sortIssues_(a),
            b.issues = a
        },
        getIssuesJSON_: function() {
            var a = this.model.get("revision"),
            b = app.getUsers(),
            c = [];
            this.model.get("issuesCollection").forEach(function(d) {
                if (!d.get("isNew") && !(a && d.get("revision") > a)) {
                    var e = d.get("assignee") == app.getCurrentUser().get("uid"),
                    f = b.getDisplayName(d.get("assignee")) || IssueView.UNASSIGNED_NOTE,
                    g = IssueModel.getDisplayStatus(d.get("status")),
                    d = {
                        id: d.get("id"),
                        cid: d.cid,
                        description: d.get("description"),
                        status: d.get("status"),
                        displayStatus: g,
                        displayAssignee: f,
                        indicatorY: d.get("indicatorY"),
                        subExhibitId: d.get("subExhibitId"),
                        myIssue: e
                    };
                    c.push(d)
                }
            },
            this);
            return c
        },
        sortIssues_: function(a) {
            a.sort(function(a, c) {
                return a.indicatorY - c.indicatorY
            })
        },
        renderSummaries_: function() {
            var a = this.model.get("revision"),
            b = this.sidebar_.querySelector(".status-summary"),
            c = this.getSummary_("status", !0, IssueModel.getDisplayStatus, a),
            c = Templates["project/document/proofing/summary"](c);
            DOMUtils.replaceNode(b, c);
            var d = app.getUsers(),
            b = this.sidebar_.querySelector(".assignee-summary"),
            c = this.getSummary_("assignee", !1,
            function(a) {
                return d.getDisplayName(a) || IssueView.UNASSIGNED_NOTE
            },
            a),
            c = Templates["project/document/proofing/summary"](c);
            DOMUtils.replaceNode(b, c)
        },
        toggleIssuesEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a = this.model.get("issuesCollection"), a.off("change:minimized", this.render, this), this.proofingView_.toggleIssues(), a.on("change:minimized", this.render, this), this.render())
        },
        toggleVisibilityEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = this.model.get("issuesCollection");
                if (c) {
                    var d = b.dataset.summarizes,
                    e = b.parentElement.dataset.summaryType,
                    f = !b.classList.contains("all-minimized"),
                    g = app.getCurrentUser().get("prefs"),
                    h = g.get("issueFilters"),
                    d = IssueFilters.set(e, d, f, h);
                    g.set({
                        issueFilters: d
                    });
                    c.off("change:minimized", this.render, this);
                    this.proofingView_.applyFilters(d, h);
                    c.on("change:minimized", this.render, this);
                    this.render()
                }
            }
        },
        getSummary_: function(a, b, c, d) {
            var e, f = {};
            if (! (e = this.model.get("issuesCollection"))) return {
                name: a,
                addLabelAsClass: b,
                list: []
            };
            e.forEach(function(b) {
                if (! (d && b.get("revision") > d)) {
                    var b = b.get(a),
                    e = f[b];
                    e ? e.count += 1 : f[b] = {
                        count: 1,
                        label: b,
                        displayLabel: c(b)
                    }
                }
            });
            e = app.getCurrentUser().get("prefs").get("issueFilters");
            for (var g in f) if (f.hasOwnProperty(g)) {
                var h = f[g];
                h.allMinimized = IssueFilters.get(a, h.label, e);
                f[g] = h
            }
            return {
                name: a,
                addLabelAsClass: b,
                list: Object.keys(f).map(function(a) {
                    return f[a]
                })
            }
        },
        addIssueMousedownEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.addIssue())
        },
        jumpToIssueEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = b.dataset.cid;
                this.proofingView_.jumpToIssue(this.model.get("issuesCollection").get(c))
            }
        },
        proofingViewLoaded_: function() {
            if (this.model.isOnHead()) this.el.querySelector("#ticket-header .ui-action-button.add-note").disabled = !1
        }
    });
    window.ProofingView = Backbone.View.extend({
        model: null,
        sidebarView_: null,
        issueViews_: [],
        contentView_: null,
        htmlDocumentMetadataView_: null,
        minimizeAll_: !1,
        keyboard_: null,
        initialize: function(a) {
            this.contentView_ = a.contentView;
            this.sidebarPane_ = a.sidebarPane;
            this.window_ = a.window || window;
            this.doc_ = a.doc || document;
            this.issueViews_ = [];
            this.filterIssues_();
            a = this.model.get("issuesCollection");
            a.on("add", this.addIssue_, this);
            a.on("remove", this.issueRemoved_, this);
            this.contentView_.on("widthResizeStart", this.widthResizeStart_, this);
            this.contentView_.on("widthResizeEnd", this.widthResizeEnd_, this);
            this.contentView_.on("fontResize", this.fontResized_, this);
            app.getSaveHandler().on("save", this.saveHandlerEvent_, this);
            this.setupKeyboard_()
        },
        render: function() {
            this.cleanUpUI_();
            this.contentView_.on("loaded", this.contentViewLoaded_, this);
            this.sidebarView_ = new ProofingSidebarView({
                model: this.model,
                parentPane: this.sidebarPane_,
                proofingView: this,
                contentView: this.contentView_
            });
            this.sidebarView_.render();
            this.htmlDocumentMetadataView_ = new HTMLDocumentMetadataView({
                model: this.model,
                parentElem: this.el
            });
            this.htmlDocumentMetadataView_.render();
            app.getKeyboardManager().activate(this.keyboard_)
        },
        applyFilters: function(a, b) {
            var c = this.model.get("issuesCollection");
            c && c.forEach(function(c) {
                var e = IssueFilters.isMinimized(c, a);
                if (b) {
                    var f = IssueFilters.isMinimized(c, b);
                    if (e == f) return
                }
                c.set("minimized", e)
            })
        },
        toggleIssues: function() {
            var a = !!this.model.get("issuesCollection").find(function(a) {
                return ! a.get("minimized")
            }),
            b = app.getCurrentUser().get("prefs"),
            c = b.get("issueFilters"),
            c = a ? IssueFilters.setDefaultState(!0, c) : IssueFilters.setDefaultState(!1, c),
            c = IssueFilters.clear(c);
            b.set("issueFilters", c);
            this.applyFilters(c)
        },
        getRevision: function() {
            return this.model.get("revision")
        },
        getIssueView: function(a) {
            return this.issueViews_.find(function(b) {
                return b.model === a
            },
            this)
        },
        remove: function() {
            app.getKeyboardManager().remove(this.keyboard_);
            var a = this.model.get("issuesCollection");
            a.off("add", this.addIssue_, this);
            a.off("remove", this.issueRemoved_, this);
            this.contentView_.off("loaded", this.contentViewLoaded_, this);
            this.contentView_.off("widthResizeStart", this.widthResizeStart_, this);
            this.contentView_.off("widthResizeEnd", this.widthResizeEnd_, this);
            this.contentView_.off("fontResize", this.fontResized_, this);
            app.getSaveHandler().off("save", this.saveHandlerEvent_, this);
            this.cleanUpUI_()
        },
        jumpToIssue: function(a) { (a = this.getIssueView(a)) && a.maximize(!0)
        },
        getDocumentModel: function() {
            return this.model
        },
        widthResizeStart_: function() {
            _.delay(function() {
                this.maximizedIssues_ = this.issueViews_.filter(function(a) {
                    return ! a.model.get("minimized")
                },
                this);
                this.maximizedIssues_.forEach(function(a) {
                    a.minimize()
                },
                this)
            }.bind(this), 1)
        },
        widthResizeEnd_: function() {
            _.delay(function() {
                this.maximizedIssues_ && this.maximizedIssues_.forEach(function(a) {
                    a.maximize()
                },
                this)
            }.bind(this), 1)
        },
        fontResized_: function() {
            this.issueViews_.forEach(function(a) {
                a.render()
            },
            this)
        },
        cleanUpUI_: function() {
            this.clearIssues_();
            this.sidebarView_ && this.sidebarView_.remove();
            this.htmlDocumentMetadataView_ && this.htmlDocumentMetadataView_.remove()
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    n: this.createIssueEvent_.bind(this),
                    h: this.toggleIssuesEvent_.bind(this)
                })
            })
        },
        createIssueEvent_: function(a) {
            this.model.isOnHead() && a.target.tagName.toLowerCase() !== "input" && (this.sidebarView_.addIssue(), a.preventDefault())
        },
        toggleIssuesEvent_: function(a) {
            a.target.tagName.toLowerCase() !== "input" && (this.toggleIssues(), a.preventDefault())
        },
        contentViewLoaded_: function() {
            this.drawIssues_();
            this.trigger("loaded")
        },
        filterIssues_: function() {
            this.applyFilters(app.getCurrentUser().get("prefs").get("issueFilters"))
        },
        clearIssues_: function() {
            this.issueViews_.forEach(function(a) {
                a.remove()
            });
            this.issueViews_ = []
        },
        drawIssues_: function() {
            this.issueViews_ && this.clearIssues_();
            var a = this.model.get("revision"),
            b = this.contentView_.getScalableImage(),
            c = this.model.get("issuesCollection"),
            d = this.model.get("subExhibitId"),
            c = d ? c.filter(function(a) {
                return d === a.get("subExhibitId")
            },
            this) : c.toArray();
            c.forEach(function(c) {
                a && c.get("revision") > a || (c = new IssueView({
                    model: c,
                    parentPane: this.el,
                    contentView: this.contentView_,
                    proofingView: this,
                    scalableImage: b
                }), this.issueViews_.push(c), c.render(!0))
            },
            this);
            this.issueViews_.forEach(function(a) {
                a.completeRender()
            },
            this);
            this.maximizeSelectedIssue_()
        },
        maximizeSelectedIssue_: function() {
            var a = app.getRouter().getIssueID();
            this.jumpToIssue(this.model.get("issuesCollection").get(a))
        },
        addIssue_: function(a) {
            var b = this.contentView_.getSelection();
            b && a.set("highlight", b.getCurrentSelection());
            var c = new IssueView({
                model: a,
                parentPane: this.el,
                contentView: this.contentView_,
                proofingView: this,
                scalableImage: this.contentView_.getScalableImage()
            });
            this.issueViews_.push(c);
            c.render();
            a = a.get("highlight");
            b && a && b.restoreSelection(a)
        },
        issueRemoved_: function(a) {
            for (var b = 0; b < this.issueViews_.length; b++) if (this.issueViews_[b].model === a) {
                this.issueViews_.splice(b, 1);
                break
            }
        },
        saveHandlerEvent_: function(a) {
            this.model.get("issuesCollection").some(function(a) {
                return a.get("description").trim() === ""
            },
            this) && (a.preventDefault(), app.getMessageView().error(ProofingView.ERROR_EMPTY_TICKET_))
        }
    });
    ProofingView.ERROR_EMPTY_TICKET_ = "Save failed since there is an empty ticket.";
    window.ReaderContentView = Backbone.View.extend({
        model: null,
        loaded_: !1,
        iframe_: null,
        parentPane_: null,
        baseHref_: null,
        readerPopup_: null,
        rewritePlugins_: null,
        width_: null,
        widthAnimation_: null,
        fontSize_: null,
        createWidthToggle_: !1,
        squelchKeyboardBehavior_: !1,
        disableSelection_: !1,
        disableLinks_: !1,
        disableMathPreviews_: !1,
        hidePageNumbers_: !1,
        widthControlView_: null,
        pageNumberViews_: [],
        keyboard_: null,
        emulateKeyboard_: null,
        nonMathContentLoaded_: !1,
        content_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.setElement(this.parentPane_);
            this.addCSS_ = a.addCSS || [];
            this.baseHref_ = typeof a.baseHref !== "undefined" ? a.baseHref: null;
            this.onIFrameLoad_ = this.onIFrameLoad_.bind(this);
            this.closePopupBound_ = this.closePopup_.bind(this);
            this.dfnClickEventBound_ = this.dfnClickEvent_.bind(this);
            this.hrefClickEventBound_ = this.hrefClickEvent_.bind(this);
            this.triggerDOMLoadedBound_ = this.triggerDOMLoaded_.bind(this);
            this.contentToolbarView_ = a.contentToolbarView;
            this.createWidthToggle_ = a.createWidthToggle === void 0 ? !0 : !!a.createWidthToggle;
            this.squelchKeyboardBehavior_ = !!a.squelchKeyboardBehavior;
            this.disableSelection_ = !!a.disableSelection;
            this.disableLinks_ = !!a.disableLinks;
            this.disableMathPreviews_ = !!a.disableMathPreviews;
            this.forceDefaultCursor_ = !!a.forceDefaultCursor;
            this.fireSizeUpdatedDeferred_ = _.debounce(this.fireSizeUpdated_, 1);
            this.updatePageNumberViewsThrottled_ = _.throttle(this.updatePageNumberViews_, 100);
            this.hidePageNumbers_ = !!a.hidePageNumbers;
            this.pageNumberViews_ = [];
            this.fontCheckerCallbacks_ = [];
            this.rewritePlugins_ = {};
            a = app.getCurrentUser().get("prefs");
            this.width_ = a.get("contentWidth") || WidthControlView.DEFAULT_WIDTH;
            this.fontSize_ = a.get("contentFontSize") || WidthControlView.DEFAULT_FONT_SIZE;
            this.createWidthToggle_ && !this.squelchKeyboardBehavior_ && this.setupKeyboard_();
            if (!this.disableMathPreviews_) this.mathPreviewGenerator_ = new MathPreviewGenerator,
            this.mathPreviewGenerator_.on("loaded", this.mathPreviewsLoaded_, this);
            this.initializeRewritePlugins_()
        },
        getMimeType: function() {
            return this.model.get("contentMimeType")
        },
        getContent: function() {
            var a = XMLUtilities.serializeDocument(this.getProcessedDocument_());
            return (new HTMLSanitizer).fromReaderContent(a)
        },
        getContentForElement: function(a, b) {
            a.dataset.s9KeepContentForElement = !0;
            var c = this.getProcessedDocument_(),
            d = c.querySelector("[data-s9-keep-content-for-element=true]");
            d ? delete d.dataset.s9KeepContentForElement: a.dataset.uuid && (d = c.querySelector('[data-uuid="' + a.dataset.uuid + '"]'));
            delete a.dataset.s9KeepContentForElement;
            if (b === "inner") return XMLUtilities.getInnerXHTML(d);
            if (b === "outer") return XMLUtilities.serializeElement(d, d.parentElement || null)
        },
        getSelectedContent: function() {
            var a = this.getIframeDocument(),
            b = "";
            if (DOMUtils.userHasSelectedAll(a)) b = this.getContentForElement(a.body, "inner");
            else {
                var c = DOMUtils.getRange(a);
                if (c && (a = new RestorableRange, a.save(c), c = this.getProcessedDocument_(), a = a.restore(c))) {
                    a = this.normalizeSelectedRangeEnd_(a);
                    b = a.commonAncestorContainer;
                    if (b.nodeType !== Node.ELEMENT_NODE) b = b.parentElement;
                    a = DOMUtils.getSelectedFragment(a);
                    b = XMLUtilities.serializeFragment(a, b)
                }
            }
            return (new HTMLSanitizer).fromReaderContent(b)
        },
        setContent: function(a) {
            var b = this.getIframeDocument();
            this.content_ = a;
            if (b) b.removeEventListener("DOMContentLoaded", this.triggerDOMLoadedBound_, !0),
            this.nonMathContentLoaded_ = !1,
            a = this.ensureValidContent_(a),
            this.writeIntoIFrame_(a)
        },
        getBaseHref: function() {
            var a;
            a = this.baseHref_ ? this.baseHref_: this.model.url();
            return ! a ? null: a.substring(0, a.lastIndexOf("/") + 1)
        },
        render: function() {
            this.iframe_ && this.iframe_.remove();
            this.nonMathContentLoaded_ = !1;
            this.iframe_ = new ResizableIframeView({
                parentPane: this.el,
                fontCheckerMarkerClass: ReaderContentView.CONTENT_REMOVAL_CLASS_NAME
            });
            this.listenTo(this.iframe_, {
                ready: this.iframeReady_,
                contentMoved: this.iframeContentMovedEvent_,
                heightChanged: this.iframeHeightChangedEvent_
            });
            this.iframe_.render();
            this.iframe_.getIframe().style.width = this.width_;
            this.widthControlView_ && this.widthControlView_.remove();
            if (this.createWidthToggle_) this.widthControlView_ = new WidthControlView({
                parentPane: this.contentToolbarView_.getWidthTogglesArea(),
                widthTogglable: this
            }),
            this.widthControlView_.render();
            return this.el
        },
        setBodyStyle: function(a, b) {
            var c = this.getIframeDocument();
            c && c.body && (this.getIframeDocument().body.style[a] = b)
        },
        getRevision: function() {
            return this.model.get("revision")
        },
        getIframe: function() {
            return this.iframe_ ? this.iframe_.getIframe() : null
        },
        getIframeDocument: function() {
            return this.iframe_ ? this.iframe_.getDocument() : null
        },
        getIframeWindow: function() {
            return this.iframe_ ? this.iframe_.getWindow() : null
        },
        getWidgetAPI: function() {
            var a = this.rewritePlugins_.widgets;
            return a ? a.getWidgetAPI() : null
        },
        getSelection: function() {
            return this.selection_
        },
        getContentDocument: function() {
            return this.getIframeDocument()
        },
        isLoaded: function() {
            return this.loaded_
        },
        getScalableImage: function() {
            return null
        },
        getWidth: function() {
            return this.width_
        },
        getFontSize: function() {
            return this.fontSize_
        },
        setWidth: function(a, b) {
            if (this.width_ === a) return ! 1;
            this.width_ = a;
            this.widthControlView_ && this.widthControlView_.updateToggle();
            if (this.widthAnimation_) this.widthAnimation_.cancel(),
            this.widthAnimation_ = null;
            this.closePopup_();
            var c = this.getIframe();
            if (!c) return ! 0;
            b ? (c.style.width = this.width_, this.fireSizeUpdatedDeferred_()) : _.delay(function() {
                this.trigger("widthResizeStart");
                _.delay(function() {
                    var a = c.offsetWidth,
                    b = parseInt(this.width_, 10) - a;
                    this.widthAnimation_ = new Animation({
                        element: c,
                        duration: 400,
                        easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                        tick: function(f) {
                            c.style.width = Math.round(a + b * f) + "px";
                            this.fireSizeUpdatedDeferred_()
                        }.bind(this),
                        onComplete: function() {
                            this.widthAnimation_ = null;
                            c.style.width = this.width_;
                            this.trigger("widthResizeEnd");
                            this.fireSizeUpdatedDeferred_()
                        }.bind(this)
                    })
                }.bind(this), IssueView.AFTER_ANIMATION_DELAY)
            }.bind(this), 1);
            return ! 0
        },
        setFontSize: function(a) {
            return this.setFontSizeHelper_(a, !1)
        },
        remove: function() {
            this.emulateKeyboard_ && app.getKeyboardManager().remove(this.emulateKeyboard_);
            this.mathPreviewGenerator_ && this.mathPreviewGenerator_.remove();
            Object.keys(this.rewritePlugins_).forEach(function(a) {
                this.rewritePlugins_[a].remove()
            },
            this);
            this.rewritePlugins_ = {};
            var a = this.getIframeDocument();
            a && (a.defaultView && a.defaultView.removeEventListener("click", this.closePopupBound_), BackboneNativeAdapter.off(a, "click", "dfn", this.dfnClickEventBound_), BackboneNativeAdapter.off(a, "click", "[href]", this.hrefClickEventBound_), a.removeEventListener("DOMContentLoaded", this.triggerDOMLoadedBound_, !0));
            this.el.removeEventListener("click", this.closePopupBound_);
            this.getIframe() && this.getIframe().removeEventListener("load", this.onIFrameLoad_);
            this.iframe_ && this.iframe_.remove();
            this.undelegateEvents();
            this.closePopup_();
            this.removePageNumbers_();
            this.widthControlView_ && this.widthControlView_.remove();
            this.selection_ && (this.selection_.cleanup(), delete this.selection_);
            this.keyboard_ && app.getKeyboardManager().remove(this.keyboard_);
            this.stopListening()
        },
        adopt: function(a, b) {
            var b = b || "body",
            c = this.getIframeDocument();
            c && (c = c.querySelector(b)) && c.appendChild(a)
        },
        smoothScrollIntoView: function(a, b) {
            var c = b ? "x": ["x", "y"],
            d = DOMUtils.getParent(this.el, ".scrollable-content"); (new Fx.Scroll(d, {
                offset: {
                    x: 0,
                    y: -10
                }
            })).toElement(a, c)
        },
        setScrollPosition: function(a, b) {
            var c = DOMUtils.getParent(this.el, ".scrollable-content");
            c.scrollTop = b;
            c.scrollLeft = a
        },
        replaceBodyNode: function(a, b) {
            var c = this.getIframeDocument();
            if (c) {
                a = this.rewriteDocumentContent_(a);
                if (b) c.body.innerHTML = a;
                else {
                    var d = this.cacheImageNodes_(),
                    e = c.createElement("html");
                    e.innerHTML = a;
                    var e = e.querySelector("body"),
                    f = DOMUtils.getRange(this.getIframeDocument()),
                    g;
                    f && (g = new RestorableRange({
                        window: this.getIframeWindow()
                    }), g.save(f));
                    DOMUtils.replaceNode(c.body, e);
                    g && g.restore(c, !1);
                    this.restoreCachedImageNodes_(d);
                    this.setBodyStyle("fontSize", WidthControlView.FONT_SIZE_MAP[this.fontSize_]);
                    this.swapInMathPreviews_()
                }
                this.answersView_ && this.answersView_.render()
            }
        },
        replaceDocumentMetadata: function(a) {
            if (a) {
                var b = this.getIframeDocument();
                if (b && a.title) {
                    var c = b.head.querySelector("title");
                    c || (c = b.createElement("title"), b.head.appendChild(c));
                    c.outerHTML = a.title
                }
            }
        },
        insertHTML: function(a, b, c) {
            c = XMLUtilities.parseFragment(c, XMLUtilities.DOCUMENT_TYPE.HTML);
            this.rewritePartial_(c);
            var d = this.cacheImageNodes_();
            a.insertAdjacentHTML(b, XMLUtilities.serializeFragment(c, a.parentNode));
            this.restoreCachedImageNodes_(d);
            this.answersView_ && this.answersView_.render()
        },
        insertHTMLAtCursor: function(a) {
            a = XMLUtilities.parseFragment(a, XMLUtilities.DOCUMENT_TYPE.HTML);
            this.rewritePartial_(a);
            DOMUtils.insertFragmentAtCursor(this.getIframeDocument(), a);
            this.answersView_ && this.answersView_.render()
        },
        focus: function() {
            this.getIframe().contentDocument.body.focus()
        },
        getInitialScrollTop_: function() {
            var a, b = DOMUtils.getParent(this.el, ".scrollable-content"),
            c = app.getRouter().getS9ID(),
            d = app.getRouter().getID(),
            e = this.getIframeDocument();
            c ? a = XMLUtilities.getNodeByS9ID(e, c) : d && (a = e.getElementById(d));
            c = null;
            a && (c = DOMUtils.getOffset(a).top + DOMUtils.getOffset(this.el).top, b && (c -= DOMUtils.getOffset(b).top));
            return c
        },
        setFontSizeHelper_: function(a, b) {
            if (this.fontSize_ === a) return ! 1;
            this.closePopup_();
            this.fontSize_ = a;
            this.widthControlView_ && this.widthControlView_.updateToggle();
            _.delay(function() {
                this.setBodyStyle("fontSize", WidthControlView.FONT_SIZE_MAP[this.fontSize_]);
                this.pageNumberViews_.forEach(function(a) {
                    a.reposition()
                },
                this);
                b || this.trigger("fontResize")
            }.bind(this), 1);
            return ! 0
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    1 : this.toggleWidthKeyEvent_.bind(this, 1),
                    2 : this.toggleWidthKeyEvent_.bind(this, 2),
                    3 : this.toggleWidthKeyEvent_.bind(this, 3),
                    4 : this.toggleWidthKeyEvent_.bind(this, 4),
                    5 : this.toggleWidthKeyEvent_.bind(this, 5)
                })
            })
        },
        getProcessedDocument_: function() {
            var a = XMLUtilities.createDocument(XMLUtilities.DOCUMENT_TYPE.HTML);
            XMLUtilities.cloneDocumentChildren(this.getIframeDocument(), a);
            this.restore_(a);
            return a
        },
        restore_: function(a) {
            Object.keys(this.rewritePlugins_).forEach(function(b) {
                this.rewritePlugins_[b].restore(a)
            },
            this);
            a.querySelectorAll("." + ReaderContentView.CONTENT_REMOVAL_CLASS_NAME).forEach(function(a) {
                DOMUtils.detachElement(a)
            },
            this);
            a.querySelectorAll("[class]").forEach(function(a) {
                var c = !1;
                Array.prototype.slice.call(a.classList).forEach(function(d) {
                    d.indexOf("s9-habitat-") === 0 && (a.classList.remove(d), c = !0)
                },
                this);
                c && a.classList.length === 0 && a.removeAttribute("class")
            },
            this);
            a.xpathAll('//@*[starts-with(name(), "data-s9-habitat-")]').forEach(function(a) {
                DOMUtils.getOwnerElement(a).removeAttribute(a.name)
            })
        },
        rewritePartial_: function(a) {
            this.generateMathPreviews_(a, !0);
            Object.keys(this.rewritePlugins_).forEach(function(b) {
                this.rewritePlugins_[b].rewritePartial(a)
            },
            this)
        },
        rewriteDocumentContent_: function(a) {
            try {
                a = (new HTMLSanitizer).toReaderContent(a)
            } catch(b) {}
            var c = XMLUtilities.parseDocument(a, XMLUtilities.DOCUMENT_TYPE.HTML);
            Object.keys(this.rewritePlugins_).forEach(function(a) {
                this.rewritePlugins_[a].rewrite(c)
            },
            this);
            this.generateMathPreviews_(c);
            return XMLUtilities.serializeDocument(c)
        },
        generateMathPreviews_: function(a, b) {
            this.disableMathPreviews_ || this.mathPreviewGenerator_.generatePreviews(Array.prototype.slice.call(a.querySelectorAll("math")), !!b)
        },
        mathPreviewsLoaded_: function() {
            this.nonMathContentLoaded_ && (this.swapInMathPreviews_(), this.onFullyLoaded_())
        },
        swapInMathPreviews_: function() {
            if (!this.disableMathPreviews_) {
                var a = this.getIframeDocument();
                this.mathPreviewGenerator_.getLoadedPreviews().forEach(function(b) {
                    if (!b.s9id || !b.previewNode) console.error("Got a math preview obj missing S9ID or preview node!", b);
                    else {
                        var c = XMLUtilities.getNodeByS9ID(a, b.s9id);
                        c ? c.classList.contains(MathPreviewGenerator.MATH_PREVIEW_CLASS) || (a.adoptNode(b.previewNode), DOMUtils.replaceNode(c, b.previewNode)) : console.error("Did not find a math node for the specified S9ID!", b.s9id)
                    }
                },
                this)
            }
        },
        toggleWidthKeyEvent_: function(a, b) {
            if (b.target.tagName.toLowerCase() !== "input") {
                var c = WidthControlView.KEY_MAP[a],
                d = this.setWidth(c.WIDTH);
                this.setFontSizeHelper_(c.FONT_SIZE, d)
            }
        },
        writeIntoIFrame_: function(a) {
            var b = app.getConfig().get("fileVersion"),
            c = [];
            c.push("<head>");
            var d = this.getBaseHref();
            d && c.push('<base href="' + d + '" class="' + ReaderContentView.CONTENT_REMOVAL_CLASS_NAME + '" />');
            this.addCSS_.forEach(function(a) {
                var d = URI(a); ! d.host() && !d.scheme() && (a = URLUtils.expand("{+habitatHost}{+path}{?version}", {
                    path: a,
                    version: b
                }));
                c.push('<link rel="stylesheet" type="text/css" href="' + a + '" class="' + ReaderContentView.CONTENT_REMOVAL_CLASS_NAME + '" />')
            },
            this);
            c = c.join("\n");
            a = a.replace("<head>", c);
            a = this.rewriteDocumentContent_(a);
            this.onIframeDOMUnload_();
            d = this.getIframeDocument();
            d.open();
            d.write(a);
            d.addEventListener("DOMContentLoaded", this.triggerDOMLoadedBound_, !0);
            d.close()
        },
        bindLoadEvent_: function() {
            this.iframe_.getIframe().addEventListener("load", this.onIFrameLoad_)
        },
        onIframeDOMLoad_: function() {
            var a = this.getIframeDocument();
            BackboneNativeAdapter.on(a, "click", "dfn", this.dfnClickEventBound_);
            BackboneNativeAdapter.on(a, "click", "[href]", this.hrefClickEventBound_);
            a.defaultView.addEventListener("click", this.closePopupBound_);
            this.el.addEventListener("click", this.closePopupBound_);
            this.forceDefaultCursor_ && a.documentElement.classList.add("s9-habitat-force-default-cursor");
            a.documentElement.classList.add("s9-habitat-content-loading");
            this.setBodyStyle("fontSize", WidthControlView.FONT_SIZE_MAP[this.fontSize_])
        },
        onIFrameLoad_: function() {
            var a = this.getIframeDocument();
            app.getKeyboardManager().registerIframe(this.iframe_.getIframe());
            this.keyboard_ && app.getKeyboardManager().activate(this.keyboard_);
            if (!BrowserFeatures.iFramePropagatesKeyEvents()) {
                var b = this.doc_.querySelector(".scrollable-content");
                this.emulateKeyboard_ = Hacks.emulateKeyScrolling(this.model, a, this.getIframe(), b);
                app.getKeyboardManager().activate(this.emulateKeyboard_)
            }
            this.answersView_ = new AnswersView({
                doc: a
            });
            this.answersView_.render();
            if (!this.disableSelection_) a = this.getIframeWindow(),
            this.selection_ = new Selection(a, a.document);
            this.hidePageNumbers_ || this.drawPageNumbers_();
            this.nonMathContentLoaded_ = !0;
            if (this.disableMathPreviews_ || this.mathPreviewGenerator_.isLoaded()) this.swapInMathPreviews_(),
            this.onFullyLoaded_();
            app.getCurrentUser().hasWidgetDomainAccess() || app.getMessageView().error("Failed to load widget permissions. Widgets may not function properly.")
        },
        onFullyLoaded_: function() {
            this.getIframeDocument().documentElement.classList.remove("s9-habitat-content-loading");
            this.iframe_.ensureContentFit();
            this.loaded_ = !0;
            this.trigger("loaded", this)
        },
        triggerDOMLoaded_: function() {
            this.onIframeDOMLoad_();
            this.trigger("DOMLoaded")
        },
        onIframeDOMUnload_: function() {
            var a = this.getIframeDocument();
            BackboneNativeAdapter.off(a, "click", "dfn", this.dfnClickEventBound_);
            BackboneNativeAdapter.off(a, "click", "[href]", this.hrefClickEventBound_);
            a.defaultView && a.defaultView.removeEventListener("click", this.closePopupBound_);
            this.emulateKeyboard_ && app.getKeyboardManager().remove(this.emulateKeyboard_)
        },
        iframeReady_: function() {
            this.bindLoadEvent_();
            Patches.patchDOM(this.getIframeWindow());
            this.trigger("ready");
            var a = this.content_ || this.model.get("content");
            a || (a = "<html><head></head><body></body></html>");
            this.getMimeType() !== "text/html" && (a = "");
            a = this.ensureValidContent_(a);
            this.writeIntoIFrame_(a)
        },
        initializeRewritePlugins_: function() {
            var a = {
                math: MathRewritePlugin,
                images: ImageRewritePlugin,
                widgets: WidgetRewritePlugin,
                s9Scrollable: S9ScrollableRewritePlugin
            };
            this.rewritePlugins_ = {};
            Object.keys(a).forEach(function(b) {
                this.rewritePlugins_[b] = new a[b]({
                    contentView: this
                })
            },
            this)
        },
        ensureValidContent_: function(a) {
            return /<head>/.test(a) ? a: a = /<html>/.test(a) ? a.replace("<html>", "<html><head></head>") : /<body>/.test(a) ? "<html><head></head>" + a: "<html><head></head><body>" + a + "</body>"
        },
        updateS9Scrollables_: function() {
            var a = this.getIframeDocument();
            a && a.querySelectorAll(".s9-scrollable").forEach(function(a) {
                a.classList.toggle("s9-is-scrollable", a.scrollWidth > a.offsetWidth)
            },
            this)
        },
        removePageNumbers_: function() {
            this.pageNumberViews_.forEach(function(a) {
                a.remove()
            });
            this.pageNumberViews_ = []
        },
        drawPageNumbers_: function() {
            this.removePageNumbers_();
            var a = this.getIframeDocument(),
            b = WidthControlView.SHOW_PAGE_NUMBERS[this.width_],
            c = {},
            d = a.querySelectorAll("*[startpage]").map(function(a) {
                var b = a.getAttribute("startpage");
                if (b) return c[b] = !0,
                {
                    pageNumber: b,
                    element: a,
                    type: PageNumberView.TYPE_MANUAL
                }
            },
            this),
            a = a.querySelectorAll("*[sourcepage]").map(function(a) {
                var b = a.getAttribute("sourcepage");
                if (b && !c[b]) return c[b] = !0,
                {
                    pageNumber: b,
                    element: a,
                    type: PageNumberView.TYPE_FIRST
                }
            },
            this),
            d = d.concat(a),
            d = d.filter(function(a) {
                return !! a
            },
            this);
            d.forEach(function(a) {
                a = new PageNumberView({
                    parentPane: this.el,
                    number: a.pageNumber,
                    block: a.element,
                    type: a.type
                });
                a.render();
                b ? a.show() : a.hide();
                this.pageNumberViews_.push(a)
            },
            this)
        },
        updatePageNumberViews_: function() {
            this.pageNumberViews_.forEach(function(a) {
                WidthControlView.SHOW_PAGE_NUMBERS[this.width_] ? (a.reposition(), a.show()) : a.hide()
            },
            this)
        },
        hrefClickEvent_: function(a, b) {
            this.disableLinks_ ? a.preventDefault() : /^\[remark\:/.test(b.getAttribute("href")) ? this.handleRemark_(a, b) : this.handleDefault_(a, b)
        },
        dfnClickEvent_: function(a, b) {
            this.disableLinks_ || this.handleDefinition_(a, b)
        },
        handleRemark_: function(a, b) {
            a.preventDefault();
            a.stopPropagation();
            var c = this.readerPopup_ && this.readerPopup_.getTarget();
            this.closePopup_();
            if (c !== b) c = (c = b.getAttribute("href").match(/\[remark:([^\]]+)\]/)) && c[1],
            (c = app.getProjectModel().get("remarks").getRemark(c)) ? (this.readerPopup_ = new ReaderPopupView({
                contentView: this,
                openNear: b,
                model: c,
                document: this.doc_,
                window: this.win_
            }), this.readerPopup_.render()) : app.getMessageView().error("Cannot resolve remark", MessageView.DEFAULT_DISPLAY_TIME)
        },
        handleDefinition_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                a.stopPropagation();
                var c = this.readerPopup_ && this.readerPopup_.getTarget();
                this.closePopup_();
                if (c !== b) c = b.getAttribute("title"),
                (c = app.getProjectModel().get("glossary").getEntry(c)) ? (this.readerPopup_ = new DefinitionPopupView({
                    contentView: this,
                    openNear: b,
                    model: c.get("definition"),
                    entryModel: c
                }), this.readerPopup_.render()) : app.getMessageView().error("Cannot resolve definition", MessageView.DEFAULT_DISPLAY_TIME)
            }
        },
        handleDefault_: function(a, b) {
            if (b.getAttribute("target") !== "_blank" && (a.preventDefault(), a.stopPropagation(), this.model.getLinkResolver)) {
                var c = b.getAttribute("href");
                try {
                    this.win_.open(this.model.getLinkResolver().resolve(c))
                } catch(d) {
                    app.getMessageView().error(d, MessageView.DEFAULT_DISPLAY_TIME)
                }
            }
        },
        closePopup_: function() {
            if (this.readerPopup_) this.readerPopup_.remove(),
            this.readerPopup_ = null
        },
        cacheImageNodes_: function() {
            var a = {};
            this.getContentDocument().body.querySelectorAll("img").forEach(function(b) {
                var c = XMLUtilities.getS9ID(b);
                c && (a[c] = b)
            });
            return a
        },
        restoreCachedImageNodes_: function(a) {
            this.getContentDocument().body.querySelectorAll("img").forEach(function(b) {
                var c = XMLUtilities.getS9ID(b); (c = a[c]) && c.outerHTML === b.outerHTML && DOMUtils.replaceNode(b, c)
            })
        },
        normalizeSelectedRangeEnd_: function(a) {
            for (var b = 0; b < 1E3 && a.endOffset === 0; b++) a.setEndBefore(a.endContainer);
            b === 1E3 && console.warn("Programming Error: Infinite loop setting range");
            return a
        },
        iframeContentMovedEvent_: function() {
            this.updatePageNumberViewsThrottled_();
            this.updateS9Scrollables_();
            this.trigger("contentMoved")
        },
        iframeHeightChangedEvent_: function() {
            this.fireSizeUpdatedDeferred_()
        },
        fireSizeUpdated_: function() {
            var a = this.getInitialScrollTop_(),
            b = DOMUtils.getParent(this.el, ".scrollable-content");
            if (a) b.scrollTop = a;
            this.trigger("sizeUpdated")
        }
    });
    ReaderContentView.HABITAT_PREFIX_REGEXP = /^s9-habitat-.*/;
    ReaderContentView.IFRAME_CSS_ASSET_ = "css/iframe.css";
    ReaderContentView.CONTENT_REMOVAL_CLASS_NAME = "s9-habitat-remove-element";
    ReaderContentView.getIframeCSS = function() {
        return [URLUtils.expand("{+staticHost}/{+asset}", {
            asset: ReaderContentView.IFRAME_CSS_ASSET_
        }), app.getConfig().get("fontsURL"), app.getConfig().get("fontsURLContent")]
    };
    window.RegisterView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        waitFor_: null,
        form_: null,
        focusOnRender_: !1,
        initialize: function(a) {
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.loc_ = a.location || window.location;
            this.focusOnRender_ = !!a.focusOnRender;
            app.getMessageView().title("Register - Inkling Habitat");
            this.model.fetch({
                publishAuthErrors: !1,
                error: function(a, c, d) {
                    console.error("Unable to retrieve account information", arguments);
                    this.loc_.href = "/login"
                }.bind(this)
            })
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null;
            if (this.model.isLoaded()) this.setElement(Templates["landing/register"](this.getTemplateData_())),
            this.parentPane_.appendChild(this.el),
            this.form_ = new FormView({
                el: this.el
            }),
            this.listenTo(this.form_, "submit", this.submitEvt_),
            this.trigger("loaded"),
            this.focusOnRender_ && this.el.querySelector('input[type="text"]').focus();
            else {
                this.el.classList.add("register-loading");
                var a = document.createElement("div");
                this.el.appendChild(a);
                this.waitFor_ = new WaitFor({
                    waitFor: this.model,
                    showSpinnerOn: a,
                    whenLoaded: this.render.bind(this)
                });
                this.parentPane_.appendChild(this.el)
            }
        },
        focus: function() {
            this.el.querySelector('input[type="text"]').focus()
        },
        remove: function() {
            if (this.form_) this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null;
            app.getMessageView().setDefaultElement();
            RegisterView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            var a = this.model.get("firstName"),
            b = this.model.get("lastName");
            return {
                firstName: a,
                lastName: b,
                showName: !a || !b,
                tosURL: app.getConfig().get("documentationURL") + "legal/current/tos.html"
            }
        },
        confirmFieldValues_: function() {
            var a = this.el.querySelector('[name="firstName"]');
            if (a && !a.value) return a;
            if ((a = this.el.querySelector('[name="lastName"]')) && !a.value) return a;
            a = this.el.querySelector("#tos");
            return ! a || !a.checked ? a: null
        },
        submitEvt_: function() {
            var a = this.confirmFieldValues_();
            if (a) {
                app.getMessageView().setElement(this.el.querySelector(".error-message"));
                var b = this.el.querySelector(".error-message"),
                c = parseInt(a.clientHeight, 10),
                d = DOMUtils.getOffset(a).top - DOMUtils.getOffset(DOMUtils.getParent(a, ".landing-form")).top;
                b.style.top = d + c / 2 + "px";
                c = a.dataset.fieldName + " is required";
                app.getMessageView().error(c);
                b.classList.add("floating");
                a.focus()
            } else a = this.el.querySelector('[type="submit"]'),
            a.value = "Registering...",
            a.disabled = !0,
            this.updateModel_(this.registerHabitatUser_.bind(this))
        },
        updateModel_: function(a) {
            var b = this.el.querySelector('[name="firstName"]'),
            c = this.el.querySelector('[name="lastName"]');
            b && this.model.set("firstName", b.value);
            c && this.model.set("lastName", c.value);
            b || c ? this.model.save(null, {
                success: a,
                error: this.showError_.bind(this),
                saveAttrs: ["firstName", "lastName"]
            }) : this.win_.setTimeout(a, 1)
        },
        registerHabitatUser_: function() {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.HABITAT_REGISTRATION,
                eventInfo: this.getRegistrationEventData_(),
                async: !1
            });
            this.model.enableHabitatAccess({
                success: function() {
                    this.loc_.href = "/dashboard"
                }.bind(this),
                error: function(a, b) {
                    HabitatRequest.isFailureWithStatusCodeAndReason(b, 503, "userQuota") || HabitatRequest.isFailureWithStatusCodeAndReason(b, 503, "projectQuota") ? this.loc_.href = "/capacity": this.showError_()
                }.bind(this),
                saveAttrs: ["habitatUser"]
            })
        },
        showError_: function() {
            var a = this.el.querySelector('[type="submit"]');
            a.value = "Register Account";
            a.disabled = !1;
            app.getMessageView().error("There was an error registering. Try again later.");
            this.el.querySelector(".error-message").classList.remove("floating")
        },
        getRegistrationEventData_: function() {
            var a = DOMUtils.getFormValues(this.el.querySelector("form"));
            Object.keys(a).forEach(function(b) {
                a[b] === "" && delete a[b]
            });
            _.extend(a, this.model.toJSON({
                saveAttrs: ["firstName", "lastName", "email"]
            }));
            return a
        }
    });
    window.ResetPasswordPopupView = PopupView.extend({
        req_: null,
        username_: null,
        form_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            var b = a.username;
            delete a.username;
            a.className = "reset-password-popup support-dialog";
            a.maskVisible = !0;
            a.removeOnClose = !0;
            ResetPasswordPopupView.__super__.initialize.call(this, a);
            this.username_ = b
        },
        render: function() {
            if (this.el) {
                var a = this.el.querySelector("#resetPasswordUsername");
                if (a) this.username_ = a.value;
                DOMUtils.detachElement(this.el)
            }
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            this.setElement(Templates["common/resetPasswordPopup"](this.getTemplateData_()));
            ResetPasswordPopupView.__super__.render.apply(this, arguments);
            this.open();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "cancel", this.formCancelEvent_);
            this.listenTo(this.form_, "submit", this.formSubmitEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            ResetPasswordPopupView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            return {
                username: this.username_
            }
        },
        formCancelEvent_: function() {
            this.close()
        },
        formSubmitEvent_: function() {
            var a = this.el.querySelector("#resetPasswordUsername"),
            b = app.getMessageView();
            a.value ? (UserModel.requestPasswordReset(a.value), b.show("Password reset email sent to " + a.value, MessageView.DEFAULT_DISPLAY_TIME), this.close()) : (b.error("Must enter an email address", MessageView.DEFAULT_DISPLAY_TIME), a.focus())
        }
    });
    window.ResizableIframeView = Backbone.View.extend({
        parentPane_: null,
        fontCheckerMarkerClass_: null,
        ready_: !1,
        observer_: null,
        rewriteObserver_: null,
        fontChecker_: null,
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.fontCheckerMarkerClass_ = a.fontCheckerMarkerClass || null;
            this.doc_ = a.document || document;
            this.documentMutationEventBound_ = this.documentMutationEvent_.bind(this);
            this.iframeResizeEventBound_ = this.iframeResizeEvent_.bind(this);
            this.contentLoadedEventBound_ = this.contentLoadedEvent_.bind(this);
            this.iframeLoadEventBound_ = this.iframeLoadEvent_.bind(this);
            this.fontsLoadedEventBound_ = this.fontsLoadedEvent_.bind(this);
            this.fitToContentThrottled_ = _.throttle(this.fitToContent_, ResizableIframeView.IFRAME_UPDATE_THROTTLE_TIME_);
            this.checkFontsThrottled_ = _.throttle(this.checkFonts_, ResizableIframeView.IFRAME_UPDATE_THROTTLE_TIME_);
            this.fireContentMovedDeferred_ = _.debounce(this.fireContentMoved_, 1);
            this.fireHeightChangedDeferred_ = _.debounce(this.fireHeightChanged_, 1)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.ready_ = !1;
            this.setElement(this.doc_.createElement("iframe"));
            this.el.addEventListener("load", this.iframeLoadEventBound_);
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            var a = this.getWindow();
            a && a.removeEventListener("resize", this.iframeResizeEventBound_); (a = this.getDocument()) && a.fonts && a.fonts.removeEventListener("loadingdone", this.fontsLoadedEventBound_);
            this.el.removeEventListener("load", this.iframeLoadEventBound_);
            if (this.observer_) this.observer_.disconnect(),
            this.observer_ = null;
            if (this.rewriteObserver_) this.rewriteObserver_.remove(),
            this.rewriteObserver_ = null;
            if (this.fontChecker_) this.fontChecker_.remove(),
            this.fontChecker_ = null;
            this.ready_ = !1;
            ResizableIframeView.__super__.remove.call(this)
        },
        getIframe: function() {
            return this.el
        },
        getDocument: function() {
            return this.ready_ && this.el.contentDocument || null
        },
        getWindow: function() {
            return this.ready_ && this.el.contentWindow || null
        },
        ensureContentFit: function() {
            this.fitToContent_()
        },
        initializeIframe_: function() {
            var a = this.el.contentWindow;
            Patches.patchDOM(a);
            a.addEventListener("resize", this.iframeResizeEventBound_);
            a = this.el.contentDocument;
            this.observer_ = new MutationSummary({
                rootNode: a,
                queries: [{
                    all: !0
                }],
                callback: this.documentMutationEventBound_
            });
            this.rewriteObserver_ = new DocumentWriteObserver({
                document: a
            });
            this.listenTo(this.rewriteObserver_, "rewrite", this.documentWriteEvent_);
            a.fonts && a.fonts.addEventListener("loadingdone", this.fontsLoadedEventBound_)
        },
        documentWriteEvent_: function() {
            this.getWindow().addEventListener("resize", this.iframeResizeEventBound_);
            var a = this.el.contentDocument;
            a.fonts && a.fonts.addEventListener("loadingdone", this.fontsLoadedEventBound_)
        },
        documentMutationEvent_: function(a) {
            a = a[0];
            a.added.forEach(this.bindElementHandlers_, this);
            a.removed.forEach(this.unbindElementHandlers_, this);
            this.fitToContentThrottled_();
            this.fireContentMovedDeferred_()
        },
        iframeLoadEvent_: function() {
            this.el.removeEventListener("load", this.iframeLoadEventBound_);
            this.initializeIframe_();
            _.defer(function() {
                if (this.el.contentDocument) this.ready_ = !0,
                this.fitToContent_(!0),
                this.trigger("ready")
            }.bind(this))
        },
        iframeResizeEvent_: function() {
            this.fitToContentThrottled_();
            this.fireContentMovedDeferred_()
        },
        fontsLoadedEvent_: function() {
            this.fitToContentThrottled_();
            this.fireContentMovedDeferred_()
        },
        contentLoadedEvent_: function(a) {
            this.fitToContentThrottled_();
            this.fireContentMovedDeferred_(); ["link", "style"].indexOf(a.target.tagName.toLowerCase()) !== -1 && this.checkFontsThrottled_()
        },
        checkFonts_: function() {
            var a = this.getDocument();
            if (a) this.fontChecker_ && this.fontChecker_.remove(),
            this.fontChecker_ = new Hacks.FontChecker({
                doc: a,
                fontNames: Hacks.READER_CARD_FONTS,
                classes: [this.fontCheckerMarkerClass_],
                callback: function() {
                    this.fontChecker_ = null;
                    this.fitToContentThrottled_();
                    this.fireContentMovedDeferred_()
                }.bind(this)
            })
        },
        bindElementHandlers_: function(a) {
            var b = a.nodeName.toLowerCase();
            ResizableIframeView.LOADABLE_ELEMENTS_.indexOf(b) !== -1 && (a.addEventListener("load", this.contentLoadedEventBound_), a.addEventListener("error", this.contentLoadedEventBound_))
        },
        unbindElementHandlers_: function(a) {
            var b = a.nodeName.toLowerCase();
            ResizableIframeView.LOADABLE_ELEMENTS_.indexOf(b) !== -1 && (a.removeEventListener("load", this.contentLoadedEventBound_), a.removeEventListener("error", this.contentLoadedEventBound_))
        },
        fitToContent_: function(a) {
            var b = this.getDocument();
            if (b && b.documentElement) {
                var c = Hacks.getScrollableDimensions(b.documentElement).height + "px";
                if (c !== this.el.style.height) this.el.style.height = c,
                Hacks.forceLayout(this.el.contentDocument.documentElement),
                this.el.style.height = Hacks.getScrollableDimensions(b.documentElement).height + "px",
                a || this.fireHeightChangedDeferred_()
            }
        },
        fireContentMoved_: function() {
            this.ready_ && this.trigger("contentMoved")
        },
        fireHeightChanged_: function() {
            this.ready_ && this.trigger("heightChanged")
        }
    });
    ResizableIframeView.IFRAME_UPDATE_THROTTLE_TIME_ = 50;
    ResizableIframeView.LOADABLE_ELEMENTS_ = "audio,embed,iframe,img,input,link,object,script,style,track,video".split(",");
    window.ResizeHandleView = Backbone.View.extend({
        parentPane_: null,
        draggable_: null,
        tick_: null,
        storageKey_: null,
        originalPosition_: null,
        originalWidth_: null,
        position_: null,
        className: "drag-resize-handle",
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.tick_ = a.tick;
            this.storageKey_ = a.storageKey;
            this.position_ = a.position || ResizeHandleView.POSITION.RIGHT;
            this.win_ = a.window || window;
            this.doc_ = a.document || document
        },
        render: function() {
            var a = this.win_.getComputedStyle(this.parentPane_).position;
            a !== "relative" && a !== "absolute" ? console.error("Cannot attach a ResizeHandleView to a statically positioned element") : (this.position_ === ResizeHandleView.POSITION.LEFT ? this.parentPane_.insertBefore(this.el, this.parentPane_.firstChild) : this.parentPane_.appendChild(this.el), this.el.classList.add("resize-" + this.position_), a = this.loadWidth_(), a >= 0 && this.setWidth_(a), this.bindDraggable_())
        },
        remove: function() {
            this.parentPane_.classList.remove("resize-handle-dragging");
            this.draggable_ && this.draggable_.remove();
            ResizeHandleView.__super__.remove.call(this)
        },
        bindDraggable_: function() {
            this.draggable_ = app.getDragManager().makeDraggable({
                el: this.el,
                onStart: this.handleDragged_.bind(this),
                onMove: this.handleMoved_.bind(this),
                onDrop: this.handleDropped_.bind(this)
            })
        },
        setWidth_: function(a) {
            var b = parseInt(DOMUtils.getComputedStyle(this.parentPane_).minWidth, 10);
            a < b && (a = b);
            this.parentPane_.style.width = a + "px";
            return a
        },
        saveWidth_: function(a) {
            if (this.storageKey_) {
                var b = ResizeHandleView.PREFS_KEY_ + this.storageKey_,
                a = {
                    width: a
                };
                app.getCurrentUser().get("prefs").set(b, a)
            }
        },
        loadWidth_: function() {
            if (this.storageKey_) {
                var a = ResizeHandleView.PREFS_KEY_ + this.storageKey_;
                if (a = app.getCurrentUser().get("prefs").get(a)) return a.width
            }
        },
        handleDragged_: function(a) {
            this.parentPane_.classList.add("resize-handle-dragging");
            this.originalPosition_ = a.screenX;
            this.originalWidth_ = this.parentPane_.offsetWidth
        },
        handleMoved_: function(a) {
            a = a.screenX - this.originalPosition_;
            a = this.originalWidth_ + (this.position_ === ResizeHandleView.POSITION.RIGHT ? a: -a);
            a = this.setWidth_(a);
            this.saveWidth_(a);
            this.tick_ && this.tick_()
        },
        handleDropped_: function() {
            this.parentPane_.classList.remove("resize-handle-dragging");
            this.originalWidth_ = this.originalPosition_ = null
        }
    });
    ResizeHandleView.PREFS_KEY_ = "resizerDimensions_";
    ResizeHandleView.POSITION = {
        LEFT: "left",
        RIGHT: "right"
    };
    window.RevisionListView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        isInSlider_: !1,
        hideLatestVersion_: !1,
        useLightColors_: !1,
        events: {
            "click .revision:not(.active)": "clickRevisionEvent_",
            "click .newer": "clickNewerEvent_",
            "click .older": "clickOlderEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.isInSlider_ = !!a.isInSlider;
            this.hideLatestVersion_ = !!a.hideLatestVersion;
            this.useLightColors_ = !!a.useLightColors;
            this.listenTo(this.model.getRevisions(), "loaded", this.render)
        },
        render: function() {
            var a = this.saveState_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/revisionList"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.restoreState_(a)
        },
        saveState_: function() {
            var a = this.el.querySelector("ul");
            return {
                scrollTop: a ? a.scrollTop: 0
            }
        },
        restoreState_: function(a) {
            this.el.querySelector("ul").scrollTop = a.scrollTop
        },
        getRevisions_: function(a) {
            var b = app.getSaveHandler().isSaveRequired(),
            c = this.model.getRevisions(),
            d = c.map(function(c) {
                var d = new Date(c.get("date")),
                g = (!b || this.hideLatestVersion_) && a === c.get("revision");
                return {
                    revision: c.get("revision"),
                    date: c.get("date"),
                    time: FormatTime.getTimeString(d),
                    isActive: g,
                    nameColor: this.generateNameColor_(c.get("author")),
                    author: this.getAuthorName_(c.get("author"))
                }
            },
            this);
            if (b && !this.hideLatestVersion_) d.unshift({
                note: "Current Version",
                revision: null,
                isActive: !0,
                date: Date.now()
            });
            else if (this.hideLatestVersion_ && !b && !c.hasNewer()) d.shift();
            else if (d.length && !d.some(function(a) {
                return a.isActive
            })) d[0].isActive = !0;
            return d
        },
        insertDateMarkers_: function(a) {
            var b = null;
            return a.reduce(function(a, d) {
                var e = new Date(d.date);
                if (!b || e.toDateString() !== b.toDateString()) a.push({
                    dateMarker: !0,
                    date: FormatTime.getRelativeDateString(e).toUpperCase()
                }),
                b = e;
                a.push(d);
                return a
            },
            [])
        },
        getTemplateData_: function() {
            var a = this.getRevisions_(this.model.get("revision") || app.getProjectModel().get("revision")),
            a = this.insertDateMarkers_(a);
            return {
                isInSlider: this.isInSlider_,
                entries: a,
                hasNewer: !this.model.isOnHead() && this.model.getRevisions().hasNewer(),
                hasOlder: this.model.getRevisions().hasOlder()
            }
        },
        getAuthorName_: function(a) {
            return app.getUsers().getDisplayName(a) || a
        },
        generateNameColor_: function(a) {
            var b = 0;
            a.split("").forEach(function(a) {
                a = a.charCodeAt(0);
                b = (b * 11 + a * a) % 36
            });
            return "hsl(" + [b * 10, RevisionListView.NAME_COLOR_SATURATION_, this.useLightColors_ ? RevisionListView.NAME_COLOR_LIGHTNESS_.LIGHT: RevisionListView.NAME_COLOR_LIGHTNESS_.DARK].join(", ") + ")"
        },
        clickRevisionEvent_: function(a, b) {
            this.trigger("revisionSelected", parseInt(b.dataset.revision, 10))
        },
        clickNewerEvent_: function() {
            var a = this.model.getRevisions();
            a.fetchNewer();
            this.showSpinner_(a)
        },
        clickOlderEvent_: function() {
            var a = this.model.getRevisions();
            a.fetchOlder();
            this.showSpinner_(a)
        },
        showSpinner_: function(a) {
            this.waitForOverlay_ = DOMUtils.createElement("div", {
                className: "revision-spinner-overlay"
            });
            this.waitForOverlay_.innerHTML = '<div class="ui-spinner"></div>';
            this.el.appendChild(this.waitForOverlay_);
            this.waitFor_ = new WaitFor({
                waitFor: a,
                showSpinnerOn: this.waitForOverlay_.querySelector(".ui-spinner"),
                whenLoaded: this.removeSpinner_.bind(this)
            })
        },
        removeSpinner_: function() {
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null,
            DOMUtils.detachElement(this.waitForOverlay_),
            this.waitForOverlay_ = null
        }
    });
    RevisionListView.NAME_COLOR_SATURATION_ = "80%";
    RevisionListView.NAME_COLOR_LIGHTNESS_ = {
        LIGHT: "75%",
        DARK: "40%"
    };
    window.RevisionToggleView = Backbone.View.extend({
        model: null,
        currentRevision_: null,
        parentPane_: null,
        controlsPane_: null,
        revisionList_: null,
        events: {
            mouseover: "mouseoverEvent_",
            mouseout: "mouseoutEvent_",
            "click .ui-slider-current:not(.old-revision)": "showEvent_",
            "click .restore-head-button": "clickHeadEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.controlsPane_ = a.controlsPane;
            this.listenTo(this.model.getRevisions(), "loaded", this.render);
            this.currentRevision_ = new RevisionInfoModel({
                revision: this.model.get("revision")
            });
            this.model.isOnHead() || this.currentRevision_.fetch()
        },
        render: function() {
            var a = this.saveState_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/revisionToggle"](this.getTemplateData_()));
            this.drawRevisionList_();
            this.parentPane_.appendChild(this.el);
            this.restoreState_(a);
            this.controlsPane_.classList.toggle("on-old-revision", !this.model.isOnHead());
            this.listenTo(this.currentRevision_, "loaded", this.render)
        },
        remove: function() {
            this.controlsPane_.classList.remove("on-old-revision");
            this.removeRevisionList_();
            RevisionToggleView.__super__.remove.apply(this, arguments)
        },
        drawRevisionList_: function() {
            this.removeRevisionList_();
            this.revisionList_ = new RevisionListView({
                parentPane: this.el.querySelector(".ui-slider"),
                model: this.model,
                isInSlider: !0
            });
            this.revisionList_.render();
            this.listenTo(this.revisionList_, "revisionSelected", this.revisionSelectedEvent_)
        },
        removeRevisionList_: function() {
            if (this.revisionList_) this.stopListening(this.revisionList_),
            this.revisionList_.remove(),
            this.revisionList_ = null
        },
        saveState_: function() {
            var a = this.el.querySelector(".ui-slider");
            return {
                wasVisible: a ? a.classList.contains("visible") : !1,
                scrollTop: a ? a.querySelector("ul").scrollTop: 0
            }
        },
        restoreState_: function(a) {
            var b = this.el.querySelector(".ui-slider");
            b.classList.toggle("visible", a.wasVisible);
            b.querySelector("ul").scrollTop = a.scrollTop
        },
        getTemplateData_: function() {
            var a = null,
            b = null;
            if (this.currentRevision_.isLoaded() && (this.currentRevision_.get("files") || []).some(function(a) {
                return a.path === this.model.get("filePath")
            },
            this)) a = FormatTime.getRelativeDateTimeString(this.currentRevision_.get("date"), " ago"),
            b = this.getAuthorName_(this.currentRevision_.get("author"));
            return {
                lastUpdated: a,
                lastUpdatedBy: b,
                onHead: this.model.isOnHead(),
                hasEntries: !!this.model.getRevisions().length
            }
        },
        getAuthorName_: function(a) {
            return app.getUsers().getDisplayName(a) || a
        },
        revisionSelectedEvent_: function(a) {
            this.trigger("revisionSelected", a);
            this.hide_()
        },
        mouseoverEvent_: function() {
            if (this.hideTimeout_) this.win_.clearTimeout(this.hideTimeout_),
            this.hideTimeout_ = null
        },
        mouseoutEvent_: function() {
            if (this.hideTimeout_) this.win_.clearTimeout(this.hideTimeout_),
            this.hideTimeout_ = null;
            this.hideTimeout_ = this.win_.setTimeout(this.hide_.bind(this), RevisionToggleView.HIDE_DELAY_)
        },
        showEvent_: function() {
            var a = this.el.querySelector(".ui-slider"),
            b = !a.classList.contains("visible");
            b && this.drawRevisionList_();
            a.classList.toggle("visible", b)
        },
        hide_: function() {
            this.el.querySelector(".ui-slider").classList.remove("visible")
        },
        clickHeadEvent_: function() {
            this.trigger("revisionSelected", null)
        }
    });
    RevisionToggleView.HIDE_DELAY_ = 300;
    window.RevisionsCompareSlideView = SlideView.extend({
        parentPane_: null,
        controller_: null,
        prevRevisionModel_: null,
        headRevisionModel_: null,
        prevRevisionContentView_: null,
        headRevisionContentView_: null,
        revisionListView_: null,
        widthControlView_: null,
        showDiff_: !0,
        scrollLockEnabled_: !0,
        activeScrollElem_: null,
        scrollTopDiff_: 0,
        events: {
            "click .show-diff-toggle .toggle-button": "toggleRevisionDiffEvent_",
            "click .scroll-lock-toggle .toggle-button": "toggleScrollLockEvent_",
            "click .view-revision-button": "viewRevision_",
            "click .restore-revision-button": "restoreRevisionEvent_",
            "mouseover .pane-body": "mouseoverScrollPaneEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.controller_ = a.controller;
            this.headRevisionModel_ = this.controller_.getModel();
            this.scrollOtherPaneBound_ = this.scrollOtherPane_.bind(this);
            this.scaleIframesBound_ = this.scaleIframes_.bind(this);
            this.win_.addEventListener("resize", this.scaleIframesBound_)
        },
        render: function() {
            this.removeRevisionListView_();
            this.removePrevRevisionContentView_();
            this.removeHeadRevisionContentView_();
            this.removeWidthControlView_();
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/revisionsCompareSlide"]({
                showDiff: this.showDiff_,
                scrollLockEnabled: this.scrollLockEnabled_,
                showRestore: app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_CONTENT)
            }));
            this.renderHeadRevisionContentView_();
            this.renderPrevRevisionContentView_();
            this.renderWidthControlView_();
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            this.win_.removeEventListener("resize", this.scaleIframesBound_);
            this.removeRevisionListView_();
            this.removePrevRevisionContentView_();
            this.removeHeadRevisionContentView_();
            this.removeWidthControlView_();
            RevisionsCompareSlideView.__super__.remove.call(this)
        },
        getWidth: function() {
            return this.headRevisionContentView_.getWidth()
        },
        getFontSize: function() {
            return this.headRevisionContentView_.getFontSize()
        },
        setWidth: function(a) {
            a = this.prevRevisionContentView_.setWidth(a) && this.headRevisionContentView_.setWidth(a);
            this.widthControlView_.updateToggle();
            return a
        },
        setFontSize: function(a) {
            a = this.prevRevisionContentView_.setFontSize(a) && this.headRevisionContentView_.setFontSize(a);
            this.widthControlView_.updateToggle();
            return a
        },
        renderRevisionListView_: function() {
            this.removeRevisionListView_();
            this.revisionListView_ = new RevisionListView({
                parentPane: this.el.querySelector(".revision-sidebar"),
                model: this.prevRevisionModel_,
                useLightColors: !0,
                hideLatestVersion: !0
            });
            this.listenTo(this.revisionListView_, "revisionSelected", this.selectRevisionEvent_);
            this.revisionListView_.render()
        },
        renderPrevRevisionContentView_: function() {
            this.prevRevisionModel_ ? (this.prevRevisionContentView_ ? this.prevRevisionContentView_.setContent(this.prevRevisionModel_.get("content")) : (this.prevRevisionContentView_ = new ReaderContentView({
                model: this.prevRevisionModel_,
                parentPane: this.el.querySelector(".left-pane .content-view"),
                addCSS: ReaderContentView.getIframeCSS(),
                disableLinks: !0,
                createWidthToggle: !1
            }), this.listenTo(this.prevRevisionContentView_, "sizeUpdated", this.scaleIframesBound_), this.prevRevisionContentView_.render()), this.getPrevScrollPane_().addEventListener("scroll", this.scrollOtherPaneBound_), this.renderRevisionListView_(), this.renderPrevRevisionHeader_(), this.showDiff_ && this.renderHeadRevisionContentView_()) : this.selectRevisionEvent_(this.controller_.getPrevRevisionNumber())
        },
        renderHeadRevisionContentView_: function() {
            this.headRevisionContentView_ ? (!this.showDiff_ || !this.prevRevisionModel_) && this.headRevisionContentView_.setContent(this.headRevisionModel_.get("content")) : (this.headRevisionContentView_ = new ReaderContentView({
                model: this.headRevisionModel_,
                parentPane: this.el.querySelector(".right-pane .content-view"),
                addCSS: ReaderContentView.getIframeCSS(),
                disableLinks: !0,
                createWidthToggle: !1
            }), this.listenTo(this.headRevisionContentView_, "sizeUpdated", this.scaleIframesBound_), this.headRevisionContentView_.render());
            this.getHeadScrollPane_().addEventListener("scroll", this.scrollOtherPaneBound_);
            this.renderHeadRevisionHeader_();
            this.showDiff_ && this.prevRevisionModel_ && this.headRevisionContentView_.setContent(HTMLDiff.compare(this.prevRevisionModel_.get("content"), this.headRevisionModel_.get("content")))
        },
        renderWidthControlView_: function() {
            this.removeWidthControlView_();
            this.widthControlView_ = new WidthControlView({
                parentPane: this.el.querySelector(".width-control"),
                widthTogglable: this
            });
            this.widthControlView_.render()
        },
        removeRevisionListView_: function() {
            if (this.revisionListView_) this.revisionListView_.remove(),
            this.revisionListView_ = null
        },
        removePrevRevisionContentView_: function() {
            var a = this.getPrevScrollPane_();
            a && a.removeEventListener("scroll", this.scrollOtherPaneBound_);
            if (this.prevRevisionContentView_) this.prevRevisionContentView_.remove(),
            this.prevRevisionContentView_ = null
        },
        removeHeadRevisionContentView_: function() {
            var a = this.getHeadScrollPane_();
            a && a.removeEventListener("scroll", this.scrollOtherPaneBound_);
            if (this.headRevisionContentView_) this.headRevisionContentView_.remove(),
            this.headRevisionContentView_ = null
        },
        removeWidthControlView_: function() {
            if (this.widthControlView_) this.widthControlView_.remove(),
            this.widthControlView_ = null
        },
        getPrevScrollPane_: function() {
            return this.el.querySelector(".left-pane .pane-body")
        },
        getHeadScrollPane_: function() {
            return this.el.querySelector(".right-pane .pane-body")
        },
        scaleIframes_: function() {
            if (this.prevRevisionContentView_ && this.prevRevisionContentView_.getIframe()) {
                var a = DOMUtils.getComputedStyle(this.el.querySelector(".content-view-wrapper")),
                a = parseFloat(a.marginLeft) + parseFloat(a.marginRight),
                a = (this.el.querySelector(".pane-body").clientWidth - a) / parseFloat(this.prevRevisionContentView_.getWidth());
                a > 1 && (a = 1);
                this.scaleContentView_(this.el.querySelector(".left-pane .content-view-wrapper"), this.prevRevisionContentView_, a);
                this.scaleContentView_(this.el.querySelector(".right-pane .content-view-wrapper"), this.headRevisionContentView_, a)
            }
        },
        scaleContentView_: function(a, b, c) {
            if (b && b.getIframe()) a.style.height = b.getIframe().clientHeight * c + "px",
            a.querySelector(".content-view").style.webkitTransform = "scale(" + c + ")"
        },
        selectRevisionEvent_: function(a) {
            this.removePrevRevisionContentView_();
            this.prevRevisionModel_ ? this.prevRevisionModel_.set("revision", a) : this.prevRevisionModel_ = new HTMLDocumentModel({
                project: app.getProjectModel(),
                filePath: this.headRevisionModel_.get("filePath"),
                revision: a
            });
            this.listenToOnce(this.prevRevisionModel_, "loaded", this.renderPrevRevisionContentView_);
            this.prevRevisionModel_.fetch()
        },
        toggleRevisionDiffEvent_: function() {
            this.showDiff_ = !this.showDiff_;
            this.el.querySelector(".show-diff-toggle .toggle-button").classList.toggle("toggle-on", this.showDiff_);
            this.renderHeadRevisionContentView_()
        },
        toggleScrollLockEvent_: function() {
            this.scrollLockEnabled_ = !this.scrollLockEnabled_;
            this.el.querySelector(".scroll-lock-toggle .toggle-button").classList.toggle("toggle-on", this.scrollLockEnabled_);
            this.scrollTopDiff_ = this.getHeadScrollPane_().scrollTop - this.getPrevScrollPane_().scrollTop
        },
        mouseoverScrollPaneEvent_: function(a) {
            var b = this.getHeadScrollPane_();
            this.activeScrollElem_ = b.contains(a.target) ? b: this.getPrevScrollPane_()
        },
        scrollOtherPane_: function(a) {
            if (this.scrollLockEnabled_ && a.target === this.activeScrollElem_) {
                var b = a.target.scrollTop,
                c = this.getHeadScrollPane_();
                a.target === c ? this.getPrevScrollPane_().scrollTop = b - this.scrollTopDiff_: c.scrollTop = b + this.scrollTopDiff_
            }
        },
        viewRevision_: function() {
            app.getRouter().openFile(this.prevRevisionModel_.get("filePath"), this.prevRevisionModel_.get("revision"));
            this.controller_.close()
        },
        restoreRevisionEvent_: function() {
            this.canRestore_() && (this.headRevisionModel_.set({
                content: this.prevRevisionModel_.get("content"),
                dirtyContent: !0
            }), app.getSaveHandler().add(this.headRevisionModel_), this.controller_.triggerRevisionRestored())
        },
        canRestore_: function() {
            return ! this.prevRevisionModel_ || !this.prevRevisionModel_.isLoaded() ? !1 : app.getSaveHandler().isSaveRequired() ? this.win_.confirm(RevisionsCompareSlideView.PROMPT_UNSAVED_DATA_) : !0
        },
        renderPrevRevisionHeader_: function() {
            var a = this.prevRevisionModel_.getRevisions();
            a.isLoaded() ? (a = a.get(this.prevRevisionModel_.get("revision")), this.el.querySelector(".left-pane .pane-header h3").innerHTML = this.getRevisionTitle_(a)) : this.listenToOnce(a, "loaded", this.renderPrevRevisionHeader_)
        },
        renderHeadRevisionHeader_: function() {
            if (app.getSaveHandler().isSaveRequired()) this.el.querySelector(".right-pane .pane-header h3").innerHTML = "Current Version";
            else {
                var a = this.headRevisionModel_.getRevisions();
                a.isLoaded() ? (a = a.at(0), this.el.querySelector(".right-pane .pane-header h3").innerHTML = this.getRevisionTitle_(a)) : this.listenToOnce(a, "loaded", this.renderHeadRevisionHeader_)
            }
        },
        getRevisionTitle_: function(a) {
            var b = FormatTime.getRelativeDateTimeString(a.get("date"), " ago"),
            a = this.getAuthorName_(a.get("author"));
            return b + " &#8226; " + a
        },
        getAuthorName_: function(a) {
            return app.getUsers().getDisplayName(a) || a
        }
    });
    RevisionsCompareSlideView.PROMPT_UNSAVED_DATA_ = "Restoring this version will discard your current changes; are you sure?";
    RevisionsCompareSlideView.SCROLL_LOCK_ANIMATION_DURATION_ = 175;
    window.RevisionsCompareSlideoverView = SlideoverView.extend({
        model_: null,
        prevRevisionNumber_: null,
        slideConstructors_: [RevisionsCompareSlideView],
        initialize: function(a) {
            a = _.extend({},
            a, {
                className: "revision-comparison"
            });
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model_ = a.model;
            this.prevRevisionNumber_ = a.revision;
            RevisionsCompareSlideoverView.__super__.initialize.call(this, a)
        },
        getModel: function() {
            return this.model_
        },
        getPrevRevisionNumber: function() {
            return this.prevRevisionNumber_
        },
        triggerRevisionRestored: function() {
            this.trigger("revisionRestored");
            this.close()
        }
    });
    window.RightClickMenuView = Backbone.View.extend({
        selector_: null,
        menuOptions_: null,
        updateMenuOption_: null,
        currentContextMenuTarget_: null,
        events: {
            "click li": "menuOptionClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.doc_ = a.doc || document;
            this.selector_ = a.selector || "";
            this.menuOptions_ = a.menuOptions || [];
            this.updateMenuOption_ = a.updateMenuOption;
            this.onContextMenuEventBound_ = this.onContextMenuEvent_.bind(this);
            BackboneNativeAdapter.on(this.doc_, "contextmenu", this.selector_, this.onContextMenuEventBound_)
        },
        render: function() {
            var a = ObjectUtils.clone(this.menuOptions_);
            this.updateMenuOption_ && (a = this.updateMenuOption_(a, this.currentContextMenuTarget_));
            this.setElement(Templates["common/rightClickMenuView"]({
                options: a
            }));
            this.doc_.body.appendChild(this.el)
        },
        remove: function() {
            BackboneNativeAdapter.off(this.doc_, "contextmenu", this.selector_, this.onContextMenuEventBound_);
            RightClickMenuView.__super__.remove.apply(this, arguments)
        },
        dismiss: function() {
            this.currentContextMenuTarget_ = null;
            this.el.parentElement && this.el.parentElement.removeChild(this.el)
        },
        onContextMenuEvent_: function(a, b) {
            if (!a.shiftKey) {
                a.preventDefault();
                this.currentContextMenuTarget_ = b;
                this.render();
                var c = a.pageX,
                d = a.pageY;
                this.el.style.left = c + "px";
                this.el.style.top = d + "px";
                this.el.classList.remove("open-left", "open-up");
                c = c + this.el.clientWidth > this.doc_.body.clientWidth;
                this.el.classList.toggle("open-left", c);
                c = d + this.el.clientHeight > this.doc_.body.clientHeight;
                this.el.classList.toggle("open-up", c)
            }
        },
        menuOptionClickEvent_: function(a) {
            this.menuOptions_[parseInt(a.target.dataset.optionIndex, 10)].onClick(a, this.currentContextMenuTarget_)
        }
    });
    window.SelectorView = Backbone.View.extend({
        model: null,
        disabled_: !1,
        events: {
            "change .value-selector": "change_",
            "mousedown .value-selector": "selectorMousedown_"
        },
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.disabled_ = a.disabled;
            this.model.on("change:values change:selectedValue", this.render, this);
            this.formatter = a.formatter || this.defaultFormatter_
        },
        defaultFormatter_: function(a) {
            return a
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/selector/selectorView"](this.getTemplateData_()));
            if (this.parentPane_) this.parentPane_.innerHTML = "",
            this.parentPane_.appendChild(this.el)
        },
        setParentPane: function(a) {
            this.parentPane_ = a;
            this.parentPane_.appendChild(this.el);
            this.setElement(this.el)
        },
        getTemplateData_: function() {
            var a = this.model.get("values");
            this.itemSelected_ = !1;
            return {
                fields: this.disabled_ ? [] : a.map(function(a, c) {
                    return Type.isArray(a) ? this.createGroup_(a) : Type.isObject(a) ? this.createItemFromObj_(a, c) : this.createItem_(a, c)
                },
                this),
                selected: this.formatter(this.model.get("selectedValue")),
                disabled: this.disabled_
            }
        },
        createGroup_: function(a) {
            var b = a[0],
            a = a[1].map(function(a, b) {
                return this.createItem_(a, b)
            },
            this);
            return {
                isGroup: !0,
                label: b,
                subfields: a
            }
        },
        createItem_: function(a, b, c) {
            var d = this.model.get("selectedValue"),
            e = !1;
            if (!this.itemSelected_) this.itemSelected_ = e = a == d;
            return {
                value: a,
                displayValue: this.formatter(a, b),
                selected: e,
                disabled: !!c
            }
        },
        createItemFromObj_: function(a, b) {
            return this.createItem_(a.value, b, a.disabled)
        },
        selectorMousedown_: function(a) {
            DOMUtils.isSecondaryClick(a) && a.preventDefault()
        },
        change_: function(a) {
            this.model.set("selectedValue", a.target.value)
        }
    });
    SelectorView.createSelector = function(a) {
        var b = new SelectorModel(a.modelOptions),
        c = new SelectorView({
            model: b,
            parentPane: a.parentPane,
            formatter: a.selectorFormatter
        });
        c.render();
        if (a.changeCallback) b.on("change", a.changeCallback, this);
        return c
    };
    window.ServiceMessageBarView = Backbone.View.extend({
        collection: null,
        parentPane_: null,
        addRemoveTimer_: null,
        serviceMessageCountTimer_: null,
        removeTimers_: null,
        events: {
            "mousedown .service-message-close-button": "mousedownCloseEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.parentPane_ = a.parentPane;
            this.removeTimers_ = [];
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.listenTo(this.collection, "add remove change", _.debounce(this.updateMessagesEvent_.bind(this), 1))
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["common/serviceMessageBar"](a));
            this.parentPane_.appendChild(this.el);
            this.updateMessageCount_()
        },
        remove: function() {
            this.addRemoveTimer_ && this.win_.clearTimeout(this.addRemoveTimer_);
            this.serviceMessageCountTimer_ && this.win_.clearTimeout(this.serviceMessageCountTimer_);
            this.removeTimers_.forEach(function(a) {
                this.win_.clearTimeout(a)
            },
            this);
            this.removeTimers_ = [];
            ServiceMessageBarView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            var a = this.collection.getVisibleMessages().filter(function(a) {
                return this.isOnlyAllowedTags_(a.get("title")) && this.isOnlyAllowedTags_(a.get("message"))
            },
            this),
            a = a.slice(0, ServiceMessageBarView.MAX_MESSAGES_VISIBLE_);
            return {
                messages: a.map(function(a) {
                    return this.getMessageTemplateData_(a, !1)
                },
                this)
            }
        },
        getMessageTemplateData_: function(a, b) {
            return {
                cid: a.cid,
                title: a.get("title"),
                message: a.get("message"),
                classes: a.get("tags").join(" "),
                hidden: b
            }
        },
        isOnlyAllowedTags_: function(a) {
            var b = "a,b,u,i,strong,em,span".split(",");
            return XMLUtilities.parseFragment(a, XMLUtilities.DOCUMENT_TYPE.HTML).querySelectorAll("*").every(function(a) {
                if (a.tagName.toLowerCase() === "a") {
                    for (var d = 0; d < a.attributes.length; d++) switch (a.attributes[d].name) {
                    case "href":
                        if (!/https?:\/\/./i.test(a.attributes[d].value)) return ! 1;
                        break;
                    case "target":
                        break;
                    default:
                        return ! 1
                    }
                    return ! 0
                } else return b.indexOf(a.tagName.toLowerCase()) !== -1 ? a.attributes.length === 0 : !1
            })
        },
        updateMessageCount_: function() {
            this.parentPane_.dataset.messageCount = this.el.querySelectorAll(".service-message-bar-item:not(.hide)").length;
            this.serviceMessageCountTimer_ && this.win_.clearTimeout(this.serviceMessageCountTimer_);
            this.serviceMessageCountTimer_ = this.win_.setTimeout(function() {
                this.serviceMessageCountTimer_ = null;
                app.trigger("contentPaneResized")
            }.bind(this), ServiceMessageBarView.MESSAGE_ANIMATION_DURATION_)
        },
        addMessages_: function(a) {
            a = a.map(function(a) {
                for (var c = this.collection.get(a), a = Templates["common/serviceMessage"](this.getMessageTemplateData_(c, !0)), d = null, c = this.collection.indexOf(c); c < this.collection.length && !d; c++) d = this.el.querySelector('[data-cid="' + this.collection.at(c).cid + '"]');
                this.el.insertBefore(a, d);
                return a
            },
            this);
            Hacks.forceLayout(this.el);
            a.forEach(function(a) {
                a.classList.remove("hide")
            },
            this);
            this.updateMessageCount_()
        },
        removeMessages_: function(a) {
            var b = a.map(function(a) {
                a = this.el.querySelector('[data-cid="' + a + '"]');
                a.classList.add("hide");
                return a
            },
            this);
            this.updateMessageCount_();
            var c = this.win_.setTimeout(function() {
                this.removeTimers_.splice(this.removeTimers_.indexOf(c), 1);
                b.forEach(function(a) {
                    DOMUtils.detachElement(a)
                },
                this)
            }.bind(this), ServiceMessageBarView.MESSAGE_ANIMATION_DURATION_);
            this.removeTimers_.push(c)
        },
        updateMessagesEvent_: function() {
            var a = this.getTemplateData_(),
            b = this.el.querySelectorAll(".service-message-bar-item:not(.hide)").map(function(a) {
                return a.dataset.cid
            },
            this),
            a = _.pluck(a.messages, "cid"),
            c = _.intersection(b, a),
            d = _.difference(b, a),
            e = _.difference(a, b);
            c.forEach(function(a) {
                var b = this.collection.get(a),
                a = this.el.querySelector('[data-cid="' + a + '"]');
                b.hasChanged() && (b = Templates["common/serviceMessage"](this.getMessageTemplateData_(b, !1)), DOMUtils.replaceNode(a, b))
            },
            this);
            if (this.addRemoveTimer_) this.win_.clearTimeout(this.addRemoveTimer_),
            this.addRemoveTimer_ = null;
            d.length > 0 ? (this.removeMessages_(d), this.addRemoveTimer_ = this.win_.setTimeout(function() {
                this.addMessages_(e)
            }.bind(this), ServiceMessageBarView.MESSAGE_ANIMATION_DURATION_)) : this.addMessages_(e)
        },
        mousedownCloseEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.collection.get(DOMUtils.getParent(b, "[data-cid]").dataset.cid).set("hidden", !0))
        }
    });
    ServiceMessageBarView.MAX_MESSAGES_VISIBLE_ = 3;
    ServiceMessageBarView.MESSAGE_ANIMATION_DURATION_ = 200;
    window.CollaboratorsMainView = MainView.extend({
        membersView_: null,
        render: function() {
            DOMUtils.detachElement(this.el);
            app.getMessageView().title("Team Members - Inkling Habitat");
            this.setElement(Templates["project/settings/membersSettings"]());
            this.parentPane_.querySelector("#content .coordinate-box").appendChild(this.el);
            this.membersView_ && this.membersView_.remove();
            this.membersView_ = new ProjectMembersView({
                model: this.model,
                parentPane: this.el.querySelector(".members-container")
            });
            this.membersView_.render()
        },
        remove: function() {
            this.membersView_ && this.membersView_.remove();
            DOMUtils.detachElement(this.el);
            CollaboratorsMainView.__super__.remove.apply(this)
        }
    });
    window.CommentSettingsView = Backbone.View.extend({
        model: null,
        users_: null,
        assignees_: null,
        assigneeFormatter_: null,
        parentPane_: null,
        currentProject_: null,
        projectSettings: null,
        waitFor_: null,
        events: {
            "click .toggle-button": "toggleCommentPreferenceEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.model = a.model;
            this.parentPane_ = a.parentPane;
            this.users_ = app.getUsers();
            this.currentProject_ = a.currentProject || app.getProjectModel().get("shortName");
            this.projectSettings_ = new ProjectSettingsModel;
            this.projectSettings_.fetch();
            this.assigneeFormatter_ = function(a) {
                var c = IssueModel.DynamicAssignees[a];
                if (c) return StringUtils.capitalize(c);
                c = this.users_.getDisplayName(a) || IssueView.UNASSIGNED_NOTE;
                return a !== null && c === UsersCollection.UNASSIGNED_ ? a: c
            }.bind(this);
            this.listenTo(this.model, "change:defaultAssignees", this.updateAssignees_);
            this.updateAssignees_()
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/settings/commentSettingsView"](a));
            this.parentPane_.appendChild(this.el);
            a.projectSettingsLoaded ? this.cleanupSpinner_() : this.waitFor_ = new WaitFor({
                waitFor: this.projectSettings_,
                showSpinnerOn: this.el.querySelector(".project-settings-spinner"),
                whenLoaded: this.render.bind(this)
            });
            a.canModify && this.renderSelectors_()
        },
        remove: function() {
            this.cleanupSpinner_();
            CommentSettingsView.__super__.remove.call(this)
        },
        cleanupSpinner_: function() {
            if (this.waitFor_) this.waitFor_.remove(),
            this.waitFor_ = null
        },
        getTemplateData_: function() {
            var a = {
                status: [],
                canModify: app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_AUTO_ISSUE_ASSIGNMENT),
                ticketNotifications: this.projectSettings_.get("ticketNotifications"),
                dailyRecap: this.projectSettings_.get("dailyRecap"),
                projectSettingsLoaded: this.projectSettings_.isLoaded()
            },
            b;
            for (b in IssueModel.Status) if (IssueModel.Status.hasOwnProperty(b)) {
                var c = {},
                d = IssueModel.Status[b],
                e = this.getAssigneeData_(d);
                c.type = d;
                c.name = IssueModel.getDisplayStatus(d);
                c.currentValue = this.assigneeFormatter_(e.selectedValue);
                a.status.push(c)
            }
            return a
        },
        getAssigneeData_: function(a) {
            var a = this.assignees_[a],
            b = [],
            c;
            for (c in IssueModel.DynamicAssignees) IssueModel.DynamicAssignees.hasOwnProperty(c) && b.push(c);
            b.push({
                value: "-----------",
                disabled: !0
            });
            b = b.concat(app.getUsers().getRegisteredUserIDs());
            a || (a = "CURRENT");
            return {
                values: b,
                selectedValue: a
            }
        },
        updateAssignees_: function() {
            var a = this.model.get("defaultAssignees") || {};
            this.assignees_ = ObjectUtils.clone(a[this.currentProject_]) || {}
        },
        saveAssignees_: function() {
            var a = ObjectUtils.clone(this.model.get("defaultAssignees")) || {};
            a[this.currentProject_] = this.assignees_;
            this.model.set("defaultAssignees", a);
            this.updateSuccess_()
        },
        renderSelectors_: function() {
            this.el.querySelectorAll(".selector").forEach(function(a) {
                var b = a.parentElement.dataset.type;
                this.setupSelector_({
                    selectorName: b,
                    data: this.getAssigneeData_(b),
                    selectorFormatter: this.assigneeFormatter_,
                    parentPane: a
                })
            },
            this)
        },
        setupSelector_: function(a) {
            var b = new SelectorModel(a.data),
            c = new SelectorView({
                model: b,
                parentPane: a.parentPane,
                formatter: a.selectorFormatter
            });
            c.render();
            b.on("change", this.selectorChanged_.bind(this, a.selectorName), this);
            return c
        },
        selectorChanged_: function(a, b) {
            var c = b.get("selectedValue");
            c === "" && (c = null);
            this.assignees_[a] = c;
            this.saveAssignees_()
        },
        updateSuccess_: function() {
            app.getMessageView().show("Settings updated", MessageView.DEFAULT_DISPLAY_TIME)
        },
        updateError_: function() {
            app.getMessageView().show("There was an error updating your settings", MessageView.DEFAULT_DISPLAY_TIME)
        },
        toggleCommentPreferenceEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                var c = b.classList.toggle("toggle-on");
                this.projectSettings_.set(b.dataset.setting, c);
                this.projectSettings_.save(null, {
                    success: this.updateSuccess_.bind(this),
                    error: this.updateError_.bind(this)
                })
            }
        }
    });
    window.MetadataSettingsView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        metadataFormView_: null,
        form_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.model = a.model;
            this.parentPane_ = a.parentPane
        },
        remove: function() {
            this.metadataFormView_ && this.metadataFormView_.remove();
            this.form_ && this.form_.remove();
            DOMUtils.detachElement(this.el);
            MetadataSettingsView.__super__.remove.apply(this)
        },
        render: function() {
            this.form_ && (this.stopListening(this.form_), this.form_.remove());
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/settings/metadataSettings"](a));
            this.parentPane_.appendChild(this.el);
            if (a.canModify) this.form_ = new FormView({
                el: this.el
            }),
            this.listenTo(this.form_, "submit", this.formSubmitEvent_),
            this.metadataFormView_ && this.metadataFormView_.remove(),
            this.metadataFormView_ = new ProjectMetadataFormView({
                model: this.model,
                parentPane: this.el.querySelector(".metadata-container")
            }),
            this.metadataFormView_.render()
        },
        getTemplateData_: function() {
            return {
                canModify: app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_CONTENT),
                title: this.model.get("name") || "",
                edition: this.model.get("edition") || "",
                authors: this.model.get("authors") || "",
                publisher: this.model.get("publisher") || ""
            }
        },
        formSubmitEvent_: function() {
            var a = this.metadataFormView_.validateAndGetMetadata();
            a && (this.model.save(a, {
                success: this.saveSuccess_.bind(this),
                error: this.saveError_.bind(this)
            }), app.getMessageView().show("Saving..."))
        },
        saveSuccess_: function() {
            app.getMessageView().show("Project updated", MessageView.DEFAULT_DISPLAY_TIME)
        },
        saveError_: function(a, b) {
            var c;
            c = b.status === 403 ? "You do not have permission to modify the project": "Failed to save project";
            app.getMessageView().error(c, MessageView.DEFAULT_DISPLAY_TIME)
        }
    });
    window.TemplatePickerSlideView = SlideView.extend({
        model: null,
        parentPane_: null,
        controller_: null,
        waitFor_: null,
        keyboard_: null,
        events: {
            "mousedown .template": "templateMousedownEvent_",
            "mouseover .template": "templateMouseoverEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.controller_ = a.controller;
            this.model = this.controller_.getModel();
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    enter: this.enterKeyEvent_.bind(this)
                })
            });
            app.getKeyboardManager().activate(this.keyboard_)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/projectCreation/templatePickerSlide"]());
            this.parentPane_.appendChild(this.el);
            app.getProjectTemplates().isLoaded() ? this.renderTemplates_() : this.waitFor_ = new WaitFor({
                waitFor: app.getProjectTemplates(),
                showSpinnerOn: this.el.querySelector(".slide-body"),
                whenLoaded: this.renderTemplates_.bind(this)
            })
        },
        remove: function() {
            this.waitFor_ && this.waitFor_.remove();
            app.getKeyboardManager().remove(this.keyboard_);
            TemplatePickerSlideView.__super__.remove.call(this)
        },
        renderTemplates_: function() {
            var a = this.el.querySelector(".slide-body");
            a.innerHTML = "";
            var b = Templates["dashboard/projectCreation/templatePickerList"](this.getProjectsTemplateData_());
            a.appendChild(b)
        },
        getProjectsTemplateData_: function() {
            var a = app.getProjectTemplates();
            a && (a = a.toJSON());
            var a = a.filter(function(a) {
                var b = a.customAttributes && a.customAttributes.thumbnails;
                return a.ready && b
            },
            this),
            b = a.filter(function(a) {
                return a.tags === null || a.tags.indexOf(ProjectTemplateModel.TAGS.INKLING) === -1
            }),
            a = a.map(function(a) {
                var b;
                a.bundleHistoryId && (b = URLUtils.expand("{+wwwHost}/read/{id}", {
                    id: a.bundleHistoryId
                }));
                return {
                    s9id: a.s9id,
                    name: a.name,
                    description: a.description,
                    thumbnailSrc: a.customAttributes.thumbnails[0],
                    previewLink: b
                }
            },
            this);
            return {
                templates: a,
                hasCustomTemplate: b.length
            }
        },
        templateMousedownEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.selectTemplate_(b.dataset.templateId))
        },
        enterKeyEvent_: function() {
            var a = this.el.querySelector(".template:hover") || this.el.querySelector(".template.focus");
            a && this.selectTemplate_(a.dataset.templateId)
        },
        selectTemplate_: function(a) {
            this.model.set("projectTemplateId", a);
            var b = this.el.querySelector(".template-picker");
            b.classList.add("disabled");
            this.controller_.save({
                success: function() {
                    this.controller_.next();
                    b.classList.remove("disabled")
                }.bind(this),
                error: function() {
                    b.classList.remove("disabled")
                }
            })
        },
        templateMouseoverEvent_: function() {
            var a = this.el.querySelector(".template.focus");
            a && a.classList.remove("focus")
        }
    });
    window.ProjectLoadingSlideView = SlideView.extend({
        model: null,
        controller_: null,
        progressBarEl_: null,
        currentProgress_: null,
        fakeProgressAnimation_: null,
        finalProgressAnimation_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.controller_ = a.controller;
            this.model = this.controller_.getModel()
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["dashboard/projectCreation/projectLoadingSlide"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.progressBarEl_ = this.el.querySelector(".progress > .bar");
            this.startFakeProgressAnimation_();
            this.model.get("repoExists") ? this.repoExistsChangeEvent_() : (this.listenTo(this.model, "change:repoExists", this.repoExistsChangeEvent_), this.model.pollForRepoCreation())
        },
        remove: function() {
            this.fakeProgressAnimation_ && this.fakeProgressAnimation_.cancel();
            this.finalProgressAnimation_ && this.finalProgressAnimation_.cancel();
            ProjectLoadingSlideView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            var a = app.getProjectTemplates().get(this.model.get("projectTemplateId"));
            return a ? (a = a.toJSON(), {
                templateThumbnail: a.customAttributes.thumbnails[0]
            }) : {}
        },
        repoExistsChangeEvent_: function() {
            this.fakeProgressAnimation_ && this.fakeProgressAnimation_.cancel();
            var a = this.currentProgress_,
            b = 1 - this.currentProgress_;
            this.finalProgressAnimation_ = new Animation({
                duration: ProjectLoadingSlideView.FINAL_PROGRESS_DURATION_,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(c) {
                    this.currentProgress_ = a + b * c;
                    this.updateProgressBar_()
                }.bind(this),
                onComplete: function() {
                    this.el.querySelector(".template").classList.add("finished");
                    this.win_.location.href = URLUtils.expand("/project/{shortName}", {
                        shortName: this.model.get("shortName")
                    })
                }.bind(this)
            })
        },
        startFakeProgressAnimation_: function() {
            this.fakeProgressAnimation_ = new Animation({
                duration: ProjectLoadingSlideView.FAKE_PROGRESS_DURATION_,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(a) {
                    this.currentProgress_ = a * ProjectLoadingSlideView.MAX_FAKE_PROGRESS_;
                    this.updateProgressBar_()
                }.bind(this)
            })
        },
        updateProgressBar_: function() {
            this.progressBarEl_.style.width = this.currentProgress_ * 100 + "%"
        }
    });
    ProjectLoadingSlideView.MAX_FAKE_PROGRESS_ = 0.9;
    ProjectLoadingSlideView.FAKE_PROGRESS_DURATION_ = 2E4;
    ProjectLoadingSlideView.FINAL_PROGRESS_DURATION_ = 1E3;
    window.ProjectCreationSlideoverView = SlideoverView.extend({
        model_: null,
        projects_: null,
        saving_: !1,
        slideConstructors_: [TemplatePickerSlideView, ProjectLoadingSlideView],
        initialize: function(a) {
            a = _.extend({},
            a, {
                className: "project-creation"
            });
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.projects_ = a.projects;
            this.model_ = new ProjectModel;
            ProjectCreationSlideoverView.__super__.initialize.call(this, a)
        },
        getModel: function() {
            return this.model_
        },
        save: function(a) {
            a = a || {};
            this.saving_ ? app.getMessageView().error("Waiting for last save to finish", MessageView.DEFAULT_DISPLAY_TIME) : (this.saving_ = !0, this.model_.save(null, {
                success: function() {
                    this.saveSuccess_();
                    a.success && a.success()
                }.bind(this),
                error: function(b, c) {
                    this.saveError_(b, c);
                    a.error && a.error(b, c)
                }.bind(this)
            }))
        },
        saveSuccess_: function() {
            this.saving_ = !1;
            this.projects_ && (this.projects_.reset(), this.projects_.fetch());
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.CREATE_PROJECT,
                eventInfo: {
                    shortName: this.model_.get("shortName")
                }
            })
        },
        saveError_: function(a, b) {
            this.saving_ = !1;
            HabitatRequest.isFailureWithStatusCodeAndReason(b, 503, "projectQuota") ? app.getMessageView().error(ProjectCreationSlideoverView.PROJECT_QUOTA_FAILURE) : app.getMessageView().error("Failed to create project", MessageView.DEFAULT_DISPLAY_TIME)
        }
    });
    ProjectCreationSlideoverView.PROJECT_QUOTA_FAILURE = "We are over capacity and new projects can't be created at this time; please try again later";
    window.ProjectMembersView = Backbone.View.extend({
        model: null,
        parentPane_: null,
        newProject_: null,
        sortByColumn_: null,
        sortByAscending_: !1,
        roleSelectors_: null,
        membersFailedToLoad_: !1,
        form_: null,
        events: {
            "click th[data-sort-value]": "tableHeaderClickEvent_",
            "click .delete-icon": "deleteIconClickEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.model = a.model;
            this.parentPane_ = a.parentPane;
            this.newProject_ = !!a.newProject;
            this.model.get("userGroupModel").on("change add remove reset", this.renderMembersList_, this);
            this.sortByColumn_ = ProjectMembersView.DEFAULT_SORT_BY_COLUMN_;
            this.roleSelectors_ = {}
        },
        remove: function() {
            var a = this.model.get("userGroupModel");
            a.off("loaded", this.renderMembersList_, this);
            a.off("change add remove reset", this.renderMembersList_, this);
            this.form_ && this.form_.remove();
            DOMUtils.detachElement(this.el);
            ProjectMembersView.__super__.remove.call(this)
        },
        render: function() {
            var a = this.model.get("userGroupModel"); ! this.membersFailedToLoad_ && !a.isLoaded() && (a.on("loaded", this.renderMembersList_, this), a.fetch({
                error: this.modelFetchError_.bind(this)
            }));
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            a = this.getTemplateData_();
            this.setElement(Templates["common/projectMembers"](a));
            a.canModifyMembers && this.createRoleSelectors_(a.members);
            this.styleSortedColumn_();
            this.parentPane_.appendChild(this.el);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_); (a = this.el.querySelector("#add-members-input")) && a.focus()
        },
        getTemplateData_: function() {
            var a = this.getMembersTemplate_(),
            b = this.sortByColumn_ || ProjectMembersView.DEFAULT_SORT_BY_COLUMN_,
            a = a.sort(function(a, d) {
                var e = a[b],
                f = d[b];
                return e ? f ? e < f ? this.sortByAscending_ ? -1 : 1 : e > f ? this.sortByAscending_ ? 1 : -1 : 0 : this.sortByAscending_ ? -1 : 1 : this.sortByAscending_ ? 1 : -1
            }.bind(this));
            return {
                membersFailedToLoad: this.membersFailedToLoad_,
                membersAreLoaded: this.model.get("userGroupModel").isLoaded(),
                members: a,
                canModifyMembers: this.newProject_ || app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_MEMBER_PERMISSIONS),
                canAddMembers: this.newProject_ || app.userHasPermission(PermissionsModel.PERMISSIONS.ADD_MEMBER),
                canRemoveMembers: this.newProject_ || app.userHasPermission(PermissionsModel.PERMISSIONS.REMOVE_MEMBER)
            }
        },
        getMembersTemplate_: function() {
            var a = this.model.get("userGroupModel");
            return ! a.isLoaded() ? [] : a.getMembers().map(function(a) {
                return this.getMemberTemplate_(a)
            },
            this).filter(function(a) {
                return !! a
            },
            this)
        },
        getMemberTemplate_: function(a) {
            if (a instanceof UserMembershipModel) return {
                s9id: a.get("s9id"),
                accountID: a.get("email"),
                name: a.getDisplayName(),
                role: a.get("role"),
                roleName: UserMembershipModel.getRoleDisplayString(a.get("role"))
            };
            else if (a instanceof GroupMembershipModel) {
                var b = a.get("name");
                return {
                    s9id: a.get("s9id"),
                    accountID: b,
                    name: "(Group) " + b,
                    role: a.get("role"),
                    roleName: UserMembershipModel.getRoleDisplayString(a.get("role"))
                }
            } else console.error("Got a group member that was neither a UserMembershipModel nor a GroupMembershipModel!", a)
        },
        modelFetchError_: function(a, b) {
            console.error("Failed to fetch project group or group members", b);
            app.getMessageView().error("Failed to load project team members", MessageView.DEFAULT_DISPLAY_TIME);
            this.membersFailedToLoad_ = !0;
            this.render()
        },
        styleSortedColumn_: function() {
            var a = this.el.querySelector('th[data-sort-value="' + this.sortByColumn_ + '"]');
            a && (a.classList.add("sorted"), this.sortByAscending_ ? a.classList.remove("descending") : a.classList.add("descending"))
        },
        createRoleSelectors_: function(a) {
            Object.keys(this.roleSelectors_).forEach(function(a) {
                this.roleSelectors_[a].remove()
            },
            this);
            this.roleSelectors_ = {};
            a.forEach(function(a) {
                var c = a.s9id,
                d = this.el.querySelector('tr[data-id="' + c + '"] .role-selector');
                this.roleSelectors_[c] = SelectorView.createSelector({
                    modelOptions: {
                        values: UserMembershipModel.SETTABLE_ROLES,
                        selectedValue: a.role
                    },
                    selectorFormatter: UserMembershipModel.getRoleDisplayString,
                    parentPane: d,
                    changeCallback: this.roleSelectorChanged_.bind(this, c)
                })
            },
            this)
        },
        renderMembersList_: function() {
            var a = this.getTemplateData_(),
            b = Templates["common/projectMembersPartial"](a),
            c = this.el.querySelector(".table-wrapper");
            c.innerHTML = "";
            c.appendChild(b);
            a.canModifyMembers && this.createRoleSelectors_(a.members);
            this.styleSortedColumn_();
            this.trigger("change")
        },
        isLastAdmin_: function(a) {
            var b = this.model.get("userGroupModel").getMembers().filter(function(a) {
                return a.get("role") === UserMembershipModel.ROLE.GROUP_ADMIN
            },
            this);
            return b.length === 1 && b[0] === a
        },
        roleSelectorChanged_: function(a, b) {
            var c = b.get("selectedValue"),
            d = this.model.get("userGroupModel").getMemberByID(a),
            e = d.get("role");
            c !== e && (this.isLastAdmin_(d) ? (app.getMessageView().error("Each project must have at least one admin", MessageView.DEFAULT_DISPLAY_TIME), b.set("selectedValue", UserMembershipModel.ROLE.GROUP_ADMIN)) : d.save("role", c, {
                success: function() {
                    app.getMessageView().show("Updated permissions", MessageView.DEFAULT_DISPLAY_TIME);
                    this.logModifyMemberAnalyticsEvent_(this.getMemberTemplate_(d), e, c);
                    this.refetchPermissions_()
                }.bind(this),
                error: function() {
                    app.getMessageView().error("Failed to save permissions change", MessageView.DEFAULT_DISPLAY_TIME);
                    this.refetchPermissions_()
                }.bind(this)
            }))
        },
        tableHeaderClickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = b.dataset.sortValue;
                c === this.sortByColumn_ ? this.sortByAscending_ = !this.sortByAscending_: (this.sortByColumn_ = c, this.sortByAscending_ = !1);
                this.renderMembersList_()
            }
        },
        deleteIconClickEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var c = DOMUtils.getParent(b, "tr").dataset.id,
                d = this.model.get("userGroupModel"),
                e = d.getMemberByID(c);
                if (e) if (this.isLastAdmin_(e)) app.getMessageView().error("Each project must have at least one admin", MessageView.DEFAULT_DISPLAY_TIME);
                else {
                    var f = this.getMemberTemplate_(e);
                    this.win_.confirm("Are you sure you want to remove " + f.name + " from this project?") && e.destroy({
                        success: function() {
                            app.getMessageView().show("Successfully removed team member", MessageView.DEFAULT_DISPLAY_TIME);
                            this.logRemoveMemberAnalyticsEvent_(f);
                            this.refetchPermissions_()
                        }.bind(this),
                        error: function() {
                            app.getMessageView().error("Failed to remove team member", MessageView.DEFAULT_DISPLAY_TIME);
                            d.addMemberModel(e)
                        }
                    })
                } else console.error("Unable to find member model for s9id:", c, "model:", e)
            }
        },
        refetchPermissions_: function() {
            app.getCurrentUser().get("permissions").fetch({
                projectId: app.getProjectModel().get("id"),
                success: function() {
                    if (!this.newProject_ && !app.userHasPermission(PermissionsModel.PERMISSIONS.READ_CONTENT)) this.win_.location.href = "/dashboard";
                    else {
                        var a = app.userHasPermission(PermissionsModel.PERMISSIONS.WRITE_MEMBER_PERMISSIONS);
                        if (this.newProject_ || !a) this.render(),
                        this.model.fetchUsers()
                    }
                }.bind(this)
            })
        },
        formSubmitEvent_: function() {
            this.el.classList.remove(ProjectMembersView.ERROR_CLASS_);
            var a = this.el.querySelector("#add-members-input"),
            b = a.value,
            c = this.model.get("userGroupModel");
            if (!c.areNewEmailDomains(b) || this.win_.confirm(ProjectMembersView.NEW_DOMAIN_WARNING_)) a.disabled = !0,
            this.el.querySelector("button.add-members").disabled = !0,
            c.addMembers(b, this.addMembersCallback_.bind(this))
        },
        addMembersCallback_: function(a, b, c, d) {
            var e = this.el.querySelector("#add-members-input");
            e.disabled = !1;
            this.el.querySelector("button.add-members").disabled = !1; ! c && !d ? (app.getMessageView().show("Team members added", MessageView.DEFAULT_DISPLAY_TIME), e.value = "", this.el.classList.remove(ProjectMembersView.ERROR_CLASS_), this.logAddMembersAnalyticsEvent_(a, b), this.model.fetchUsers()) : (a = "", c && (c.length === 0 ? a += "You must enter an email address or group name": (a += "The following entries are invalid: ", a += c.map(StringUtils.escapeHTML).join(", "))), d && (a.length > 0 && (a += "<br>"), a += "The following entries have already been added to the project: ", a += d.map(StringUtils.escapeHTML).join(", ")), this.el.classList.add(ProjectMembersView.ERROR_CLASS_), this.el.querySelector(".input-container.add-members .error-message").innerHTML = a);
            e.focus()
        },
        logAddMembersAnalyticsEvent_: function(a, b) {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.ADD_PROJECT_MEMBERS,
                eventInfo: {
                    shortName: this.model.get("shortName"),
                    usersAdded: a.map(function(a) {
                        return a.get("email")
                    }),
                    groupsAdded: b.map(function(a) {
                        return a.get("name")
                    })
                }
            })
        },
        logModifyMemberAnalyticsEvent_: function(a, b, c) {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.MODIFY_PROJECT_MEMBER,
                eventInfo: {
                    shortName: this.model.get("shortName"),
                    userModified: a.accountID,
                    oldRole: b,
                    newRole: c
                }
            })
        },
        logRemoveMemberAnalyticsEvent_: function(a) {
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.REMOVE_PROJECT_MEMBER,
                eventInfo: {
                    shortName: this.model.get("shortName"),
                    userRemoved: a.accountID,
                    role: a.role
                }
            })
        }
    });
    ProjectMembersView.DEFAULT_SORT_BY_COLUMN_ = "role";
    ProjectMembersView.ERROR_CLASS_ = "members-invalid";
    ProjectMembersView.NEW_DOMAIN_WARNING_ = "You are about to add a team member email with a domain which does not yet have access to the project. Are you sure you want to proceed?";
    window.ProjectMetadataFormView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.model_ = a.model;
            this.parentPane_ = a.parentPane
        },
        validateAndGetMetadata: function() {
            this.el.classList.remove(ProjectMetadataFormView.TITLE_INVALID_CLASS_);
            var a = this.el.querySelector("#title-input"),
            b = a.value.trim();
            if (!b) return this.el.classList.add(ProjectMetadataFormView.TITLE_INVALID_CLASS_),
            a.focus(),
            null;
            a = {
                name: b,
                edition: this.el.querySelector("#edition-input").value.trim(),
                authors: this.el.querySelector("#authors-input").value.trim(),
                publisher: this.el.querySelector("#publisher-input").value.trim()
            };
            if (app.userHasPermission(PermissionsModel.PERMISSIONS.BETA_USER)) a.subtitle = this.el.querySelector("#subtitle-input").value.trim();
            return a
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            ProjectMetadataFormView.__super__.remove.apply(this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/projectMetadataForm"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.el.querySelector("#title-input").focus()
        },
        getTemplateData_: function() {
            return {
                title: this.model.get("name") || "",
                subtitle: this.model.get("subtitle") || "",
                edition: this.model.get("edition") || "",
                authors: this.model.get("authors") || "",
                publisher: this.model.get("publisher") || "",
                showSubtitle: app.userHasPermission(PermissionsModel.PERMISSIONS.BETA_USER)
            }
        }
    });
    ProjectMetadataFormView.TITLE_INVALID_CLASS_ = "title-invalid";
    window.TemplateBuilderSlideView = SlideView.extend({
        model: null,
        parentPane_: null,
        controller_: null,
        filesToUpload_: null,
        objectUrls_: null,
        form_: null,
        events: {
            "click img": "imageClickEvent_",
            "click .delete-button": "imageDeleteEvent_",
            "change .file-input": "fileSelectedEvent_",
            "input textarea": "checkFormValidity_",
            "input input": "checkFormValidity_",
            "drop img": "imageDropEvent_",
            "dragover img": "imageDragEvent_",
            "dragleave img": "imageDragLeaveEvent_",
            "dragover *": "generalDragEvent_",
            "drop *": "generalDropEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane;
            this.controller_ = a.controller;
            this.model = this.controller_.getModel();
            this.objectUrls_ = []
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/builds/templateSlide"](a));
            this.parentPane_.appendChild(this.el);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.filesToUpload_ = [];
            this.checkFormValidity_()
        },
        remove: function() {
            this.objectUrls_.forEach(function(a) {
                URL.revokeObjectURL(a)
            });
            this.objectUrls_ = [];
            this.form_ && this.form_.remove();
            TemplateBuilderSlideView.__super__.remove.call(this)
        },
        focus: function() {
            var a = this.el.querySelector('input[name="title"]');
            DOMUtils.selectAllAndFocusInput(a)
        },
        getTemplateData_: function() {
            var a = ((this.model.get("customAttributes") || {}).thumbnails || [])[0],
            b = !a;
            a || (a = URLUtils.expand("{+staticHost}/{+asset}", {
                asset: TemplateBuilderSlideView.DEFAULT_THUMBNAIL_ASSET_PATH_
            }));
            var c = app.getProjectModel();
            return {
                title: this.model.get("name") || c.get("name"),
                author: this.model.get("author") || c.get("authors"),
                description: this.model.get("description") || "",
                thumbSrc: a,
                thumbEmpty: b
            }
        },
        formSubmitEvent_: function() {
            if (!this.el.querySelector(".action-button").disabled) {
                this.updateSaveButton_(!0);
                for (var a = [], b = 0; b < this.filesToUpload_.length; b++) a.push(this.filesToUpload_[b] || null);
                this.controller_.uploadImages(a).then(this.updateTemplateModel_.bind(this)).fail(this.updateSaveButton_.bind(this, !1)).done()
            }
        },
        updateSaveButton_: function(a) {
            var b = this.el.querySelector(".action-button");
            a ? (b.innerHTML = 'Publishing<span class="dot">.</span><span class="dot">.</span><span class="dot">.</span>', b.setAttribute("disabled", "disabled")) : (b.innerHTML = "Publish", b.removeAttribute("disabled"))
        },
        updateTemplateModel_: function(a) {
            for (var b = DOMUtils.getFormValues(this.el.querySelector(".template-details-form")), c = app.getProjectModel(), d = this.model.get("customAttributes") || {},
            e = (d.thumbnails || []).slice(), f = 0; f < a.length; f++) a[f] && (e[f] = a[f]);
            d.updatedBy = app.getCurrentUser().get("email");
            d.thumbnails = _.compact(e);
            a = c.get("revision");
            a !== this.model.get("revision") && this.model.unset("s9id");
            this.model.set({
                name: b.title,
                description: b.description,
                author: b.author,
                revision: a,
                enabled: !0,
                customAttributes: d,
                projectId: c.id
            });
            this.controller_.save().then(this.render.bind(this), this.templateSaveFailure_.bind(this)).done()
        },
        templateSaveFailure_: function() {
            app.getMessageView().error("Failed to save the template. Please try again.", MessageView.DEFAULT_DISPLAY_TIME);
            this.updateSaveButton_(!1)
        },
        imageClickEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), DOMUtils.getSibling(b, ".file-input").click())
        },
        checkImageDimensions_: function(a) {
            var b = a.naturalWidth,
            a = a.naturalHeight;
            return b < TemplateBuilderSlideView.MINIMUM_IMAGE_WIDTH_ ? !1 : b / a === TemplateBuilderSlideView.IMAGE_ASPECT_RATIO_
        },
        checkImageValidity_: function(a) {
            return Q.promise(function(b, c) {
                var d = URL.createObjectURL(a);
                this.objectUrls_.push(d);
                var e = this.doc_.createElement("img");
                e.addEventListener("load",
                function() {
                    this.checkImageDimensions_(e) ? b(d) : c("Images must be 760 by 838 pixels.")
                }.bind(this));
                e.addEventListener("error",
                function() {
                    c("Unable to load the image.")
                });
                e.setAttribute("src", d)
            }.bind(this))
        },
        setPreviewImage_: function(a, b) {
            return this.checkImageValidity_(b).then(function(c) {
                this.filesToUpload_[0] = b;
                a.setAttribute("src", c);
                a.classList.remove("empty");
                this.checkFormValidity_()
            }.bind(this))
        },
        fileSelectedEvent_: function(a, b) {
            var c = b.files[0];
            c && /^image\//.test(c.type) ? this.setPreviewImage_(DOMUtils.getSibling(b, "img", !0), c).fail(function(a) {
                b.value = null;
                app.getMessageView().error(a, MessageView.DEFAULT_DISPLAY_TIME)
            }).done() : (b.value = null, app.getMessageView().error("Please select an image file.", MessageView.DEFAULT_DISPLAY_TIME))
        },
        imageDropEvent_: function(a, b) {
            b.classList.remove("drag-over");
            this.allowTransfer_(a.dataTransfer) ? this.setPreviewImage_(b, a.dataTransfer.items[0].getAsFile()).fail(function(a) {
                app.getMessageView().error(a, MessageView.DEFAULT_DISPLAY_TIME)
            }).done() : app.getMessageView().error("Please drop a single image file.", MessageView.DEFAULT_DISPLAY_TIME)
        },
        imageDragEvent_: function(a, b) {
            this.allowTransfer_(a.dataTransfer) && b.classList.add("drag-over")
        },
        imageDragLeaveEvent_: function(a, b) {
            b.classList.remove("drag-over")
        },
        allowTransfer_: function(a) {
            a = a && a.items;
            return ! a || a.length !== 1 ? !1 : a[0].kind === "file" && /^image\//.test(a[0].type)
        },
        checkFormValidity_: function() {
            var a = this.el.querySelectorAll('input:not([name="choose-file"])'),
            b = this.el.querySelector("textarea"),
            a = a.every(function(a) {
                return a.value.trim() !== ""
            }),
            c = this.el.querySelector(".action-button");
            a && b.value.trim() !== "" && this.hasPrimaryThumbnail_() && this.isDirty_() ? c.removeAttribute("disabled") : c.setAttribute("disabled", "disabled")
        },
        isDirty_: function() {
            var a = DOMUtils.getFormValues(this.el.querySelector(".template-details-form")),
            b = app.getProjectModel();
            this.model.get("customAttributes");
            return a.title !== this.model.get("name") ? !0 : a.author !== this.model.get("author") ? !0 : a.description !== this.model.get("description") ? !0 : b.get("revision") !== this.model.get("revision") ? !0 : this.filesToUpload_.length ? !0 : !1
        },
        hasPrimaryThumbnail_: function() {
            var a = this.model.get("customAttributes"),
            b = !1;
            a && a.thumbnails && (b = !!a.thumbnails[0]);
            return b || !!this.filesToUpload_[0]
        },
        generalDragEvent_: function(a) {
            a.preventDefault()
        },
        generalDropEvent_: function(a) {
            a.preventDefault()
        },
        imageDeleteEvent_: function(a, b) {
            if (!DOMUtils.isSecondaryClick(a)) {
                var c = DOMUtils.getSibling(b, "img", !0);
                delete this.filesToUpload_[0];
                delete((this.model.get("customAttributes") || {}).thumbnails || [])[0];
                c.src = URLUtils.expand("{+staticHost}/{+asset}", {
                    asset: TemplateBuilderSlideView.DEFAULT_THUMBNAIL_ASSET_PATH_
                });
                c.classList.add("empty");
                this.checkFormValidity_();
                DOMUtils.getSibling(b, ".file-input").value = ""
            }
        }
    });
    TemplateBuilderSlideView.THUMBNAIL_COUNT_ = 6;
    TemplateBuilderSlideView.DEFAULT_THUMBNAIL_ASSET_PATH_ = "images/blank_template_thumbnail.svg";
    TemplateBuilderSlideView.MINIMUM_IMAGE_WIDTH_ = 380;
    TemplateBuilderSlideView.IMAGE_ASPECT_RATIO_ = 380 / 419;
    window.PublishTemplateSlideoverView = SlideoverView.extend({
        model_: null,
        saving_: !1,
        slideConstructors_: [TemplateBuilderSlideView],
        initialize: function(a) {
            a = _.extend({},
            a, {
                className: "template-creation"
            });
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.model_ = a.model || new ProjectTemplateModel;
            PublishTemplateSlideoverView.__super__.initialize.call(this, a)
        },
        getModel: function() {
            return this.model_
        },
        uploadImages: function(a) {
            return Q.all(a.map(function(a) {
                return a ? this.uploadImage_(a) : Q.resolve(null)
            },
            this))
        },
        uploadImage_: function(a) {
            return Q.promise(function(b, c) { (new HabitatRequest({
                    method: "POST",
                    url: URLUtils.expand("{+middlewareHost}/uploadthumbnail"),
                    data: a,
                    onSuccess: function(a) {
                        try {
                            var e = JSON.parse(a).result;
                            b(e.cloudfrontURL)
                        } catch(f) {
                            c(Error("Failed to parse API response"))
                        }
                    },
                    onFailure: function() {
                        c(Error("The API returned an error"))
                    }
                })).send()
            })
        },
        save: function() {
            if (this.saving_) return app.getMessageView().error("Just a moment. The last template is still being saved.", MessageView.DEFAULT_DISPLAY_TIME),
            Q.reject();
            this.saving_ = !0;
            return Q.promise(function(a, b) {
                this.model_.save(null, {
                    success: function() {
                        this.saving_ = !1;
                        app.getMessageView().show("Template published.", MessageView.DEFAULT_DISPLAY_TIME);
                        a();
                        this.close()
                    }.bind(this),
                    error: function(a, d) {
                        this.saving_ = !1;
                        try {
                            console.error("Error publishing template: " + JSON.parse(d.responseText).statusDetails.error)
                        } catch(e) {}
                        app.getMessageView().error("Unable to publish template.", MessageView.DEFAULT_DISPLAY_TIME);
                        b()
                    }.bind(this)
                })
            }.bind(this))
        }
    });
    window.SettingsMainView = MainView.extend({
        uiModelAttrs_: {
            page: null
        },
        pageView_: null,
        events: {
            "click .nav-item": "navItemClickEvent_",
            "click .archive .action-button": "archiveProjectClickEvent_"
        },
        initialize: function(a) {
            SettingsMainView.__super__.initialize.apply(this, arguments);
            this.uiModel_.on("change:page", this.changePageEvent_, this)
        },
        remove: function() {
            this.pageView_ && this.pageView_.remove();
            this.uiModel_.off("change:page", this.changePageEvent_, this);
            SettingsMainView.__super__.remove.apply(this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            app.getMessageView().title("Project Settings - Inkling Habitat");
            this.setElement(Templates["project/settings/projectSettings"](this.getTemplateData_()));
            this.parentPane_.querySelector("#content .coordinate-box").appendChild(this.el);
            this.openToPage_(this.uiModel_.get("page"))
        },
        getTemplateData_: function() {
            var a, b;
            this.model.get("isArchived") ? (a = SettingsMainView.ARCHIVE_TEXT_.ADD, b = SettingsMainView.ARCHIVE_TEXT_.ADD_DESC) : (a = SettingsMainView.ARCHIVE_TEXT_.REMOVE, b = SettingsMainView.ARCHIVE_TEXT_.REMOVE_DESC);
            return {
                projectInfoURL: URLRouter.getSettingsPath(this.model.get("shortName"), SettingsMainView.PAGES.PROJECT_INFO),
                commentSettingsURL: URLRouter.getSettingsPath(this.model.get("shortName"), SettingsMainView.PAGES.COMMENTS),
                canArchive: app.userHasPermission(PermissionsModel.PERMISSIONS.ARCHIVE_PROJECT),
                archiveButtonText: a,
                archiveButtonDescription: b
            }
        },
        renderAfterAsync_: function() {
            this.parentPane_.contains(this.el) && this.render()
        },
        openToPage_: function(a) {
            if (!Object.keys(SettingsMainView.PAGES).some(function(b) {
                return SettingsMainView.PAGES[b] === a
            },
            this)) console.warn("Unknown page name! Defaulting to project info. pageName:", a),
            a = SettingsMainView.PAGES.PROJECT_INFO;
            this.el.querySelectorAll(".nav-item").forEach(function(a) {
                a.classList.remove("selected")
            },
            this);
            this.el.querySelector('.nav-item[data-page-name="' + a + '"]').classList.add("selected");
            this.pageView_ && this.pageView_.remove();
            var b = this.el.querySelector(".settings-pane");
            if (a === SettingsMainView.PAGES.PROJECT_INFO) this.pageView_ = new MetadataSettingsView({
                model: this.model,
                parentPane: b
            });
            else if (a === SettingsMainView.PAGES.COMMENTS) this.pageView_ = new CommentSettingsView({
                model: app.getCurrentUser().get("prefs"),
                parentPane: b,
                currentProject: this.model.get("shortName")
            });
            this.pageView_.render()
        },
        changePageEvent_: function(a, b) {
            this.openToPage_(b)
        },
        navItemClickEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getRouter().openSettings(b.dataset.pageName))
        },
        archiveProjectClickEvent_: function(a) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), a = this.model.get("isArchived"), this.win_.confirm(a ? SettingsMainView.ARCHIVE_TEXT_.ADD_CONFIRM: SettingsMainView.ARCHIVE_TEXT_.REMOVE_CONFIRM) && this.model.save("isArchived", !a, {
                success: this.archiveSuccess_.bind(this),
                error: this.archiveError_.bind(this)
            }))
        },
        archiveSuccess_: function() {
            var a = this.model.get("isArchived"),
            b;
            b = a ? SettingsMainView.ARCHIVE_TEXT_.REMOVE_SUCCESS: SettingsMainView.ARCHIVE_TEXT_.ADD_SUCCESS;
            app.getMessageView().show(b, MessageView.DEFAULT_DISPLAY_TIME);
            a ? this.win_.location.href = "/dashboard": this.renderAfterAsync_()
        },
        archiveError_: function() {
            var a;
            a = this.model.get("isArchived") ? SettingsMainView.ARCHIVE_TEXT_.ADD_FAIL: SettingsMainView.ARCHIVE_TEXT_.REMOVE_FAIL;
            app.getMessageView().error(a, MessageView.DEFAULT_DISPLAY_TIME)
        }
    });
    SettingsMainView.PAGES = {
        PROJECT_INFO: "projectInfo",
        COMMENTS: "comments"
    };
    SettingsMainView.ARCHIVE_TEXT_ = {
        REMOVE_CONFIRM: "Are you sure you want to remove this project from the dashboard of all team members?",
        ADD_CONFIRM: "Are you sure you want to add this project to the dashboard of all team members?",
        REMOVE: "Remove Project",
        ADD: "Add Project to Dashboards",
        REMOVE_DESC: "This will remove the project from the dashboard",
        ADD_DESC: "This will add the project back to the dashboard",
        REMOVE_SUCCESS: "Project removed from dashboard",
        ADD_SUCCESS: "Project added to dashboard",
        REMOVE_FAIL: "Failed to remove the project from the dashboard",
        ADD_FAIL: "Failed to add the project to the dashboard"
    };
    window.SignupView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        queryParams_: null,
        isInvitation_: !1,
        strengthChecker_: null,
        form_: null,
        events: {
            "click .link-wrapper a": "linkClickEvent_",
            "focusin input": "inputFocusEvent_",
            "focusout input": "inputFocusEvent_",
            'keyup input[type="password"]': "passwordChangeEvent_"
        },
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.queryParams_ = a.queryParams;
            app.getMessageView().title("Signup - Inkling Habitat");
            this.isInvitation_ = !(!this.queryParams_.u || !this.queryParams_.email || !this.queryParams_.t)
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["landing/signup"](this.getTemplateData_()));
            this.strengthChecker_ = new PasswordStrengthCheckerView({
                parent: this.el.querySelector("#passwordCheckerContainer")
            });
            this.parentPane_.appendChild(this.el);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvt_);
            app.getMessageView().setElement(this.el.querySelector(".error-message"));
            this.el.querySelector('input[name="firstName"]').focus()
        },
        remove: function() {
            this.form_ && this.form_.remove();
            this.strengthChecker_ && this.strengthChecker_.remove();
            app.getMessageView().setDefaultElement();
            SignupView.__super__.remove.apply(this, arguments)
        },
        getTemplateData_: function() {
            var a = {};
            if (this.isInvitation_) a = _.extend({},
            this.queryParams_, {
                accountExists: !0
            }),
            a.showFullInviteMessage = !(!a.firstName || !a.lastName || !a.projectTitle);
            return a
        },
        linkClickEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getRouter().navigate(b.pathname, {
                trigger: !0
            }))
        },
        passwordChangeEvent_: function(a, b) {
            this.strengthChecker_.update(b.value)
        },
        inputFocusEvent_: function(a, b) {
            b.classList.add("visited");
            this.reportValidationErrors_()
        },
        showValidationError_: function(a, b) {
            var c = this.el.querySelector(".error-message");
            c.classList.add("floating");
            c.classList.remove("floating-top");
            c.style.top = b.offsetTop + "px";
            app.getMessageView().show(a)
        },
        hideValidationError_: function() {
            this.el.querySelector(".error-message").classList.remove("floating");
            app.getMessageView().hide()
        },
        formSubmitEvt_: function() {
            var a = this.reportValidationErrors_(!0);
            a && this.createAccount_(a)
        },
        reportValidationErrors_: function(a) {
            var b = DOMUtils.getFormValues(this.el.querySelector("form")),
            c = this.el.querySelectorAll('form input:not([type="submit"])'),
            d = this.model.validate(b),
            e = !!d,
            d = d || {};
            a && c.forEach(function(a) {
                a.classList.add("visited")
            });
            var f = !1;
            c.forEach(function(b) {
                var c = b.getAttribute("name"),
                e = b.ownerDocument.activeElement === b;
                d[c] && !e && b.classList.contains("visited") ? (b.classList.add("invalid"), f || (f = !0, a && b.focus(), this.showValidationError_(d[c], b))) : b.classList.remove("invalid")
            },
            this);
            f || this.el.querySelector(".error-message").classList.contains("floating") && this.hideValidationError_();
            return e ? null: b
        },
        createAccount_: function(a) {
            a.hashedPassword = SHA1(a.password);
            delete a.password;
            var b = this.el.querySelector('[type="submit"]');
            b.value = "Creating Account...";
            b.disabled = !0;
            this.model.set(a);
            this.isInvitation_ ? this.model.saveInvitedUser({
                token: this.queryParams_.t,
                success: this.gotoRegistration_.bind(this),
                error: this.handleFailure_.bind(this, "invitation")
            }) : this.model.save(void 0, {
                success: this.loginToNewAccount_.bind(this),
                error: this.handleFailure_.bind(this, "creating"),
                saveAttrs: ["firstName", "lastName", "hashedPassword", "email"],
                validate: !1
            })
        },
        handleFailure_: function(a, b, c, d) {
            this.hideValidationError_();
            var e = d.status && d.status.statusCode;
            a === "creating" && e === HabitatRequest.STATUS_CODES.EMAIL_EXISTS ? app.getMessageView().error("An account with that email already exists. Try signing in.") : app.getMessageView().error("There was an error creating your account. Try again later or contact support.");
            e = this.el.querySelector('[type="submit"]');
            e.value = "Create Account";
            e.disabled = !1;
            console.error("Account Signup failed [" + a + "]", Array.prototype.slice.call(arguments, 1))
        },
        gotoRegistration_: function() {
            ia("ga", "sendEvent", {
                eventCategory: "Account",
                eventAction: "sign_up",
                eventLabel: "inkling-habitat"
            });
            app.getRouter().navigate("register", {
                trigger: !0
            })
        },
        loginToNewAccount_: function() {
            ia("ga", "sendEvent", {
                eventCategory: "Account",
                eventAction: "sign_up",
                eventLabel: "inkling-habitat"
            });
            var a = this.gotoRegistration_.bind(this),
            b = this.handleFailure_.bind(this, "login");
            app.getAuthenticator().signIn(this.model.get("email"), this.model.get("hashedPassword"), a, b, !0)
        }
    });
    window.SplitButtonView = Backbone.View.extend({
        events: {
            "click .button-split:not([disabled])": "clickEvt_",
            "click .split-button-action:not([disabled])": "actionEvt_"
        },
        parentEl_: null,
        buttonText_: null,
        buttonID_: null,
        actions_: null,
        mainButtonDisabled_: !1,
        actionsDisabled_: null,
        initialize: function(a) {
            a = a || {};
            this.parentEl_ = a.parentEl;
            this.buttonText_ = a.buttonText;
            this.buttonID_ = a.buttonID;
            this.actions_ = a.actions;
            this.actionsDisabled_ = {};
            Object.keys(this.actions_).forEach(function(a) {
                this.actionsDisabled_[a] = !1
            },
            this)
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/splitButton"](this.getTemplateData_()));
            this.parentEl_.appendChild(this.el)
        },
        disableButton: function() {
            this.el.querySelector("button").setAttribute("disabled", "disabled");
            this.mainButtonDisabled_ = !0
        },
        enableButton: function() {
            this.el.querySelector("button").removeAttribute("disabled");
            this.mainButtonDisabled_ = !1
        },
        disableAction: function(a) {
            this.el.querySelector('li[data-action="' + a + '"]').setAttribute("disabled", "disabled");
            this.actionsDisabled_[a] = !0
        },
        enableAction: function(a) {
            this.el.querySelector('li[data-action="' + a + '"]').removeAttribute("disabled");
            this.actionsDisabled_[a] = !1
        },
        setTitle: function(a) {
            this.el.querySelector(".button-split").setAttribute("title", a)
        },
        getTemplateData_: function() {
            return {
                buttonID: this.buttonID_,
                buttonDisabled: this.mainButtonDisabled_,
                buttonText: this.buttonText_,
                actions: Object.keys(this.actions_).map(function(a) {
                    return {
                        action: a,
                        display: this.actions_[a],
                        disabled: this.actionsDisabled_[a]
                    }
                },
                this)
            }
        },
        actionEvt_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || this.trigger("action:" + b.dataset.action)
        },
        clickEvt_: function(a) {
            DOMUtils.isSecondaryClick(a) || this.trigger("click")
        }
    });
    window.StructureMainView = MainView.extend({
        documentView_: null,
        loadingModel_: null,
        render: function() {
            if (this.documentView_) this.documentView_.remove(),
            this.documentView_ = null;
            ia("timing", "start", Analytics.TIMING_TAGS.FILE_LOAD, {
                shortName: this.model.get("shortName")
            });
            this.loadingModel_ = new TOCDocumentModel({
                project: this.model
            });
            this.loadingModel_.on("loaded", this.tocLoadedEvent_, this);
            this.loadingModel_.fetch({
                error: function() {
                    this.loadingModel_ = null
                }.bind(this)
            });
            app.getMessageView().show("Loading...")
        },
        remove: function() {
            app.getMessageView().hide("Loading...");
            this.documentView_ && (this.documentView_.hideSidebar(), this.documentView_.remove());
            this.loadingModel_ && this.loadingModel_.off("loaded", this.tocLoadedEvent_, this);
            StructureMainView.__super__.remove.call(this)
        },
        tocLoadedEvent_: function() {
            this.loadingModel_.off("loaded", this.tocLoadedEvent_, this);
            this.loadingModel_.errorLoading() || app.getMessageView().hide();
            this.documentView_ = new TOCDocumentView({
                model: this.loadingModel_,
                documentArea: this.parentPane_.querySelector("#document-area")
            });
            this.documentView_.on("loaded", this.tocRenderedEvent_, this);
            this.documentView_.render()
        },
        tocRenderedEvent_: function() {
            this.documentView_.off("loaded", this.tocRenderedEvent_, this);
            ia("timing", "end", Analytics.TIMING_TAGS.FILE_LOAD, {
                pageURL: this.win_.location.href,
                documentType: this.loadingModel_.get("documentType"),
                documentMode: this.documentView_.getMode()
            });
            this.loadingModel_ = null
        }
    });
    window.StyleListView = FileListView.extend({
        getDirectoryPath_: function(a) {
            return RepositoryLayout.CSS_DIRECTORY + a
        }
    });
    window.SupportPopupView = PopupView.extend({
        model: null,
        openedTimestamp_: null,
        form_: null,
        events: _.extend({},
        PopupView.prototype.events, {
            "click #file-upload-message": "fileUploadClickEvent_",
            'change input[type="file"]': "fileInputChangeEvent_"
        }),
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.nav_ = a.navigator || navigator;
            a.className = "support-popup support-dialog";
            a.maskVisible = !0;
            a.removeOnClose = !0;
            var b = [a].concat(Array.prototype.slice(arguments, 1));
            SupportPopupView.__super__.initialize.apply(this, b);
            this.model = new SupportEmailModel
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["common/supportPopup"](this.getTemplateData_()));
            SupportPopupView.__super__.render.apply(this, arguments);
            this.open();
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.listenTo(this.form_, "cancel", this.formCancelEvent_)
        },
        remove: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            SupportPopupView.__super__.remove.apply(this, arguments)
        },
        open: function() {
            this.openedTimestamp_ = (new Date).toString();
            SupportPopupView.__super__.open.apply(this, arguments)
        },
        focus: function() {
            this.el.querySelector("#issue-type-selector").focus()
        },
        getTemplateData_: function() {
            var a = this.model.get("debugData");
            return {
                email: a.email,
                url: a.url,
                browser: a.browser,
                userAgent: a.userAgent,
                timestamp: this.openedTimestamp_ || a.timestamp,
                uploadMessage: SupportPopupView.UPLOAD_MESSAGES.NONE
            }
        },
        fileUploadClickEvent_: function(a) {
            if (!DOMUtils.isSecondaryClick(a)) {
                a.preventDefault();
                var a = this.el.querySelector("#files-container"),
                b = DOMUtils.createElement("input", {
                    attributes: {
                        type: "file",
                        accept: "image/*, video/*, audio/*"
                    },
                    doc: this.doc_
                });
                a.appendChild(b);
                b.click()
            }
        },
        fileInputChangeEvent_: function() {
            var a = this.el.querySelector("#file-list");
            a.innerHTML = "";
            var b = 0;
            this.el.querySelectorAll('input[type="file"]').forEach(function(c) {
                if (!c || !c.files || c.files.length === 0) DOMUtils.detachElement(c);
                else {
                    var d = c.files[0];
                    if (!d || !d.name) DOMUtils.detachElement(c);
                    else {
                        var e = DOMUtils.createElement("li", {
                            doc: this.doc_
                        });
                        d.size > SupportEmailModel.MAX_FILE_SIZE ? (e.textContent = 'The file "' + d.name + '" is too large', e.classList.add("error"), DOMUtils.detachElement(c)) : b + d.size > SupportEmailModel.MAX_TOTAL_SIZE ? (e.textContent = 'There is not enough space remaining to add the file "' + d.name + '"', e.classList.add("error"), DOMUtils.detachElement(c)) : (b += d.size, e.textContent = d.name);
                        a.appendChild(e)
                    }
                }
            },
            this);
            this.el.querySelector("#file-upload-message").textContent = b === 0 ? SupportPopupView.UPLOAD_MESSAGES.NONE: SupportPopupView.UPLOAD_MESSAGES.SOME
        },
        formSubmitEvent_: function() {
            var a = this.el.querySelector("#issue-type-selector"),
            b = this.el.querySelector("#subject-input"),
            c = this.el.querySelector("#message-textarea");
            if (!this.validateForm([a, b, c])) {
                app.getMessageView().show("Sending email...");
                var d = a.value,
                e = b.value,
                f = c.value,
                a = this.el.querySelectorAll('input[type="file"]').filter(function(a) {
                    return a && a.files && a.files[0] && a.files[0].name
                },
                this);
                a.length > 0 ? SupportEmailModel.loadFileData(a,
                function(a) {
                    this.sendEmail_(d, e, f, a)
                }.bind(this)) : this.sendEmail_(d, e, f)
            }
        },
        sendEmail_: function(a, b, c, d) {
            this.model.set({
                category: a,
                subject: b,
                message: c,
                files: d
            });
            if (this.openedTimestamp_) this.model.get("debugData").timestamp = this.openedTimestamp_;
            this.model.save(null, {
                success: function() {
                    app.getMessageView().show("Sent email to Habitat support", MessageView.DEFAULT_DISPLAY_TIME)
                },
                error: function(a) {
                    console.error("Failed to send support email. xhr:", a);
                    app.getMessageView().error("Failed to send support email")
                }
            });
            this.close()
        },
        formCancelEvent_: function() {
            this.close()
        },
        validateForm: function(a) {
            var b = !1,
            c = !1;
            a.forEach(function(a) {
                a.value === "" ? (a.parentElement.classList.add("support-input-invalid"), b = !0, c || (a.focus(), c = !0)) : a.parentElement.classList.remove("support-input-invalid")
            });
            return b
        }
    });
    SupportPopupView.UPLOAD_MESSAGES = {
        NONE: "Upload a screenshot (5 MB max)",
        SOME: "Upload another screenshot (5 MB max)"
    };
    window.ThemeDocumentView = FileDocumentView.extend({
        model: null,
        switchToRevision_: function(a) {
            app.getRouter().openTheme(this.model.get("filePath"), a)
        },
        showFilenameHeader_: function() {
            return ! 0
        }
    });
    window.ThemeMainView = MainView.extend({
        view_: null,
        navigatorView_: null,
        selectedDocument_: null,
        styleDirectoryListing_: null,
        widgetDirectoryListing_: null,
        uiModelAttrs_: {
            filePath: null,
            revision: null,
            lineNumber: null
        },
        initialize: function(a) {
            ThemeMainView.__super__.initialize.apply(this, arguments);
            this.styleDirectoryListing_ = this.model.get("styleDirectoryListing");
            this.widgetDirectoryListing_ = this.model.get("widgetDirectoryListing");
            this.listenTo(this.uiModel_, "change", this.changeModelEvent_)
        },
        render: function() {
            this.maybeHideLoadingMessage_();
            this.setElement(this.parentPane_.querySelector("#document-area"));
            if (!this.navigatorView_) this.navigatorView_ = new NavigatorThemeView({
                model: this.model,
                styleDirectoryListing: this.styleDirectoryListing_,
                widgetDirectoryListing: this.widgetDirectoryListing_,
                parentPane: this.parentPane_.querySelector("#navigator")
            }),
            this.listenTo(this.navigatorView_, "loaded", this.maybeHideLoadingMessage_),
            this.navigatorView_.render();
            this.uiModel_.get("filePath") ? this.renderFileView_() : app.getRouter().navigate(URLRouter.getProjectPath(this.model.get("shortName")), {
                replace: !0,
                trigger: !0
            })
        },
        remove: function() {
            this.el.classList.remove("theme-editor");
            app.getMessageView().hide("Loading...");
            this.view_ && (this.view_.hideSidebar(), this.removeDocumentView_());
            if (this.navigatorView_) this.navigatorView_.remove(),
            this.navigatorView_ = null;
            this.undelegateEvents();
            this.stopListening()
        },
        removeDocumentView_: function() {
            if (this.view_) this.stopListening(this.view_),
            this.view_.remove(),
            this.view_ = null
        },
        changeModelEvent_: function(a) {
            this.updateFileView_(a.changedAttributes())
        },
        updateFileView_: function(a) { ! a.hasOwnProperty("filePath") && a.hasOwnProperty("revision") ? (a = this.view_.getDocumentModel(), this.setDocument_(a), a.set("revision", this.uiModel_.get("revision")), a.fetch({
                loadIssues: !1
            })) : this.renderFileView_()
        },
        renderFileView_: function() {
            this.el.classList.add("theme-editor");
            this.maybeHideLoadingMessage_();
            ia("timing", "start", Analytics.TIMING_TAGS.FILE_LOAD, {
                shortName: this.model.get("shortName"),
                documentType: "file:scss"
            });
            var a = new ThemeDocumentModel({
                project: this.model,
                filePath: this.uiModel_.get("filePath"),
                revision: this.uiModel_.get("revision"),
                documentType: "file:scss"
            });
            this.setDocument_(a);
            this.listenToOnce(a, "loaded", this.newDocumentLoaded_);
            a.fetch()
        },
        maybeHideLoadingMessage_: function() {
            var a = this.view_ && this.view_.getDocumentModel();
            this.styleDirectoryListing_.isLoaded() && this.widgetDirectoryListing_.isLoaded() && a && a.isLoaded() && app.getMessageView().hide("Loading...")
        },
        newDocumentLoaded_: function(a) {
            this.removeDocumentView_();
            this.view_ = new ThemeDocumentView({
                model: a,
                documentArea: this.el
            });
            this.listenTo(this.view_, "loaded", this.newDocumentRendered_);
            this.listenToOnce(this.view_, "loaded", this.endTimingEvent_);
            this.view_.render()
        },
        newDocumentRendered_: function() {
            this.maybeHideLoadingMessage_()
        },
        endTimingEvent_: function() {
            ia("timing", "end", Analytics.TIMING_TAGS.FILE_LOAD, {
                pageURL: this.win_.location.href,
                documentMode: this.view_.getMode()
            })
        },
        setDocument_: function(a) {
            this.selectedDocument_ && (this.stopListening(this.selectedDocument_, "loading", this.documentLoading_), this.stopListening(this.selectedDocument_, "error", this.loadingError_));
            this.selectedDocument_ = a;
            this.navigatorView_.setSelectedDocument(a);
            this.selectedDocument_ && (this.listenTo(this.selectedDocument_, "loading", this.documentLoading_), this.listenTo(this.selectedDocument_, "error", this.loadingError_))
        },
        documentLoading_: function() {
            this.selectedDocument_.errorLoading() || app.getMessageView().show("Loading...")
        },
        loadingError_: function(a, b) {
            app.getMessageView().error("Error loading file content");
            console.error("Error loading file content:", b)
        }
    });
    window.ReportsMainView = MainView.extend({
        uiModelAttrs_: {
            build: null,
            type: null
        },
        reportsView_: null,
        navigatorView_: null,
        initialize: function(a) {
            ReportsMainView.__super__.initialize.apply(this, arguments);
            this.uiModel_.on("change", this.changeReportEvent_, this)
        },
        render: function() {
            this.navigatorView_ && this.navigatorView_.remove();
            this.navigatorView_ = new NavigatorReportsView({
                model: this.model,
                parentPane: this.parentPane_.querySelector("#navigator")
            });
            this.navigatorView_.render();
            this.openReport_(this.uiModel_.get("build"), this.uiModel_.get("type"))
        },
        remove: function() {
            this.reportsView_ && this.reportsView_.remove();
            this.navigatorView_ && this.navigatorView_.remove();
            this.uiModel_.off("change", this.changeReportEvent_, this);
            ReportsMainView.__super__.remove.call(this)
        },
        changeReportEvent_: function() {
            this.openReport_(this.uiModel_.get("build"), this.uiModel_.get("type"))
        },
        openReport_: function(a, b) {
            this.reportsView_ && this.reportsView_.remove();
            if (a && b) {
                var c = new UnitProofModel(null, {
                    build: a,
                    unitProofType: b
                });
                this.reportsView_ = new UnitProofView({
                    model: c,
                    parentPane: this.parentPane_.querySelector("#content .coordinate-box")
                });
                c.on("loaded", this.newReportLoaded_, this);
                c.on("error", this.newReportError_, this);
                c.fetch();
                app.getMessageView().show("Loading...");
                ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.OPEN_REPORT,
                    eventInfo: {
                        shortName: this.model.get("shortName"),
                        reportName: b
                    }
                })
            } else app.getMessageView().title("Reports"),
            this.reportsView_ = new UnitProofOverviewView({
                model: this.model.get("unitProofs"),
                parentPane: this.parentPane_.querySelector("#content .coordinate-box")
            });
            this.reportsView_.render()
        },
        newReportLoaded_: function(a) {
            a.off("loaded", this.newReportLoaded_, this);
            a.off("error", this.newReportError_, this);
            app.getMessageView().hide()
        },
        newReportError_: function(a) {
            a.off("loaded", this.newReportLoaded_, this);
            a.off("error", this.newReportError_, this);
            app.getMessageView().error("Error loading report")
        }
    });
    window.UnitProofFilterView = Backbone.View.extend({
        parentPane_: null,
        model: null,
        keyboard_: null,
        isNew_: null,
        removed_: !1,
        form_: null,
        initialize: function(a) {
            this.parentPane_ = a.parentPane || document.body;
            this.openNear_ = a.openNear;
            this.isNew_ = typeof a.isNew !== "undefined" ? a.isNew: !1;
            this.setupKeyboard_()
        },
        render: function() {
            if (this.form_) this.stopListening(this.form_),
            this.form_.remove(),
            this.form_ = null;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/unitProof/unitProofFilterPopup"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            app.getKeyboardManager().activate(this.keyboard_);
            this.form_ = new FormView({
                el: this.el
            });
            this.listenTo(this.form_, "submit", this.formSubmitEvent_);
            this.listenTo(this.form_, "cancel", this.formCancelEvent_);
            this.criteriaSelector_ = SelectorView.createSelector({
                modelOptions: this.getCriteria_(),
                parentPane: this.el.querySelector(".criteria-selector")
            });
            this.el.querySelector('input[type="text"]').focus()
        },
        remove: function() {
            this.form_ && this.form_.remove();
            app.getKeyboardManager().remove(this.keyboard_);
            this.removed_ = !0;
            UnitProofFilterView.__super__.remove.apply(this)
        },
        close: function() {
            this.removed_ || (this.isNew_ ? this.clear_() : this.remove())
        },
        setupKeyboard_: function() {
            this.keyboard_ = app.getKeyboardManager().createKeyboard({
                bindings: app.getKeyboardResolver().resolve({
                    cancel: this.cancelKeyEvt_.bind(this)
                })
            })
        },
        getTemplateData_: function() {
            var a = this.model.get("value"),
            b = this.getPosition_();
            return {
                value: a,
                x: b.x,
                y: b.y
            }
        },
        getPosition_: function() {
            var a = DOMUtils.getCoordsRelativeToElement(this.openNear_, this.parentPane_),
            b = a.left,
            a = a.top + this.openNear_.offsetHeight;
            b -= 8;
            a += 10;
            return {
                x: b,
                y: a
            }
        },
        formSubmitEvent_: function() {
            var a = this.criteriaSelector_.model.get("selectedValue"),
            b = this.el.querySelector('*[name="value"]').value;
            b === "" ? this.clear_() : (this.model.set({
                criteria: a,
                value: b
            }), this.remove())
        },
        formCancelEvent_: function() {
            this.clear_()
        },
        clear_: function() {
            this.remove();
            this.model.collection.remove(this.model)
        },
        cancelKeyEvt_: function(a) {
            a.preventDefault();
            this.close()
        },
        getCriteria_: function() {
            return {
                values: Object.keys(UnitProofFilterModel.CRITERIA),
                selectedValue: this.model.get("criteria")
            }
        }
    });
    window.UnitProofOverviewView = Backbone.View.extend({
        model: null,
        events: {
            "click a": "clickReportEvent_"
        },
        initialize: function(a) {
            this.parentPane_ = a.parentPane;
            this.listenTo(this.model, "change", this.render)
        },
        render: function() {
            this.el.destroy();
            this.setElement(Templates["project/unitProof/unitProofDefault"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el)
        },
        getTemplateData_: function() {
            var a = this.model.get("unitProofs"),
            b = app.getProjectModel(),
            c = _.extend(b.getOverviewData(), {
                errors: [],
                warnings: []
            });
            a && Object.keys(a).forEach(function(b) {
                var e = a[b];
                if (e.errors) e.url = this.getUnitProofURL_(b),
                c.errors.push(e);
                if (e.warnings) e.url = e.url || this.getUnitProofURL_(b),
                c.warnings.push(e)
            },
            this);
            c.lastUpdated = FormatTime.getRelativeDateTimeString(b.get("lastUpdated"), " ago");
            c.revision = b.get("revision");
            return c
        },
        getUnitProofURL_: function(a) {
            return URLRouter.getReportsPath(app.getProjectModel().get("shortName"), this.model.get("buildNumber"), a)
        },
        clickReportEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), app.getRouter().navigate(b.pathname, {
                trigger: !0
            }))
        }
    });
    window.UnitProofViewFilterMixin = {
        filters_: null,
        currentFilterView_: null,
        setupFilters_: function() {
            this.filters_ = new UnitProofFilterCollection;
            this.filters_.on("change", this.render, this);
            this.filters_.on("remove", this.render, this)
        },
        filterRow_: function(a) {
            for (var b = this.filters_,
            c, d, e = 0; e < b.length; e++) if (c = b.at(e), d = c.get("colIndex"), d = a[d], !c.match(d)) return ! 1;
            return ! 0
        },
        filterPopupEvt_: function(a, b) {
            a.preventDefault();
            var c = DOMUtils.getParent(b, "*[data-index]"),
            d = DOMUtils.getParent(b, ".unit-proof"),
            c = parseInt(c.dataset.index, 10),
            e = this.filters_.getByIndex(c),
            f = !1;
            e || (e = new UnitProofFilterModel({
                colIndex: c
            }), this.filters_.add(e), f = !0);
            d = new UnitProofFilterView({
                model: e,
                parentPane: d,
                openNear: b,
                isNew: f
            });
            d.render();
            this.currentFilterView_ = d
        },
        closeFilterEvt_: function(a) {
            DOMUtils.getParent(a.target, ".unit-proof-filter-popup") || this.closeFilter_()
        },
        closeFilter_: function() {
            if (this.currentFilterView_) this.currentFilterView_.close(),
            this.currentFilterView_ = null
        }
    };
    window.UnitProofView = Backbone.View.extend({
        model: null,
        sortByColumnIndex_: 0,
        sortByAscending_: !0,
        groupByIdx_: null,
        scrollLeft_: 0,
        expandedGroups_: null,
        events: {
            "click *": "closeFilterEvt_",
            "click .filter": "filterPopupEvt_",
            "click .header": "sortEvt_",
            "click .ui-toggle-header": "groupToggleEvt_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.win || window;
            this.parentPane_ = a.parentPane;
            this.scrollingSync_ = this.scrollingSync_.bind(this);
            this.expandedGroups_ = {};
            this.setDefaultGroupBy_();
            this.setupFilters_();
            this.model.on("loaded", this.loadedEvent_, this)
        },
        getDocumentTitle_: function() {
            return this.getListModel_().title
        },
        loadedEvent_: function() {
            this.groupByIdx_ === null && this.setDefaultGroupBy_();
            this.render()
        },
        setDefaultGroupBy_: function() {
            for (var a = this.model.get("columns") || [], b = 0; b < a.length; b++) if (a[b].name === UnitProofView.DEFAULT_GROUP_BY_COL_NAME_) {
                this.groupByIdx_ = b + 1;
                break
            }
        },
        render: function() {
            this.el.destroy();
            app.getMessageView().title(this.getDocumentTitle_());
            this.setElement(Templates["project/unitProof/unitProof"](this.getTemplateData_()));
            this.parentPane_.appendChild(this.el);
            this.renderGroupBySelector_();
            var a = this.el.querySelector(".scrolling-data");
            a.addEventListener("scroll", this.scrollingSync_);
            var b = this.el.querySelector(".scrolling-headers"),
            c = a.querySelector(".spacer");
            c && DOMUtils.setStyles(c, {
                width: b.scrollWidth + "px",
                height: "1px"
            });
            a.scrollLeft = this.scrollLeft_;
            this.trigger("loaded")
        },
        renderGroupBySelector_: function() {
            this.groupBySelector_ && this.groupBySelector_.remove();
            this.groupBySelector_ = SelectorView.createSelector({
                modelOptions: {
                    values: this.getGroupByList_(),
                    selectedValue: this.groupByIdx_
                },
                parentPane: this.el.querySelector(".groupby-selector"),
                selectorFormatter: this.groupByListFormatter_.bind(this),
                changeCallback: this.groupBySelectorChanged_.bind(this)
            })
        },
        getGroupByList_: function() {
            var a = (this.model.get("columns") || []).length;
            a++;
            for (var b = [""], c = 0; c < a; c++) b.push(c);
            return b
        },
        groupByListFormatter_: function(a) {
            var b = this.getColumns_();
            return b[a] ? b[a].name: "None"
        },
        groupBySelectorChanged_: function(a) {
            a = a.get("selectedValue");
            this.groupByIdx_ = a !== "" ? a: null;
            this.expandedGroups_ = {};
            this.render()
        },
        remove: function() {
            this.model.off("loaded", this.loadedEvent_, this);
            var a = this.el.querySelector(".scrolling-data");
            a && a.removeEventListener("scroll", this.scrollingSync_);
            UnitProofView.__super__.remove.call(this)
        },
        getTemplateData_: function() {
            var a = this.getColumns_(),
            b = this.getRows_(a);
            this.sortRows_(this.sortByAscending_, a, b);
            var c = this.getTotals_(a, b);
            this.model.getBuild();
            var d = this.model.get("revision"),
            b = this.getDataHTML_(b, a);
            app.getProjectModel().get("shortName");
            this.model.getUnitProofType();
            var e = URLUtils.expand("{+wwwHost}/read/habitat-user-guide/fcc68db9eee04d3a82b0460d1bc1904f/369f59c15d4e4b4992ca998f87e269c9"),
            a = {
                columns: a,
                tableHTML: b,
                docsURL: e,
                revision: d,
                totalErrors: c.errors,
                totalWarnings: c.warnings,
                totalInfo: c.info
            };
            this.getUnitProofInfo_(a);
            return a
        },
        getTotals_: function(a, b) {
            for (var c = {
                errors: 0,
                warnings: 0,
                info: 0
            },
            d, e = 0; e < a.length; e++) if (a[e].type === UnitProofView.COLUMN_TYPE_LOG_LEVEL_) {
                d = e;
                break
            }
            if (typeof d === "undefined") return c;
            b.forEach(function(a) {
                a = a[d].value;
                if (typeof a === "object") a = a.level;
                a === UnitProofView.LOG_LEVEL_ERROR_ ? c.errors++:a === UnitProofView.LOG_LEVEL_WARNING_ ? c.warnings++:a === UnitProofView.LOG_LEVEL_INFO_ && c.info++
            },
            this);
            return c
        },
        getDataHTML_: function(a, b) {
            return this.groupByIdx_ !== null ? this.getGroupsHTML_(a, b, this.groupByIdx_) : this.getTableHTML_(a, b)
        },
        getGroupsHTML_: function(a, b, c) {
            var d = '<div class="spacer"></div>',
            e = [],
            f = null;
            a.forEach(function(a) {
                var h = a[c];
                if (!f || this.groupComparator_(h.value, f.value)) f && (d += this.getGroupHeaderHTML_(f.formatted, e, b), e = []),
                f = h;
                e.push(a)
            },
            this);
            a.length > 0 && (d += this.getGroupHeaderHTML_(f.formatted, e, b));
            return d
        },
        groupComparator_: function(a, b) {
            return typeof a === "object" ? a.level !== b.level || a.text !== b.text: a !== b
        },
        getGroupHeaderHTML_: function(a, b, c) {
            var d = this.getTotals_(c, b),
            b = this.getTableHTML_(b, c),
            c = !this.expandedGroups_[DOMUtils.createElement("div", {
                html: a,
                doc: this.doc_
            }).textContent.trim()];
            return Templates["project/unitProof/unitProofGroupHeader"]({
                groupName: a,
                collapsed: c,
                totalErrors: d.errors,
                totalWarnings: d.warnings,
                totalInfo: d.info,
                tableHTML: b
            },
            {
                raw: !0
            })
        },
        getTableHTML_: function(a, b) {
            var c = '<div class="spacer"></div><table>';
            a.forEach(function(a) {
                c += '<tr class="' + (a.inGroup ? "hidden": "") + '">';
                a.forEach(function(a, d) {
                    c += '<td class="type-' + b[d].type + '">' + a.formatted + "</td>"
                });
                c += "</tr>"
            });
            c += "</table>";
            return c
        },
        getListModel_: function() {
            var a = app.getProjectModel().get("unitProofs"),
            b = this.model.getUnitProofType();
            return a.getByType(b)
        },
        getUnitProofInfo_: function(a) {
            var b = this.getListModel_();
            _.extend(a, b)
        },
        getColumns_: function() {
            var a = this.model.get("columns"),
            a = a ? a.slice() : [];
            a.splice(0, 0, {
                type: "index",
                name: "Index"
            });
            a.forEach(function(a, c) {
                a.index = c;
                var d = [];
                d.push("type-" + a.type);
                this.filters_.getByIndex(c) && d.push("filtered");
                c == this.sortByColumnIndex_ && (d.push("sorted"), this.sortByAscending_ && d.push("ascending"));
                a.classes = d.join(" ")
            },
            this);
            return a
        },
        getRows_: function(a) {
            var b = []; (this.model.get("rows") || []).forEach(function(c, d) {
                var e = c.slice();
                e.splice(0, 0, d + 1);
                this.filterRow_(e) && (e = e.map(function(b, c) {
                    return {
                        value: b,
                        formatted: this.formatCell_(b, a[c].type)
                    }
                },
                this), b.push(e))
            },
            this);
            return b
        },
        sortRows_: function(a, b, c) {
            a = this.sortRowsComparator_.bind(this, b);
            c.sort(a)
        },
        sortRowsComparator_: function(a, b, c) {
            var d;
            return this.groupByIdx_ !== null && (d = this.compareRowsByIndex_(a, this.groupByIdx_, b, c, !0), d !== 0) ? d: d = this.compareRowsByIndex_(a, this.sortByColumnIndex_, b, c, this.sortByAscending_)
        },
        compareRowsByIndex_: function(a, b, c, d, e) {
            a = this.getSortComparatorByType_(a[b].type);
            c = c[b].value;
            b = d[b].value;
            return e ? a(c, b) : a(b, c)
        },
        getSortComparatorByType_: function(a) {
            return a === UnitProofView.COLUMN_TYPE_LOG_LEVEL_ ? this.sortLogLevel_.bind(this) : this.sortDefault_
        },
        sortLogLevel_: function(a, b) {
            return typeof a === "object" ? (a.text = a.text || "", b.text = b.text || "", a.level === b.level ? this.sortDefault_(a.text, b.text) : this.sortDefault_(a.level, b.level)) : this.sortDefault_(a, b)
        },
        sortDefault_: function(a, b) {
            return a == b ? 0 : a < b ? -1 : 1
        },
        formatCell_: function(a, b) {
            return b === "log_level" ? this.formatLogLevel_(a) : b === "path" ? this.formatPath_(a) : b === "formatted" ? a: StringUtils.escapeHTML(a)
        },
        formatLogLevel_: function(a) {
            var b;
            if (typeof a === "object") b = a.text,
            a = a.level;
            if (a === UnitProofView.LOG_LEVEL_INFO_) a = "ok";
            else if (a === UnitProofView.LOG_LEVEL_WARNING_) a = "warning";
            else if (a === UnitProofView.LOG_LEVEL_ERROR_) a = "error";
            else return a;
            b || (b = a);
            return Templates["project/unitProof/unitProofLogLevel"]({
                name: a,
                text: b
            },
            {
                raw: !0
            })
        },
        formatPath_: function(a) {
            var b = app.getProjectModel().get("shortName");
            return Templates["project/unitProof/unitProofSourcePath"]({
                shortName: b,
                path: a,
                filename: URI(a).filename()
            },
            {
                raw: !0
            })
        },
        scrollingSync_: function() {
            this.closeFilter_();
            var a = this.el.querySelector(".scrolling-data");
            this.scrollLeft_ = this.el.querySelector(".scrolling-headers").scrollLeft = a.scrollLeft
        },
        groupToggleEvt_: function(a, b) {
            a.preventDefault();
            if (a.altKey) this.toggleAllGroups_();
            else {
                var c = b.parentElement;
                c.classList.toggle("ui-toggle-closed");
                c = this.getGroupNameForElement_(c);
                this.expandedGroups_[c] = !this.expandedGroups_[c]
            }
        },
        toggleAllGroups_: function() {
            var a = this.el.querySelectorAll(".group > li.ui-toggle-closed");
            if (a.length > 0) {
                a.forEach(function(a) {
                    a.classList.remove("ui-toggle-closed")
                });
                for (var b = 0; b < a.length; b++) this.expandedGroups_[this.getGroupNameForElement_(a[b])] = !0
            } else this.el.querySelectorAll(".group > li").forEach(function(a) {
                a.classList.add("ui-toggle-closed")
            }),
            this.expandedGroups_ = {}
        },
        getGroupNameForElement_: function(a) {
            return a.querySelector('*[class="title"]').firstChild.textContent.trim()
        },
        sortEvt_: function(a, b) {
            if (!a.target.classList.contains("filter")) {
                a.preventDefault();
                var c = b.dataset.index;
                c == this.sortByColumnIndex_ ? this.sortByAscending_ = !this.sortByAscending_: (this.sortByColumnIndex_ = c, this.sortByAscending_ = !0);
                this.render()
            }
        }
    });
    _.extend(UnitProofView.prototype, UnitProofViewFilterMixin);
    UnitProofView.COLUMN_TYPE_LOG_LEVEL_ = "log_level";
    UnitProofView.DEFAULT_GROUP_BY_COL_NAME_ = "Chapter";
    UnitProofView.LOG_LEVEL_INFO_ = 1;
    UnitProofView.LOG_LEVEL_WARNING_ = 5;
    UnitProofView.LOG_LEVEL_ERROR_ = 10;
    window.WidgetAPIView = Backbone.View.extend({
        stateTracker_: null,
        manager_: null,
        readAPI_: null,
        initialize: function(a) {
            WidgetAPIView.__super__.initialize.apply(this, arguments);
            a = a || {};
            this.stateTracker_ = new WidgetStateTracker({
                document: a.iframeDocument
            });
            this.manager_ = new WidgetMessageManager({
                target: a.iframeDocument
            });
            this.readAPI_ = new WidgetReadAPI({
                manager: this.manager_
            });
            this.listenTo(this.stateTracker_, "loaded",
            function() {
                this.readAPI_.sendLoaded()
            });
            this.listenTo(this.manager_, "configuration:set",
            function(a, c) {
                this.trigger("configuration", a, c)
            })
        },
        remove: function() {
            this.readAPI_.remove();
            this.manager_.remove();
            this.stateTracker_.remove();
            WidgetAPIView.__super__.remove.apply(this, arguments)
        }
    });
    window.WidgetListView = FileListView.extend({
        render: function() {
            DOMUtils.detachElement(this.el);
            var a = this.getTemplateData_();
            this.setElement(Templates["project/widgetList"](a));
            this.parentPane_.appendChild(this.el)
        },
        getEmptyMessage: function() {
            return "There are no widgets in this project yet. Upload a widget by clicking the button below."
        },
        getFileTree_: function() {
            var a = WidgetListView.__super__.getFileTree_.call(this),
            b = null;
            a.some(function(a, d) {
                if (!a.isDirectory) return ! 0;
                a.dirName === "shared" && (b = d);
                a.title = StringUtils.capitalize(a.dirName.replace(/[_\-]/g, " "))
            });
            b !== null && a.splice(b, 1);
            this.cleanIndentation_(a);
            return a
        },
        cleanIndentation_: function(a) {
            a.forEach(function(a) {
                a.indentation -= FileListView.INDENTATION;
                a.isDirectory && this.cleanIndentation_(a.entries)
            },
            this)
        },
        getDirectoryPath_: function(a) {
            return RepositoryLayout.WIDGETS_DIRECTORY + a
        }
    });
    window.WidthControlView = Backbone.View.extend({
        widthTogglable_: null,
        parentPane_: null,
        events: {
            'change input[name="width"]': "changeWidthEvent_",
            'change input[name="fontSize"]': "changeFontSizeEvent_",
            mouseover: "mouseOverEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.widthTogglable_ = a.widthTogglable;
            this.listenTo(app.getCurrentUser().get("prefs"), "change:contentWidth change:contentFontSize", this.userPrefsChangedEvent_)
        },
        render: function() {
            var a;
            if (this.el && this.el.querySelector(".ui-slider-values")) a = this.el.querySelector(".ui-slider-values").scrollTop;
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/widthToggle"](this.getTemplate_()));
            this.parentPane_.appendChild(this.el);
            if (a) this.el.querySelector(".ui-slider-values").scrollTop = a
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            this.stopListening(app.getCurrentUser().get("prefs"), "change:contentWidth change:contentFontSize", this.userPrefsChangedEvent_);
            WidthControlView.__super__.remove.apply(this, arguments)
        },
        updateToggle: function() {
            this.el.querySelector(".current-width").textContent = this.getDisplayWidth_();
            this.el.querySelector(".current-font-size").textContent = this.getDisplayFontSize_();
            var a = this.widthTogglable_.getWidth(),
            b = this.widthTogglable_.getFontSize();
            this.el.querySelector('input[name="width"][value="' + a + '"]').checked = !0;
            this.el.querySelector('input[name="fontSize"][value="' + b + '"]').checked = !0
        },
        getTemplate_: function() {
            var a = this.widthTogglable_.getWidth(),
            b = this.widthTogglable_.getFontSize(),
            a = this.getToggleTemplate_(WidthControlView.WIDTHS, a),
            b = this.getToggleTemplate_(WidthControlView.FONT_SIZES, b);
            return {
                currentWidth: this.getDisplayWidth_(),
                currentFontSize: this.getDisplayFontSize_(),
                widths: a,
                fontSizes: b
            }
        },
        getToggleTemplate_: function(a, b) {
            return Object.keys(a).map(function(c) {
                return {
                    displayValue: a[c],
                    value: c,
                    checked: c === b
                }
            },
            this)
        },
        getDisplayWidth_: function() {
            return WidthControlView.WIDTHS[this.widthTogglable_.getWidth()]
        },
        getDisplayFontSize_: function() {
            return WidthControlView.FONT_SIZES[this.widthTogglable_.getFontSize()]
        },
        getSelectedRadioInput_: function(a) {
            return this.el.querySelectorAll(a).find(function(a) {
                return !! a.checked
            },
            this)
        },
        changeWidthEvent_: function() {
            var a = this.getSelectedRadioInput_('input[name="width"]');
            a ? (app.getCurrentUser().get("prefs").set("contentWidth", a.value), this.widthTogglable_.setWidth(a.value)) : console.error("Somehow we do not have a checked width radio button!")
        },
        changeFontSizeEvent_: function() {
            var a = this.getSelectedRadioInput_('input[name="fontSize"]');
            a ? (app.getCurrentUser().get("prefs").set("contentFontSize", a.value), this.widthTogglable_.setFontSize(a.value)) : console.error("Somehow we do not have a checked font size radio button!")
        },
        userPrefsChangedEvent_: function() {
            var a = app.getCurrentUser().get("prefs"),
            b = a.get("contentWidth") || WidthControlView.DEFAULT_WIDTH,
            a = a.get("contentFontSize") || WidthControlView.DEFAULT_FONT_SIZE;
            this.widthTogglable_.setWidth(b);
            this.widthTogglable_.setFontSize(a);
            this.updateToggle()
        }
    });
    WidthControlView.WIDTHS = {
        "320px": "Mobile Portrait",
        "480px": "Mobile Landscape",
        "650px": "Web Min",
        "723px": "Tablet Portrait",
        "825px": "Web",
        "979px": "Tablet Landscape"
    };
    WidthControlView.DEFAULT_WIDTH = "723px";
    WidthControlView.FONT_SIZES = {
        "80%": "80%",
        "90%": "90%",
        "100%": "100%",
        "110%": "110%",
        "120%": "120%"
    };
    WidthControlView.DEFAULT_FONT_SIZE = "100%";
    WidthControlView.FONT_SIZE_MAP = {
        "80%": "15px",
        "90%": "17px",
        "100%": "19px",
        "110%": "21px",
        "120%": "23px"
    };
    WidthControlView.KEY_MAP = {
        1 : {
            WIDTH: "320px",
            FONT_SIZE: "90%"
        },
        2 : {
            WIDTH: "650px",
            FONT_SIZE: "120%"
        },
        3 : {
            WIDTH: "723px",
            FONT_SIZE: "110%"
        },
        4 : {
            WIDTH: "825px",
            FONT_SIZE: "90%"
        },
        5 : {
            WIDTH: "979px",
            FONT_SIZE: "120%"
        }
    };
    WidthControlView.SHOW_PAGE_NUMBERS = {
        "320px": !1,
        "480px": !1,
        "650px": !0,
        "723px": !0,
        "825px": !0,
        "979px": !0
    };
    window.ZoomControlView = Backbone.View.extend({
        zoomable_: null,
        parentPane_: null,
        events: {
            "mousedown .zoom": "toggleEvent_"
        },
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.parentPane_ = a.parentPane;
            this.zoomable_ = a.zoomable
        },
        render: function() {
            DOMUtils.detachElement(this.el);
            this.setElement(Templates["project/document/zoomToggle"](this.getTemplate_()));
            this.parentPane_.appendChild(this.el)
        },
        remove: function() {
            DOMUtils.detachElement(this.el);
            ZoomControlView.__super__.remove.apply(this, arguments)
        },
        getTemplate_: function() {
            var a = this.zoomable_.getZoom(),
            b = ZoomControlView.ZOOMS[a],
            c = Object.keys(ZoomControlView.ZOOMS).map(function(a) {
                return {
                    value: a,
                    name: ZoomControlView.ZOOMS[a]
                }
            }),
            c = c.filter(function(b) {
                return b.value + "" !== a + ""
            },
            this);
            return {
                currentZoom: b,
                zooms: c
            }
        },
        toggleEvent_: function(a, b) {
            DOMUtils.isSecondaryClick(a) || (a.preventDefault(), this.zoomable_.setZoom(parseInt(b.dataset.zoom, 10)))
        }
    });
    ZoomControlView.ZOOMS = {
        25 : "1/4 Size",
        50 : "1/2 Size",
        75 : "3/4 Size",
        100 : "Full Size"
    };
    ZoomControlView.DEFAULT_ZOOM = 50;
    window.Application = BaseClass.extend({
        auth_: null,
        currentUser_: null,
        messageView_: null,
        keyboardResolver_: null,
        keyboardManager_: null,
        maskKeyboard_: null,
        inlineData_: null,
        config_: null,
        initialize: function(a) {
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || this.win_.document || document;
            this.win_.app = this;
            this.inlineData_ = {};
            this.loadInlineData_();
            this.setConfig(this.readAndClearInlineData("clientConfig"));
            Analytics.initialize();
            this.messageView_ = new MessageView;
            this.keyboardResolver_ = new KeyboardResolver;
            this.keyboardManager_ = new KeyboardManager;
            this.maskKeyboard_ = this.keyboardManager_.createKeyboard({
                bindings: this.keyboardResolver_.resolve({
                    save: function(a) {
                        a.preventDefault()
                    },
                    toggleMode: function(a) {
                        a.preventDefault()
                    }
                })
            });
            this.keyboardManager_.activate(this.maskKeyboard_);
            this.auth_ = new HabitatAuthentication;
            this.insertFontCSSTag_();
            this.insertDNSPrefetchTags_()
        },
        getCurrentUser: function() {
            return this.currentUser_
        },
        getKeyboardResolver: function() {
            return this.keyboardResolver_
        },
        getKeyboardManager: function() {
            return this.keyboardManager_
        },
        getConfig: function() {
            return this.config_
        },
        setConfig: function(a) {
            this.config_ = new ConfigurationModel(a)
        },
        isFeatureEnabled: function(a) {
            return typeof this.config_.get("features")[a] !== "boolean" ? (console.error("Reading feature: " + a + " did not return a boolean."), !1) : !!this.config_.get("features")[a]
        },
        getAuthenticator: function() {
            return this.auth_
        },
        getMessageView: function() {
            return this.messageView_
        },
        readAndClearInlineData: function(a) {
            var b = this.inlineData_[a] || null;
            this.inlineData_[a] = null;
            return b
        },
        userHasPermission: function(a) {
            var b = this.getCurrentUser();
            return (b = b && b.get("permissions")) ? b.get(a) : !1
        },
        insertFontCSSTag_: function() {
            this.doc_.head.appendChild(DOMUtils.createElement("link", {
                attributes: {
                    rel: "stylesheet",
                    href: this.getConfig().get("fontsURL"),
                    type: "text/css"
                },
                doc: this.doc_
            }))
        },
        insertDNSPrefetchTags_: function() {
            this.doc_.head.appendChild(DOMUtils.createElement("link", {
                attributes: {
                    rel: "dns-prefetch",
                    href: this.getConfig().get("mediaHost")
                },
                doc: this.doc_
            }));
            this.doc_.head.appendChild(DOMUtils.createElement("link", {
                attributes: {
                    rel: "dns-prefetch",
                    href: this.getConfig().get("wwwHost")
                },
                doc: this.doc_
            }));
            this.doc_.head.appendChild(DOMUtils.createElement("link", {
                attributes: {
                    rel: "dns-prefetch",
                    href: this.getConfig().get("documentationURL")
                },
                doc: this.doc_
            }))
        },
        loadInlineData_: function() {
            var a = this.doc_.querySelector('script[type="text/inline-data"]');
            if (a) {
                var b = this.doc_.createElement("span");
                b.innerHTML = a.textContent;
                try {
                    this.inlineData_ = JSON.parse(b.textContent)
                } catch(c) {
                    console.error("Failed to parse inline data from", a)
                }
            }
        },
        sendMiscAnalytics_: function() {
            if (this.getCurrentUser()) {
                var a = this.win_.screen.width,
                b = this.win_.screen.height;
                a && b && (a = "habitat.users." + (this.userHasPermission(PermissionsModel.PERMISSIONS.INTERNAL_USER) ? "internal": "external") + ".screenSize." + a + "x" + b, ia("inkling", "sendEvent", {
                    eventType: Analytics.EVENTS.COUNTLOG,
                    eventInfo: {
                        tag: a
                    },
                    context: {
                        recordedCount: 1
                    }
                }))
            }
        }
    });
    Application.DEFAULT_APPLICATION = "Project";
    Application.startApplication = function(a, b) {
        var b = b || document,
        a = a || window,
        c = b.querySelector('meta[name="Main-Class"]'),
        c = c !== null ? c.getAttribute("content") : Application.DEFAULT_APPLICATION;
        a.app = new a[c]({
            window: a,
            document: b
        })
    };
    window.testing || document.addEventListener("DOMContentLoaded",
    function() {
        Application.startApplication()
    });
    window.Dashboard = Application.extend({
        parentPane_: null,
        projects_: null,
        projectTemplates_: null,
        view_: null,
        saveHandler_: null,
        rightClickManager_: null,
        initialize: function(a) {
            Dashboard.__super__.initialize.call(this, a);
            a = a || {};
            this.win_ = a.window || window;
            this.doc_ = a.document || document;
            this.parentPane_ = a.parentPane || this.doc_.querySelector("#dashboard");
            this.rightClickManager_ = new RightClickManager;
            this.on("authenticationError", this.authenticationError_, this);
            Patches.patchDOM(this.win_);
            ia("timing", "start", Analytics.TIMING_TAGS.DASHBOARD_LOAD, {
                pageURL: this.win_.location.href
            });
            ia("ga", "pageview", {
                path: this.win_.location.pathname
            });
            this.getAuthenticator().enforceSignedIn({
                onSuccess: function(a) {
                    this.currentUser_ = a;
                    this.loadInitialData_()
                }.bind(this)
            });
            this.win_.addEventListener("beforeunload", this.windowUnload_.bind(this))
        },
        getSaveHandler: function() {
            return this.saveHandler_
        },
        getRightClickManager: function() {
            return this.rightClickManager_
        },
        getProjectModel: function(a) {
            return this.projects_.get(a)
        },
        getProjectTemplates: function() {
            return this.projectTemplates_
        },
        loadInitialData_: function() {
            var a = this.getMessageView();
            a.show("Loading...");
            this.saveHandler_ = new SaveHandler;
            var b = this.parentPane_.querySelector(".view-" + this.getCurrentUser().get("prefs").get("dashboardShowFilter"));
            b && b.classList.add("selected");
            this.projects_ = new ProjectsCollection;
            b = new BackboneLoader;
            b.add(this.projects_);
            b.add(this.currentUser_.get("permissions"));
            b.start({
                onLoad: function() {
                    this.projects_.loadBuildData();
                    a.hide();
                    this.view_ = new DashboardView({
                        projects: this.projects_,
                        parentPane: this.parentPane_
                    });
                    this.view_.render();
                    ia("timing", "pageload", "habitat.dashboard");
                    ia("timing", "end", Analytics.TIMING_TAGS.DASHBOARD_LOAD, {
                        projectCount: this.projects_.length
                    });
                    this.sendMiscAnalytics_()
                }.bind(this),
                onError: function(b, c) {
                    var f = "There was an error loading ";
                    f += b instanceof ProjectsCollection ? "the list of projects": b instanceof PermissionsModel ? "your user permissions": "your dashboard";
                    a.error(f);
                    c && console.error(f + ": " + (new ServerError(c)).toString())
                }.bind(this)
            });
            this.projectTemplates_ = new ProjectTemplateCollection;
            var b = this.loadTemplateCollection_({
                tags: [ProjectTemplateModel.TAGS.INKLING]
            }),
            c = this.loadTemplateCollection_();
            Q.all([b, c]).spread(function(a, b) {
                this.projectTemplates_.add(a.toArray());
                this.projectTemplates_.add(b.toArray());
                this.projectTemplates_.setLoaded()
            }.bind(this)).done()
        },
        loadTemplateCollection_: function(a) {
            return Q.promise(function(b, c) {
                var d = new ProjectTemplateCollection(null, a);
                d.fetch({
                    success: function() {
                        b(d)
                    },
                    error: function() {
                        c()
                    }
                })
            })
        },
        windowUnload_: function(a) {
            if (this.saveHandler_ && this.saveHandler_.isSaveRequired()) a.returnValue = "If you leave you will lose your changes."
        },
        authenticationError_: function() {
            this.getAuthenticator().redirectToLoginPage()
        }
    });
    window.Landing = Application.extend({
        priorView_: null,
        animations_: null,
        initialize: function(a) {
            a = a || {};
            Landing.__super__.initialize.call(this, a);
            this.doc_ = a.document || document;
            this.win_ = a.window || window;
            Patches.patchDOM(this.win_);
            ia("ga", "pageview", {
                path: this.win_.location.pathname
            });
            this.router_ = new LandingRouter({
                application: this
            });
            this.router_.start()
        },
        getElements_: function() {
            var a = {
                landing: this.doc_.querySelector("#landing"),
                step: this.doc_.querySelector("#step-identifier"),
                signupContainer: this.doc_.querySelector(".landing-container.landing-signup"),
                alternateContainer: this.doc_.querySelector(".landing-container.landing-alternate"),
                body: this.doc_.querySelector("body")
            };
            a.signupContents = a.signupContainer.querySelector(".landing-content");
            a.alternateContents = a.alternateContainer.querySelector(".landing-content");
            return a
        },
        showForm: function(a, b) {
            var c = this.getElements_(),
            d = !1;
            if (!this.currentUser_ || a === Landing.PAGES.SIGNUP) this.currentUser_ = new NewUserModel,
            b && this.currentUser_.set({
                firstName: b.firstName || null,
                lastName: b.lastName || null,
                email: b.email || null,
                uid: b.email || null,
                s9id: b.u || null
            });
            c.signupContainer.style.webkitTransform = null;
            c.alternateContainer.style.webkitTransform = null;
            c.step.innerHTML = "";
            this.priorView_ = null;
            if (this.view) this.priorView_ = this.view,
            d = this.priorView_ instanceof SignupView && a === Landing.PAGES.REGISTER,
            c.landing.classList.remove(Landing.PAGES.REGISTER);
            if (a === Landing.PAGES.LOGIN) this.view = new LoginView({
                auth: this.auth_,
                parentPane: c.alternateContents
            });
            else if (a === Landing.PAGES.SIGNUP) this.view = new SignupView({
                parentPane: c.signupContents,
                queryParams: b || {},
                model: this.currentUser_
            }),
            c.step.innerHTML = "Step 1 of 2";
            else if (a === Landing.PAGES.REGISTER) this.view = new RegisterView({
                parentPane: c.alternateContents,
                model: this.currentUser_,
                focusOnRender: !d
            }),
            c.landing.classList.add(Landing.PAGES.REGISTER),
            c.step.innerHTML = "Step 2 of 2";
            else if (a === Landing.PAGES.CHANGE_PASSWORD) this.view = new ChangePasswordView({
                parentPane: c.alternateContents,
                queryParams: b || {},
                model: this.currentUser_
            });
            else if (a === Landing.PAGES.CAPACITY) c.landing.innerHTML = "",
            this.view = new CapacityView({
                parentPane: c.landing
            });
            else if (a === Landing.PAGES.FORBIDDEN) c.landing.innerHTML = "",
            this.view = new ForbiddenView({
                parentPane: c.landing
            });
            this.view.render();
            d ? this.listenToOnce(this.view, "loaded", this.animate_) : (this.priorView_ && this.priorView_.remove(), c.alternateContainer.classList.add("landing-alternate-active"), c.alternateContainer.classList.remove("hide"), c.signupContainer.classList.add("hide"), app.getMessageView().hide()); ! this.priorView_ && a !== Landing.PAGES.SIGNUP && (c.signupContainer.classList.add("hide"), c.alternateContainer.classList.add("landing-alternate-active"));
            a === Landing.PAGES.SIGNUP && (c.alternateContainer.classList.add("hide"), c.signupContainer.classList.remove("hide"))
        },
        createAnimation_: function(a, b, c) {
            var c = c ||
            function() {},
            d = a.getBoundingClientRect(),
            e,
            f;
            b ? (e = -(d.width / 2), f = -this.doc_.getWidth()) : (e = this.doc_.getWidth(), f = -(d.width / 2));
            return new Animation({
                duration: 300,
                easingFunction: Animation.EASING_FUNCTIONS.SIMPLE_EASE,
                tick: function(b) {
                    a.style.webkitTransform = "translateX(" + (e + b * (f - e) + "px") + ")"
                },
                onComplete: function() {
                    a.style.webkitTransform = "translateX(" + f + "px)";
                    _.defer(c)
                }
            })
        },
        animate_: function() {
            var a = this.getElements_();
            a.alternateContainer.classList.remove("hide");
            a.body.classList.add("animating");
            this.animations_ = [];
            this.animations_.push(this.createAnimation_(a.signupContainer, !0,
            function() {
                this.priorView_.remove()
            }.bind(this)));
            this.animations_.push(this.createAnimation_(a.alternateContainer, !1,
            function() {
                a.body.classList.remove("animating");
                this.view.focus();
                app.getMessageView().hide()
            }.bind(this)))
        },
        getRouter: function() {
            return this.router_
        },
        remove: function() {
            this.animations_ = [];
            Landing.__super__.remove.apply(this, arguments)
        }
    });
    Landing.PAGES = {
        LOGIN: "login",
        SIGNUP: "signup",
        REGISTER: "register",
        CHANGE_PASSWORD: "changepassword",
        CAPACITY: "capacity",
        FORBIDDEN: "forbidden"
    };
    window.LandingRouter = Backbone.Router.extend({
        routes: {
            login: "gotoLoginForm_",
            "login/": "gotoLoginForm_",
            "login?*params": "gotoLoginForm_",
            "login/?*params": "gotoLoginForm_",
            resetpassword: "gotoLoginForm_",
            "resetpassword/": "gotoLoginForm_",
            signup: "gotoSignupForm_",
            "signup/": "gotoSignupForm_",
            "signup?*params": "gotoSignupForm_",
            "signup/?*params": "gotoSignupForm_",
            register: "gotoRegisterForm_",
            "register/": "gotoRegisterForm_",
            changepassword: "gotoChangePasswordForm_",
            "changepassword/": "gotoChangePasswordForm_",
            "changepassword?*params": "gotoChangePasswordForm_",
            "changepassword/?*params": "gotoChangePasswordForm_",
            capacity: "gotoCapacityForm_",
            "capacity/": "gotoCapacityForm_",
            forbidden: "gotoForbiddenForm_",
            "forbidden/": "gotoForbiddenForm_"
        },
        initialize: function(a) {
            a = a || {};
            this.location_ = a.location || window.location
        },
        start: function() {
            Backbone.history.start({
                pushState: !0
            })
        },
        gotoLoginForm_: function() {
            app.showForm(Landing.PAGES.LOGIN, URLUtils.getParsedQueryString(this.location_))
        },
        gotoSignupForm_: function() {
            app.showForm(Landing.PAGES.SIGNUP, URLUtils.getParsedQueryString(this.location_))
        },
        gotoRegisterForm_: function() {
            app.showForm(Landing.PAGES.REGISTER)
        },
        gotoChangePasswordForm_: function() {
            app.showForm(Landing.PAGES.CHANGE_PASSWORD, URLUtils.getParsedQueryString(this.location_))
        },
        gotoCapacityForm_: function() {
            app.showForm(Landing.PAGES.CAPACITY)
        },
        gotoForbiddenForm_: function() {
            app.showForm(Landing.PAGES.FORBIDDEN)
        }
    });
    window.Mapper = Application.extend({
        fileSystem_: null,
        mapperModel_: null,
        router_: null,
        mapperView_: null,
        xmlTemplates_: null,
        initialize: function(a) {
            Mapper.__super__.initialize.call(this, a);
            a = a || {};
            this.document_ = a.document || document;
            this.window_ = a.window || window;
            this.on("authenticationError", this.authenticationError_, this);
            Patches.patchDOM(this.window_);
            this.xmlTemplates_ = new XMLTemplates({
                document: this.document_
            });
            this.fileSystem_ = new LocalFileStorage;
            this.mapperModel_ = new MapperModel;
            this.router_ = new MapperRouter;
            this.getAuthenticator().enforceSignedIn({
                onSuccess: this.afterSignedIn_.bind(this)
            });
            ia("ga", "pageview", {
                path: this.win_.location.pathname
            })
        },
        loadBook: function(a) {
            var b = this.getMessageView();
            this.mapperModel_.set("project", new ProjectModel({
                shortName: a
            }));
            this.getCurrentUser().get("permissions").fetch({
                success: function() { (new ImportedPageLoader).load(this.onBookLoaded.bind(this),
                    function(a) {
                        b.show(a)
                    })
                }.bind(this),
                error: function(a, d) {
                    b.error("Unable to load your user permissions");
                    console.error("Unable to load your user permissions: " + (new ServerError(d)).toString())
                }
            })
        },
        setBookModel: function(a) {
            this.mapperModel_.set("book", a)
        },
        getBookModel: function() {
            return this.mapperModel_.get("book")
        },
        getProjectModel: function() {
            return this.mapperModel_.get("project")
        },
        getMapperView: function() {
            return this.mapperView_
        },
        getLocalFileStorage: function() {
            return this.fileSystem_
        },
        getMapperModel: function() {
            return this.mapperModel_
        },
        getXMLTemplates: function() {
            return this.xmlTemplates_
        },
        onBookLoaded: function(a) {
            app.getMessageView().hide();
            if (a) {
                this.setBookModel(new BookModel({
                    pages: a
                }));
                this.mapperView_.onBookLoaded();
                a = app.getMapperView().getPageView();
                a.computeQuality();
                var b = this.getBookModel();
                b.get("currentPage") || b.set("currentPage", b.getDefaultPage());
                b.get("currentPage") && a.changePage(b.get("currentPage"))
            } else a = app.getProjectModel(),
            this.window_.location.assign(MapperRouter.getProjectPath(a.get("shortName")))
        },
        afterSignedIn_: function(a) {
            this.currentUser_ = a;
            this.mapperView_ = new MapperView;
            this.mapperView_.render();
            this.getLocalFileStorage().setup({
                success: function() {
                    Backbone.history.start({
                        pushState: !0
                    })
                }.bind(this),
                noPermission: function() {
                    this.window_.alert("The Mapper requires permanent storage in order to work correctly. Please reload the page and provide the Mapper with permission.")
                }.bind(this),
                incognitoMode: function() {
                    this.window_.alert("It looks like you are in Chrome's Incognito Mode, which the Mapper does not support. Please open a normal browser window and re-run the Mapper.")
                }.bind(this)
            })
        },
        authenticationError_: function() {
            this.getAuthenticator().redirectToLoginPage()
        }
    });
    window.MapperRouter = Backbone.Router.extend({
        routes: {
            "mapper/:project": "loadProject_",
            "mapper/:project/": "loadProject_"
        },
        loadProject_: function(a) {
            app.loadBook(a)
        }
    });
    MapperRouter.getProjectPath = function(a) {
        return URLUtils.expand("/project/{shortName}", {
            shortName: a
        })
    };
    MapperRouter.getStructurePath = function(a) {
        return URLUtils.expand("/project/{shortName}/structure", {
            shortName: a
        })
    };
    window.URLRouter = Backbone.Router.extend({
        routes: {
            "project/:project/structure/": "changedStructureURL_",
            "project/:project/structure": "changedStructureURL_",
            "project/:project/files/*filePath": "changedFileURL_",
            "project/:project/theme": "changedThemeURL_",
            "project/:project/theme/": "changedThemeURL_",
            "project/:project/theme/files/*filePath": "changedThemeURL_",
            "project/:project/chapters/:s9id": "changedChapterURL_",
            "project/:project/reports/:build/:reportType": "changedReportURL_",
            "project/:project/reports/": "changedReportURL_",
            "project/:project/reports": "changedReportURL_",
            "project/:project/settings/:subpage/": "changedSettingsURL_",
            "project/:project/settings/:subpage": "changedSettingsURL_",
            "project/:project/settings/": "changedSettingsURL_",
            "project/:project/settings": "changedSettingsURL_",
            "project/:project/collaborators/": "changedCollaboratorsURL_",
            "project/:project/collaborators": "changedCollaboratorsURL_",
            "project/:project/builds/": "changedBuildsURL_",
            "project/:project/builds": "changedBuildsURL_",
            "project/:project/*anything": "defaultURL_",
            "project/:project": "defaultURL_"
        },
        isInitialRoute_: !1,
        initialize: function(a) {
            a = a || {};
            this.location_ = a.location || window.location
        },
        start: function() {
            this.isInitialRoute_ = !0;
            Backbone.history.start({
                pushState: !0
            });
            Backbone.history.on("route",
            function() {
                this.trigger("navigate")
            },
            this)
        },
        navigate: function() {
            this.isInitialRoute_ = !1;
            URLRouter.__super__.navigate.apply(this, arguments)
        },
        isInitialRoute: function() {
            return this.isInitialRoute_
        },
        isPageTypePermitted: function(a) {
            a = a || this.getPageType();
            return URLRouter.PAGE_TYPE_REQUIRED_PERMISSIONS_[a].every(function(a) {
                return app.userHasPermission(a)
            })
        },
        getPageType: function(a) {
            a = (a || this.location_.pathname).match(/^\/project\/[^\/]+(?:\/([^\/]+))?/);
            return URLRouter.PAGE_PATHS_[a && a[1]] || URLRouter.PAGE_TYPE.CONTENTS
        },
        getProjectShortName: function() {
            var a = this.location_.pathname.match(/^\/project\/([^\/]+)/);
            return ! a || a.length < 2 ? null: decodeURIComponent(a[1])
        },
        getIssueID: function() {
            var a = this.location_.hash.match(/[^\w]issue-(\d+)/);
            return a ? parseInt(a[1], 10) : null
        },
        getLineNumber: function() {
            var a = this.location_.hash.match(/[^\w]line-(\d+)/);
            return a ? parseInt(a[1], 10) : null
        },
        getS9ID: function() {
            var a = this.location_.hash.match(/[^\w]id-([0-9a-f]{32})/i);
            return a && UUID.isUUID(a[1]) ? a[1] : null
        },
        getID: function() {
            var a = this.location_.hash;
            return this.getIssueID() || this.getLineNumber() || this.getS9ID() || this.getPanelName() ? null: a ? a.substring(1) : null
        },
        getPanelName: function() {
            var a = null;
            if (/^\/project\/[^\/]+\/?(?:files)?\/?$/.test(this.location_.pathname)) {
                var b = this.location_.hash.match(/[^\w]panel-([A-Za-z0-9_\-]+)/);
                b && (a = b[1])
            }
            return a
        },
        openStructure: function() {
            return this.openPage_(URLRouter.getStructurePath(this.getProjectShortName()), ProjectView.PAGES.STRUCTURE)
        },
        openFile: function(a, b, c) {
            c = c || {};
            return this.openPage_(URLRouter.getFilePath(this.getProjectShortName(), a, b, c), ProjectView.PAGES.FILES, {
                filePath: a,
                revision: b || null,
                issue: c.issue,
                line: c.line,
                s9id: c.s9id
            })
        },
        openChapter: function(a) {
            return this.openPage_(URLRouter.getChapterPath(this.getProjectShortName(), a), ProjectView.PAGES.CHAPTERS, {
                s9id: a
            })
        },
        openUnitProof: function(a, b) {
            return this.openPage_(URLRouter.getReportsPath(this.getProjectShortName(), b, a), ProjectView.PAGES.REPORTS, {
                type: a,
                build: b
            })
        },
        openFetchQuery: function(a, b, c, d) {
            a = {
                query: a,
                queryType: b,
                filter: c,
                fileType: d
            };
            return this.openPage_(URLRouter.getFetchPath(this.getProjectShortName(), a), ProjectView.PAGES.FETCH, a)
        },
        openTheme: function(a, b, c) {
            c = c || {};
            return this.openPage_(URLRouter.getThemePath(this.getProjectShortName(), a, b, c), ProjectView.PAGES.THEME, {
                filePath: a,
                revision: b || null,
                line: c.line
            })
        },
        openSettings: function(a) {
            return this.openPage_(URLRouter.getSettingsPath(this.getProjectShortName(), a), ProjectView.PAGES.SETTINGS, {
                page: a
            })
        },
        openCollaborators: function() {
            return this.openPage_(URLRouter.getCollaboratorsPath(this.getProjectShortName()), ProjectView.PAGES.COLLABORATORS)
        },
        openBuilds: function() {
            return this.openPage_(URLRouter.getBuildsPath(this.getProjectShortName()), ProjectView.PAGES.BUILDS)
        },
        openDefault: function(a) {
            var b = URLRouter.getProjectPath(this.getProjectShortName());
            return a ? (app.getProjectView().openPage(ProjectView.PAGES.DEFAULT), this.navigate(b, {
                replace: !0
            }), this.trigger("navigate"), !0) : this.openPage_(b, ProjectView.PAGES.DEFAULT)
        },
        openPage_: function(a, b, c) {
            if (!this.isPageTypePermitted(this.getPageType(a))) return ! 1;
            return a !== this.location_.pathname + this.location_.search + this.location_.hash && this.canNavigateAway_() && (app.getProjectView().openPage(b, c), a) ? (this.navigate(a), this.trigger("navigate"), this.sendPageview_(), !0) : !1
        },
        canNavigateAway_: function() {
            return app.getSaveHandler().canNavigateAway()
        },
        changedStructureURL_: function() { ! this.redirectIfUnauthorized_() && this.canNavigateAway_() && (app.getProjectView().openPage(ProjectView.PAGES.STRUCTURE), this.sendPageview_())
        },
        changedFileURL_: function(a, b) {
            if (!this.redirectIfUnauthorized_() && this.canNavigateAway_()) {
                var c = URLUtils.getParsedQueryString(this.location_) || {};
                if (!b || b.trim().length === 0) {
                    if (!c.q && !c.queryType) {
                        this.openDefault();
                        return
                    }
                    return app.getProjectView().openPage(ProjectView.PAGES.FETCH, {
                        query: c.q,
                        queryType: c.queryType,
                        filter: c.filter,
                        fileType: c.fileType,
                        panel: this.getPanelName() || null
                    })
                }
                c = parseInt(c.r, 10);
                isNaN(c) && (c = null);
                c === app.getProjectModel().get("revision") ? this.navigate(URLRouter.getFilePath(this.getProjectShortName(), b, null, {
                    issue: this.getIssueID() || null,
                    line: this.getLineNumber() || null,
                    s9id: this.getS9ID() || null
                }), {
                    trigger: !0,
                    replace: !0
                }) : (app.getProjectView().openPage(ProjectView.PAGES.FILES, {
                    filePath: b,
                    revision: c,
                    issue: this.getIssueID() || null,
                    line: this.getLineNumber() || null,
                    s9id: this.getS9ID() || null
                }), this.sendPageview_())
            }
        },
        changedThemeURL_: function(a, b) {
            if (!this.redirectIfUnauthorized_() && this.canNavigateAway_()) {
                var c = URLUtils.getParsedQueryString(this.location_) || {},
                c = parseInt(c.r, 10);
                isNaN(c) && (c = null);
                app.getProjectView().openPage(ProjectView.PAGES.THEME, {
                    filePath: b,
                    revision: c,
                    line: this.getLineNumber() || null
                });
                this.sendPageview_()
            }
        },
        changedChapterURL_: function(a, b) { ! this.redirectIfUnauthorized_() && this.canNavigateAway_() && (app.getProjectView().openPage(ProjectView.PAGES.CHAPTERS, {
                s9id: b
            }), this.sendPageview_())
        },
        changedReportURL_: function(a, b, c) { ! this.redirectIfUnauthorized_() && this.canNavigateAway_() && (/^b[0-9+]/.test(b) ? (b = b.replace(/^b/, ""), b = parseInt(b, 10)) : b = null, app.getProjectView().openPage(ProjectView.PAGES.REPORTS, {
                type: c || null,
                build: b
            }), this.sendPageview_())
        },
        changedSettingsURL_: function(a, b) {
            if (!this.redirectIfUnauthorized_() && this.canNavigateAway_()) {
                var c = URLRouter.SETTINGS_PAGE_PATHS_[b];
                app.getProjectView().openPage(ProjectView.PAGES.SETTINGS, {
                    page: c
                });
                this.sendPageview_()
            }
        },
        changedCollaboratorsURL_: function() { ! this.redirectIfUnauthorized_() && this.canNavigateAway_() && (app.getProjectView().openPage(ProjectView.PAGES.COLLABORATORS), this.sendPageview_())
        },
        changedBuildsURL_: function() { ! this.redirectIfUnauthorized_() && this.canNavigateAway_() && (app.getProjectView().openPage(ProjectView.PAGES.BUILDS), this.sendPageview_())
        },
        defaultURL_: function() {
            this.canNavigateAway_() && (app.getProjectView().openPage(ProjectView.PAGES.DEFAULT), this.sendPageview_())
        },
        redirectIfUnauthorized_: function() {
            if (this.isPageTypePermitted()) return ! 1;
            else {
                var a = this.getPageType();
                this.openDefault(!0);
                var b = "You have insufficient permissions to access ";
                switch (a) {
                case URLRouter.PAGE_TYPE.THEME:
                    b += "the theme of";
                    break;
                case URLRouter.PAGE_TYPE.REPORTS:
                    b += "the reports for";
                    break;
                case URLRouter.PAGE_TYPE.COLLABORATORS:
                    b += "the collaborator settings of";
                    break;
                case URLRouter.PAGE_TYPE.BUILDS:
                    b += "the build settings of";
                    break;
                case URLRouter.PAGE_TYPE.SETTINGS:
                    b += "the settings of";
                    break;
                case URLRouter.PAGE_TYPE.STRUCTURE:
                    b += "the structure of"
                }
                b = b.trim() + " this content";
                app.getMessageView().error(b);
                this.sendPageview_();
                return ! 0
            }
        },
        sendPageview_: function() {
            ia("ga", "pageview", {
                path: this.location_.pathname
            })
        }
    });
    URLRouter.getProjectPath = function(a) {
        return URLUtils.expand("/project/{shortName}", {
            shortName: a
        })
    };
    URLRouter.getReportsPath = function(a, b, c) {
        return c ? URLUtils.expand("/project/{shortName}/reports/{buildPath}/{type}", {
            shortName: a,
            buildPath: b ? "b" + b: "head",
            type: c
        }) : URLUtils.expand("/project/{shortName}/reports", {
            shortName: a
        })
    };
    URLRouter.getStructurePath = function(a) {
        return URLUtils.expand("/project/{shortName}/structure", {
            shortName: a
        })
    };
    URLRouter.getFilePath = function(a, b, c, d) {
        var d = d || {},
        e = [];
        d.issue && e.push("issue-" + d.issue);
        d.line && e.push("line-" + d.line);
        d.s9id && e.push("id-" + d.s9id);
        return URLUtils.expand("/project/{shortName}/files/{+filePath}{?r}{#hash}", {
            shortName: a,
            filePath: b,
            r: c || null,
            hash: e.length > 0 ? e.join("&") : null
        })
    };
    URLRouter.getChapterPath = function(a, b) {
        return URLUtils.expand("/project/{shortName}/chapters/{s9id}", {
            shortName: a,
            s9id: b
        })
    };
    URLRouter.getFetchPath = function(a, b) {
        var c = {};
        if (b.query) c.q = b.query; ["queryType", "fileType", "filter"].forEach(function(a) {
            b[a] && (c[a] = b[a])
        },
        this);
        return URLUtils.expand("/project/{shortName}/files/{?params*}", {
            shortName: a,
            params: c
        })
    };
    URLRouter.getThemePath = function(a, b, c, d) {
        d = d || {};
        b = b || RepositoryLayout.CSS_MAIN_PATH;
        return URLUtils.expand("/project/{shortName}/theme/files/{+filePath}{?r}{#line}", {
            shortName: a,
            filePath: b,
            r: c || null,
            line: d.line ? "line-" + d.line: null
        })
    };
    URLRouter.getBuildsPath = function(a) {
        return URLUtils.expand("/project/{shortName}/builds", {
            shortName: a
        })
    };
    URLRouter.getCollaboratorsPath = function(a) {
        return URLUtils.expand("/project/{shortName}/collaborators", {
            shortName: a
        })
    };
    URLRouter.getSettingsPath = function(a, b) {
        var c = Object.keys(URLRouter.SETTINGS_PAGE_PATHS_).find(function(a) {
            return URLRouter.SETTINGS_PAGE_PATHS_[a] === b
        });
        return URLUtils.expand("/project/{shortName}/settings{/suffix}", {
            shortName: a,
            suffix: c
        })
    };
    URLRouter.getMapperPath = function(a) {
        return URLUtils.expand("/mapper/{shortName}", {
            shortName: a
        })
    };
    URLRouter.getURLForPath = function(a, b, c, d) {
        if (b.indexOf(RepositoryLayout.ASSETS_DIRECTORY) === 0) return URLRouter.getThemePath(a, b, c, d);
        else if (b.indexOf(RepositoryLayout.TOC_PATH) === 0) return URLRouter.getStructurePath(a);
        return URLRouter.getFilePath(a, b, c, d)
    };
    URLRouter.PAGE_TYPE = {
        CONTENTS: "content",
        THEME: "theme",
        REPORTS: "reports",
        COLLABORATORS: "collaborators",
        BUILDS: "builds",
        SETTINGS: "settings",
        STRUCTURE: "structure"
    };
    URLRouter.PAGE_PATHS_ = {
        settings: URLRouter.PAGE_TYPE.SETTINGS,
        reports: URLRouter.PAGE_TYPE.REPORTS,
        collaborators: URLRouter.PAGE_TYPE.COLLABORATORS,
        builds: URLRouter.PAGE_TYPE.BUILDS,
        theme: URLRouter.PAGE_TYPE.THEME,
        files: URLRouter.PAGE_TYPE.CONTENTS,
        chapters: URLRouter.PAGE_TYPE.CONTENTS,
        structure: URLRouter.PAGE_TYPE.STRUCTURE
    };
    URLRouter.PAGE_TYPE_REQUIRED_PERMISSIONS_ = function() {
        var a = {};
        a[URLRouter.PAGE_TYPE.CONTENTS] = [];
        a[URLRouter.PAGE_TYPE.THEME] = [PermissionsModel.PERMISSIONS.WRITE_CONTENT];
        a[URLRouter.PAGE_TYPE.REPORTS] = [PermissionsModel.PERMISSIONS.READ_REPORTS];
        a[URLRouter.PAGE_TYPE.COLLABORATORS] = [];
        a[URLRouter.PAGE_TYPE.BUILDS] = [PermissionsModel.PERMISSIONS.BUILD];
        a[URLRouter.PAGE_TYPE.SETTINGS] = [];
        a[URLRouter.PAGE_TYPE.STRUCTURE] = [PermissionsModel.PERMISSIONS.WRITE_CONTENT];
        return a
    } ();
    URLRouter.SETTINGS_PAGE_PATHS_ = {
        comments: SettingsMainView.PAGES.COMMENTS
    };
    window.Project = Application.extend({
        model: null,
        saveHandler_: null,
        assetManager_: null,
        buildsManager_: null,
        dragManager_: null,
        rightClickManager_: null,
        xmlTemplates_: null,
        fileSystem_: null,
        serviceMessages_: null,
        initialize: function(a) {
            Project.__super__.initialize.call(this, a);
            a = a || {};
            this.win_ = a.window || window;
            Patches.patchDOM(this.win_);
            this.fileSystem_ = new LocalFileStorage;
            this.fileSystem_.setup({
                requestQuota: !1
            });
            this.serviceMessages_ = new ServiceMessageCollection;
            this.dragManager_ = new DragManager;
            this.rightClickManager_ = new RightClickManager;
            ia("timing", "start", Analytics.TIMING_TAGS.PROJECT_LOAD, {
                pageURL: this.win_.location.href
            });
            this.getAuthenticator().enforceSignedIn({
                onSuccess: this.afterSignedIn_.bind(this),
                onFailure: this.errorLoading_.bind(this)
            });
            this.win_.addEventListener("beforeunload", this.windowUnload_.bind(this));
            this.win_.setInterval(Analytics.sendMemoryUsageEvent.bind(Analytics), Analytics.MEMORY_ANALYTICS_INTERVAL_MS)
        },
        getUsers: function() {
            return this.model.get("users")
        },
        getSaveHandler: function() {
            return this.saveHandler_
        },
        getDragManager: function() {
            return this.dragManager_
        },
        getRightClickManager: function() {
            return this.rightClickManager_
        },
        getAssetManager: function() {
            return this.assetManager_
        },
        getBuildsManager: function() {
            return this.buildsManager_
        },
        getServiceMessages: function() {
            return this.serviceMessages_
        },
        getRouter: function() {
            return this.router_
        },
        getXMLTemplates: function() {
            return this.xmlTemplates_
        },
        getProjectModel: function(a) {
            if (a && a !== this.model.get("shortName")) throw "Programming Error: Cannot get a project other than the current one.";
            return this.model
        },
        getLocalFileStorage: function() {
            return this.fileSystem_
        },
        getProjectView: function() {
            return this.view
        },
        windowUnload_: function(a) {
            if (this.saveHandler_ && this.saveHandler_.isSaveRequired()) a.returnValue = "If you leave you will lose your changes.";
            else if (this.assetManager_ && this.assetManager_.isUploading()) a.returnValue = "If you leave some assets may not finish uploading."
        },
        afterSignedIn_: function(a) {
            this.currentUser_ = a;
            this.router_ = new URLRouter;
            a = this.router_.getProjectShortName();
            this.saveHandler_ = new SaveHandler({
                shortName: a
            });
            this.on("authenticationError", this.authenticationError_, this);
            if (this.router_.getProjectShortName()) if (this.fileSystem_.isLoaded()) this.fetchInitialData_();
            else this.fileSystem_.once("loaded", this.fetchInitialData_, this);
            else this.win_.alert("No project specified in URL"),
            this.win_.location.href = "/dashboard"
        },
        fetchInitialData_: function() {
            this.getMessageView().show("Loading...");
            var a = this.router_.getProjectShortName(),
            a = new ProjectModel({
                shortName: a
            });
            a.get("buildCollection").startPolling();
            var b = new BackboneLoader;
            b.add(a);
            b.add(a.get("toc"));
            b.add(a.get("issueSets"));
            b.add(a.get("unitProofs"));
            b.start({
                onLoad: this.fetchProjectDependentData_.bind(this, a),
                onError: this.errorLoading_.bind(this)
            })
        },
        fetchProjectDependentData_: function(a) {
            var b = this.loadProjectPermissions_(a),
            c = this.loadWidgetAccessToken_(a).
            catch(function() {}.bind(this));
            Q.all([b, c]).then(function() {
                this.initialDataLoaded_(a)
            }.bind(this)).
            catch(function(a) {
                this.errorLoading_(a)
            }.bind(this)).done()
        },
        loadProjectPermissions_: function(a) {
            return Q.promise(function(b, c) {
                var d = this.getCurrentUser().get("permissions");
                d.setProjectId(a.get("id"));
                d.fetch({
                    success: function() {
                        b()
                    },
                    error: function() {
                        c(d)
                    }
                })
            }.bind(this))
        },
        loadWidgetAccessToken_: function(a) {
            return Q.promise(function(b, c) {
                var d = this.getCurrentUser().get("widgetAccessToken");
                d.setProjectId(a.get("id"));
                d.setAccessToken(app.getAuthenticator().getAccessToken());
                ia("timing", "start", Analytics.TIMING_TAGS.FETCH_WIDGET_TOKEN, {
                    pageURL: this.win_.location.href
                });
                var e = function(a) {
                    ia("timing", "end", Analytics.TIMING_TAGS.FETCH_WIDGET_TOKEN, {
                        success: a
                    })
                };
                d.fetch({
                    success: function() {
                        e(!0);
                        b()
                    },
                    error: function() {
                        e(!1);
                        c()
                    }
                })
            }.bind(this))
        },
        errorLoading_: function(a, b) {
            var c = "There was an error loading the ";
            a instanceof CurrentUserModel ? c += "current user": a instanceof ProjectModel ? c += "current project": a instanceof TableOfContentsModel ? HabitatRequest.isTemporaryFailure(b) ? c = "We're still setting up the repository; please reload in a minute.": c += "table of contents": a instanceof GlossaryDocumentModel ? c += "glossary": a instanceof RemarksDocumentModel ? c += "remarks": a instanceof DirectoryListingCollection ? c += "directory listing": a instanceof ExhibitTemplateCollection ? c += "exhibit templates": a instanceof PatternSnippetCollection ? c += "design pattern snippets": a instanceof IssueSetsCollection ? c += "ticket sets": a instanceof IssueCountsModel ? c += "ticket counts": a instanceof UnitProofsListModel ? c += "reports": a instanceof BuildCollection ? c += "build history": a instanceof LinkResolverModel ? c += "content links": a instanceof ClassGroupCollection ? c += "class groups": a instanceof ContentConfigurationModel ? c += "content configuration": (c = "There was an error loading project data", console.error("Programming error: error loading model that is not handled: ", a));
            a instanceof ClassGroupCollection || a instanceof ContentConfigurationModel || this.getMessageView().error(c);
            console.error(c + ": ", b)
        },
        initialDataLoaded_: function(a) {
            this.getMessageView().hide();
            this.model = a;
            this.xmlTemplates_ = new XMLTemplates;
            this.model.on("change:revision", this.projectRevisionChanged_, this);
            this.buildsManager_ = new BuildsManager;
            this.view = new ProjectView({
                model: this.model
            });
            this.view.render();
            app.getRouter().start();
            this.loadNonBlockingData_(a);
            ia("timing", "end", Analytics.TIMING_TAGS.PROJECT_LOAD, {
                shortName: this.model.get("shortName")
            });
            ia("inkling", "sendEvent", {
                eventType: Analytics.EVENTS.OPEN_PROJECT,
                eventInfo: {
                    shortName: this.model.get("shortName")
                }
            });
            this.sendMiscAnalytics_()
        },
        loadNonBlockingData_: function(a) {
            var b = a.get("glossary");
            b.set("filename", a.get("toc").get("glossaryPath"));
            var c = a.get("remarks");
            c.set("filename", a.get("toc").get("remarksPath"));
            var d = new BackboneLoader;
            b.url() && d.add(b);
            c.url() && d.add(c);
            d.add(a.get("issueCounts"));
            d.add(a.get("buildCollection"));
            d.add(a.get("patternSnippets"));
            d.add(a.get("classGroups"));
            d.add(a.get("contentConfig"));
            d.start({
                onError: this.errorLoading_.bind(this)
            });
            this.assetManager_ = new AssetManager;
            this.assetManager_.fetchAssets();
            this.serviceMessages_.startPolling();
            a.get("styleDirectoryListing").fetchAll();
            a.get("widgetDirectoryListing").fetchAll();
            a.get("exhibitTemplates").fetch({
                error: this.errorLoading_.bind(this)
            })
        },
        authenticationError_: function(a) {
            this.loginView_ ? a.origErrorCallback && a.origErrorCallback(a.xhr) : (console.error("Authentication timed out:", a.xhr), this.loginView_ = new InAppLoginPopupView, this.loginView_.render())
        },
        projectRevisionChanged_: function() {
            var a = this.model.get("toc");
            a.on("error", this.errorLoading_.bind(this, a), this);
            a.fetch({
                success: function() {
                    this.refetchModel_(this.model.get("glossary"), a.get("glossaryPath"));
                    this.refetchModel_(this.model.get("remarks"), a.get("remarksPath"))
                }.bind(this)
            })
        },
        refetchModel_: function(a, b) {
            a.set("revision", this.model.get("revision"));
            b ? (b = ExhibitDocumentModel.getFilePathFromSourceLocation(b), a.set("filePath", b)) : a.set("filePath", null);
            a.url() ? (a.on("error", this.errorLoading_.bind(this, a), this), a.fetch()) : a.set({
                content: null,
                xml: null,
                rootPiece: null
            })
        }
    });
    window.Unsupported = {
        config_: null,
        initialize: function(a) {
            this.config_ = a;
            this.loadInlineData_();
            this.insertFontCSSTag_();
            this.sendAnalytics_()
        },
        loadInlineData_: function() {
            var a = Unsupported.doc_ || document,
            b = a.getElement('script[type="text/inline-data"]');
            if (b) {
                a = a.createElement("span");
                a.innerHTML = b.get("text");
                try {
                    this.config_ = JSON.decode(a.get("text")).clientConfig
                } catch(c) {}
            }
        },
        insertFontCSSTag_: function() {
            var a = Unsupported.doc_ || document,
            b = new Element("link", {
                rel: "stylesheet",
                href: this.config_.fontsURL,
                type: "text/css"
            });
            a.getElement("head").adopt(b)
        },
        sendAnalytics_: function() {
            var a = Unsupported.win_ || window,
            b = Unsupported.nav_ || navigator,
            a = {
                events: [{
                    eventType: "UnsupportedBrowser",
                    eventMode: "oneshot",
                    s9id: UUID(),
                    eventInfo: {
                        browserName: a.Browser.name,
                        browserVersion: a.Browser.version.toString(),
                        platformName: a.Browser.Platform.name,
                        userAgent: b && b.userAgent
                    },
                    context: {
                        agent: "inkling-habitat",
                        environment: this.config_.environment
                    }
                }]
            }; (new Request({
                url: this.config_.apiPrefix + "/events/",
                method: "POST",
                emulation: !1,
                data: JSON.encode(a)
            })).send()
        }
    }
})();
var _gaq = _gaq || [];_gaq.push(["_setAccount", "UA-12246629-4"]); (function() {
    var a = document.createElement("script");
    a.type = "text/javascript";
    a.async = !0;
    a.src = document.location.protocol === "https:" ? "https://ssl.google-analytics.com/ga.js": "http://www.google-analytics.com/ga.js";
    var b = document.getElementsByTagName("script")[0];
    b.parentNode.insertBefore(a, b)
})(); (function(a, b, c, d, e, f, g) {
    a.GoogleAnalyticsObject = e;
    a[e] = a[e] ||
    function() { (a[e].q = a[e].q || []).push(arguments)
    };
    a[e].l = 1 * new Date;
    f = b.createElement(c);
    g = b.getElementsByTagName(c)[0];
    f.async = 1;
    f.src = d;
    g.parentNode.insertBefore(f, g)
})(window, document, "script", "//www.google-analytics.com/analytics.js", "ga");ga("create", "UA-12246629-6", "auto"); (function(a, b, c, d, e, f) {
    a.ia = a.ia ||
    function() { (a.ia.q = a.ia.q || []).push(arguments)
    };
    e = b.createElement(c);
    e.src = d;
    e.async = !0;
    f = b.getElementsByTagName(c)[0];
    f.parentNode.insertBefore(e, f)
})(window, document, "script", "https://d1gh8ns18m540w.cloudfront.net/ia/ia.min.js");